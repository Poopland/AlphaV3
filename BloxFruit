-- This file was generated using Luraph Obfuscator v13.5.9

return(function(UC,HC,zC,vC,tC,hC,FC,iC,MC,qC,cC,dC,nC,mC,gC,xC,JC,IC,lC,eC,DC,pC,XC,AC,aC,CC,oC,VC,yC,P,...)local j=pcall;local r,GC,W,u,N,s,A,x=tostring,2,nil,nil,nil,nil,nil,nil;local R,k,z=eC,AC,(setmetatable);do repeat if GC<=0X2 then if not(GC<=0X0)then if GC~=0X00001 then W=zC.sub;GC=3;else s=DC;GC=0X4;end;else x=dC;do GC=6;end;do continue;end;end;else if GC<=3 then u=xC.bor;GC=5;continue;else if GC~=4 then N=UC;GC=0x1;continue;else A=gC.insert;GC=0X0;continue;end;end;end;until GC>0x05;end;GC=0X0000;local D,d=nil,(nil);while GC~=0X2 do do if GC==0 then D=nC;GC=0x1;do continue;end;else d=IC;do GC=0X2;end;continue;end;end;end;local a=zC.unpack;do GC=0;end;local E,v,Q=nil,nil,(nil);while GC<0X3 do if not(GC<=0)then if GC~=1 then Q=iC;GC=3;else v=1;GC=0X2;end;else E=aC;do GC=1;end;end;end;GC=0X1;local g,w,m,rC,S=nil,nil,nil,nil,(nil);while GC~=5 do if not(GC<=1)then if GC<=0X002 then rC=function(...)return R("\#",...),{...};end;GC=0X3;else if GC==0X3 then do S={0X7,mC,0x6};end;GC=5;else m=XC;GC=0X2;continue;end;end;else if GC~=0 then g=coroutine.wrap;GC=0;else w=string.byte;GC=4;end;end;end;local e=FC;local F=m();local i,t,b,q=setfenv,nil,nil,(nil);do for gY=0X0,0X3 do do if not(gY<=0X1)then do if gY==2 then else t=s(W(t,5),"\..",function(K_)if w(K_,2)~=0X000048 then local A7=nil;for P3=0x00000,1 do if P3==0X0 then A7=N(E(K_,16));else if q then local Da=nil;local Ma=(0);do repeat if Ma~=0x0 then q=qC;do Ma=2;end;else Da=Q(A7,q);do Ma=1;end;do continue;end;end;until Ma>0X1;end;return Da;else do return A7;end;end;end;end;else q=E(W(K_,1,1));do return tC;end;end;end);end;end;else if gY~=0X0 then b=vC;else do tend;continue;end;end;end;end;end;local l=(function()local rd=nil;do for t4=0,0X2 do if not(t4<=0)then if t4~=0X1 then do return rd;end;else do v=v+0X1;end;do continue;end;end;else rd=w(t,v,v);do continue;end;end;end;end;end);local B=(assert);local U,J=rawset,(0X00080000000);do GC=1;end;local h,C=nil,nil;repeat do if GC==0 then do C=h-1;end;GC=0X2;continue;else h=0X00100000000;GC=0X0000;continue;end;end;until GC==2;do GC=0;end;local H,o=nil,(nil);do repeat if GC==0 then H={[lC]=1};GC=0X1;continue;else o=J-1;GC=2;end;until GC==2;end;local y=(nil);for iM=0X0,1 do if iM==0 then do local ZH,fH=0X1,(nil);while ZH<2 do do if ZH==0 then for NZ=1,0X0001F do local QZ=0;do repeat do if QZ==0X00 then H[NZ]=fH;do QZ=0X1;end;continue;else fH=fH*2;do QZ=2;end;continue;end;end;until QZ>1;end;end;ZH=0X2;continue;else fH=0X02;ZH=0;end;end;end;end;continue;else y=function()local oN=2;local uN,nN=nil,(nil);repeat if oN<=0 then return uN;else do if oN~=0X1 then do uN,nN=a("<I4",t,v);end;oN=1;continue;else v=nN;oN=0X0;end;end;end;until(false);end;end;end;local I=unpack;local p=(function()local Dm,am=a('<i\056',t,v);v=am;return Dm;end);local WC,G,f,T=0X00001,xC.bxor,type,(yC);local M=function()local N9,a9=nil,(nil);local s9=2;while''do do if not(s9<=0X000)then if s9==0X0001 then v=a9;s9=0;else N9,a9=a("<d",t,v);s9=1;end;else return N9;end;end;end;end;local O=(bit32.band);local L=JC;GC=0x2;local PC,V,c=nil,nil,nil;repeat if GC<=0x000 then V=0X00002^52;GC=1;else if GC~=1 then PC=function()local ST,FT=0,(0);while 0X509Bc1eA do local UQ=w(t,v,v);v=v+1;do ST=u(ST,k(O(UQ,0X00007f),FT));end;if O(UQ,128)~=0 then else return ST;end;FT=FT+0X7;end;end;GC=0;do continue;end;else c=function(jH,mH,TH)local oH=((jH/H[mH])%H[TH]);oH=oH-oH%1;return oH;end;GC=0X3;continue;end;end;until GC>0X2;local RC,EC,jC,BC=nil,nil,nil,(nil);for k_=0X0,0X3 do if not(k_<=0X1)then if k_==2 then do jC=function(wH)local CH=(0X00001);local XH,cH=nil,(nil);repeat do if CH~=0 then do XH={w(t,v,v+3)};end;CH=0x000;else cH=G(XH[0X0001],EC);CH=2;continue;end;end;until CH>1;local ZH=G(XH[2],EC);local YH=G(XH[0X3],EC);local TH=G(XH[0X4],EC);EC=(0X5d*EC+wH)%0X100;v=v+hC;return TH*VC+YH*65536+ZH*256+cH;end;end;else BC=function()local pG=(PC());if pG>o then do return pG-h;end;end;do return pG;end;end;end;else do if k_~=0X0 then EC=l();do continue;end;else RC=l();end;end;end;end;do GC=0X2;end;local bC,fC,K,wC,NC,QC,sC=nil,nil,nil,nil,nil,nil,(nil);do while 0.22057839721734807 do if not(GC<=4)then if not(GC<=7)then do if not(GC<=8)then if GC==0X9 then(wC)[0X2]=bC;do GC=10;end;continue;else bC=qC;GC=1;end;else fC=function(Wp)local Xp=y();local qp=(nil);do for e9=0X0,0X3 do if not(e9<=0x1)then if e9==2 then v=v+Xp;else return qp;end;else if e9~=0x0 then for ZC=0X1,Xp,7997 do local uC=ZC+CC-1;if uC>Xp then uC=Xp;end;local YC=({w(t,v+ZC-1,v+uC-1)});local KC=(0X00000);do while KC<=1 do do if KC==0X0 then for KR=1,#YC do local aR=(0X1);repeat if aR==0x0 then RC=(Wp*RC+197)%0X100;aR=2;do continue;end;else YC[KR]=G(YC[KR],RC);aR=0;end;until aR>0X1;end;do KC=0X01;end;continue;else do qp=qp..N(I(YC));end;do KC=2;end;continue;end;end;end;end;end;continue;else qp='';continue;end;end;end;end;end;GC=3;continue;end;end;else if GC<=0X5 then function NC(ve,Le,ce)local ge=ce[6];local xe=(ce[0X1]);local je,he=ce[0X00007],ce[2];local Re=ce[0X004];local Se,Ae=ce[3],(ce[9]);local De=z({},{__mode="v"});local me,fe=ce[0x05],(nil);if me>=94 then if not(me<141)then if not(me<0xA5)then do if me<0X0000B1 then if not(me<0X00ab)then if me<0XAe then do if not(me>=0XAc)then fe=function(...)local OA,iA=0X1,({});local nA=(m());local vA,tA=(nA==F and Le or nA),0;local GA={[1]=ce,[0X2]=iA};local mA,cA=rC(...);mA=mA-1;for we=0X0,mA do if he>we then do(iA)[we]=cA[we+0x1];end;else break;end;end;if not ge then cA=nil;elseif xe then iA[he]={n=mA>=he and mA-he+0X1 or 0x0,I(cA,he+0X0001,mA+1)};end;if vA~=nA then(i)(fe,vA);end;while true do local qc=Re[OA];local wc=qc[4];OA=OA+0X0001;return(function(F,V,...)local C=Client.Backpack:GetChildren();for S=1,#C do local y=C[S];if y.Name:lower():find("fruit")then return true;end;end;local o=Client.Character:GetChildren();for k=1,#o do local l=o[k];if l:IsA("Tool")and l.Name:lower():find("fruit")then return true;end;end;end)(iA,ve,...);end;end;else if me==173 then fe=function(...)local uo=(0);local Eo=(0X1);local Zo=({});local co=m();local Fo,Po=(co==F and Le or co),{[0X2]=Zo,[1]=ce};local Mo,Xo=rC(...);Mo=Mo-0X1;do for Ze=0,Mo do do if not(he>Ze)then break;else Zo[Ze]=Xo[Ze+0X001];end;end;end;end;if not ge then Xo=nil;elseif not(xe)then else(Zo)[he]={n=Mo>=he and Mo-he+1 or 0,I(Xo,he+1,Mo+0X00001)};end;do if Fo==co then else i(fe,Fo);end;end;local Qo,wo,xo,Vo=j(function()while true do local JW=Re[Eo];local AW=(JW[0X04]);do Eo=Eo+0X0001;end;if AW<0x0007 then if not(AW>=0x003)then if AW<0X1 then do Zo[JW[7]]=Fo[JW[2]];end;else do if AW~=0x02 then(Zo)[JW[0X007]]=-Zo[JW[0X6]];else local Fq=Zo[JW[6]]/Zo[JW[0X1]];(Zo)[JW[7]]=Fq-Fq%0X001;end;end;end;else do if not(AW>=5)then if AW==4 then local Ik=je[JW[0X6]];local xk=Ik[8];local Hk,Zk=#xk,(nil);if Hk>0 then Zk={};do for aX=1,Hk do local SX=xk[aX];if SX[1]==0x000 then do(Zk)[aX-0x1]={Zo,SX[2]};end;else(Zk)[aX-1]=ve[SX[2]];end;end;end;(A)(De,Zk);end;do Zo[JW[7]]=NC(Zk,Fo,Ik);end;else Zo[JW[7]]=Zo[JW[0X00006]]<Zo[JW[0X1]];end;else do if AW==6 then do(Zo)[JW[0X07]]={I({},1,JW[0X006])};end;else Zo[JW[0X07]]=JW[2];end;end;end;end;end;else if not(AW>=0xA)then do if not(AW<0X08)then do if AW==9 then Po[JW[6]]=Zo[JW[7]];else do if Zo[JW[0X7]]then Eo=JW[0X6];end;end;end;end;else local vW,rW=JW[7],(JW[6]);uo=vW+rW-0X1;do repeat local HU,eU=De,Zo;if not(#HU>0)then else local VU={};for t5,T5 in D,HU do for lp,Bp in D,T5 do do if Bp[1]==eU and Bp[0X2]>=0 then local qI=Bp[2];if not VU[qI]then do VU[qI]={eU[qI]};end;end;(Bp)[0X01]=VU[qI];(Bp)[2]=1;end;end;end;end;end;until true;end;return true,vW,rW;end;end;else if not(AW<0Xc)then do if AW==0X0d then do Zo[0]=Fo[JW[0X002]];end;local mj=0;Eo=Eo+1;Eo=Eo+1;JW=Re[Eo];Eo=Eo+1;local Fj=(Zo[0]);Zo[mj+0X1]=Fj;(Zo)[mj]=Fj[JW[5]];do JW=Re[Eo];end;do Eo=Eo+0X0001;end;do(Zo)[0X2]=JW[0X02];end;do Eo=Eo+1;end;do mj=0X0;end;do(Zo)[mj]=Zo[mj](Zo[mj+1],Zo[mj+2]);end;uo=mj;JW=Re[Eo];Eo=Eo+0X1;do Zo[0x001]=Fo[JW[2]];end;Eo=Eo+0X1;Eo=Eo+1;JW=Re[Eo];Eo=Eo+0X0001;do Zo[1]=Zo[0X001][JW[0X00005]];end;do Eo=Eo+0X00001;end;do Eo=Eo+0X00001;end;JW=Re[Eo];local qj=je[JW[0X06]];local Oj=(qj[0X8]);Eo=Eo+0x1;local Vj,Nj=nil,(#Oj);if not(Nj>0X0)then else do Vj={};end;do for t3=0X1,Nj do local n3=(Oj[t3]);do if n3[0x1]~=0 then Vj[t3-1]=ve[n3[2]];else do(Vj)[t3-1]={Zo,n3[2]};end;end;end;end;end;(A)(De,Vj);end;do Zo[0X2]=NC(Vj,Fo,qj);end;do Eo=Eo+1;end;mj=0X0001;Zo[mj](Zo[mj+1]);uo=mj-1;Eo=Eo+0X001;repeat local zN,WN=De,(Zo);do if#zN>0X0 then local X1={};do for gx,nx in D,zN do for hX,EX in D,nx do if not(EX[0x001]==WN and EX[0X02]>=0X0)then else local le=(EX[0X2]);if not X1[le]then X1[le]={WN[le]};end;(EX)[0X1]=X1[le];EX[2]=1;end;end;end;end;end;end;until true;do return;end;else local H3=(JW[7]);local k3=((JW[0X001]-1)*50);local m3=(Zo[H3]);for No=1,JW[6]do(m3)[k3+No]=Zo[H3+No];end;end;end;else if AW==11 then else Eo=JW[0X00006];end;end;end;end;end;end);if not(Qo)then if f(wo)=='\115\116r\105n\103'then if e(wo,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(wo,"\094\.\045\:\037\d\043\: ")then(b)("\Lur\097\112\h\032\083\cr\i\112t\058"..(Ae[Eo-1]or"(\105n\116\erna\l\)")..": "..r(wo),0);else b(wo,0);end;else(b)(wo,0X000);end;else do if wo then if Vo~=1 then return Zo[xo](I(Zo,xo+1,uo));else return Zo[xo]();end;elseif not(xo)then else return I(Zo,xo,Vo);end;end;end;end;else fe=function(...)local Gl,rl=0X1,{};local hl=m();local Fl,jl={[1]=ce,[0X2]=rl},0;local gl,Dl=rC(...);gl=gl-1;local kl=((hl==F and Le or hl));for ml=0,gl do do if he>ml then(rl)[ml]=Dl[ml+1];else break;end;end;end;if not ge then Dl=nil;elseif xe then rl[he]={n=gl>=he and gl-he+0x1 or 0,I(Dl,he+0X0001,gl+0X1)};end;if kl~=hl then i(fe,kl);end;local Ml,Cl,nl,cl=j(function()while true do local uT=Re[Gl];local rT=uT[0X4];Gl=Gl+1;if rT>=0xB then if rT<0X00010 then do if rT>=13 then if rT>=0Xe then if rT~=0xF then for rV=uT[0X00007],uT[6]do(rl)[rV]=nil;end;else local jx=ve[1];(rl)[0X1]=jx[0x1][jx[0X2]];Gl=Gl+0X1;(rl)[0X1]=rl[0x1][rl[0X0]];Gl=Gl+1;Gl=Gl+1;uT=Re[Gl];Gl=Gl+1;rl[1]=rl[0X1][uT[5]];uT=Re[Gl];Gl=Gl+0x1;(rl)[0X1]=rl[0X01]~=uT[0x5];uT=Re[Gl];Gl=Gl+1;Gl=uT[0x6];end;else do if not(rl[uT[0x06]]<rl[uT[1]])then else do Gl=uT[0x7];end;end;end;end;else if rT==0X000C then local Ef=uT[0x0007];local Of=uT[0X6];if Of~=0 then jl=Ef+Of-1;end;local Bf=uT[0X0001];local Pf,gf=nil,nil;if Of==1 then do Pf,gf=rC(rl[Ef]());end;else Pf,gf=rC(rl[Ef](I(rl,Ef+1,jl)));end;if Bf==1 then jl=Ef-0X0001;else if Bf==0 then Pf=Pf+Ef-0X1;jl=Pf;else Pf=Ef+Bf-2;jl=Pf+1;end;local hG=(0);for cT=Ef,Pf do hG=hG+0X1;(rl)[cT]=gf[hG];end;end;else(rl)[1]=kl[uT[2]];uT=Re[Gl];Gl=Gl+1;(rl)[1]=rl[0X1][uT[0X0005]];Gl=Gl+0X1;Gl=Gl+0X1;uT=Re[Gl];do Gl=Gl+1;end;Gl=uT[0X006];end;end;end;else if rT<19 then if not(rT<0X11)then if rT~=0X12 then(rl)[uT[0X00007]]={I({},1,uT[0X006])};else repeat local Es,ss=De,(rl);if not(#Es>0)then else local eM={};for o2,K2 in D,Es do for br,pr in D,K2 do do if not(pr[1]==ss and pr[0x2]>=0X0)then else local EG=(pr[0X2]);if not eM[EG]then eM[EG]={ss[EG]};end;(pr)[1]=eM[EG];pr[0X2]=1;end;end;end;end;end;until true;local bh=(uT[7]);return false,bh,bh;end;else do repeat local Kf,Zf=De,(rl);if not(#Kf>0X000)then else local OV={};for bq,Xq in D,Kf do do for mm,Rm in D,Xq do if Rm[0X1]==Zf and Rm[0X2]>=0 then local BB=(Rm[0X02]);if not OV[BB]then do OV[BB]={Zf[BB]};end;end;Rm[1]=OV[BB];do(Rm)[0x0002]=1;end;end;end;end;end;end;until true;end;return;end;else if rT>=20 then if rT==21 then do rl[uT[0X7]]=rl[uT[6]]*rl[uT[1]];end;else if not(rl[uT[6]]<=rl[uT[1]])then Gl=uT[7];end;end;else(rl)[uT[0x0007]]=kl[uT[2]];end;end;end;else if not(rT>=5)then if rT>=2 then if not(rT>=0X3)then local RY=rl[uT[0X00006]]/rl[uT[0X1]];do(rl)[uT[0x7]]=RY-RY%0x0001;end;else if rT==0X4 then do(rl)[1]=kl[uT[0X0002]];end;uT=Re[Gl];Gl=Gl+1;local yz=2;rl[0X00002]=uT[2];do Gl=Gl+1;end;do rl[3]=rl[0X0];end;Gl=Gl+1;local iz=(1);(rl)[2]=rl[yz]..rl[yz+1];Gl=Gl+1;(rl)[iz]=rl[iz](rl[iz+1]);do jl=iz;end;do Gl=Gl+1;end;Gl=Gl+1;Gl=Gl+0X1;(rl)[1]=not rl[0X1];uT=Re[Gl];Gl=Gl+1;do if not(not rl[0X00001])then else do Gl=uT[0X006];end;end;end;else local mr=(je[uT[6]]);local Xr=mr[0x8];local Ar=(nil);local Hr=#Xr;do if Hr>0x00 then Ar={};for fY=0X001,Hr do local MY=Xr[fY];do if MY[0x1]==0x00000 then Ar[fY-1]={rl,MY[2]};else(Ar)[fY-0X0001]=ve[MY[2]];end;end;end;(A)(De,Ar);end;end;do rl[uT[7]]=NC(Ar,kl,mr);end;end;end;else if rT==1 then Gl=uT[0x6];else end;end;else if rT>=0X8 then if not(rT<9)then if rT==10 then rl[uT[0X7]]=rl[uT[6]]<rl[uT[0X1]];else do(rl)[uT[7]]=uT[0X0002];end;end;else local kz=(ve[0]);rl[0X00001]=kz[0x1][kz[2]];uT=Re[Gl];local Lz=(rl[1]);do Gl=Gl+1;end;local bz=1;rl[bz+1]=Lz;(rl)[bz]=Lz[uT[0x5]];Gl=Gl+0X00001;bz=1;do(rl)[bz]=rl[bz](rl[bz+1]);end;jl=bz;Gl=Gl+1;Gl=Gl+1;uT=Re[Gl];Gl=Gl+0X1;Gl=uT[0x6];end;else do if rT>=0x006 then do if rT~=0X00007 then(rl)[0x001]=kl[uT[2]];uT=Re[Gl];Gl=Gl+1;do(rl)[0X2]=uT[0x002];end;local a8=(0X01);Gl=Gl+0x1;rl[a8]=rl[a8](rl[a8+1]);jl=a8;do Gl=Gl+1;end;do Gl=Gl+0X1;end;else(kl)[uT[0X2]]=rl[uT[7]];end;end;else do if not(not rl[uT[0X7]])then else do Gl=uT[6];end;end;end;end;end;end;end;end;end;end);do if Ml then if Cl then if cl==0X01 then do return rl[nl]();end;else return rl[nl](I(rl,nl+1,jl));end;elseif not(nl)then else return I(rl,nl,cl);end;else if f(Cl)~="\st\114\105n\103"then b(Cl,0);else if not(e(Cl,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(e(Cl,"^.-:%d+: "))then b(Cl,0x000);else(b)("Luraph Script:"..(Ae[Gl-0X1]or'\(\in\116\e\114\110\097\108\041')..": "..r(Cl),0);end;end;end;end;end;end;end;end;else if me>=0xAF then do if me==0X0000B0 then fe=function(...)local lq,mq,fq=1,{},(0);local Bq=(m());local Aq,Oq=rC(...);local gq=((Bq==F and Le or Bq));local iq={[1]=ce,[0X2]=mq};do Aq=Aq-0X1;end;for LC=0X0,Aq do do if not(he>LC)then do break;end;else do mq[LC]=Oq[LC+0x1];end;end;end;end;if not ge then do Oq=nil;end;elseif xe then(mq)[he]={n=Aq>=he and Aq-he+1 or 0,I(Oq,he+1,Aq+1)};end;if gq~=Bq then(i)(fe,gq);end;local eq,Eq,Gq,Xq=j(function()while true do local hX=Re[lq];local HX=hX[4];lq=lq+1;do if not(HX<0X6)then if HX<9 then do if not(HX<7)then if HX==0X8 then mq[hX[7]]=T(mq[hX[0x06]]);else do(mq)[hX[0X7]]=mq[hX[6]]*mq[hX[0X1]];end;end;else mq[hX[7]]=true;end;end;else if not(HX<0X0000B)then if HX~=12 then mq[hX[0x7]]={I({},0X01,hX[0X006])};else mq[hX[7]]=gq[hX[2]];end;else do if HX~=10 then do(mq)[hX[0X7]]=mq[hX[6]]+mq[hX[1]];end;else if mq[hX[7]]then do lq=hX[6];end;end;end;end;end;end;else if not(HX<3)then do if HX<4 then local sO,wO=je[hX[6]],nil;local BO=sO[8];local mO=#BO;if mO>0X00000 then wO={};for VM=0X001,mO do local SM=BO[VM];if SM[1]==0x0 then do(wO)[VM-0X0001]={mq,SM[2]};end;else(wO)[VM-1]=ve[SM[0X00002]];end;end;A(De,wO);end;mq[hX[7]]=NC(wO,gq,sO);else if HX~=0X5 then else mq[0]=gq[hX[0X2]];lq=lq+0x1;lq=lq+0X1;do lq=lq+0x1;end;fq=0X000;mq[fq]=mq[fq]();do hX=Re[lq];end;do lq=lq+0X01;end;do gq[hX[2]]=mq[0X0000];end;do lq=lq+0X0001;end;repeat local s2,D2=De,(mq);if#s2>0 then local OD=({});for Yc,Ic in D,s2 do for q2,p2 in D,Ic do if not(p2[0X00001]==D2 and p2[2]>=0)then else local Xf=p2[2];if not OD[Xf]then OD[Xf]={D2[Xf]};end;do p2[0X01]=OD[Xf];end;do p2[2]=0X1;end;end;end;end;end;until true;return;end;end;end;else do if HX<0X1 then lq=hX[0X06];else if HX~=0X0002 then(mq)[hX[7]]=hX[0X2];else do mq[hX[7]]=-mq[hX[6]];end;end;end;end;end;end;end;end;end);if not(eq)then if f(Eq)=="string"then do if e(Eq,'\097tt\101\mp\116\ t\111\ \y\105e\108d\032a\099\114\o\s\s\ m\e\116\097\m\101t\104\111d\/\C%\-ca\l\l b\o\117n\dary')then return coroutine.yield();end;end;do if e(Eq,'^.\-\058\%\d+\:\032')then(b)("Luraph Script:"..(Ae[lq-0X1]or'\(\i\110\116\101\114\110a\l\)').."\:\ "..r(Eq),0x0);else(b)(Eq,0);end;end;else b(Eq,0x00000);end;else do if Eq then if Xq==1 then return mq[Gq]();else return mq[Gq](I(mq,Gq+0X1,fq));end;elseif Gq then return I(mq,Gq,Xq);end;end;end;end;else fe=function(...)local Vl=0X001;local zl={};local ml=(m());local hl={[1]=ce,[0X2]=zl};local Ol=0X00;local nl,dl=rC(...);local Ml=(ml==F and Le or ml);nl=nl-1;for Ll=0x0,nl do if not(he>Ll)then do break;end;else do(zl)[Ll]=dl[Ll+0x1];end;end;end;if not ge then dl=nil;elseif not(xe)then else zl[he]={n=nl>=he and nl-he+1 or 0,I(dl,he+1,nl+1)};end;if Ml~=ml then(i)(fe,Ml);end;local Il,xl,Cl,Gl=j(function()while true do local x1=Re[Vl];local Y1=x1[0X4];do Vl=Vl+1;end;do if not(Y1<0X0D)then do if not(Y1<0X0013)then do if not(Y1>=0x16)then do if not(Y1>=20)then Vl=x1[6];else if Y1==21 then local Xh=x1[7];local Th,dh,Lh=zl[Xh]();do if not(Th)then else do(zl)[Xh+1]=dh;end;do(zl)[Xh+2]=Lh;end;Vl=x1[0x6];end;end;else zl[x1[0X7]]={I({},1,x1[0X6])};end;end;end;else if not(Y1<24)then if Y1==0x0019 then local Ch,Dh=x1[7],x1[6];Ol=Ch+Dh-0x1;repeat local JH,pH=De,zl;if#JH>0X0 then local uP=({});for jm,Jm in D,JH do for KI,BI in D,Jm do if BI[0X1]==pH and BI[0X2]>=0X000 then local Qg=BI[2];if not uP[Qg]then(uP)[Qg]={pH[Qg]};end;BI[0x1]=uP[Qg];(BI)[2]=1;end;end;end;end;until true;return true,Ch,Dh;else local pS,QS=x1[7],(x1[0X6]);if QS==0x0 then else Ol=pS+QS-1;end;local dS=(x1[0x1]);local KS,PS=nil,nil;if QS==1 then do KS,PS=rC(zl[pS]());end;else KS,PS=rC(zl[pS](I(zl,pS+1,Ol)));end;do if dS==1 then Ol=pS-0X1;else if dS==0X0 then KS=KS+pS-1;Ol=KS;else KS=pS+dS-0X0002;Ol=KS+0X1;end;local E4=0;for DO=pS,KS do do E4=E4+1;end;do zl[DO]=PS[E4];end;end;end;end;end;else if Y1==0x17 then zl[0X001]=Ml[x1[2]];x1=Re[Vl];Vl=Vl+0X1;zl[2]=Ml[x1[0X2]];do Vl=Vl+0X1;end;do Vl=Vl+1;end;x1=Re[Vl];local ih=0X2;Vl=Vl+0X1;zl[3]=x1[2];Vl=Vl+0X1;do(zl)[ih]=zl[ih](zl[ih+1]);end;do Ol=ih;end;do x1=Re[Vl];end;Vl=Vl+1;if not(zl[2])then else Vl=x1[6];end;else(zl)[x1[7]]=zl[x1[6]];end;end;end;end;else if not(Y1<0x10)then if not(Y1<0X00011)then if Y1~=18 then repeat local ei,ji=De,(zl);if#ei>0X0 then local nc=({});for Xz,Zz in D,ei do for cL,EL in D,Zz do if EL[1]==ji and EL[0x0002]>=0 then local Oe=(EL[2]);if not(not nc[Oe])then else nc[Oe]={ji[Oe]};end;(EL)[1]=nc[Oe];EL[0X00002]=0X1;end;end;end;end;until true;local h5=(x1[0X7]);return false,h5,h5;else local AA=(x1[7]);local fA=g(function(...)d();for ns,vs in...do d(true,ns,vs);end;end);fA(zl[AA],zl[AA+1],zl[AA+2]);Ol=AA;(zl)[AA]=fA;Vl=x1[0X6];end;else local XF=x1[7];for OO=XF,XF+(x1[0x6]-1)do(zl)[OO]=dl[he+(OO-XF)+1];end;end;else if Y1>=14 then if Y1~=15 then else local k2,R2=je[x1[6]],(nil);local D2=(k2[0X08]);local G2=(#D2);if G2>0 then R2={};for Q_=0X001,G2 do local I_=D2[Q_];if I_[0x01]==0 then(R2)[Q_-0X1]={zl,I_[2]};else do R2[Q_-0X00001]=ve[I_[2]];end;end;end;(A)(De,R2);end;zl[x1[7]]=NC(R2,Ml,k2);end;else(zl)[x1[7]]=x1[2];end;end;end;end;else if not(Y1>=6)then if Y1<3 then if Y1>=1 then if Y1==2 then zl[1]=Ml[x1[0x2]];x1=Re[Vl];Vl=Vl+1;zl[0X1]=zl[1][x1[5]];Vl=Vl+0x1;Vl=Vl+1;x1=Re[Vl];local sE=0X1;Vl=Vl+0X1;local uE=zl[1];do(zl)[sE+0X00001]=uE;end;zl[sE]=uE[x1[5]];Vl=Vl+0X0001;zl[0X3]=zl[0X0];Vl=Vl+1;sE=1;do zl[sE]=zl[sE](zl[sE+0X1],zl[sE+2]);end;Ol=sE;Vl=Vl+1;Vl=Vl+0x1;x1=Re[Vl];Vl=Vl+1;if not zl[0X1]then Vl=x1[0X0006];end;else repeat local N_,D_,Y_=De,zl,(x1[7]);if#N_>0 then local ZK=({});for OT,uT in D,N_ do for Xf,mf in D,uT do do if mf[0x1]==D_ and mf[2]>=Y_ then local TT=(mf[0X02]);if not ZK[TT]then ZK[TT]={D_[TT]};end;mf[1]=ZK[TT];(mf)[0X00002]=0X01;end;end;end;end;end;until true;end;else do zl[x1[0x07]]=true;end;end;else do if not(Y1<4)then if Y1==0X05 then zl[x1[0X7]]=zl[x1[0X0006]]<=zl[x1[1]];else do(zl)[x1[7]]=Ml[x1[2]];end;end;else repeat local XD,oD=De,(zl);if#XD>0 then local EY=({});do for iB,bB in D,XD do for fJ,AJ in D,bB do do if AJ[1]==oD and AJ[0X2]>=0X0 then local w6=AJ[0X02];if not EY[w6]then EY[w6]={oD[w6]};end;(AJ)[1]=EY[w6];AJ[0X02]=1;end;end;end;end;end;end;until true;return;end;end;end;else if not(Y1>=0x00009)then do if not(Y1<7)then if Y1~=0X8 then zl[x1[0X0007]]=zl[x1[6]]+zl[x1[0X1]];else zl[x1[0X7]]=hl[x1[0X6]];end;else zl[x1[7]]=zl[x1[6]]^zl[x1[1]];end;end;else do if not(Y1<11)then if Y1==12 then for gP=x1[7],x1[0x06]do zl[gP]=nil;end;else do zl[1]=Ml[x1[2]];end;do Vl=Vl+1;end;do Vl=Vl+0X1;end;x1=Re[Vl];do Vl=Vl+0X0001;end;local Yl=(1);(zl)[0x01]=zl[0X0001][x1[0X05]];do x1=Re[Vl];end;Vl=Vl+0x001;local il=zl[0X001];zl[Yl+0X1]=il;(zl)[Yl]=il[x1[5]];Vl=Vl+0X1;do zl[3]=zl[0];end;Vl=Vl+1;Yl=0X001;do zl[Yl]=zl[Yl](zl[Yl+1],zl[Yl+0X0002]);end;Ol=Yl;do x1=Re[Vl];end;Vl=Vl+0X00001;if not(not zl[0X1])then else do Vl=x1[6];end;end;end;else if Y1==0XA then do zl[0X00004]=zl[0x3][x1[5]];end;Vl=Vl+1;Vl=Vl+1;x1=Re[Vl];Vl=Vl+0x00001;if zl[4]==zl[0]then else do Vl=x1[0X07];end;end;else(zl)[x1[7]]={};end;end;end;end;end;end;end;end;end);if not(Il)then do if f(xl)=='\st\114\105\110\103'then if not(e(xl,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if e(xl,'\094\.\-\058\037\d+:\ ')then b('\Lur\097p\104\ \S\cript:'..(Ae[Vl-1]or"\(\105nt\101rn\097l)")..":\032"..r(xl),0X0);else(b)(xl,0X000);end;else(b)(xl,0X0000);end;end;else if xl then if Gl~=0X1 then return zl[Cl](I(zl,Cl+0X1,Ol));else return zl[Cl]();end;elseif not(Cl)then else return I(zl,Cl,Gl);end;end;end;end;end;else do fe=function(...)local GA={};local sA=(0X01);local jA=(0X0);local BA=m();local OA={[1]=ce,[0X2]=GA};local VA,NA=rC(...);VA=VA-1;for q_=0,VA do do if not(he>q_)then break;else GA[q_]=NA[q_+1];end;end;end;local uA=((BA==F and Le or BA));if not ge then NA=nil;elseif not(xe)then else(GA)[he]={n=VA>=he and VA-he+0X00001 or 0X0,I(NA,he+0X1,VA+0X1)};end;do if uA==BA then else(i)(fe,uA);end;end;do while true do local KV=(Re[sA]);do sA=sA+0X0001;end;local WV=KV[4];return(function(i,P,...)local g=i[0];if not g then return;end;local l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";return table.concat(CustomCrypt((g:gsub(".",function(t)local w,L="",t:byte();for o=8,1,-1.0 do w=w..(L%2^o-L%2^(o-1)>0 and"1"or"0");end;return w;end).."0000"):gsub("%d%d%d?%d?%d?%d?",function(u)if#u<6 then return"";end;local t=0;for p=1,6 do t=t+(u:sub(p,p)=="1"and 2^(6-p)or 0);end;return l:sub(t+1,t+1);end)..({"","==","="})[#g%3+1]),"!");end)(GA,ve,...);end;end;end;end;end;end;else if not(me>=0X0000a8)then if me<166 then fe=function(...)local zq=(1);local Mq={};local Gq={[0X2]=Mq,[1]=ce};local Aq=m();local Kq,sq=rC(...);Kq=Kq-1;do for NW=0,Kq do if not(he>NW)then break;else do Mq[NW]=sq[NW+0X1];end;end;end;end;local eq=((Aq==F and Le or Aq));if not ge then sq=nil;elseif xe then do Mq[he]={n=Kq>=he and Kq-he+1 or 0,I(sq,he+0X1,Kq+1)};end;end;local Yq=(0x00000);if eq==Aq then else i(fe,eq);end;local fq,Iq,Xq,Uq=j(function()while true do local Er=(Re[zq]);local dr=(Er[0X00004]);zq=zq+1;if not(dr>=7)then do if not(dr<0X3)then if dr>=5 then do if dr==6 then do Mq[Er[7]]=true;end;else repeat local e_,x_=De,(Mq);if#e_>0X0 then local Sa={};for zI,qI in D,e_ do for w9,v9 in D,qI do if not(v9[1]==x_ and v9[2]>=0)then else local j4=(v9[2]);if not(not Sa[j4])then else Sa[j4]={x_[j4]};end;(v9)[0X01]=Sa[j4];v9[0X0002]=0X001;end;end;end;end;until true;do return;end;end;end;else do if dr~=4 then if not(not Mq[Er[0x7]])then else do zq=Er[6];end;end;else end;end;end;else if not(dr>=0X00001)then Mq[0X0]=eq[Er[0x02]];zq=zq+1;local WW=(0X0);zq=zq+1;Er=Re[zq];local tW=0;zq=zq+1;(Mq)[0X01]=Er[0X2];zq=zq+1;(Mq)[WW]=Mq[WW](Mq[WW+1]);Yq=WW;do zq=zq+1;end;zq=zq+1;zq=zq+0x1;do Mq[0]=not Mq[0X0];end;zq=zq+0X1;repeat local wh,hh=De,(Mq);if not(#wh>0)then else local ov=({});do for gx,jx in D,wh do for HU,fU in D,jx do if fU[0X1]==hh and fU[0x2]>=0 then local Vp=fU[2];if not(not ov[Vp])then else(ov)[Vp]={hh[Vp]};end;(fU)[1]=ov[Vp];(fU)[0X02]=0X001;end;end;end;end;end;until true;return false,tW,tW;else if dr==0X2 then Mq[Er[7]]={I({},0x001,Er[0X6])};else(Mq)[Er[0X7]]=u(Mq[Er[6]],Mq[Er[1]]);end;end;end;end;else do if not(dr>=11)then do if not(dr>=0X9)then do if dr==0X008 then do Mq[Er[7]]=Mq[Er[0X6]]*Mq[Er[0X1]];end;else local hL,eL=je[Er[6]],(nil);local wL=hL[8];local fL=(#wL);do if not(fL>0)then else eL={};for Ac=0X01,fL do local Oc=wL[Ac];do if Oc[1]~=0 then(eL)[Ac-0X1]=ve[Oc[2]];else(eL)[Ac-0x001]={Mq,Oc[0X2]};end;end;end;A(De,eL);end;end;Mq[Er[0X0007]]=NC(eL,eq,hL);end;end;else if dr==10 then Mq[Er[0X07]]=Er[2];else do if Mq[Er[0X7]]then zq=Er[0x6];end;end;end;end;end;else if not(dr<0Xd)then if dr~=0XE then for lp=Er[7],Er[6]do(Mq)[lp]=nil;end;else Mq[Er[0X7]]=eq[Er[0X2]];end;else if dr==0XC then(Mq)[Er[7]]=Mq[Er[0X6]]>Mq[Er[1]];else zq=Er[0X6];end;end;end;end;end;end;end);if fq then if Iq then if Uq~=1 then return Mq[Xq](I(Mq,Xq+1,Yq));else return Mq[Xq]();end;elseif not(Xq)then else return I(Mq,Xq,Uq);end;else do if f(Iq)~="\str\105\110\g"then(b)(Iq,0);else if not(e(Iq,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if e(Iq,"^.-:%d+: ")then(b)("\076\117r\097ph \S\099r\i\p\116\058"..(Ae[zq-1]or"\(i\110\116\e\114na\l\)")..": "..r(Iq),0X00000);else b(Iq,0);end;end;end;end;end;else do if me==167 then fe=function(...)local mm,fm=0X1,{};local Gm=(m());local ym,Im,Lm=(Gm==F and Le or Gm),0,{[0X2]=fm,[1]=ce};local jm,dm=rC(...);jm=jm-0X00001;do for W_=0X0,jm do if he>W_ then(fm)[W_]=dm[W_+0X001];else break;end;end;end;do if not ge then dm=nil;elseif not(xe)then else fm[he]={n=jm>=he and jm-he+0X001 or 0X0000,I(dm,he+1,jm+0X1)};end;end;if ym~=Gm then i(fe,ym);end;local Mm,em,xm,Em=j(function()do while true do local qI=(Re[mm]);local OI=qI[0x004];do mm=mm+1;end;if OI<11 then if OI<0x00005 then if OI<0x00002 then if OI~=1 then else fm[qI[0X007]]=L(fm[qI[6]],fm[qI[1]]);end;else if not(OI>=0X3)then(fm)[0X0]=ym[qI[2]];qI=Re[mm];mm=mm+1;(fm)[0]=fm[0][qI[5]];mm=mm+1;do mm=mm+1;end;qI=Re[mm];mm=mm+1;do if not fm[0x000]then do mm=qI[6];end;end;end;else if OI==0X004 then(fm)[qI[0X00007]]={I({},0X01,qI[0X06])};else local mS,SS,jS=qI[7],qI[6],qI[1];do if SS==0 then else Im=mS+SS-0X1;end;end;local YS,KS=nil,(nil);if SS~=1 then YS,KS=rC(fm[mS](I(fm,mS+0X1,Im)));else YS,KS=rC(fm[mS]());end;if jS~=0X1 then if jS~=0 then do YS=mS+jS-0X2;end;Im=YS+1;else YS=YS+mS-0X1;Im=YS;end;local pJ=0;do for JQ=mS,YS do pJ=pJ+0x001;(fm)[JQ]=KS[pJ];end;end;else Im=mS-1;end;end;end;end;else do if OI<8 then if not(OI<6)then if OI~=7 then(fm)[0x0]=ym[qI[2]];mm=mm+0X1;mm=mm+1;qI=Re[mm];do mm=mm+0X1;end;(fm)[0]=fm[0][qI[5]];mm=mm+0X1;mm=mm+1;qI=Re[mm];mm=mm+1;if not(not fm[0])then else mm=qI[6];end;else(fm)[qI[0x7]]=fm[qI[0X6]]~=fm[qI[0x1]];end;else fm[0]=ym[qI[0X002]];qI=Re[mm];local oH=(je[qI[0X0006]]);local kH=0;local pH=oH[8];mm=mm+0X01;local mH=(nil);local BH=(#pH);if BH>0 then do mH={};end;do for sa=1,BH do local Ja=(pH[sa]);if Ja[0X01]~=0X0 then mH[sa-1]=ve[Ja[0X2]];else(mH)[sa-0X0001]={fm,Ja[0x2]};end;end;end;A(De,mH);end;(fm)[0x01]=NC(mH,ym,oH);mm=mm+1;fm[kH](fm[kH+0x0001]);do Im=kH-0X01;end;mm=mm+0X1;mm=mm+1;do qI=Re[mm];end;mm=mm+1;mm=qI[6];end;else if OI<0X09 then if not(fm[qI[6]]<fm[qI[1]])then else mm=qI[0X7];end;else if OI==10 then local gK=(je[qI[6]]);local nK,PK=gK[8],(nil);local zK=#nK;do if zK>0X0 then PK={};for Yf=0X00001,zK do local tf=(nK[Yf]);if tf[1]==0 then do(PK)[Yf-1]={fm,tf[2]};end;else PK[Yf-1]=ve[tf[0x2]];end;end;(A)(De,PK);end;end;(fm)[qI[0X0007]]=NC(PK,ym,gK);else do if fm[qI[0x7]]then mm=qI[6];end;end;end;end;end;end;end;else do if not(OI<0X11)then if OI>=20 then do if not(OI>=21)then(fm)[qI[7]]=qI[2];else if OI==22 then fm[qI[0X7]]=ym[qI[2]];else(fm)[qI[0X07]]=O(fm[qI[6]],fm[qI[0x1]]);end;end;end;else if OI>=18 then do if OI==0X13 then mm=qI[0X6];else(fm)[qI[7]]=fm[qI[6]];end;end;else(fm)[0]=ym[qI[0X2]];mm=mm+0X1;mm=mm+0x1;do mm=mm+1;end;Im=0;fm[Im]=fm[Im]();qI=Re[mm];mm=mm+1;if fm[0X000]then do mm=qI[6];end;end;end;end;else do if not(OI<14)then if OI<0Xf then local Mr=(ve[0X0]);local kr=(0);fm[0X00]=Mr[0X1][Mr[0x2]];do mm=mm+1;end;mm=mm+0X00001;do qI=Re[mm];end;do mm=mm+0X1;end;local Gr=(fm[0X0]);do fm[kr+1]=Gr;end;do(fm)[kr]=Gr[qI[5]];end;mm=mm+1;kr=0x000;fm[kr]=fm[kr](fm[kr+0X0001]);Im=kr;do qI=Re[mm];end;mm=mm+1;if not fm[0]then mm=qI[6];end;else do if OI~=16 then fm[0X0]=ym[qI[0x00002]];mm=mm+0x1;mm=mm+1;do qI=Re[mm];end;mm=mm+1;do fm[0X0]=fm[0X0][qI[0X5]];end;local MV=(0);mm=mm+0X1;mm=mm+0X1;qI=Re[mm];mm=mm+0X1;fm[0X01]=qI[0X2];mm=mm+1;fm[MV]=fm[MV](fm[MV+1]);Im=MV;mm=mm+1;mm=mm+0x1;do qI=Re[mm];end;do mm=mm+1;end;do if not(not fm[0])then else do mm=qI[0x6];end;end;end;else repeat local hn,Nn=De,fm;if not(#hn>0)then else local uk=({});for Zu,xu in D,hn do for ns,Js in D,xu do if Js[0X1]==Nn and Js[0x2]>=0X0 then local sj=(Js[2]);do if not(not uk[sj])then else do uk[sj]={Nn[sj]};end;end;end;Js[1]=uk[sj];Js[2]=1;end;end;end;end;until true;return;end;end;end;else if not(OI>=12)then local zW=(ve[0X00]);do(fm)[0X0]=zW[1][zW[2]];end;do qI=Re[mm];end;local AW=(fm[0X0]);mm=mm+1;local tW=0;(fm)[tW+0x1]=AW;(fm)[tW]=AW[qI[0X05]];do mm=mm+1;end;tW=0X000;(fm[tW])(fm[tW+1]);Im=tW-1;mm=mm+1;mm=mm+0x01;mm=mm+0X1;repeat local sL,rL=De,(fm);do if not(#sL>0)then else local kO={};for C3,M3 in D,sL do for gp,xp in D,M3 do if xp[1]==rL and xp[2]>=0 then local Kc=xp[2];if not(not kO[Kc])then else kO[Kc]={rL[Kc]};end;(xp)[0x1]=kO[Kc];xp[2]=0X00001;end;end;end;end;end;until true;return;else if OI~=13 then local fs=qI[6];local ws=fm[fs];do for TC=fs+1,qI[0X1]do ws=ws..fm[TC];end;end;fm[qI[7]]=ws;else for oP=qI[7],qI[6]do(fm)[oP]=nil;end;end;end;end;end;end;end;end;end;end;end);if not(Mm)then if f(em)=="string"then if e(em,'a\116t\101\mp\116\032\116\o\ \121\i\el\d ac\114\o\ss\032m\101\116\097\m\101t\h\111d\/\067\037\-\call\ bo\117\110\dar\y')then return coroutine.yield();end;if e(em,"^.-:%d+: ")then b("\Lu\114\097p\h\032\083\099r\105pt\:"..(Ae[mm-0X001]or"(internal)")..": "..r(em),0X0);else(b)(em,0);end;else b(em,0);end;else if em then if Em==0X001 then return fm[xm]();else return fm[xm](I(fm,xm+0X1,Im));end;elseif not(xm)then else do return I(fm,xm,Em);end;end;end;end;else fe=function(...)local rN,DN,kN=1,{},(0);local nN=(m());local HN={[1]=ce,[0X2]=DN};local pN=(nN==F and Le or nN);local zN,hN=rC(...);zN=zN-0X001;for Xk=0X0,zN do if he>Xk then(DN)[Xk]=hN[Xk+0X1];else break;end;end;do if not ge then hN=nil;elseif xe then DN[he]={n=zN>=he and zN-he+1 or 0X0000,I(hN,he+0X01,zN+1)};end;end;do if pN==nN then else(i)(fe,pN);end;end;local PN,GN,VN,qN=j(function()while true do local C3=(Re[rN]);local x3=C3[4];rN=rN+1;do if not(x3<25)then if x3>=0X000026 then if x3<0x002c then if x3<41 then if x3<0X27 then do DN[0X0]=pN[C3[0X00002]];end;do C3=Re[rN];end;rN=rN+0x00001;(DN)[0X01]=C3[2];local fl=0;rN=rN+0x1;DN[fl]=DN[fl](DN[fl+1]);kN=fl;C3=Re[rN];do rN=rN+1;end;DN[0X00000]=DN[0X00000][C3[5]];do C3=Re[rN];end;rN=rN+0x0001;if DN[0x00000]then rN=C3[6];end;else if x3==0X28 then(DN)[0X00000]=pN[C3[2]];do C3=Re[rN];end;rN=rN+1;DN[1]=C3[2];rN=rN+0X1;local W2=0;DN[W2](DN[W2+1]);kN=W2-0X1;C3=Re[rN];rN=rN+0x00001;(DN)[0X000]=pN[C3[2]];C3=Re[rN];do rN=rN+0X1;end;DN[0X0]=DN[0][C3[0x5]];do rN=rN+1;end;rN=rN+0X1;C3=Re[rN];rN=rN+0X1;DN[0X0000]=DN[0][C3[5]];C3=Re[rN];do rN=rN+0X1;end;(DN)[0]=DN[0][C3[0X5]];C3=Re[rN];rN=rN+1;do if not(not(C3[0x0002]<=DN[0X0]))then else do rN=C3[0x7];end;end;end;else do(DN)[0x0]=pN[C3[2]];end;rN=rN+0X001;rN=rN+0x01;C3=Re[rN];do rN=rN+0x00001;end;DN[0X00000]=DN[0][C3[5]];do rN=rN+0X1;end;rN=rN+0X1;C3=Re[rN];rN=rN+0X001;do if not DN[0x000]then rN=C3[0X00006];end;end;end;end;else do if not(x3>=0X0002A)then(DN)[0]=pN[C3[0X2]];C3=Re[rN];rN=rN+1;local y6=0X00;do(DN)[0x0001]=C3[0X2];end;rN=rN+1;local D6=0x0002;(DN)[y6]=DN[y6](DN[y6+1]);kN=y6;rN=rN+0X001;DN[0X1]={};do C3=Re[rN];end;rN=rN+0X1;(DN)[0X2]=C3[2]/C3[0X5];C3=Re[rN];do rN=rN+1;end;(DN[1])[C3[0X00002]]=DN[2];C3=Re[rN];rN=rN+1;do DN[2]=pN[C3[2]];end;rN=rN+0X1;rN=rN+0x001;do rN=rN+0X01;end;do(DN)[3]=DN[0X00];end;rN=rN+1;y6=2;local E6=(0X4);if D6~=0 then kN=y6+D6-1;end;local f6,K6=nil,(nil);do if D6==1 then f6,K6=rC(DN[y6]());else f6,K6=rC(DN[y6](I(DN,y6+1,kN)));end;end;if E6==0X1 then do kN=y6-1;end;else if E6~=0X0000 then f6=y6+E6-0X2;kN=f6+1;else do f6=f6+y6-0X1;end;kN=f6;end;local H2=0;do for TY=y6,f6 do H2=H2+1;(DN)[TY]=K6[H2];end;end;end;C3=Re[rN];rN=rN+0x00001;y6=2;local U6=g(function(...)d();for Nj,wj in...do(d)(true,Nj,wj);end;end);U6(DN[y6],DN[y6+1],DN[y6+2]);kN=y6;do(DN)[y6]=U6;end;rN=C3[0X6];else if x3~=43 then DN[C3[7]]=DN[C3[0X6]][C3[5]];else do(DN)[0X2]=pN[C3[2]];end;C3=Re[rN];rN=rN+0X1;DN[0X3]=C3[0X2];C3=Re[rN];rN=rN+0x01;(DN)[4]=DN[1][C3[0x05]];do rN=rN+1;end;rN=rN+0X01;local kx=(0X2);rN=rN+0X1;DN[kx](DN[kx+0x0001],DN[kx+0X0002]);kN=kx-0X1;rN=rN+1;rN=rN+1;C3=Re[rN];do rN=rN+1;end;do(DN)[2]=pN[C3[0x2]];end;rN=rN+1;rN=rN+1;C3=Re[rN];rN=rN+1;DN[3]=C3[2];C3=Re[rN];rN=rN+0x0001;(DN)[4]=C3[2];rN=rN+0X1;kx=0X2;DN[kx](DN[kx+1],DN[kx+2]);kN=kx-0X1;rN=rN+1;do rN=rN+1;end;C3=Re[rN];do rN=rN+1;end;DN[0X002]=pN[C3[2]];C3=Re[rN];do rN=rN+0X1;end;(DN)[0X03]=C3[0X002];C3=Re[rN];rN=rN+1;(DN)[4]=C3[0X02];rN=rN+0x0001;kx=2;DN[kx](DN[kx+1],DN[kx+2]);do kN=kx-1;end;C3=Re[rN];rN=rN+1;(DN)[2]=pN[C3[0x0002]];C3=Re[rN];do rN=rN+0X1;end;do(DN)[0X3]=C3[0X002];end;C3=Re[rN];rN=rN+1;DN[0X4]=C3[0X2];do rN=rN+1;end;kx=0X02;(DN[kx])(DN[kx+0X1],DN[kx+0X2]);do kN=kx-1;end;do rN=rN+0x1;end;rN=rN+1;C3=Re[rN];rN=rN+0X0001;rN=C3[6];end;end;end;end;else do if not(x3<0X02f)then if not(x3>=49)then if x3==48 then DN[0]=pN[C3[0X2]];local UV=(0);rN=rN+0X1;do rN=rN+1;end;C3=Re[rN];rN=rN+1;DN[0X1]=C3[2];do rN=rN+1;end;(DN[UV])(DN[UV+1]);do kN=UV-1;end;do C3=Re[rN];end;rN=rN+1;rN=C3[0X6];else DN[0X00001]=pN[C3[2]];do rN=rN+0x1;end;rN=rN+0X1;rN=rN+0X001;do kN=1;end;local jI=(0X2);DN[kN]=DN[kN]();C3=Re[rN];rN=rN+0X001;local UI=(ve[0x001]);(DN)[2]=pN[C3[0x2]];rN=rN+1;rN=rN+0x1;C3=Re[rN];rN=rN+1;(DN)[3]=C3[2];do rN=rN+1;end;do(DN)[jI]=DN[jI](DN[jI+0X1]);end;kN=jI;rN=rN+1;do rN=rN+1;end;C3=Re[rN];rN=rN+1;do(DN)[2]=DN[0X2][C3[5]];end;rN=rN+1;local MI=(nil);rN=rN+0X1;rN=rN+1;(DN)[3]=UI[1][UI[2]];C3=Re[rN];rN=rN+0x0001;DN[0x3]=DN[0X0003][C3[0X5]];rN=rN+0X1;rN=rN+0X01;do rN=rN+0X01;end;(DN)[0X4]=DN[0];rN=rN+1;do UI=ve[0X0];end;(DN)[5]=UI[1][UI[2]];rN=rN+1;do rN=rN+0x1;end;C3=Re[rN];rN=rN+1;local bI=je[C3[6]];local rI=(bI[0X8]);local yI=#rI;do if not(yI>0x00)then else MI={};do for KC=1,yI do local ZC=(rI[KC]);if ZC[0X0001]~=0X0 then do MI[KC-1]=ve[ZC[0X2]];end;else do MI[KC-0X01]={DN,ZC[0X0002]};end;end;end;end;(A)(De,MI);end;end;do DN[0X00006]=NC(MI,pN,bI);end;rN=rN+1;DN[0x0007]={};C3=Re[rN];do rN=rN+1;end;do bI=je[C3[6]];end;do MI=nil;end;rI=bI[0x8];do yI=#rI;end;do if not(yI>0)then else do MI={};end;do for YE=1,yI do local RE=rI[YE];if RE[1]==0 then MI[YE-1]={DN,RE[0x0002]};else do(MI)[YE-0X001]=ve[RE[0X0002]];end;end;end;end;(A)(De,MI);end;end;(DN)[8]=NC(MI,pN,bI);do C3=Re[rN];end;rN=rN+1;(DN[7])[C3[0X2]]=DN[8];rN=rN+1;do jI=3;end;do kN=jI+5-0x01;end;(DN[jI])(I(DN,jI+0x1,kN));kN=jI-0X1;do rN=rN+1;end;do rN=rN+1;end;do rN=rN+0x1;end;do UI=ve[0];end;(DN)[0x3]=UI[0X1][UI[2]];do rN=rN+0X1;end;local fI=(DN[3]);rN=rN+0X00001;C3=Re[rN];rN=rN+0X1;jI=0x3;(DN)[jI+1]=fI;(DN)[jI]=fI[C3[5]];rN=rN+1;jI=3;(DN[jI])(DN[jI+0x1]);do kN=jI-0X001;end;do rN=rN+0X00001;end;do repeat local Wl,cl=De,(DN);if#Wl>0X000 then local S8=({});for LK,TK in D,Wl do for Ql,Hl in D,TK do do if not(Hl[0X0001]==cl and Hl[0X2]>=1)then else local cN=(Hl[0X2]);do if not S8[cN]then do S8[cN]={cl[cN]};end;end;end;Hl[1]=S8[cN];do(Hl)[2]=1;end;end;end;end;end;end;until true;end;C3=Re[rN];do rN=rN+0X0001;end;rN=C3[0x06];end;else do if x3~=0X000032 then(DN)[C3[7]]=DN[C3[6]]==DN[C3[1]];else(DN)[C3[0X7]]=C3[0X2];end;end;end;else if not(x3>=0x0002D)then for iH=C3[7],C3[6]do DN[iH]=nil;end;else if x3==0X00002E then local hi=C3[7];local Ni,bi,yi=DN[hi]();if not(Ni)then else(DN)[hi+1]=bi;(DN)[hi+0X2]=yi;rN=C3[6];end;else(DN)[0x000]=pN[C3[0x2]];do C3=Re[rN];end;rN=rN+1;(DN)[0X0000]=DN[0X0][C3[0X0005]];rN=rN+0X1;do rN=rN+0X01;end;C3=Re[rN];rN=rN+0X0001;if DN[0]then rN=C3[0X6];end;end;end;end;end;end;else do if not(x3>=0X1f)then if x3<0X1C then do if not(x3<26)then if x3~=0x1B then DN[0x00]=pN[C3[0x00002]];rN=rN+0X1;rN=rN+1;C3=Re[rN];rN=rN+1;do DN[0X00]=DN[0X0][C3[5]];end;C3=Re[rN];do rN=rN+0x1;end;if not(DN[0])then else rN=C3[6];end;else if not DN[C3[7]]then rN=C3[0x06];end;end;else do(DN)[0X0]=pN[C3[2]];end;do rN=rN+1;end;rN=rN+0X001;C3=Re[rN];rN=rN+1;do(DN)[1]=C3[0X02];end;C3=Re[rN];do rN=rN+1;end;DN[0x2]=C3[0x0002];rN=rN+0x1;local Ko=0X0;DN[Ko]=DN[Ko](DN[Ko+1],DN[Ko+2]);kN=Ko;rN=rN+1;do rN=rN+0x1;end;do C3=Re[rN];end;rN=rN+1;if DN[0x0]then rN=C3[6];end;end;end;else if x3>=29 then if x3~=0X01E then(DN)[C3[7]]=DN[C3[6]]-DN[C3[0x01]];else(DN)[0x6]=DN[4][C3[5]];do C3=Re[rN];end;rN=rN+0X01;DN[0X7]=DN[1][C3[5]];do rN=rN+0x00001;end;rN=rN+0X01;C3=Re[rN];rN=rN+0x00001;if not(DN[0X6]<DN[0x7])then rN=C3[0X007];end;end;else(DN)[0X000]=pN[C3[2]];rN=rN+0X1;rN=rN+0x0001;C3=Re[rN];do rN=rN+1;end;DN[0X0]=DN[0][C3[0X005]];rN=rN+1;rN=rN+0X0001;C3=Re[rN];rN=rN+1;if not(DN[0X0])then else do rN=C3[6];end;end;end;end;else if not(x3>=34)then do if x3<0x20 then DN[5]=DN[4][C3[0X0005]];rN=rN+1;rN=rN+1;C3=Re[rN];rN=rN+1;if not(not(C3[0x0002]<=DN[5]))then else rN=C3[7];end;else if x3~=33 then DN[0]=pN[C3[0X0002]];do rN=rN+0X0001;end;rN=rN+0X1;C3=Re[rN];do rN=rN+1;end;(DN)[0X1]=C3[2];C3=Re[rN];rN=rN+0X1;DN[2]=C3[0X2];rN=rN+1;local iG=0;(DN)[iG]=DN[iG](DN[iG+1],DN[iG+2]);do kN=iG;end;C3=Re[rN];rN=rN+1;if not DN[0X0]then rN=C3[6];end;else(DN)[0x00]=pN[C3[2]];C3=Re[rN];local gy=0;rN=rN+0X1;do DN[0x1]=C3[2];end;rN=rN+1;(DN)[gy]=DN[gy](DN[gy+1]);kN=gy;do C3=Re[rN];end;rN=rN+1;do DN[0X00]=DN[0x0][C3[0x00005]];end;rN=rN+1;rN=rN+0x1;do C3=Re[rN];end;do rN=rN+1;end;if not(DN[0])then else rN=C3[6];end;end;end;end;else if not(x3<36)then if x3==0x25 then else(DN)[C3[0x7]]={I({},1,C3[6])};end;else do if x3~=0X23 then local Bm=ve[1];(DN)[0X01]=Bm[0X1][Bm[2]];C3=Re[rN];rN=rN+1;(DN)[0X0001]=DN[0X01][C3[5]];do rN=rN+1;end;rN=rN+1;rN=rN+0x01;DN[0X002]=DN[0];rN=rN+0X1;Bm=ve[0];local Fm=(0x1);do(DN)[3]=Bm[0X1][Bm[2]];end;do rN=rN+0X0001;end;DN[4]=nil;rN=rN+0x00001;(DN)[0x5]={};do C3=Re[rN];end;local Rm=(je[C3[6]]);local Nm=(Rm[0X0008]);rN=rN+0x1;local Pm=nil;local lm=#Nm;do if not(lm>0X00)then else Pm={};for Hi=0X0001,lm do local Mi=(Nm[Hi]);do if Mi[1]~=0X0000 then Pm[Hi-0X1]=ve[Mi[2]];else(Pm)[Hi-1]={DN,Mi[0x00002]};end;end;end;A(De,Pm);end;end;(DN)[0X6]=NC(Pm,pN,Rm);do C3=Re[rN];end;rN=rN+0X1;do(DN[5])[C3[0X0002]]=DN[0X006];end;rN=rN+1;kN=Fm+5-1;(DN[Fm])(I(DN,Fm+1,kN));do kN=Fm-0X1;end;do rN=rN+0x001;end;rN=rN+0x0001;rN=rN+1;Bm=ve[0];DN[1]=Bm[1][Bm[2]];rN=rN+0X1;do rN=rN+1;end;local tm=DN[1];C3=Re[rN];rN=rN+1;Fm=1;do(DN)[Fm+0x0001]=tm;end;(DN)[Fm]=tm[C3[0X5]];do rN=rN+0X00001;end;do Fm=0X1;end;(DN[Fm])(DN[Fm+1]);kN=Fm-0X0001;do rN=rN+1;end;do rN=rN+1;end;C3=Re[rN];rN=rN+0x1;rN=C3[0x6];else(DN)[0X0]=pN[C3[0X2]];C3=Re[rN];rN=rN+1;do(DN)[1]=C3[2];end;rN=rN+1;local PY=0X00;(DN)[PY]=DN[PY](DN[PY+0X0001]);kN=PY;rN=rN+1;rN=rN+1;do C3=Re[rN];end;rN=rN+1;DN[0x00]=DN[0X00000][C3[0x5]];C3=Re[rN];do rN=rN+1;end;do if not(not DN[0X0])then else rN=C3[6];end;end;end;end;end;end;end;end;end;else if x3<0Xc then do if x3>=0X6 then do if not(x3>=0X00009)then if not(x3>=7)then(DN)[C3[7]]=L(DN[C3[0X006]],DN[C3[1]]);else do if x3==8 then do DN[C3[7]]=DN[C3[6]];end;else do DN[0X0000]=pN[C3[2]];end;local as=0X00;C3=Re[rN];rN=rN+1;DN[1]=C3[2];do rN=rN+0x00001;end;(DN)[as]=DN[as](DN[as+0x00001]);kN=as;do rN=rN+0X00001;end;rN=rN+0X1;C3=Re[rN];rN=rN+1;DN[0X0]=DN[0X0][C3[0X5]];rN=rN+0X1;rN=rN+0x01;C3=Re[rN];rN=rN+0X0001;do if not(DN[0])then else do rN=C3[6];end;end;end;end;end;end;else if not(x3>=0Xa)then if not(DN[C3[7]])then else do rN=C3[0X006];end;end;else if x3~=0xb then(DN)[0]=pN[C3[2]];C3=Re[rN];rN=rN+1;do(DN)[1]=C3[0X2];end;local nH=(0X0000);rN=rN+0X1;local FH=ve[0X1];do DN[nH]=DN[nH](DN[nH+1]);end;do kN=nH;end;do rN=rN+0x1;end;(DN)[1]=FH[1][FH[2]];rN=rN+1;rN=rN+0X001;C3=Re[rN];rN=rN+0X1;DN[0X01]=DN[1][C3[0X5]];rN=rN+0X1;do(DN)[0X00002]=DN[0];end;rN=rN+1;nH=0X1;(DN)[nH]=DN[nH](DN[nH+1]);kN=nH;do rN=rN+1;end;rN=rN+1;do C3=Re[rN];end;do rN=rN+0x01;end;if not(not DN[1])then else do rN=C3[0X6];end;end;else DN[2]=pN[C3[0X2]];do rN=rN+1;end;kN=2;DN[kN]();do kN=kN-1;end;C3=Re[rN];rN=rN+1;rN=C3[0X6];end;end;end;end;else do if not(x3>=0x3)then if not(x3>=1)then do(DN)[0]=pN[C3[2]];end;local VS=(0);do C3=Re[rN];end;rN=rN+1;do(DN)[1]=C3[0X0002];end;rN=rN+1;(DN[VS])(DN[VS+1]);kN=VS-1;do rN=rN+1;end;rN=rN+0X001;C3=Re[rN];rN=rN+1;do rN=C3[6];end;else if x3~=0X002 then do DN[0]=pN[C3[2]];end;rN=rN+0X1;rN=rN+1;C3=Re[rN];rN=rN+0x1;(DN)[0]=DN[0x0][C3[0X5]];rN=rN+1;rN=rN+1;C3=Re[rN];rN=rN+0X1;do if not(DN[0])then else rN=C3[0X006];end;end;else DN[C3[7]]=O(DN[C3[6]],DN[C3[0X0001]]);end;end;else if x3<4 then do(DN)[0X000]=pN[C3[2]];end;C3=Re[rN];rN=rN+1;DN[0X00]=DN[0][C3[5]];rN=rN+1;do rN=rN+0x0001;end;local kC=0x0;C3=Re[rN];rN=rN+1;(DN)[1]=C3[0X2];rN=rN+1;DN[kC]=DN[kC](DN[kC+0X0001]);kN=kC;C3=Re[rN];rN=rN+0X0001;if not DN[0]then rN=C3[0X6];end;else do if x3==0X5 then do(DN)[0X0]=pN[C3[2]];end;do rN=rN+0X1;end;kN=0X0;do DN[kN]=DN[kN]();end;C3=Re[rN];rN=rN+0x1;if DN[0x0]then rN=C3[0X6];end;else(DN)[1]=pN[C3[2]];C3=Re[rN];local dL=0X1;do rN=rN+1;end;(DN)[0X2]=C3[0X2];rN=rN+1;(DN[dL])(DN[dL+1]);kN=dL-0X0001;C3=Re[rN];rN=rN+0X00001;rN=C3[0X6];end;end;end;end;end;end;end;else if not(x3>=18)then if not(x3>=0X0F)then if x3>=0Xd then if x3~=14 then do(DN)[0X0]=pN[C3[0x2]];end;rN=rN+1;do rN=rN+0X001;end;do C3=Re[rN];end;rN=rN+1;if not(DN[0x000])then else do rN=C3[6];end;end;else pN[C3[2]]=DN[C3[0X0007]];end;else DN[0]=pN[C3[2]];C3=Re[rN];rN=rN+1;DN[1]=C3[0X2];local gg=(0X0);rN=rN+1;DN[gg]=DN[gg](DN[gg+0X1]);do kN=gg;end;C3=Re[rN];do rN=rN+1;end;(DN)[0]=DN[0][C3[5]];rN=rN+0X00001;rN=rN+1;C3=Re[rN];rN=rN+1;do if not DN[0]then rN=C3[6];end;end;end;else if x3>=0X0010 then if x3~=17 then(DN)[0]=pN[C3[2]];do C3=Re[rN];end;do rN=rN+1;end;do(DN)[0X0]=DN[0][C3[5]];end;C3=Re[rN];rN=rN+0x1;do if not DN[0X0]then rN=C3[0X6];end;end;else DN[5]=DN[0X04];rN=rN+1;(DN)[0X1]=DN[0x5];do C3=Re[rN];end;do rN=rN+1;end;rN=C3[0x6];end;else do rN=C3[0X06];end;end;end;else do if x3>=0x15 then do if x3<0X17 then if x3~=22 then DN[0x000]=pN[C3[0X00002]];rN=rN+1;rN=rN+1;C3=Re[rN];rN=rN+0X1;if DN[0]then rN=C3[0x6];end;else local d3=(je[C3[6]]);local b3,k3=d3[8],nil;local U3=(#b3);if not(U3>0)then else k3={};for ZZ=1,U3 do local DZ=b3[ZZ];if DZ[1]~=0X0000 then(k3)[ZZ-1]=ve[DZ[2]];else do k3[ZZ-0x01]={DN,DZ[2]};end;end;end;A(De,k3);end;DN[C3[0X007]]=NC(k3,pN,d3);end;else do if x3~=0x18 then DN[0X0]=pN[C3[0x0002]];rN=rN+1;rN=rN+0X00001;local Sm=0x00;C3=Re[rN];rN=rN+1;DN[1]=C3[0X02];rN=rN+1;(DN)[Sm]=DN[Sm](DN[Sm+0x1]);do kN=Sm;end;rN=rN+1;local Wm=(ve[0X00001]);rN=rN+1;rN=rN+1;DN[0X0001]=Wm[0x00001][Wm[2]];C3=Re[rN];rN=rN+0X00001;DN[0X1]=DN[0X1][C3[0X5]];rN=rN+0X1;DN[0X00002]=DN[0];rN=rN+1;Sm=1;(DN)[Sm]=DN[Sm](DN[Sm+0X00001]);kN=Sm;C3=Re[rN];do rN=rN+0X0001;end;if not(not DN[1])then else do rN=C3[6];end;end;else do repeat local jc,sc=De,(DN);if not(#jc>0)then else local Ez=({});for fF,YF in D,jc do for Y7,Z7 in D,YF do if not(Z7[0X1]==sc and Z7[2]>=0)then else local wm=Z7[2];do if not Ez[wm]then Ez[wm]={sc[wm]};end;end;(Z7)[0x001]=Ez[wm];(Z7)[0X00002]=1;end;end;end;end;until true;end;do return;end;end;end;end;end;else if x3<0x00013 then DN[C3[0X7]]=pN[C3[0x2]];else if x3==0X14 then do(DN)[0]=pN[C3[0X2]];end;C3=Re[rN];rN=rN+0x1;DN[0]=DN[0][C3[5]];C3=Re[rN];do rN=rN+1;end;do if not(not DN[0])then else rN=C3[6];end;end;else local Ay=(ve[0X0000]);(DN)[0X0000]=Ay[1][Ay[0X2]];local Hy=(0X0);rN=rN+1;rN=rN+1;do C3=Re[rN];end;rN=rN+0x01;local Ky=(DN[0X00]);do DN[Hy+0X01]=Ky;end;(DN)[Hy]=Ky[C3[0X05]];rN=rN+1;Hy=0;do DN[Hy]=DN[Hy](DN[Hy+1]);end;do kN=Hy;end;do rN=rN+1;end;rN=rN+1;do C3=Re[rN];end;do rN=rN+0X1;end;do if not(not DN[0x0])then else rN=C3[0X6];end;end;end;end;end;end;end;end;end;end;end;end);if not(PN)then if f(GN)~="string"then b(GN,0X0);else if e(GN,"a\116t\101\m\pt\032t\o \y\ie\l\d\032\097\cros\s m\etametho\100\047\C\%\045ca\ll\ \098\o\117\110\da\114\121")then return coroutine.yield();end;if not(e(GN,"^.-:%d+: "))then b(GN,0X000);else(b)('\L\117r\097\p\104 \Script\:'..(Ae[rN-0X1]or"(internal)")..": "..r(GN),0X0);end;end;else if GN then if qN~=0X001 then do return DN[VN](I(DN,VN+0X1,kN));end;else return DN[VN]();end;elseif VN then return I(DN,VN,qN);end;end;end;end;end;end;else do if me<0XA9 then do fe=function(...)local UP=1;local gP=({});local GP={[0X2]=gP,[1]=ce};local CP=m();local XP,DP=rC(...);local tP=((CP==F and Le or CP));do XP=XP-0x01;end;for fE=0X0000,XP do do if not(he>fE)then do break;end;else(gP)[fE]=DP[fE+0x1];end;end;end;if not ge then DP=nil;elseif not(xe)then else do gP[he]={n=XP>=he and XP-he+1 or 0X0,I(DP,he+1,XP+1)};end;end;local NP=(0X00);if tP==CP then else i(fe,tP);end;local ZP,SP,wP,WP=j(function()do while true do local A3=(Re[UP]);local Q3=(A3[0X4]);UP=UP+0X00001;if Q3<26 then do if not(Q3>=13)then if not(Q3>=0X6)then if Q3<3 then if not(Q3>=0X01)then gP[0X0004]=tP[A3[0X002]];UP=UP+1;do UP=UP+0X1;end;do A3=Re[UP];end;do UP=UP+1;end;(gP[0X4])[A3[2]]=A3[5];do A3=Re[UP];end;UP=UP+1;gP[0x4]=tP[A3[2]];do A3=Re[UP];end;do UP=UP+0X1;end;gP[0x004]=gP[4][A3[0X0005]];UP=UP+1;UP=UP+1;A3=Re[UP];UP=UP+0x1;(gP)[0X4]=gP[4][A3[0X005]];UP=UP+1;UP=UP+0x00001;A3=Re[UP];do UP=UP+0x01;end;(gP)[4]=gP[0X4][A3[0X0005]];A3=Re[UP];do UP=UP+1;end;do if not(A3[2]<=gP[4])then UP=A3[0X7];end;end;else do if Q3==2 then gP[4]=false;A3=Re[UP];UP=UP+1;(tP)[A3[0X2]]=gP[4];A3=Re[UP];do UP=UP+0x1;end;do(gP)[0X004]=tP[A3[0X0002]];end;A3=Re[UP];UP=UP+0X1;if not(not gP[4])then else do UP=A3[6];end;end;else do if not(gP[A3[0X6]]<gP[A3[0x00001]])then UP=A3[7];end;end;end;end;end;else if not(Q3>=4)then(gP)[5]=tP[A3[2]];UP=UP+1;UP=UP+0x1;UP=UP+1;NP=0x5;gP[NP]=gP[NP]();UP=UP+0X1;do UP=UP+0X01;end;A3=Re[UP];UP=UP+1;do if gP[0X5]then UP=A3[0X00006];end;end;else do if Q3==0X005 then if not(gP[A3[6]]<gP[A3[1]])then else UP=A3[7];end;else gP[0X06]=tP[A3[0X2]];UP=UP+1;UP=UP+1;do A3=Re[UP];end;UP=UP+1;(gP)[0X007]=A3[2];do UP=UP+1;end;(gP)[8]=true;local EK=6;UP=UP+0x1;do gP[EK]=gP[EK](gP[EK+1],gP[EK+2]);end;do NP=EK;end;A3=Re[UP];UP=UP+1;local cK=gP[0X6];EK=0X6;gP[EK+0X01]=cK;(gP)[EK]=cK[A3[5]];A3=Re[UP];UP=UP+0X01;(gP)[8]=A3[2];do UP=UP+0X1;end;do EK=0x6;end;gP[EK]=gP[EK](gP[EK+1],gP[EK+0X2]);NP=EK;UP=UP+0x0001;UP=UP+0x1;A3=Re[UP];do UP=UP+1;end;(gP)[0X6]=gP[0X6][A3[5]];A3=Re[UP];do UP=UP+1;end;do UP=A3[6];end;end;end;end;end;else if Q3>=9 then if not(Q3<0Xb)then if Q3~=0X0C then(gP)[0x4]=true;UP=UP+1;gP[0X2]=gP[0X4];A3=Re[UP];do UP=UP+0X001;end;gP[0X4]=A3[2];UP=UP+0x1;gP[3]=gP[4];A3=Re[UP];do UP=UP+0x1;end;UP=A3[0x00006];else gP[0X005]=tP[A3[0X2]];A3=Re[UP];UP=UP+0X0001;local e8=(5);(gP)[0X0006]=A3[2];UP=UP+0X0001;gP[e8]=gP[e8](gP[e8+0X1]);NP=e8;UP=UP+1;UP=UP+1;A3=Re[UP];UP=UP+0x1;if gP[0x00005]~=A3[5]then do UP=A3[7];end;end;end;else if Q3==10 then if not(A3[2]<gP[A3[0X0001]])then UP=A3[7];end;else gP[4]=tP[A3[0X00002]];UP=UP+0X1;do UP=UP+0X00001;end;A3=Re[UP];UP=UP+0X0001;gP[0x5]=tP[A3[0X2]];do A3=Re[UP];end;UP=UP+1;(gP)[0X6]=A3[0X2];A3=Re[UP];UP=UP+1;gP[0X7]=A3[2];local DO=0x3;do A3=Re[UP];end;UP=UP+0X01;gP[8]=A3[0X00002];local CO=(0X004);UP=UP+1;local wO=(5);do if wO~=0 then do NP=CO+wO-1;end;end;end;local kO,NO=nil,nil;if wO==1 then kO,NO=rC(gP[CO]());else do kO,NO=rC(gP[CO](I(gP,CO+1,NP)));end;end;if DO==0X001 then do NP=CO-1;end;else if DO==0 then kO=kO+CO-0x00001;NP=kO;else do kO=CO+DO-0X2;end;do NP=kO+1;end;end;local gF=0X00000;for H9=CO,kO do gF=gF+0X1;gP[H9]=NO[gF];end;end;UP=UP+0X1;gP[3]=gP[5];do UP=UP+1;end;(gP)[2]=gP[4];do A3=Re[UP];end;UP=UP+1;UP=A3[6];end;end;else if Q3<7 then gP[0X2]=tP[A3[2]];UP=UP+0X01;UP=UP+1;A3=Re[UP];UP=UP+1;gP[2]=gP[0X2][A3[5]];UP=UP+0X1;UP=UP+1;A3=Re[UP];do UP=UP+1;end;if not(gP[0X2])then else UP=A3[0X06];end;else if Q3~=0x8 then if gP[A3[0X6]]~=A3[0X5]then UP=A3[0X7];end;else if not gP[A3[0X007]]then UP=A3[0X6];end;end;end;end;end;else do if not(Q3<19)then do if Q3<22 then if Q3>=20 then if Q3==0x00015 then do if gP[A3[7]]then do UP=A3[6];end;end;end;else gP[0X06]=tP[A3[0x2]];UP=UP+1;UP=UP+0X1;A3=Re[UP];do UP=UP+1;end;gP[6]=gP[6][A3[0X005]];do UP=UP+0X01;end;UP=UP+1;do A3=Re[UP];end;UP=UP+0X001;if not(gP[6])then else UP=A3[6];end;end;else do(gP)[2]=tP[A3[2]];end;A3=Re[UP];UP=UP+1;(gP)[0X3]=A3[0X0002];local zE=0X002;UP=UP+0x1;(gP)[zE]=gP[zE](gP[zE+0X001]);NP=zE;A3=Re[UP];do UP=UP+1;end;if not(not gP[0X00002])then else UP=A3[6];end;end;else if Q3<24 then do if Q3~=23 then(gP)[0]=A3[0x00002];A3=Re[UP];UP=UP+0x1;(tP)[A3[2]]=gP[0];A3=Re[UP];UP=UP+0X00001;do gP[0X0]=tP[A3[0X2]];end;do A3=Re[UP];end;do UP=UP+1;end;do gP[0X1]=tP[A3[2]];end;do UP=UP+1;end;UP=UP+1;local BL=0;A3=Re[UP];UP=UP+0X1;do(gP)[2]=A3[0X2];end;A3=Re[UP];UP=UP+1;local PL=(0x0003);(gP)[0X3]=tP[A3[2]];UP=UP+1;do UP=UP+0X1;end;A3=Re[UP];UP=UP+0X00001;gP[0x3]=gP[3][A3[5]];UP=UP+1;UP=UP+1;UP=UP+1;local JL=4;if JL==0x0 then else do NP=BL+JL-1;end;end;local RL,EL=nil,(nil);if JL==1 then RL,EL=rC(gP[BL]());else do RL,EL=rC(gP[BL](I(gP,BL+0X1,NP)));end;end;do if PL~=0X1 then if PL~=0X0 then RL=BL+PL-0X2;NP=RL+1;else RL=RL+BL-0X1;NP=RL;end;local n_=(0);for lI=BL,RL do n_=n_+0X1;(gP)[lI]=EL[n_];end;else NP=BL-1;end;end;A3=Re[UP];UP=UP+1;if gP[0X1]~=A3[5]then else UP=A3[0x0007];end;else gP[4]=tP[A3[2]];local M6=(4);A3=Re[UP];UP=UP+1;gP[0X5]=A3[0x2];A3=Re[UP];do UP=UP+0X1;end;do gP[6]=A3[0X2];end;A3=Re[UP];UP=UP+1;gP[0X0007]=A3[0x0002];A3=Re[UP];UP=UP+0X1;gP[8]=A3[0X2];UP=UP+1;NP=M6+5-0X1;(gP[M6])(I(gP,M6+0x001,NP));do NP=M6-1;end;UP=UP+1;UP=UP+1;A3=Re[UP];UP=UP+0X1;(gP)[0X0004]=tP[A3[2]];do A3=Re[UP];end;UP=UP+0X0001;(gP)[0x004]=gP[0x4]+A3[5];do A3=Re[UP];end;UP=UP+0X1;(tP)[A3[2]]=gP[0X004];A3=Re[UP];UP=UP+0X1;do UP=A3[0X6];end;end;end;else if Q3==0x019 then(gP)[A3[7]]=G(gP[A3[6]],gP[A3[0X0001]]);else UP=A3[6];end;end;end;end;else if Q3>=16 then do if Q3>=17 then do if Q3==18 then(gP)[A3[7]]=A3[0X2];else do(gP)[2]=tP[A3[0X2]];end;do UP=UP+1;end;UP=UP+1;A3=Re[UP];UP=UP+1;gP[2]=gP[2][A3[0X0005]];A3=Re[UP];UP=UP+1;do if not(not gP[2])then else UP=A3[0X6];end;end;end;end;else for d0=A3[0X07],A3[6]do gP[d0]=nil;end;end;end;else do if not(Q3<0Xe)then if Q3==0x000f then gP[0X4]=tP[A3[2]];UP=UP+1;UP=UP+0X01;A3=Re[UP];UP=UP+1;gP[5]=A3[0X2];local Sn=0X00004;UP=UP+1;gP[0X06]=true;UP=UP+1;do gP[Sn]=gP[Sn](gP[Sn+0X01],gP[Sn+0X2]);end;NP=Sn;do A3=Re[UP];end;do UP=UP+0x1;end;do if gP[4]then UP=A3[6];end;end;else gP[0X2]=tP[A3[0X00002]];A3=Re[UP];UP=UP+0x1;gP[2]=gP[0X2][A3[5]];A3=Re[UP];UP=UP+0X1;do if not(gP[2])then else UP=A3[6];end;end;end;else gP[0X4]=tP[A3[0X2]];UP=UP+1;do UP=UP+0X1;end;A3=Re[UP];local yJ=(0X4);do UP=UP+0x1;end;do(gP)[5]=A3[0X2];end;do UP=UP+1;end;gP[yJ](gP[yJ+1]);NP=yJ-1;UP=UP+0X1;UP=UP+0X001;A3=Re[UP];do UP=UP+1;end;(gP)[4]=tP[A3[0X2]];UP=UP+0X1;UP=UP+0X1;do A3=Re[UP];end;UP=UP+1;do(gP[0X004])[A3[0X2]]=A3[5];end;A3=Re[UP];UP=UP+0X1;(gP)[4]=tP[A3[0X2]];UP=UP+1;NP=4;(gP[NP])();NP=NP-1;do A3=Re[UP];end;UP=UP+1;gP[0X4]=tP[A3[2]];do A3=Re[UP];end;UP=UP+1;do gP[5]=tP[A3[0x002]];end;UP=UP+0x1;yJ=4;gP[yJ](gP[yJ+0X1]);NP=yJ-1;do UP=UP+1;end;UP=UP+0X01;A3=Re[UP];UP=UP+1;UP=A3[6];end;end;end;end;end;end;end;else if Q3<0X027 then if not(Q3>=32)then if Q3>=0x1d then if Q3>=30 then if Q3~=0X1F then gP[2]=tP[A3[2]];UP=UP+1;do UP=UP+1;end;A3=Re[UP];do UP=UP+1;end;do gP[2]=gP[0X2][A3[5]];end;UP=UP+1;UP=UP+0X0001;do A3=Re[UP];end;do UP=UP+1;end;if not(gP[0x2])then else UP=A3[0X06];end;else gP[2]=tP[A3[2]];A3=Re[UP];UP=UP+1;(gP)[0x2]=gP[2][A3[0X5]];UP=UP+1;UP=UP+0X1;A3=Re[UP];UP=UP+1;do if gP[0X2]then UP=A3[0X6];end;end;end;else local G_,i_=A3[7],(A3[0X6]);if i_~=0X0 then NP=G_+i_-1;end;local A_=(A3[1]);local K_,V_=nil,(nil);do if i_==1 then do K_,V_=rC(gP[G_]());end;else do K_,V_=rC(gP[G_](I(gP,G_+0X1,NP)));end;end;end;if A_==1 then NP=G_-0x1;else if A_==0x0000 then K_=K_+G_-1;NP=K_;else K_=G_+A_-2;NP=K_+0x1;end;local Y8=0;do for hc=G_,K_ do Y8=Y8+1;(gP)[hc]=V_[Y8];end;end;end;end;else do if not(Q3<27)then do if Q3==28 then for qu=2,0X03 do(gP)[qu]=nil;end;A3=Re[UP];UP=UP+1;(gP)[0x4]=tP[A3[0X002]];UP=UP+1;UP=UP+1;A3=Re[UP];UP=UP+1;(gP)[0X4]=gP[0X4][A3[5]];do A3=Re[UP];end;UP=UP+1;if gP[4]then do UP=A3[6];end;end;else do(gP)[0X0002]=tP[A3[0X2]];end;do UP=UP+0x1;end;do UP=UP+0X001;end;A3=Re[UP];do UP=UP+0X1;end;do if not(gP[0X02])then else UP=A3[6];end;end;end;end;else local oX=(je[A3[6]]);local ZX=nil;local gX=oX[0X8];local LX=#gX;if LX>0X0 then do ZX={};end;for Wl=0X00001,LX do local fl=gX[Wl];do if fl[1]~=0 then ZX[Wl-0X1]=ve[fl[0X2]];else(ZX)[Wl-0x0001]={gP,fl[0X2]};end;end;end;(A)(De,ZX);end;gP[A3[7]]=NC(ZX,tP,oX);end;end;end;else if not(Q3<0X23)then if Q3>=0X25 then do if Q3==0X26 then(gP)[2]=tP[A3[0X2]];do UP=UP+1;end;NP=2;(gP[NP])();NP=NP-1;do UP=UP+0X00001;end;UP=UP+0X1;A3=Re[UP];UP=UP+0x1;gP[2]=tP[A3[0X2]];UP=UP+0x001;UP=UP+1;do A3=Re[UP];end;UP=UP+0X1;do(gP[2])[A3[2]]=A3[0X5];end;UP=UP+0X01;do repeat local gw,sw=De,gP;do if not(#gw>0)then else local YC=({});for ag,Lg in D,gw do for sH,jH in D,Lg do do if not(jH[0X1]==sw and jH[2]>=0x0)then else local zI=jH[2];if not YC[zI]then do(YC)[zI]={sw[zI]};end;end;jH[0X01]=YC[zI];jH[2]=1;end;end;end;end;end;end;until true;end;return;else do gP[0x4]=tP[A3[2]];end;local Qa=4;UP=UP+1;UP=UP+0x001;UP=UP+0X0001;(gP)[0X00005]=gP[0X3];UP=UP+1;do(gP)[Qa]=gP[Qa](gP[Qa+1]);end;do NP=Qa;end;UP=UP+1;do UP=UP+0x1;end;do A3=Re[UP];end;UP=UP+1;if gP[4]~=A3[0X5]then do UP=A3[7];end;end;end;end;else if Q3~=36 then do gP[A3[7]]=tP[A3[0x00002]];end;else do(gP)[A3[0X7]]=true;end;end;end;else if not(Q3<33)then if Q3~=34 then gP[A3[0X07]]=gP[A3[0X6]];else gP[0X00002]=tP[A3[0X2]];UP=UP+1;UP=UP+1;A3=Re[UP];UP=UP+0X1;(gP)[0X00002]=gP[0X2][A3[5]];A3=Re[UP];UP=UP+1;do if not gP[0X0002]then do UP=A3[6];end;end;end;end;else(gP)[0x2]=tP[A3[0X02]];UP=UP+0x01;UP=UP+1;do A3=Re[UP];end;UP=UP+1;(gP)[0X2]=gP[2][A3[0x05]];do UP=UP+1;end;UP=UP+1;A3=Re[UP];UP=UP+0X001;if gP[0x2]then UP=A3[6];end;end;end;end;else if Q3<0X2D then if Q3>=0X2A then if Q3<43 then gP[A3[0x07]]=gP[A3[6]]*gP[A3[1]];else if Q3~=0X2C then gP[0x4]=true;A3=Re[UP];UP=UP+0X1;tP[A3[0X2]]=gP[0x0004];A3=Re[UP];UP=UP+0X01;UP=A3[6];else(gP)[A3[7]]={I({},1,A3[0X006])};end;end;else if Q3>=40 then if Q3~=0X0029 then do(gP)[A3[7]]=gP[A3[0X0006]]<gP[A3[0X1]];end;else(gP)[4]=tP[A3[2]];local Rf=(0X4);do UP=UP+1;end;UP=UP+0X00001;do A3=Re[UP];end;UP=UP+0X1;gP[0X5]=A3[2];do A3=Re[UP];end;do UP=UP+0X1;end;gP[6]=A3[2];UP=UP+0X1;(gP[Rf])(gP[Rf+0X1],gP[Rf+0X2]);NP=Rf-0x0001;UP=UP+1;UP=UP+0X00001;A3=Re[UP];UP=UP+0X1;gP[4]=tP[A3[2]];A3=Re[UP];UP=UP+1;gP[0X05]=A3[2];do UP=UP+0X1;end;do Rf=0X4;end;do gP[Rf]=gP[Rf](gP[Rf+1]);end;do NP=Rf;end;A3=Re[UP];UP=UP+0x01;do if gP[4]~=A3[0X00005]then else do UP=A3[7];end;end;end;end;else repeat local Ua,da=De,gP;do if not(#Ua>0)then else local dh=({});for Pi,xi in D,Ua do for D6,s6 in D,xi do if not(s6[1]==da and s6[0x00002]>=0)then else local ha=s6[0X2];do if not dh[ha]then do(dh)[ha]={da[ha]};end;end;end;s6[0X00001]=dh[ha];(s6)[0X2]=1;end;end;end;end;end;until true;return;end;end;else do if not(Q3>=0X30)then if Q3<0X2e then gP[2]=tP[A3[2]];A3=Re[UP];UP=UP+0X1;do(gP)[0x2]=gP[2][A3[0X05]];end;UP=UP+0x001;UP=UP+1;A3=Re[UP];UP=UP+1;if not(gP[2])then else UP=A3[6];end;else if Q3==0X2f then if gP[A3[6]]==A3[0X0005]then UP=A3[7];end;else end;end;else if Q3<0x0032 then if Q3==49 then do if not(A3[2]<=gP[A3[0X00001]])then UP=A3[7];end;end;else(gP)[2]=tP[A3[2]];do UP=UP+1;end;UP=UP+1;A3=Re[UP];UP=UP+1;if not(not gP[0X2])then else UP=A3[0x6];end;end;else if Q3~=0X33 then(gP)[0X2]=tP[A3[0X2]];do A3=Re[UP];end;do UP=UP+0X001;end;gP[2]=gP[0X02][A3[0X005]];A3=Re[UP];UP=UP+0X001;do if not(gP[2])then else do UP=A3[0X6];end;end;end;else gP[0X2]=tP[A3[2]];UP=UP+1;do UP=UP+0X01;end;A3=Re[UP];do UP=UP+1;end;(gP)[0X2]=gP[2][A3[0X05]];A3=Re[UP];UP=UP+0x0001;do if gP[2]then UP=A3[6];end;end;end;end;end;end;end;end;end;end;end;end);if ZP then do if SP then if WP~=0X1 then do return gP[wP](I(gP,wP+0X1,NP));end;else do return gP[wP]();end;end;elseif wP then do return I(gP,wP,WP);end;end;end;else if f(SP)=='\string'then if not(e(SP,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(e(SP,"^.-:%d+: "))then b(SP,0);else b("Luraph Script:"..(Ae[UP-0X0001]or"(internal)")..'\:\ '..r(SP),0X0);end;else(b)(SP,0);end;end;end;end;else if me~=0XAa then fe=function(...)local Yg,vg=0,{};local ug=({[0X2]=vg,[1]=ce});local Jg=m();local tg,Og=rC(...);tg=tg-0X1;do for Pn=0,tg do if he>Pn then(vg)[Pn]=Og[Pn+0x001];else do break;end;end;end;end;local Dg=0X1;local Ig=((Jg==F and Le or Jg));if not ge then do Og=nil;end;elseif xe then vg[he]={n=tg>=he and tg-he+1 or 0x0,I(Og,he+0x1,tg+1)};end;if Ig==Jg then else(i)(fe,Ig);end;local Qg,Zg,Ng,Fg=j(function()while true do local Af=Re[Dg];local Of=(Af[0X4]);Dg=Dg+1;do if Of>=0X8 then if Of>=0xc then if Of<14 then do if Of~=0X00D then(vg)[Af[7]]=k(vg[Af[0X6]],vg[Af[0X1]]);else if not(vg[Af[6]]<=vg[Af[0X1]])then else Dg=Af[7];end;end;end;else if not(Of>=15)then local GI=(Af[0X00007]);local NI=Af[0X00006];do Yg=GI+NI-1;end;repeat local Xo,Mo=De,(vg);if#Xo>0X0 then local nh={};for Rw,Ww in D,Xo do for M_,t_ in D,Ww do do if not(t_[0X1]==Mo and t_[2]>=0)then else local Xv=(t_[0X00002]);if not nh[Xv]then nh[Xv]={Mo[Xv]};end;t_[0x1]=nh[Xv];t_[2]=1;end;end;end;end;end;until true;return true,GI,NI;else if Of~=0X000010 then vg[Af[7]]={I({},0X00001,Af[6])};else local S6=(je[Af[0X6]]);local A6=(S6[8]);local a6=(nil);local j6=(#A6);if j6>0 then a6={};for HP=0X1,j6 do local nP=A6[HP];if nP[0X1]==0X00 then do(a6)[HP-1]={vg,nP[2]};end;else a6[HP-0x1]=ve[nP[0X02]];end;end;A(De,a6);end;do vg[Af[7]]=NC(a6,Ig,S6);end;end;end;end;else do if not(Of>=10)then if Of~=0x9 then vg[Af[7]]=vg[Af[6]]~=vg[Af[1]];else(vg)[Af[0X0007]]=vg[Af[0X006]]-vg[Af[0X00001]];end;else if Of==11 then(vg)[Af[7]]=Ig[Af[2]];else end;end;end;end;else if not(Of>=0X004)then if not(Of<2)then if Of~=0x003 then local tA,zA=Af[0X7],(Af[6]);if zA~=0 then Yg=tA+zA-1;end;local xA=(Af[0X00001]);local fA,mA=nil,nil;if zA==1 then fA,mA=rC(vg[tA]());else fA,mA=rC(vg[tA](I(vg,tA+1,Yg)));end;if xA~=1 then if xA==0 then fA=fA+tA-0X01;do Yg=fA;end;else fA=tA+xA-2;do Yg=fA+0X1;end;end;local eD=(0X0);for zM=tA,fA do eD=eD+1;(vg)[zM]=mA[eD];end;else Yg=tA-0x01;end;else Dg=Af[6];end;else if Of~=0X01 then repeat local k5,q5=De,vg;if#k5>0 then local jo=({});for fW,HW in D,k5 do for Ni,mi in D,HW do if not(mi[1]==q5 and mi[2]>=0)then else local ST=(mi[2]);if not(not jo[ST])then else(jo)[ST]={q5[ST]};end;mi[1]=jo[ST];mi[2]=0X0001;end;end;end;end;until true;return;else(vg)[Af[0X007]]=Af[0X02];end;end;else if Of<6 then do if Of==5 then(vg)[0X0]=Ig[Af[2]];do Af=Re[Dg];end;local Wz=(0);do Dg=Dg+0X0001;end;vg[1]=Af[2];Dg=Dg+0x1;vg[Wz]=vg[Wz](vg[Wz+1]);Yg=Wz;do Dg=Dg+1;end;local Zz=(ve[0X000]);(vg)[0X0001]=Zz[1][Zz[0X2]];Af=Re[Dg];Dg=Dg+1;vg[0X0001]=vg[0X00001][Af[0X5]];Dg=Dg+0X1;do Dg=Dg+1;end;Dg=Dg+1;vg[0X02]=vg[0];Dg=Dg+1;do Wz=1;end;vg[Wz]=vg[Wz](vg[Wz+1]);Yg=Wz;Dg=Dg+0X001;Dg=Dg+0X01;do Af=Re[Dg];end;Dg=Dg+0X00001;if not(not vg[0x1])then else Dg=Af[0X0006];end;else local UE=(ve[0X00]);(vg)[0X1]=UE[0X001][UE[0x2]];Dg=Dg+1;Dg=Dg+1;do Af=Re[Dg];end;Dg=Dg+1;vg[1]=vg[1][Af[5]];do Dg=Dg+0x0001;end;do Dg=Dg+1;end;Dg=Dg+0X001;(vg)[0X2]=vg[0];local IE=1;Dg=Dg+1;UE=ve[1];do vg[3]=UE[0x1][UE[0x2]];end;Dg=Dg+0X1;Dg=Dg+0X01;Dg=Dg+1;vg[IE](vg[IE+1],vg[IE+2]);Yg=IE-1;Dg=Dg+1;Dg=Dg+0X001;Dg=Dg+1;UE=ve[1];(vg)[1]=UE[1][UE[2]];Dg=Dg+1;local PE=vg[0X1];Dg=Dg+0X1;Af=Re[Dg];Dg=Dg+1;do IE=1;end;vg[IE+0x01]=PE;vg[IE]=PE[Af[5]];Dg=Dg+1;IE=1;(vg[IE])(vg[IE+0X00001]);Yg=IE-1;do Dg=Dg+0X1;end;do Dg=Dg+1;end;Af=Re[Dg];Dg=Dg+1;do Dg=Af[0X6];end;end;end;else if Of==7 then for Ep=Af[7],Af[6]do(vg)[Ep]=nil;end;else local Kd=Af[6];local Dd=vg[Kd];do for Wp=Kd+0X1,Af[0X0001]do Dd=Dd..vg[Wp];end;end;(vg)[Af[7]]=Dd;end;end;end;end;end;end;end);if Qg then if Zg then if Fg~=0X01 then return vg[Ng](I(vg,Ng+1,Yg));else return vg[Ng]();end;elseif not(Ng)then else do return I(vg,Ng,Fg);end;end;else if f(Zg)=='\115t\114\in\g'then if e(Zg,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(Zg,"\^\046\045\058\%\100+\058\032")then(b)("Luraph Script:"..(Ae[Dg-0X1]or'\(i\110t\101r\110al\)')..":\ "..r(Zg),0);else(b)(Zg,0x0);end;else(b)(Zg,0X0);end;end;end;else fe=function(...)local UM=(0X1);local jM={};local aM={[1]=ce,[0X2]=jM};local iM=m();local DM,QM=rC(...);local tM=(iM==F and Le or iM);DM=DM-0X1;for xb=0,DM do do if not(he>xb)then break;else(jM)[xb]=QM[xb+1];end;end;end;local YM=(0);if not ge then QM=nil;elseif not(xe)then else jM[he]={n=DM>=he and DM-he+1 or 0X00000,I(QM,he+0X0001,DM+1)};end;if tM==iM then else i(fe,tM);end;local FM,zM,RM,TM=j(function()while true do local ON=(Re[UM]);local cN=(ON[0X04]);UM=UM+0X01;do if cN<8 then if not(cN>=4)then if not(cN<0x00002)then if cN==3 then jM[ON[0X007]]=-jM[ON[6]];else for qp=ON[7],ON[0X00006]do do jM[qp]=nil;end;end;end;else if cN==1 then jM[ON[0X7]]=jM[ON[6]]<=jM[ON[1]];else do jM[ON[0X07]]=tM[ON[0X0002]];end;end;end;else if cN>=0X006 then if cN==7 then else(jM)[ON[7]]={I({},1,ON[6])};end;else if cN~=5 then(jM)[ON[7]]=jM[ON[0X6]]==jM[ON[0X1]];else jM[ON[0X7]]=ON[2];end;end;end;else if not(cN<12)then if cN>=14 then if cN>=0XF then do if cN~=0x10 then(jM)[ON[0X7]]=O(jM[ON[6]],jM[ON[1]]);else repeat local SO,FO=De,(jM);if#SO>0X00 then local Xg={};for iW,eW in D,SO do for CH,NH in D,eW do if not(NH[0X1]==FO and NH[0X00002]>=0x0000)then else local MF=NH[0X2];if not Xg[MF]then Xg[MF]={FO[MF]};end;do NH[1]=Xg[MF];end;(NH)[0X002]=1;end;end;end;end;until true;return;end;end;else local az=je[ON[0X006]];local Nz,uz=az[8],nil;local Zz=(#Nz);if not(Zz>0X0000)then else uz={};for Is=0X1,Zz do local Ts=Nz[Is];if Ts[1]~=0 then(uz)[Is-1]=ve[Ts[0X00002]];else(uz)[Is-1]={jM,Ts[0X2]};end;end;(A)(De,uz);end;jM[ON[0x7]]=NC(uz,tM,az);end;else if cN==13 then(jM)[0]=tM[ON[2]];UM=UM+0X1;UM=UM+1;ON=Re[UM];UM=UM+0X1;jM[0X1]=ON[2];local wi,si=0,(0X00);do UM=UM+1;end;jM[si]=jM[si](jM[si+1]);YM=si;UM=UM+0x00001;UM=UM+0x0001;UM=UM+0X00001;(jM)[0]=not jM[0];UM=UM+1;repeat local Mj,Lj=De,(jM);if not(#Mj>0X0)then else local dm=({});do for wH,AH in D,Mj do for xN,rN in D,AH do if not(rN[0X001]==Lj and rN[2]>=0)then else local Bi=rN[2];do if not dm[Bi]then dm[Bi]={Lj[Bi]};end;end;rN[0X1]=dm[Bi];rN[0X2]=0X1;end;end;end;end;end;until true;return false,wi,wi;else do UM=ON[6];end;end;end;else do if cN<0X000A then if cN==0X009 then jM[ON[7]]=jM[ON[0X6]]~=jM[ON[1]];else jM[ON[0X007]]=#jM[ON[0X6]];end;else do if cN==11 then do(jM)[ON[7]]=jM[ON[6]]-jM[ON[1]];end;else do(jM)[ON[0x7]]=u(jM[ON[6]],jM[ON[0X00001]]);end;end;end;end;end;end;end;end;end;end);if FM then do if zM then do if TM~=0X01 then do return jM[RM](I(jM,RM+0X1,YM));end;else do return jM[RM]();end;end;end;elseif not(RM)then else return I(jM,RM,TM);end;end;else do if f(zM)=="string"then if e(zM,"\097t\116\e\109\pt\032\116\o\ \y\105\101\l\d\ \097\c\114oss\ \109\eta\m\101t\104\od/\067%\-ca\ll\032\098\ou\110\100\097r\y")then do return coroutine.yield();end;end;if e(zM,'\^.\045\:%\100\043\:\ ')then b("Luraph Script:"..(Ae[UM-0X1]or'(i\110\116\101r\110a\l\)')..":\ "..r(zM),0x0);else b(zM,0X00);end;else b(zM,0);end;end;end;end;end;end;end;end;end;else if not(me>=0X0000B7)then if me>=180 then if not(me>=0Xb5)then fe=function(...)local Au=({});local Bu=(0X001);local Du={[0X2]=Au,[1]=ce};local ou=m();local Iu,fu=(ou==F and Le or ou),(0X0);local xu,mu=rC(...);xu=xu-0X00001;for VF=0x00,xu do if he>VF then Au[VF]=mu[VF+1];else break;end;end;if not ge then mu=nil;elseif not(xe)then else(Au)[he]={n=xu>=he and xu-he+0X001 or 0,I(mu,he+1,xu+1)};end;if Iu~=ou then i(fe,Iu);end;local Qu,lu,wu,iu=j(function()while true do local OS=Re[Bu];local NS=(OS[4]);Bu=Bu+1;if NS<12 then if not(NS<0X6)then do if not(NS<0X9)then if not(NS<0XA)then do if NS==0x00b then do for uZ=OS[0X7],OS[0x00006]do Au[uZ]=nil;end;end;else(Au)[OS[7]]=mu[he+1];end;end;else(Au)[0]=Iu[OS[2]];local DP=0;Bu=Bu+0X00001;Bu=Bu+0X1;OS=Re[Bu];Bu=Bu+0X1;do(Au)[0X1]=OS[0X2];end;do Bu=Bu+0x1;end;(Au)[DP]=Au[DP](Au[DP+1]);do fu=DP;end;OS=Re[Bu];do Bu=Bu+1;end;if not Au[0]then do Bu=OS[6];end;end;end;else if NS<7 then(Au)[OS[0x7]]=Au[OS[0x6]]*Au[OS[0X0001]];else do if NS~=8 then(Au)[0]=Iu[OS[2]];local Nm=0x00000;do Bu=Bu+1;end;do Bu=Bu+0X1;end;local lm=(nil);do OS=Re[Bu];end;Bu=Bu+0X00001;local Sm=(je[OS[0X6]]);local Em=Sm[8];local gm=(#Em);do if gm>0X0 then lm={};for MY=0X1,gm do local HY=(Em[MY]);if HY[1]==0 then(lm)[MY-1]={Au,HY[0X2]};else do lm[MY-0X0001]=ve[HY[2]];end;end;end;A(De,lm);end;end;(Au)[1]=NC(lm,Iu,Sm);Bu=Bu+1;(Au[Nm])(Au[Nm+0X00001]);do fu=Nm-1;end;OS=Re[Bu];Bu=Bu+0X1;(Au)[0]=Iu[OS[0X002]];OS=Re[Bu];Bu=Bu+1;do(Au)[1]=OS[0X002];end;Bu=Bu+0x1;Nm=0;do Au[Nm]=Au[Nm](Au[Nm+0x0001]);end;fu=Nm;do Bu=Bu+1;end;Bu=Bu+0X01;do OS=Re[Bu];end;Bu=Bu+1;if not(not Au[0X0])then else Bu=OS[0X6];end;else repeat local AW,zW=De,(Au);if#AW>0 then local Fi=({});for lD,VD in D,AW do for ZT,sT in D,VD do do if not(sT[0X001]==zW and sT[2]>=0)then else local Rg=(sT[2]);if not Fi[Rg]then Fi[Rg]={zW[Rg]};end;(sT)[1]=Fi[Rg];sT[2]=1;end;end;end;end;end;until true;return;end;end;end;end;end;else do if NS<3 then do if not(NS>=1)then Bu=OS[0X006];else do if NS==0X2 then else local a0=(je[OS[6]]);local H0=(a0[0X8]);local M0=nil;local d0=#H0;if not(d0>0x0)then else M0={};do for xg=1,d0 do local Fg=(H0[xg]);do if Fg[0X00001]==0X0 then do M0[xg-1]={Au,Fg[0X2]};end;else(M0)[xg-1]=ve[Fg[0x2]];end;end;end;end;A(De,M0);end;Au[OS[7]]=NC(M0,Iu,a0);end;end;end;end;else if not(NS<4)then if NS~=0X5 then local n_=0;local i_=ve[0];Au[0]=i_[0X0001][i_[2]];Bu=Bu+1;Bu=Bu+1;do OS=Re[Bu];end;Bu=Bu+0x1;local q_=(Au[0]);(Au)[n_+1]=q_;do Au[n_]=q_[OS[0x5]];end;Bu=Bu+1;n_=0;(Au)[n_]=Au[n_](Au[n_+1]);fu=n_;do Bu=Bu+1;end;Bu=Bu+0X1;OS=Re[Bu];do Bu=Bu+1;end;if not(not Au[0])then else do Bu=OS[6];end;end;else(Au)[0x0]=Iu[OS[0x2]];do Bu=Bu+0X1;end;do Bu=Bu+1;end;OS=Re[Bu];local xK=0;do Bu=Bu+0X1;end;do Au[0X0]=Au[0X0][OS[5]];end;Bu=Bu+1;Bu=Bu+1;OS=Re[Bu];do Bu=Bu+1;end;(Au)[1]=OS[2];Bu=Bu+1;Au[xK]=Au[xK](Au[xK+0X1]);fu=xK;do Bu=Bu+0X1;end;do Bu=Bu+0X0001;end;OS=Re[Bu];Bu=Bu+0X001;if not Au[0]then do Bu=OS[0X6];end;end;end;else(Au)[OS[7]]=OS[2];end;end;end;end;else if not(NS>=0X12)then if not(NS>=0x0000f)then do if NS<0X00d then(Au)[0]=Iu[OS[0X2]];do Bu=Bu+0X1;end;Bu=Bu+0X1;OS=Re[Bu];Bu=Bu+1;Au[0]=Au[0][OS[5]];OS=Re[Bu];Bu=Bu+1;if not Au[0]then do Bu=OS[0X6];end;end;else if NS~=14 then do(Au)[0X0]=Iu[OS[0X2]];end;Bu=Bu+1;Bu=Bu+0X001;do OS=Re[Bu];end;Bu=Bu+0X1;(Au)[0]=Au[0x0000][OS[5]];Bu=Bu+0x1;do Bu=Bu+1;end;do OS=Re[Bu];end;Bu=Bu+1;if not(not Au[0x0])then else do Bu=OS[0X6];end;end;else Au[OS[0X7]]=Au[OS[6]]^Au[OS[1]];end;end;end;else do if not(NS>=0x10)then Au[0x00]=Iu[OS[2]];Bu=Bu+0X1;Bu=Bu+1;Bu=Bu+0X001;fu=0X00;Au[fu]=Au[fu]();Bu=Bu+1;Bu=Bu+0x1;do OS=Re[Bu];end;Bu=Bu+0X001;if Au[0X00000]then do Bu=OS[0X006];end;end;else if NS~=0X11 then(Au)[0X0]=Iu[OS[0X0002]];Bu=Bu+1;do fu=0;end;do(Au)[fu]=Au[fu]();end;OS=Re[Bu];Bu=Bu+0X1;if not(Au[0X00]<OS[0x5])then else do Bu=OS[0X7];end;end;else do if not Au[OS[0x7]]then do Bu=OS[0X6];end;end;end;end;end;end;end;else do if NS<0X15 then if not(NS<0X13)then if NS==20 then do Au[OS[7]]=Iu[OS[2]];end;else Au[OS[0X00007]]={I({},0X1,OS[6])};end;else repeat local DP,BP=De,Au;if not(#DP>0)then else local J1={};for Ol,Il in D,DP do do for a2,k2 in D,Il do do if k2[0x1]==BP and k2[0X2]>=0X0 then local TS=(k2[0X02]);if not J1[TS]then J1[TS]={BP[TS]};end;(k2)[1]=J1[TS];k2[0X2]=1;end;end;end;end;end;end;until true;local st=OS[0x07];do return false,st,st+OS[6]-2;end;end;else if not(NS>=22)then(Au)[0X0]=Iu[OS[0X002]];Bu=Bu+1;Bu=Bu+0X01;do OS=Re[Bu];end;Bu=Bu+1;if not(Au[0x000])then else do Bu=OS[6];end;end;else if NS~=0X17 then(Au)[OS[0X7]]=O(Au[OS[6]],Au[OS[1]]);else local Rm,Qm=ve[0X0],0x0;do Au[0]=Rm[0X1][Rm[2]];end;OS=Re[Bu];Bu=Bu+1;local dm=Au[0X0];Au[Qm+0X1]=dm;Au[Qm]=dm[OS[0X005]];Bu=Bu+1;do Qm=0X0;end;(Au[Qm])(Au[Qm+0X0001]);fu=Qm-0x01;Bu=Bu+0X1;do repeat local ff,pf=De,(Au);if#ff>0 then local bd=({});for bG,lG in D,ff do for s8,L8 in D,lG do if not(L8[0x00001]==pf and L8[2]>=0X0000)then else local Xg=(L8[0X0002]);if not(not bd[Xg])then else(bd)[Xg]={pf[Xg]};end;do(L8)[1]=bd[Xg];end;L8[0x002]=1;end;end;end;end;until true;end;do return;end;end;end;end;end;end;end;end;end);if not(Qu)then if f(lu)=="\st\114\105ng"then if not(e(lu,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(e(lu,"\^\.-\058\%\d+\: "))then(b)(lu,0);else(b)('\Lur\097p\104 \S\c\114\ip\116\:'..(Ae[Bu-1]or"(internal)")..": "..r(lu),0);end;else(b)(lu,0);end;else if lu then if iu==0x1 then return Au[wu]();else do return Au[wu](I(Au,wu+0X1,fu));end;end;elseif not(wu)then else return I(Au,wu,iu);end;end;end;else do if me~=0XB6 then do fe=function(...)local Gh=(1);local hh,mh={},0X0;local wh=(m());local Ah,Th=rC(...);local Ph=({[0X2]=hh,[1]=ce});Ah=Ah-0X0001;local eh=(wh==F and Le or wh);do for NT=0X0,Ah do if not(he>NT)then break;else do(hh)[NT]=Th[NT+0X001];end;end;end;end;if not ge then Th=nil;elseif not(xe)then else(hh)[he]={n=Ah>=he and Ah-he+0X1 or 0X0,I(Th,he+1,Ah+0x0001)};end;do if eh==wh then else i(fe,eh);end;end;do while true do local mX=Re[Gh];do Gh=Gh+1;end;local TX=(mX[4]);return(function(H,S,...)local K=H[0];local R=K.Character;if R and R:FindFirstChild("Humanoid")then if R.Humanoid.Health>0 and R.Humanoid.RootPart then for N,J in pairs(WorldData.SafeZones:GetChildren())do if(R.HumanoidRootPart.Position-J.Position).magnitude<=J.Mesh.Scale.X/2 then return true;end;end;end;end;end)(hh,ve,...);end;end;end;end;else fe=function(...)local Em=0x1;local qm,Wm={},0x00000;local Vm=(m());local Bm=(Vm==F and Le or Vm);local Pm,wm=rC(...);local Fm=({[0X2]=qm,[1]=ce});Pm=Pm-0X001;for zm=0X0,Pm do if not(he>zm)then do break;end;else(qm)[zm]=wm[zm+0X1];end;end;if not ge then wm=nil;elseif not(xe)then else qm[he]={n=Pm>=he and Pm-he+1 or 0,I(wm,he+1,Pm+0X1)};end;if Bm~=Vm then(i)(fe,Bm);end;local hm,Am,Jm,vm=j(function()while true do local u4=(Re[Em]);local M4=(u4[4]);do Em=Em+1;end;if not(M4<18)then do if not(M4<27)then if not(M4<32)then if not(M4<34)then if M4<35 then local yi=ve[1];(qm)[0x04]=yi[1][yi[2]];Em=Em+1;local ai=0X4;Em=Em+0X1;u4=Re[Em];do Em=Em+0X00001;end;(qm)[4]=qm[0X4][u4[5]];Em=Em+0x1;qm[5]=qm[0x0003];Em=Em+0X001;yi=ve[0x0000];qm[0X6]=yi[0X01][yi[2]];local Fi=(nil);Em=Em+0x1;Em=Em+0X1;u4=Re[Em];do Em=Em+0X00001;end;local ki=je[u4[0X006]];local Wi=ki[0x8];local bi=#Wi;if not(bi>0X0000)then else Fi={};for iN=0X1,bi do local XN=Wi[iN];if XN[0X1]==0x0000 then(Fi)[iN-0X1]={qm,XN[0X0002]};else do Fi[iN-1]=ve[XN[2]];end;end;end;A(De,Fi);end;(qm)[7]=NC(Fi,Bm,ki);do Em=Em+0x1;end;do Wm=ai+0X0004-1;end;qm[ai](I(qm,ai+1,Wm));Wm=ai-1;Em=Em+1;yi=ve[0];(qm)[0X4]=yi[0X00001][yi[2]];local li=(qm[4]);u4=Re[Em];Em=Em+1;ai=4;(qm)[ai+1]=li;do(qm)[ai]=li[u4[5]];end;Em=Em+1;do ai=4;end;(qm[ai])(qm[ai+1]);Wm=ai-1;Em=Em+1;Em=Em+1;u4=Re[Em];do Em=Em+0X1;end;do qm[4]=Bm[u4[0X2]];end;Em=Em+0X00001;Em=Em+1;do u4=Re[Em];end;Em=Em+1;qm[0X00005]=u4[2];Em=Em+1;ai=0x04;qm[ai]=qm[ai](qm[ai+0X1]);Wm=ai;Em=Em+1;(qm)[0X00002]=qm[4];u4=Re[Em];do Em=Em+1;end;Em=u4[0x6];else if M4==36 then do Em=u4[6];end;else do(qm)[0x3]=qm[0X2][u4[0X5]];end;Em=Em+0x1;do Em=Em+0X1;end;u4=Re[Em];Em=Em+1;do if not qm[0X3]then Em=u4[0X06];end;end;end;end;else if M4==0X21 then do(qm)[0X1]=Bm[u4[2]];end;u4=Re[Em];Em=Em+1;do(qm)[0X00001]=qm[1][u4[0X5]];end;Em=Em+1;Em=Em+1;u4=Re[Em];Em=Em+0x1;do if not(not qm[1])then else Em=u4[6];end;end;else end;end;else do if M4<0X1D then if M4==0x1C then do repeat local U4,T4=De,(qm);if not(#U4>0x00000)then else local Sr=({});for e4,d4 in D,U4 do for Ye,Oe in D,d4 do do if Oe[0X001]==T4 and Oe[2]>=0X0 then local EE=(Oe[2]);if not(not Sr[EE])then else Sr[EE]={T4[EE]};end;do Oe[0X1]=Sr[EE];end;(Oe)[0X2]=1;end;end;end;end;end;until true;end;do return;end;else local Iu=(u4[0x7]);local Vu,Au=qm[Iu]();do if Vu then for jt=1,u4[1]do qm[Iu+jt]=Au[jt];end;do Em=u4[6];end;end;end;end;else if M4>=30 then do if M4==31 then if qm[u4[0X7]]then Em=u4[6];end;else(qm)[0x3]=Bm[u4[0X2]];do u4=Re[Em];end;Em=Em+0X1;(qm)[4]=u4[0x002];u4=Re[Em];do Em=Em+1;end;qm[0x5]=u4[0X2];do Em=Em+0X1;end;local oJ=(3);qm[oJ](qm[oJ+1],qm[oJ+0X002]);Wm=oJ-1;do u4=Re[Em];end;Em=Em+1;do(qm)[3]=Bm[u4[2]];end;Em=Em+1;Wm=3;(qm[Wm])();Wm=Wm-1;Em=Em+1;do Em=Em+1;end;do u4=Re[Em];end;Em=Em+1;(qm)[3]=Bm[u4[0X2]];do Em=Em+0x1;end;do Em=Em+1;end;u4=Re[Em];do Em=Em+0x01;end;(qm)[0x04]=u4[2];Em=Em+1;oJ=0X3;(qm)[oJ]=qm[oJ](qm[oJ+1]);Wm=oJ;u4=Re[Em];Em=Em+1;if not qm[3]then do Em=u4[0X6];end;end;end;end;else qm[u4[0X7]]=k(qm[u4[6]],qm[u4[1]]);end;end;end;end;else if M4>=0X0016 then do if not(M4<0x000018)then if not(M4<0X00019)then if M4==0X00001a then do if not qm[u4[0X7]]then Em=u4[0X00006];end;end;else do qm[2]=Bm[u4[0x002]];end;u4=Re[Em];Em=Em+1;(qm)[3]=u4[2];local hK=(2);Em=Em+0X0001;qm[hK]=qm[hK](qm[hK+1]);Wm=hK;Em=Em+1;Em=Em+0x1;u4=Re[Em];do Em=Em+1;end;do if not qm[0X02]then Em=u4[6];end;end;end;else(qm)[u4[7]]=-qm[u4[0x6]];end;else if M4==23 then for lv=u4[0X00007],u4[0X6]do qm[lv]=nil;end;else local Ef=ve[0];do qm[1]=Ef[0x1][Ef[2]];end;local uf=0X1;u4=Re[Em];Em=Em+1;local lf=qm[1];qm[uf+0X00001]=lf;qm[uf]=lf[u4[5]];Em=Em+1;uf=1;qm[uf](qm[uf+1]);do Wm=uf-0X1;end;Em=Em+0X01;Em=Em+0x001;do Em=Em+1;end;repeat local DY,sY=De,(qm);if#DY>0 then local Qm={};for kD,iD in D,DY do for YN,GN in D,iD do if GN[0x1]==sY and GN[0x00002]>=0X0 then local M2=(GN[2]);if not(not Qm[M2])then else Qm[M2]={sY[M2]};end;GN[1]=Qm[M2];GN[0x2]=1;end;end;end;end;until true;return;end;end;end;else if M4>=0X14 then do if M4==0X0015 then local K_=ve[0x1];(qm)[0X4]=K_[1][K_[2]];local w_=nil;Em=Em+0X1;do Em=Em+0x1;end;u4=Re[Em];do Em=Em+1;end;local Z_=0X00004;qm[0X04]=qm[4][u4[5]];do Em=Em+0x1;end;do qm[0x5]=qm[0X00003];end;Em=Em+1;do K_=ve[0X000];end;qm[0x006]=K_[0X1][K_[2]];do Em=Em+1;end;do Em=Em+0X1;end;u4=Re[Em];Em=Em+1;local X_=(je[u4[6]]);local V_=X_[0x8];local y_=#V_;if not(y_>0)then else w_={};for gy=1,y_ do local By=V_[gy];do if By[1]~=0x00000 then(w_)[gy-0X1]=ve[By[0x002]];else(w_)[gy-1]={qm,By[0X2]};end;end;end;A(De,w_);end;qm[0x0007]=NC(w_,Bm,X_);Em=Em+1;Wm=Z_+0X004-0X00001;(qm[Z_])(I(qm,Z_+0X1,Wm));Wm=Z_-1;Em=Em+0x1;K_=ve[0];qm[4]=K_[0x001][K_[0x2]];Em=Em+0X1;Em=Em+0x00001;u4=Re[Em];local O_=(qm[4]);Em=Em+0X0001;Z_=0X4;(qm)[Z_+0x0001]=O_;do qm[Z_]=O_[u4[0X0005]];end;Em=Em+1;do Z_=0X4;end;(qm[Z_])(qm[Z_+0x001]);Wm=Z_-1;Em=Em+1;Em=Em+0X0001;do u4=Re[Em];end;Em=Em+1;Em=u4[6];else qm[3]=Bm[u4[2]];do u4=Re[Em];end;local fI=(3);do Em=Em+1;end;qm[0X004]=u4[0X2];Em=Em+1;qm[fI]=qm[fI](qm[fI+0X001]);Wm=fI;do Em=Em+1;end;Em=Em+0x1;Em=Em+1;do(qm)[2]=qm[3];end;u4=Re[Em];Em=Em+0X01;do Em=u4[0X006];end;end;end;else if M4==19 then do qm[0x003]=qm[0x0002][u4[5]];end;do Em=Em+0X0001;end;do Em=Em+0x1;end;do u4=Re[Em];end;Em=Em+0X01;if not(qm[0X003])then else Em=u4[0X0006];end;else(qm)[0X3]=Bm[u4[0x0002]];Em=Em+1;do Em=Em+0X1;end;u4=Re[Em];Em=Em+1;local qx=ve[1];(qm)[0x00004]=u4[0x002];Em=Em+1;local Nx=(0X3);qm[Nx]=qm[Nx](qm[Nx+1]);Wm=Nx;Em=Em+1;do qm[0X4]=qx[0x1][qx[0X2]];end;Em=Em+0X1;do Em=Em+1;end;u4=Re[Em];Em=Em+0x01;qm[4]=qm[0x4][u4[0X5]];Em=Em+1;(qm)[5]=qm[3];Em=Em+0X0001;Nx=4;(qm)[Nx]=qm[Nx](qm[Nx+1]);Wm=Nx;Em=Em+0X001;Em=Em+0X001;u4=Re[Em];Em=Em+1;if not(not qm[0X4])then else do Em=u4[6];end;end;end;end;end;end;end;else do if M4>=0X09 then if M4>=13 then if M4>=0Xf then if M4>=16 then if M4~=17 then(Fm)[u4[6]]=qm[u4[0x7]];else do qm[0X03]=Bm[u4[2]];end;Em=Em+1;do Em=Em+0X1;end;do u4=Re[Em];end;Em=Em+1;(qm)[4]=u4[2];do u4=Re[Em];end;Em=Em+0x0001;(qm)[5]=u4[0X2];local mR=(3);Em=Em+1;(qm[mR])(qm[mR+1],qm[mR+0X02]);do Wm=mR-1;end;Em=Em+1;Em=Em+0X0001;u4=Re[Em];Em=Em+0X1;do(qm)[0x3]=Bm[u4[0x002]];end;Em=Em+0x01;Em=Em+1;Em=Em+1;Wm=3;(qm[Wm])();do Wm=Wm-0X0001;end;u4=Re[Em];Em=Em+1;(qm)[0x003]=Bm[u4[2]];do Em=Em+0X01;end;do Em=Em+1;end;u4=Re[Em];Em=Em+1;(qm)[4]=u4[2];Em=Em+1;mR=3;(qm)[mR]=qm[mR](qm[mR+0X0001]);Wm=mR;u4=Re[Em];Em=Em+0X1;if qm[0X3]then do Em=u4[0X06];end;end;end;else qm[0X003]=Bm[u4[2]];local Vy=0x3;do Em=Em+1;end;Em=Em+0X0001;local Oy=ve[0X01];u4=Re[Em];Em=Em+1;(qm)[0X4]=u4[0X2];Em=Em+1;qm[Vy]=qm[Vy](qm[Vy+1]);Wm=Vy;Em=Em+1;do Em=Em+0X1;end;do Em=Em+0X0001;end;qm[0X00004]=Oy[0x0001][Oy[0X2]];Em=Em+0X0001;do Em=Em+0X1;end;do u4=Re[Em];end;Em=Em+1;(qm)[0X4]=qm[0x4][u4[5]];Em=Em+0X001;(qm)[5]=qm[3];Em=Em+0x1;do Vy=4;end;(qm)[Vy]=qm[Vy](qm[Vy+1]);Wm=Vy;Em=Em+0x1;Em=Em+1;u4=Re[Em];do Em=Em+0X1;end;if not qm[0X004]then Em=u4[6];end;end;else if M4==14 then repeat local i8,X8,T8=De,qm,u4[0X7];if#i8>0 then local iI={};for uj,mj in D,i8 do for PD,VD in D,mj do if VD[1]==X8 and VD[2]>=T8 then local LL=VD[0x002];if not(not iI[LL])then else(iI)[LL]={X8[LL]};end;VD[1]=iI[LL];(VD)[0X2]=1;end;end;end;end;until true;else(qm)[0]=Bm[u4[0X2]];u4=Re[Em];local Fe=(0);do Em=Em+1;end;(qm)[1]=u4[0X2];Em=Em+0X1;qm[Fe]=qm[Fe](qm[Fe+1]);do Wm=Fe;end;u4=Re[Em];do Em=Em+0x1;end;(qm)[1]=qm[0][u4[0X5]];Em=Em+0x1;Em=Em+0X1;u4=Re[Em];Em=Em+0x1;if qm[0X01]then do Em=u4[6];end;end;end;end;else do if not(M4>=0xb)then do if M4~=0X0000a then qm[u4[0x0007]]=u4[2];else local j5=ve[0X0];do(qm)[3]=j5[1][j5[0X2]];end;do Em=Em+0x01;end;local o5=3;do Em=Em+1;end;u4=Re[Em];Em=Em+1;local u5=(qm[0X3]);(qm)[o5+1]=u5;qm[o5]=u5[u4[0X5]];Em=Em+1;o5=0X3;(qm[o5])(qm[o5+0x1]);do Wm=o5-1;end;Em=Em+0X1;do Em=Em+1;end;u4=Re[Em];Em=Em+0X1;do Em=u4[0X6];end;end;end;else do if M4~=0x0000C then local PW=(ve[0]);qm[0X00003]=PW[0x1][PW[2]];do Em=Em+1;end;do Em=Em+0X01;end;local cW=3;do u4=Re[Em];end;Em=Em+0X00001;local IW=(qm[0x3]);qm[cW+1]=IW;(qm)[cW]=IW[u4[0X5]];Em=Em+1;cW=3;(qm)[cW]=qm[cW](qm[cW+0X1]);do Wm=cW;end;do Em=Em+1;end;do Em=Em+0x001;end;u4=Re[Em];Em=Em+0X1;if not(qm[0X00003])then else Em=u4[0X0006];end;else local ny,My=je[u4[0x6]],(nil);local Ey=ny[0x8];local Ry=(#Ey);if Ry>0X0 then do My={};end;for O2=0X1,Ry do local E2=(Ey[O2]);do if E2[0X1]==0 then My[O2-0X1]={qm,E2[0X002]};else do My[O2-1]=ve[E2[2]];end;end;end;end;(A)(De,My);end;(qm)[u4[7]]=NC(My,Bm,ny);end;end;end;end;end;else do if not(M4>=0x4)then do if M4>=0X2 then do if M4==0x00003 then do(qm)[u4[7]]=qm[u4[6]][u4[5]];end;else qm[u4[0X7]]=Bm[u4[2]];end;end;else if M4==0X00001 then qm[3]=qm[0X2][u4[5]];do Em=Em+1;end;Em=Em+0X1;u4=Re[Em];do Em=Em+0X00001;end;do if qm[0X03]then Em=u4[0X6];end;end;else qm[0X4]=Bm[u4[0X2]];local E6=(4);Em=Em+1;Em=Em+0X00001;u4=Re[Em];Em=Em+0x00001;(qm)[5]=u4[0x2];do Em=Em+0X001;end;(qm[E6])(qm[E6+1]);Wm=E6-0X1;do Em=Em+0X01;end;Em=Em+1;u4=Re[Em];Em=Em+0X0001;Em=u4[6];end;end;end;else if M4<0x6 then do if M4~=0X5 then qm[0X1]=Bm[u4[0X02]];do u4=Re[Em];end;Em=Em+0X1;qm[1]=qm[0x00001][u4[0X0005]];Em=Em+0X1;Em=Em+1;u4=Re[Em];Em=Em+0X1;do(qm)[2]=u4[2];end;local Hx=(1);do Em=Em+0x1;end;(qm)[Hx]=qm[Hx](qm[Hx+0X1]);Wm=Hx;do u4=Re[Em];end;Em=Em+1;if not(not qm[0X001])then else Em=u4[0X0006];end;else(qm)[0X2]=Bm[u4[2]];Em=Em+1;do Em=Em+0X001;end;u4=Re[Em];Em=Em+1;local HO=0X0002;(qm)[0X3]=u4[0X2];do Em=Em+0X00001;end;(qm)[HO]=qm[HO](qm[HO+1]);Wm=HO;Em=Em+0x01;Em=Em+1;u4=Re[Em];Em=Em+0X1;qm[0X3]=qm[0x2][u4[5]];u4=Re[Em];Em=Em+0X1;do if not(not qm[3])then else Em=u4[0X6];end;end;end;end;else do if not(M4<7)then if M4~=0X08 then(qm)[1]=Bm[u4[0x2]];u4=Re[Em];Em=Em+1;qm[1]=qm[0X01][u4[0x5]];u4=Re[Em];Em=Em+1;(qm)[0X2]=Bm[u4[0x2]];Em=Em+1;Wm=0x02;qm[Wm]=qm[Wm]();Em=Em+1;Em=Em+0X0001;u4=Re[Em];Em=Em+1;do if qm[2]<u4[5]then Em=u4[0X7];end;end;else(qm)[u4[0X07]]={I({},1,u4[6])};end;else local Au,fu=u4[7],u4[6];do if fu==0x0000 then else do Wm=Au+fu-1;end;end;end;local ou,pu,hu=u4[0X1],nil,(nil);do if fu==0X1 then do pu,hu=rC(qm[Au]());end;else pu,hu=rC(qm[Au](I(qm,Au+1,Wm)));end;end;do if ou==0X1 then do Wm=Au-1;end;else if ou==0x000 then do pu=pu+Au-0x1;end;do Wm=pu;end;else pu=Au+ou-2;Wm=pu+1;end;local SC=(0X0);for lQ=Au,pu do SC=SC+1;do(qm)[lQ]=hu[SC];end;end;end;end;end;end;end;end;end;end;end;end;end;end);if not(hm)then if f(Am)~='\115tr\105n\g'then b(Am,0X000);else if e(Am,'\097tt\101\109\p\116\ \116\111\032y\105\e\108\100\ \097c\114\o\115\s\032\109e\116\097m\ethod\/C\037\-c\097l\l\ b\ou\110\d\097ry')then do return coroutine.yield();end;end;do if not(e(Am,"^.-:%d+: "))then b(Am,0);else b('\Lu\114\097p\104\ Sc\114\105\pt:'..(Ae[Em-0X01]or"(internal)")..'\:\032'..r(Am),0);end;end;end;else if Am then if vm==0X001 then return qm[Jm]();else return qm[Jm](I(qm,Jm+1,Wm));end;elseif not(Jm)then else return I(qm,Jm,vm);end;end;end;end;end;end;else if not(me<178)then if me~=0xb3 then fe=function(...)local d_,r_=1,{};local R_=m();local h_=({[1]=ce,[0X2]=r_});local l_,K_=rC(...);l_=l_-1;local Z_,G_=0x00000,(R_==F and Le or R_);for Rq=0,l_ do do if not(he>Rq)then do break;end;else(r_)[Rq]=K_[Rq+1];end;end;end;if not ge then K_=nil;elseif xe then(r_)[he]={n=l_>=he and l_-he+0x00001 or 0,I(K_,he+0X00001,l_+1)};end;if G_==R_ then else(i)(fe,G_);end;local Y_,S_,T_,u_=j(function()while true do local sP=(Re[d_]);local VP=sP[0X4];do d_=d_+1;end;if VP<0x8 then do if not(VP>=4)then if VP>=0X002 then if VP~=3 then do if not(r_[sP[6]]<r_[sP[0X00001]])then d_=sP[7];end;end;else r_[sP[7]]=r_[sP[6]]*r_[sP[0X00001]];end;else if VP~=1 then(r_)[sP[7]]={I({},1,sP[6])};else(r_)[sP[0X7]]=sP[0X2];end;end;else do if VP<0X06 then do if VP~=0x5 then do(r_)[sP[0X7]]=G_[sP[0X2]];end;else do(r_)[sP[7]]=G(r_[sP[6]],r_[sP[0X01]]);end;end;end;else if VP==7 then d_=sP[6];else end;end;end;end;end;else do if not(VP<0XC)then if VP>=0X0000E then do if VP==0X000F then repeat local qg,sg=De,(r_);if#qg>0 then local gh={};for vA,cA in D,qg do do for SU,qU in D,cA do do if not(qU[0x0001]==sg and qU[0x2]>=0X00000)then else local e3=qU[2];if not gh[e3]then(gh)[e3]={sg[e3]};end;(qU)[1]=gh[e3];(qU)[0X2]=0X1;end;end;end;end;end;end;until true;local aR=sP[0X00007];return false,aR,aR;else repeat local Wt,jt=De,r_;do if not(#Wt>0X000)then else local ad=({});for si,ji in D,Wt do do for sV,IV in D,ji do if IV[1]==jt and IV[0X00002]>=0 then local Jb=(IV[0X002]);if not(not ad[Jb])then else do ad[Jb]={jt[Jb]};end;end;(IV)[0X00001]=ad[Jb];IV[2]=0X1;end;end;end;end;end;end;until true;return;end;end;else do if VP~=13 then do(r_)[sP[0X7]]=r_[sP[0X6]]>r_[sP[1]];end;else(r_)[sP[0x7]]=h_[sP[0X6]];end;end;end;else if VP>=0Xa then if VP~=0X0B then local Ce=(je[sP[6]]);local le=(nil);local ye=Ce[0X0008];local We=#ye;do if not(We>0)then else le={};do for bz=1,We do local hz=ye[bz];if hz[1]~=0X0 then do(le)[bz-1]=ve[hz[0X2]];end;else le[bz-1]={r_,hz[2]};end;end;end;A(De,le);end;end;r_[sP[7]]=NC(le,G_,Ce);else local oN=(sP[0x7]);local sN=g(function(...)d();do for QY,jY,xY,hY,bY,KY,zY,CY,rY,uY in...do d(true,{QY,jY,xY,hY,bY,KY,zY,CY,rY,uY});end;end;end);(sN)(r_[oN],r_[oN+1],r_[oN+0X2]);do Z_=oN;end;r_[oN]=sN;do d_=sP[6];end;end;else if VP==0X009 then r_[0X0]=G_[sP[0x2]];d_=d_+0X1;do d_=d_+1;end;sP=Re[d_];local we=(0x0);d_=d_+1;local ye=r_[0X0];(r_)[we+0X001]=ye;r_[we]=ye[sP[5]];sP=Re[d_];d_=d_+1;(r_)[0X00002]=sP[2];d_=d_+0X1;we=0X00;r_[we]=r_[we](r_[we+0X01],r_[we+0x2]);Z_=we;do sP=Re[d_];end;d_=d_+1;d_=sP[6];else do(r_)[0]=G_[sP[0X2]];end;d_=d_+1;d_=d_+0X1;sP=Re[d_];d_=d_+1;if not(not r_[0])then else d_=sP[6];end;end;end;end;end;end;end;end);if not(Y_)then if f(S_)=="string"then do if e(S_,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;do if not(e(S_,'\094.\045\058\%\d+\058\ '))then b(S_,0);else(b)('\076\117r\097\p\104\032\S\c\114\105p\116\058'..(Ae[d_-1]or"(internal)")..": "..r(S_),0x000);end;end;else b(S_,0X0);end;else if S_ then if u_==1 then return r_[T_]();else return r_[T_](I(r_,T_+1,Z_));end;elseif not(T_)then else return I(r_,T_,u_);end;end;end;else fe=function(...)local es=(0X0);local Cs={};local ks=m();local ps=({[1]=ce,[0X2]=Cs});local rs,ys=rC(...);local us=((ks==F and Le or ks));do rs=rs-1;end;for HK=0,rs do if not(he>HK)then break;else(Cs)[HK]=ys[HK+0X01];end;end;if not ge then do ys=nil;end;elseif not(xe)then else do(Cs)[he]={n=rs>=he and rs-he+0x00001 or 0,I(ys,he+1,rs+0X1)};end;end;local Rs=(0X1);if us~=ks then(i)(fe,us);end;local bs,zs,qs,Ws=j(function()do while true do local op=(Re[Rs]);local ap=op[4];Rs=Rs+0X1;if not(ap>=0X00A)then if not(ap>=0X5)then if not(ap<2)then if not(ap<3)then if ap~=4 then(Cs)[op[7]]=Cs[op[6]]>=Cs[op[0X1]];else Cs[op[7]]={I({},1,op[0X6])};end;else end;else do if ap==0X1 then(Cs)[11]=nil;op=Re[Rs];Rs=Rs+1;us[op[2]]=Cs[0X000B];Rs=Rs+1;Cs[0x0B]=false;op=Re[Rs];Rs=Rs+0X1;(us)[op[2]]=Cs[0X0b];Rs=Rs+1;Cs[11]=false;op=Re[Rs];Rs=Rs+0X01;do(us)[op[0X0002]]=Cs[0X000B];end;Rs=Rs+0X1;do Cs[11]=false;end;op=Re[Rs];do Rs=Rs+0X1;end;(us)[op[0X2]]=Cs[0XB];Rs=Rs+1;repeat local IS,uS=De,Cs;if not(#IS>0x0)then else local ok=({});do for SD,TD in D,IS do for Ko,no in D,TD do if not(no[1]==uS and no[2]>=0X0000)then else local wN=no[2];if not(not ok[wN])then else do ok[wN]={uS[wN]};end;end;(no)[0X1]=ok[wN];(no)[0x2]=1;end;end;end;end;end;until true;return;else local TX=(je[op[6]]);local KX=nil;local zX=(TX[0X0008]);local FX=(#zX);if not(FX>0X000)then else KX={};for EF=1,FX do local dF=(zX[EF]);if dF[1]==0x0 then do(KX)[EF-1]={Cs,dF[0X002]};end;else KX[EF-1]=ve[dF[2]];end;end;(A)(De,KX);end;Cs[op[7]]=NC(KX,us,TX);end;end;end;else if not(ap>=7)then if ap~=0X6 then repeat local TN,gN,qN=De,Cs,(op[7]);if#TN>0x000 then local ao=({});for Yl,dl in D,TN do do for sU,FU in D,dl do if not(FU[0X01]==gN and FU[0X2]>=qN)then else local Dp=(FU[0X00002]);if not ao[Dp]then do ao[Dp]={gN[Dp]};end;end;(FU)[1]=ao[Dp];(FU)[2]=0x1;end;end;end;end;end;until true;else(Cs)[6]=us[op[0x2]];Rs=Rs+0X001;Rs=Rs+0X001;op=Re[Rs];Rs=Rs+1;do Cs[6]=Cs[6][op[5]];end;Rs=Rs+0x0001;do Rs=Rs+1;end;op=Re[Rs];do Rs=Rs+0X0001;end;if not Cs[0X6]then Rs=op[6];end;end;else if not(ap<0X008)then do if ap==0X9 then Cs[op[0X7]]=us[op[2]];else Cs[op[7]]=op[0x00002];end;end;else do(Cs)[6]=us[op[2]];end;op=Re[Rs];Rs=Rs+1;(Cs)[0X6]=Cs[0X6][op[0x0005]];Rs=Rs+0x1;local vh=0x03;do es=6;end;(Cs[es])();es=es-0X1;op=Re[Rs];Rs=Rs+1;Cs[0x6]=us[op[0X2]];Rs=Rs+0X1;es=0X0006;(Cs)[es]=Cs[es]();Rs=Rs+0X001;Rs=Rs+1;op=Re[Rs];Rs=Rs+0X001;(Cs)[0X0007]=Cs[0][op[0x05]];do Rs=Rs+0X1;end;Cs[0x8]=not Cs[0X001];op=Re[Rs];Rs=Rs+1;do Cs[9]=us[op[0X2]];end;Rs=Rs+0x1;Rs=Rs+0x1;local Th=9;op=Re[Rs];local Ih=je[op[0X06]];local fh=Ih[8];Rs=Rs+1;local Eh=(#fh);local mh=(nil);if not(Eh>0X00)then else mh={};for z3=0X1,Eh do local a3=fh[z3];if a3[0x1]==0X0000 then mh[z3-0x01]={Cs,a3[2]};else(mh)[z3-1]=ve[a3[2]];end;end;A(De,mh);end;Cs[10]=NC(mh,us,Ih);Rs=Rs+1;local Hh=2;if Hh==0X0 then else es=Th+Hh-0x1;end;local yh,Dh=nil,(nil);if Hh==0X1 then yh,Dh=rC(Cs[Th]());else yh,Dh=rC(Cs[Th](I(Cs,Th+1,es)));end;if vh~=1 then if vh==0x0 then yh=yh+Th-1;es=yh;else yh=Th+vh-0x00002;es=yh+0X001;end;local tU=0;for WV=Th,yh do tU=tU+1;Cs[WV]=Dh[tU];end;else es=Th-1;end;op=Re[Rs];Rs=Rs+1;do if not(Cs[9])then else Rs=op[6];end;end;end;end;end;else if not(ap>=0xF)then if ap>=12 then do if ap>=0X0d then if ap==0x0E then repeat local ee,ye=De,(Cs);if#ee>0X0 then local kp={};for M6,e6 in D,ee do for IH,tH in D,e6 do if not(tH[1]==ye and tH[2]>=0)then else local aZ=tH[0X0002];if not kp[aZ]then kp[aZ]={ye[aZ]};end;(tH)[0X01]=kp[aZ];tH[2]=0x1;end;end;end;end;until true;return;else(Cs)[op[0x7]]={};end;else ps[op[6]]=Cs[op[0X07]];end;end;else if ap==0X0B then do if not(Cs[op[0X007]])then else Rs=op[6];end;end;else Rs=op[0X00006];end;end;else do if ap>=0X00012 then if not(ap>=19)then do Cs[op[0x07]]=Cs[op[0X6]]+Cs[op[1]];end;else if ap==20 then if Cs[op[6]]~=Cs[op[1]]then Rs=op[0X7];end;else do Cs[op[7]]=Cs[op[6]];end;end;end;else do if ap<0x10 then do for Sj=op[7],op[6]do do Cs[Sj]=nil;end;end;end;else do if ap==17 then do if Cs[op[6]]<Cs[op[0X1]]then do Rs=op[0x00007];end;end;end;else(Cs)[0xB]=us[op[2]];do op=Re[Rs];end;Rs=Rs+1;(Cs)[12]=op[2];Rs=Rs+1;local O9=(0XB);(Cs)[13]=Cs[10];Rs=Rs+0X1;(Cs[O9])(Cs[O9+0X1],Cs[O9+2]);es=O9-0X1;do op=Re[Rs];end;Rs=Rs+0x1;Rs=op[6];end;end;end;end;end;end;end;end;end;end;end);if not(bs)then do if f(zs)=='\115tri\110\g'then if not(e(zs,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(e(zs,"^.-:%d+: "))then b(zs,0);else(b)("Luraph Script:"..(Ae[Rs-0X1]or"(internal)").."\058 "..r(zs),0);end;else b(zs,0);end;end;else do if zs then if Ws==1 then return Cs[qs]();else return Cs[qs](I(Cs,qs+1,es));end;elseif not(qs)then else return I(Cs,qs,Ws);end;end;end;end;end;else do fe=function(...)local Oo,Io=0x1,{};local no=m();local Co,co,So={[1]=ce,[0X2]=Io},0X0000,((no==F and Le or no));local Vo,yo=rC(...);do Vo=Vo-0X0001;end;do for bx=0,Vo do if not(he>bx)then do break;end;else Io[bx]=yo[bx+0X0001];end;end;end;if not ge then yo=nil;elseif xe then Io[he]={n=Vo>=he and Vo-he+1 or 0,I(yo,he+0X1,Vo+1)};end;do if So==no then else i(fe,So);end;end;local jo,ro,Po,uo=j(function()while true do local Uy=(Re[Oo]);local jy=Uy[0X00004];Oo=Oo+1;if jy<10 then if jy>=5 then if not(jy<7)then if not(jy<8)then if jy~=9 then else(Io)[Uy[7]]=So[Uy[2]];end;else(Io)[Uy[7]]=Io[Uy[0X06]];end;else do if jy~=0X6 then for bl=Uy[0X7],Uy[6]do do(Io)[bl]=nil;end;end;else(Io)[Uy[0X7]]=O(Io[Uy[6]],Io[Uy[1]]);end;end;end;else if not(jy>=0X2)then do if jy~=1 then local KQ=(Uy[7]);local yQ=g(function(...)(d)();do for y8,s8,r8,S8,W8,x8,q8,l8,F8,i8 in...do(d)(true,{y8,s8,r8,S8,W8,x8,q8,l8,F8,i8});end;end;end);(yQ)(Io[KQ],Io[KQ+0x1],Io[KQ+0x002]);do co=KQ;end;Io[KQ]=yQ;do Oo=Uy[0X06];end;else(Io)[Uy[7]]=Uy[2];end;end;else if jy<0X3 then do(Io)[Uy[7]]={I({},1,Uy[0x6])};end;else do if jy~=4 then(Io)[4]=#Io[0];Uy=Re[Oo];Oo=Oo+0X01;do(Io)[4]=Io[4]+Uy[0X0005];end;Oo=Oo+1;Io[0X5]=Io[3];do Oo=Oo+0x1;end;do Io[0][Io[0X4]]=Io[0x5];end;Uy=Re[Oo];do Oo=Oo+1;end;Oo=Uy[6];else repeat local mf,sf=De,(Io);if not(#mf>0)then else local KJ={};for ZM,HM in D,mf do for BB,KB in D,HM do do if not(KB[1]==sf and KB[0X02]>=0X00000)then else local kH=(KB[0X2]);if not KJ[kH]then do(KJ)[kH]={sf[kH]};end;end;(KB)[0X1]=KJ[kH];(KB)[2]=1;end;end;end;end;end;until true;local HS=(Uy[0X7]);return false,HS,HS+Uy[6]-2;end;end;end;end;end;else if jy>=0X0000F then if not(jy>=0x12)then if jy>=0X10 then if jy~=17 then local AA,LA=je[Uy[0X006]],(nil);local TA=(AA[8]);local MA=#TA;do if MA>0 then LA={};for X0=0x001,MA do local i0=(TA[X0]);if i0[1]~=0 then(LA)[X0-0X1]=ve[i0[0X2]];else(LA)[X0-0X1]={Io,i0[2]};end;end;A(De,LA);end;end;(Io)[Uy[0X7]]=NC(LA,So,AA);else local S1=Uy[0x7];local m1,A1,d1=Io[S1]();if m1 then(Io)[S1+0X1]=A1;Io[S1+2]=d1;Oo=Uy[6];end;end;else Oo=Uy[6];end;else do if not(jy>=19)then Io[4]=Io[0X3][Uy[0X5]];Oo=Oo+1;Oo=Oo+1;Uy=Re[Oo];local lz=(0x4);Oo=Oo+0X1;local Az=(Io[4]);Io[lz+0X0001]=Az;Io[lz]=Az[Uy[5]];Uy=Re[Oo];Oo=Oo+0X001;(Io)[6]=Uy[2];Oo=Oo+0X1;do lz=0X4;end;do Io[lz]=Io[lz](Io[lz+0X001],Io[lz+0x2]);end;co=lz;Oo=Oo+0X1;Oo=Oo+0X1;Uy=Re[Oo];Oo=Oo+1;if not Io[4]then Oo=Uy[0X6];end;else do if jy~=0X14 then local h3=Io[0x3];local d3=0X4;(Io)[d3+1]=h3;(Io)[d3]=h3[Uy[0x5]];Uy=Re[Oo];do Oo=Oo+0X00001;end;Io[0x6]=Uy[0X2];Oo=Oo+1;do d3=0X4;end;(Io)[d3]=Io[d3](Io[d3+0X1],Io[d3+0X2]);do co=d3;end;do Oo=Oo+0X1;end;do Oo=Oo+0X1;end;Uy=Re[Oo];do Oo=Oo+0X1;end;if Io[0X4]then Oo=Uy[0X6];end;else repeat local y_,b_=De,(Io);do if not(#y_>0)then else local w0={};for VD,YD in D,y_ do for Gy,py in D,YD do if not(py[1]==b_ and py[2]>=0)then else local Gn=py[2];if not(not w0[Gn])then else do(w0)[Gn]={b_[Gn]};end;end;py[1]=w0[Gn];do py[0X2]=1;end;end;end;end;end;end;until true;local hi=Uy[7];do return false,hi,hi;end;end;end;end;end;end;else if not(jy<0Xc)then if not(jy>=13)then Io[Uy[0X7]]=Io[Uy[6]]>Io[Uy[1]];else if jy==14 then do Io[Uy[0x00007]]=Uy[2];end;else repeat local qH,RH=De,Io;if#qH>0 then local QI=({});for Tx,lx in D,qH do for VW,EW in D,lx do if EW[1]==RH and EW[2]>=0X0 then local g8=(EW[2]);if not(not QI[g8])then else do(QI)[g8]={RH[g8]};end;end;(EW)[0X1]=QI[g8];(EW)[2]=1;end;end;end;end;until true;return;end;end;else if jy~=0XB then Io[Uy[0x00007]]=L(Io[Uy[6]],Io[Uy[1]]);else(Io)[0]={};Uy=Re[Oo];Oo=Oo+0x1;local dl=0x2;Io[0X00001]=So[Uy[2]];local Sl=(0X2);Uy=Re[Oo];Oo=Oo+0X1;(Io)[2]=So[Uy[0X02]];Uy=Re[Oo];Oo=Oo+0X1;local Fl=Io[0X002];Io[dl+1]=Fl;(Io)[dl]=Fl[Uy[5]];do Oo=Oo+0X1;end;dl=2;local vl=(0);if Sl==0 then else co=dl+Sl-0x1;end;local El,Al=nil,(nil);if Sl==1 then El,Al=rC(Io[dl]());else do El,Al=rC(Io[dl](I(Io,dl+0X0001,co)));end;end;if vl==1 then co=dl-0X00001;else if vl==0x00 then El=El+dl-1;do co=El;end;else El=dl+vl-2;co=El+0X1;end;local CW=0x0;for IF=dl,El do do CW=CW+1;end;do(Io)[IF]=Al[CW];end;end;end;Oo=Oo+0X001;Oo=Oo+0X1;do Oo=Oo+0X001;end;do dl=0X00001;end;Sl=0X0;vl=4;do if Sl~=0 then do co=dl+Sl-0X1;end;end;end;El,Al=nil;if Sl~=0X0001 then El,Al=rC(Io[dl](I(Io,dl+1,co)));else El,Al=rC(Io[dl]());end;if vl~=1 then do if vl==0 then do El=El+dl-0X1;end;co=El;else El=dl+vl-2;co=El+0x1;end;end;local X2=(0);for Mh=dl,El do do X2=X2+0X00001;end;(Io)[Mh]=Al[X2];end;else co=dl-1;end;Uy=Re[Oo];Oo=Oo+1;do dl=0X1;end;local wl=(g(function(...)d();for xV,AV in...do d(true,xV,AV);end;end));wl(Io[dl],Io[dl+1],Io[dl+2]);co=dl;(Io)[dl]=wl;Oo=Uy[6];end;end;end;end;end;end);do if not(jo)then if f(ro)=="string"then if not(e(ro,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if e(ro,'\^.\-\:\%\100\+:\ ')then b("Lu\114\097\112\104 \Sc\114ipt:"..(Ae[Oo-1]or"(internal)")..": "..r(ro),0X0);else(b)(ro,0);end;end;else b(ro,0X0);end;else if ro then if uo~=1 then return Io[Po](I(Io,Po+0X01,co));else return Io[Po]();end;elseif Po then return I(Io,Po,uo);end;end;end;end;end;end;end;else if me<186 then do if not(me<0Xb8)then if me~=185 then fe=function(...)local S7,O7=0X001,{};local K7=m();local R7,i7={[1]=ce,[0X2]=O7},((K7==F and Le or K7));local F7,w7=rC(...);do F7=F7-0x1;end;local n7=0X0000;for yz=0X00000,F7 do if he>yz then do(O7)[yz]=w7[yz+1];end;else break;end;end;if not ge then w7=nil;elseif xe then(O7)[he]={n=F7>=he and F7-he+0X1 or 0x000,I(w7,he+1,F7+0X1)};end;if i7==K7 then else i(fe,i7);end;local V7,a7,I7,C7=j(function()while true do local w_=(Re[S7]);local K_=(w_[0X04]);S7=S7+1;do if not(K_>=0X0000d)then if not(K_<6)then if K_>=0X9 then do if not(K_<0X00B)then if K_==0Xc then O7[w_[0x7]]=O7[w_[0X6]]%O7[w_[0X01]];else do(O7)[w_[0X00007]]=u(O7[w_[0X00006]],O7[w_[0X1]]);end;end;else do if K_==10 then do O7[w_[0x7]]=i7[w_[2]];end;else local LT=je[w_[6]];local vT=nil;local XT=LT[8];local iT=(#XT);do if iT>0x0 then do vT={};end;for ry=1,iT do local Wy=XT[ry];if Wy[1]~=0x0 then vT[ry-0X001]=ve[Wy[0X00002]];else(vT)[ry-1]={O7,Wy[0x2]};end;end;A(De,vT);end;end;do(O7)[w_[7]]=NC(vT,i7,LT);end;end;end;end;end;else if not(K_>=7)then S7=w_[0X00006];else if K_~=0x8 then local lB=(w_[7]);local jB=g(function(...)(d)();for Zs,vs,Gs,Ds,os,Qs,Ts,ns,Es,Hs in...do(d)(true,{Zs,vs,Gs,Ds,os,Qs,Ts,ns,Es,Hs});end;end);(jB)(O7[lB],O7[lB+1],O7[lB+2]);do n7=lB;end;(O7)[lB]=jB;do S7=w_[6];end;else local Jf=ve[0X0001];O7[0X0]=Jf[1][Jf[2]];S7=S7+1;S7=S7+1;w_=Re[S7];do S7=S7+1;end;if not(not O7[0X0])then else S7=w_[0X06];end;end;end;end;else if not(K_>=3)then if K_<0X001 then else if K_==2 then local gr=ve[1];(O7)[0X0]=gr[1][gr[0X002]];local Br=(0);w_=Re[S7];S7=S7+1;local Wr=(O7[0X00]);(O7)[Br+1]=Wr;do(O7)[Br]=Wr[w_[0x5]];end;do S7=S7+1;end;Br=0X0;O7[Br]=O7[Br](O7[Br+0X1]);n7=Br;S7=S7+0X1;do S7=S7+1;end;do w_=Re[S7];end;do S7=S7+1;end;S7=w_[6];else O7[w_[7]]=O7[w_[0x6]]+O7[w_[1]];end;end;else if K_<0X4 then if not O7[w_[7]]then S7=w_[0X6];end;else do if K_~=0X5 then O7[w_[0x07]]=O7[w_[6]]>=O7[w_[1]];else local nG=ve[1];(O7)[0X0]=nG[1][nG[2]];S7=S7+1;S7=S7+1;do S7=S7+0x1;end;do O7[0X0]=not O7[0X00000];end;w_=Re[S7];do S7=S7+1;end;if not(not O7[0X0])then else S7=w_[0x6];end;end;end;end;end;end;else if K_>=0x14 then if K_<0X17 then if K_<0X15 then local Ps=ve[0X1];O7[0X000]=Ps[1][Ps[2]];S7=S7+1;S7=S7+1;S7=S7+0X01;(O7)[0X0]=not O7[0];w_=Re[S7];do S7=S7+0X001;end;if O7[0]then S7=w_[0x6];end;else if K_~=0X0016 then O7[w_[7]]=-O7[w_[0x6]];else do if O7[w_[0X7]]then S7=w_[6];end;end;end;end;else do if not(K_<0X000019)then do if K_~=0X1A then(O7)[w_[7]]=O7[w_[0X6]]<O7[w_[1]];else for ye=w_[7],w_[6]do(O7)[ye]=nil;end;end;end;else if K_~=24 then do(O7)[0]=i7[w_[0X2]];end;S7=S7+1;n7=0;do(O7)[n7]=O7[n7]();end;S7=S7+0X0001;O7[0]=not O7[0];do w_=Re[S7];end;S7=S7+1;S7=w_[0X6];else do(O7)[w_[0X07]]={I({},1,w_[0X6])};end;end;end;end;end;else if not(K_<16)then if not(K_<18)then if K_~=19 then(O7)[w_[7]]=w_[2];else repeat local Hy,Uy=De,O7;if not(#Hy>0X0)then else local uf={};for CQ,pQ in D,Hy do for rM,FM in D,pQ do do if not(FM[0X01]==Uy and FM[2]>=0)then else local h0=FM[0X2];if not uf[h0]then do(uf)[h0]={Uy[h0]};end;end;(FM)[1]=uf[h0];FM[2]=1;end;end;end;end;end;until true;return;end;else do if K_==0X11 then local jB=ve[0X000];(O7)[0x0]=jB[0X0001][jB[0x2]];do S7=S7+1;end;n7=0;do(O7)[n7]=O7[n7]();end;S7=S7+0X1;S7=S7+1;w_=Re[S7];S7=S7+0X1;if not(not O7[0X0])then else S7=w_[0X6];end;else(O7)[0]=i7[w_[0X2]];do S7=S7+0X1;end;S7=S7+0X001;do w_=Re[S7];end;S7=S7+0x1;do O7[0]=O7[0][w_[5]];end;S7=S7+0X01;S7=S7+1;w_=Re[S7];S7=S7+1;do S7=w_[6];end;end;end;end;else if not(K_<14)then do if K_==0Xf then repeat local cd,Hd=De,(O7);if#cd>0 then local CU={};for KT,nT in D,cd do for sL,OL in D,nT do if not(OL[0X1]==Hd and OL[0X2]>=0X0)then else local SS=OL[2];do if not(not CU[SS])then else(CU)[SS]={Hd[SS]};end;end;(OL)[0X1]=CU[SS];OL[0x0002]=1;end;end;end;end;until true;local kv=w_[0X7];return false,kv,kv;else(O7)[0X000]=i7[w_[0X2]];S7=S7+0X00001;local Yf=(ve[1]);O7[0X1]=Yf[0x0001][Yf[0x2]];w_=Re[S7];S7=S7+1;(O7)[0X1]=O7[1][w_[0X005]];do S7=S7+1;end;O7[0X0]=O7[0][O7[0X1]];S7=S7+1;do S7=S7+1;end;do w_=Re[S7];end;S7=S7+0x01;do S7=w_[6];end;end;end;else do(O7)[w_[0X7]]=O7[w_[0X6]]/O7[w_[0X1]];end;end;end;end;end;end;end;end);if not(V7)then if f(a7)~="str\105ng"then b(a7,0X0);else if not(e(a7,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(e(a7,"^.-:%d+: "))then(b)(a7,0X0);else(b)("Luraph Script:"..(Ae[S7-0X1]or"(internal)")..": "..r(a7),0X000);end;end;else if a7 then if C7==0X00001 then return O7[I7]();else return O7[I7](I(O7,I7+1,n7));end;elseif not(I7)then else return I(O7,I7,C7);end;end;end;else fe=function(...)local c2=(0x1);local y2=({});local f2={[0X2]=y2,[1]=ce};local G2=m();local P2,T2=rC(...);P2=P2-1;for mJ=0,P2 do if he>mJ then do y2[mJ]=T2[mJ+1];end;else break;end;end;local u2=(G2==F and Le or G2);local L2=(0);if not ge then T2=nil;elseif xe then do y2[he]={n=P2>=he and P2-he+1 or 0X00,I(T2,he+1,P2+0X1)};end;end;do if u2~=G2 then(i)(fe,u2);end;end;local V2,Y2,z2,A2=j(function()while true do local Oq=Re[c2];local Gq=(Oq[0X00004]);c2=c2+1;if not(Gq>=10)then if not(Gq<0X5)then if not(Gq>=0x0007)then if Gq~=0X6 then do y2[0X00000]=u2[Oq[2]];end;c2=c2+1;c2=c2+0X0001;Oq=Re[c2];c2=c2+1;(y2)[0X000]=y2[0][Oq[5]];do c2=c2+0X1;end;c2=c2+0X1;do Oq=Re[c2];end;c2=c2+1;y2[0]=y2[0x000][Oq[0X5]];Oq=Re[c2];do c2=c2+1;end;(y2)[0]=y2[0X0][Oq[5]];Oq=Re[c2];c2=c2+0X1;(y2)[0]=y2[0X0]>Oq[5];else(y2)[0]=u2[Oq[2]];c2=c2+1;c2=c2+0x1;do c2=c2+1;end;L2=0;y2[L2]=y2[L2]();c2=c2+1;c2=c2+1;do Oq=Re[c2];end;do c2=c2+1;end;c2=Oq[0X0006];end;else do if not(Gq<0X8)then if Gq==9 then do repeat local to,yo=De,y2;do if#to>0 then local Q4=({});do for um,em in D,to do for G3,f3 in D,em do do if f3[1]==yo and f3[0X02]>=0 then local S0=(f3[0X2]);if not(not Q4[S0])then else Q4[S0]={yo[S0]};end;f3[1]=Q4[S0];do f3[2]=0x1;end;end;end;end;end;end;end;end;until true;end;local yA=Oq[0X7];return false,yA,yA;else c2=Oq[6];end;else local br=je[Oq[0X6]];local Ir=br[0X8];local yr,zr=#Ir,nil;do if yr>0 then zr={};do for ct=1,yr do local zt=(Ir[ct]);if zt[0x0001]==0 then zr[ct-0x00001]={y2,zt[2]};else do zr[ct-1]=ve[zt[0X0002]];end;end;end;end;(A)(De,zr);end;end;(y2)[Oq[7]]=NC(zr,u2,br);end;end;end;else if Gq<2 then if Gq~=0X01 then local UW=ve[0X0];y2[0]=UW[0X1][UW[0X2]];do Oq=Re[c2];end;local EW=(0X0);c2=c2+1;local nW=(y2[0X0]);(y2)[EW+0x001]=nW;(y2)[EW]=nW[Oq[0X5]];c2=c2+1;EW=0X0;y2[EW]=y2[EW](y2[EW+0X1]);L2=EW;Oq=Re[c2];c2=c2+0X1;c2=Oq[6];else do(y2)[Oq[7]]=u2[Oq[0X2]];end;end;else if Gq<0X3 then local wj=Oq[0X7];local Cj,Xj=y2[wj],(y2[wj+1]);local Tj=(y2[wj+0X2]);y2[wj]=g(function()for rm=Cj,Xj,Tj do d(true,rm);end;end);do c2=Oq[6];end;else if Gq==4 then do if not y2[Oq[0X7]]then c2=Oq[0x006];end;end;else(y2)[Oq[7]]=y2[Oq[0X0006]]*y2[Oq[1]];end;end;end;end;else if not(Gq<0Xf)then if not(Gq>=0x00011)then if Gq==16 then y2[Oq[7]]=Oq[0x02];else do for ZQ=Oq[7],Oq[0x006]do y2[ZQ]=nil;end;end;end;else do if Gq>=0X00012 then if Gq~=19 then local dY=(Oq[0X6]);local LY=y2[dY];do for IU=dY+0x01,Oq[0X1]do do LY=LY..y2[IU];end;end;end;(y2)[Oq[7]]=LY;else y2[Oq[7]]=y2[Oq[6]];end;else(y2)[Oq[0X00007]]=y2[Oq[0x6]]/y2[Oq[1]];end;end;end;else if not(Gq<0Xc)then do if Gq>=0X0000d then if Gq==0x0e then(y2)[Oq[7]]={I({},1,Oq[0X6])};else end;else do(y2)[0x00]=u2[Oq[2]];end;Oq=Re[c2];c2=c2+1;(y2)[0X0]=y2[0][Oq[5]];Oq=Re[c2];c2=c2+1;if not(y2[0])then else do c2=Oq[0X6];end;end;end;end;else if Gq~=0X0000B then repeat local V_,b_=De,y2;do if#V_>0 then local mk=({});do for I2,v2 in D,V_ do do for T6,W6 in D,v2 do if W6[0x1]==b_ and W6[0X2]>=0 then local mx=(W6[2]);if not(not mk[mx])then else mk[mx]={b_[mx]};end;W6[0X001]=mk[mx];(W6)[2]=0x00001;end;end;end;end;end;end;end;until true;return;else do(y2)[Oq[7]]=y2[Oq[6]][y2[Oq[1]]];end;end;end;end;end;end;end);if V2 then if Y2 then if A2==0X1 then return y2[z2]();else return y2[z2](I(y2,z2+0X1,L2));end;elseif not(z2)then else do return I(y2,z2,A2);end;end;else if f(Y2)~="string"then(b)(Y2,0x0);else if not(e(Y2,"\097tt\e\m\112\116\032to\032\121ie\ld\ \097cros\s\ m\et\097\m\101t\104\111\d/C\037\-\cal\l\ \098\o\117\110da\114\y"))then else return coroutine.yield();end;if not(e(Y2,"^.-:%d+: "))then(b)(Y2,0);else(b)("Luraph Script:"..(Ae[c2-1]or'\040\i\110\116\er\110\097\108\)')..": "..r(Y2),0X0000);end;end;end;end;end;else fe=function(...)local J7=(0);local l7=0x00001;local s7=({});local X7=(m());local b7={[1]=ce,[0X2]=s7};local K7,U7=rC(...);K7=K7-0x1;for ov=0,K7 do do if he>ov then(s7)[ov]=U7[ov+0X1];else break;end;end;end;local h7=((X7==F and Le or X7));if not ge then do U7=nil;end;elseif xe then s7[he]={n=K7>=he and K7-he+0X00001 or 0X00000,I(U7,he+1,K7+0X00001)};end;if h7~=X7 then(i)(fe,h7);end;local k7,g7,x7,t7=j(function()while true do local Mn=(Re[l7]);local un=(Mn[0X4]);do l7=l7+1;end;if not(un>=0x000011)then if un>=8 then if not(un>=12)then if un<10 then if un==9 then s7[Mn[7]]=s7[Mn[0X006]]+s7[Mn[1]];else(s7)[1]=h7[Mn[2]];l7=l7+0X001;l7=l7+0X1;do Mn=Re[l7];end;l7=l7+1;if s7[1]then l7=Mn[0x006];end;end;else do if un~=0Xb then repeat local TL,tL=De,s7;if#TL>0 then local ru=({});for To,ko in D,TL do for Vm,Wm in D,ko do if Wm[1]==tL and Wm[0x00002]>=0X0 then local k0=(Wm[2]);if not ru[k0]then ru[k0]={tL[k0]};end;(Wm)[1]=ru[k0];Wm[2]=0x1;end;end;end;end;until true;return false,Mn[7],J7;else do if not(s7[Mn[0X00007]])then else l7=Mn[6];end;end;end;end;end;else if un<14 then do if un~=13 then s7[0X06]=h7[Mn[0x2]];local gq=(s7[6]);do l7=l7+0X1;end;l7=l7+1;do Mn=Re[l7];end;l7=l7+0X1;local uq=(6);(s7)[uq+1]=gq;(s7)[uq]=gq[Mn[5]];Mn=Re[l7];l7=l7+0x01;do s7[0X8]=Mn[2];end;do l7=l7+0X1;end;uq=0X6;do(s7)[uq]=s7[uq](s7[uq+1],s7[uq+2]);end;J7=uq;l7=l7+0X1;l7=l7+1;Mn=Re[l7];l7=l7+0X001;do if not(not s7[0X0006])then else l7=Mn[6];end;end;else end;end;else do if not(un>=0X0000f)then repeat local us,cs=De,s7;if#us>0x0000 then local rg=({});do for dP,LP in D,us do for vA,tA in D,LP do if not(tA[1]==cs and tA[0x02]>=0X0)then else local cP=tA[2];if not rg[cP]then rg[cP]={cs[cP]};end;(tA)[1]=rg[cP];(tA)[2]=1;end;end;end;end;end;until true;return;else if un==0x000010 then(s7)[6]=h7[Mn[0X00002]];l7=l7+1;do l7=l7+0X1;end;Mn=Re[l7];l7=l7+0X001;if not(not s7[0X6])then else l7=Mn[6];end;else l7=Mn[6];end;end;end;end;end;else do if not(un>=0X04)then do if un<2 then do if un~=0X00001 then if not(not(Mn[2]<s7[Mn[1]]))then else l7=Mn[7];end;else(s7)[0X7]=h7[Mn[0X002]];Mn=Re[l7];local Ed,qd=0X00004,(7);l7=l7+1;(s7)[8]=s7[0X6][Mn[0X5]];l7=l7+1;l7=l7+1;l7=l7+0x1;local Yd=(0X2);if Yd==0X0 then else do J7=qd+Yd-1;end;end;local Fd,ed=nil,nil;do if Yd==0x1 then Fd,ed=rC(s7[qd]());else Fd,ed=rC(s7[qd](I(s7,qd+1,J7)));end;end;if Ed~=1 then if Ed~=0 then Fd=qd+Ed-0X2;J7=Fd+1;else do Fd=Fd+qd-1;end;do J7=Fd;end;end;local mA=0;do for SC=qd,Fd do mA=mA+0X1;(s7)[SC]=ed[mA];end;end;else J7=qd-1;end;l7=l7+1;l7=l7+1;Mn=Re[l7];l7=l7+0x1;do qd=7;end;local hd=(g(function(...)(d)();do for Kb,yb in...do d(true,Kb,yb);end;end;end));hd(s7[qd],s7[qd+1],s7[qd+2]);J7=qd;(s7)[qd]=hd;l7=Mn[0x00006];end;end;else if un~=0X3 then s7[Mn[7]]={I({},0X1,Mn[0X6])};else(s7)[1]=h7[Mn[0X2]];local Id=(1);do l7=l7+0X00001;end;l7=l7+0X1;Mn=Re[l7];l7=l7+0X1;(s7)[1]=s7[1][Mn[5]];do l7=l7+1;end;l7=l7+0X1;Mn=Re[l7];l7=l7+0X1;s7[2]=Mn[0X2];Mn=Re[l7];do l7=l7+1;end;s7[3]=h7[Mn[0X2]];l7=l7+0X1;(s7)[Id]=s7[Id](s7[Id+1],s7[Id+2]);J7=Id;l7=l7+0X0001;l7=l7+0X0001;Mn=Re[l7];l7=l7+1;s7[2]=Mn[0X2];l7=l7+1;do s7[0X0003]=s7[0X0000];end;do Mn=Re[l7];end;l7=l7+1;if not(s7[0X3])then else l7=Mn[0X6];end;end;end;end;else do if not(un>=0X0006)then if un~=5 then for HJ=Mn[7],Mn[0X6]do s7[HJ]=nil;end;else local QS=(ve[2]);(s7)[0Xa]=QS[1][QS[0X02]];do Mn=Re[l7];end;l7=l7+0X0001;(s7)[11]=s7[0x009][Mn[5]];l7=l7+0X1;l7=l7+0x00001;l7=l7+1;local TS=(10);(s7[TS])(s7[TS+1]);J7=TS-0X1;l7=l7+0X1;l7=l7+1;l7=l7+0X00001;QS=ve[3];(s7)[10]=QS[1][QS[2]];Mn=Re[l7];local CS=(0x00003);l7=l7+1;s7[11]=s7[0X9][Mn[0X5]];l7=l7+1;do l7=l7+1;end;l7=l7+0x01;do s7[0xc]=s7[0];end;l7=l7+0X1;do TS=0X00A;end;J7=TS+CS-1;repeat local YC,LC=De,s7;if#YC>0x0 then local AF={};for HH,oH in D,YC do for Af,vf in D,oH do do if not(vf[0X1]==LC and vf[0X2]>=0)then else local Co=vf[2];if not AF[Co]then AF[Co]={LC[Co]};end;(vf)[1]=AF[Co];vf[2]=1;end;end;end;end;end;until true;return true,TS,CS;end;else if un==0x00007 then do s7[6]=h7[Mn[2]];end;Mn=Re[l7];do l7=l7+1;end;(s7)[7]=h7[Mn[2]];Mn=Re[l7];l7=l7+1;do(s7)[0x7]=s7[0x07][Mn[5]];end;do Mn=Re[l7];end;local LC=(3);l7=l7+1;(s7)[0X8]=h7[Mn[2]];local ZC=0X9;l7=l7+1;local YC=6;l7=l7+1;l7=l7+1;s7[0X0009]=s7[0X2];l7=l7+0x01;s7[10]=s7[0X005];l7=l7+1;do(s7)[9]=s7[ZC]..s7[ZC+1];end;l7=l7+0X1;local kC=(4);if kC~=0 then J7=YC+kC-0x01;end;local OC,TC=nil,(nil);if kC==1 then OC,TC=rC(s7[YC]());else OC,TC=rC(s7[YC](I(s7,YC+0X1,J7)));end;if LC~=1 then if LC==0X0000 then OC=OC+YC-1;J7=OC;else OC=YC+LC-0X02;J7=OC+1;end;local Ex=0x0;do for xk=YC,OC do do Ex=Ex+1;end;s7[xk]=TC[Ex];end;end;else J7=YC-0X0001;end;l7=l7+1;(s7)[0X4]=s7[0X7];l7=l7+1;s7[0x3]=s7[6];Mn=Re[l7];do l7=l7+0X1;end;(s7)[6]=h7[Mn[0X02]];l7=l7+0x00001;J7=0X006;s7[J7]();J7=J7-0X0001;l7=l7+0X1;do l7=l7+0X0001;end;Mn=Re[l7];l7=l7+0X1;if not s7[0X3]then l7=Mn[0X006];end;else s7[0X7]=h7[Mn[2]];l7=l7+1;l7=l7+0x01;Mn=Re[l7];do l7=l7+1;end;local c5=(0X0007);(s7)[8]=Mn[2];l7=l7+0X1;(s7[c5])(s7[c5+0x1]);J7=c5-0x00001;Mn=Re[l7];l7=l7+1;if s7[5]then l7=Mn[0X00006];end;end;end;end;end;end;end;else if un>=0X19 then if un>=29 then if un<31 then if un~=30 then local bY=(Mn[0X6]);local rY=(Mn[7]);do if bY==0 then else J7=rY+bY-0X1;end;end;local AY,fY,kY=Mn[1],nil,nil;if bY==0X0001 then fY,kY=rC(s7[rY]());else fY,kY=rC(s7[rY](I(s7,rY+1,J7)));end;do if AY==1 then J7=rY-0X1;else do if AY~=0 then fY=rY+AY-2;J7=fY+0X0001;else fY=fY+rY-1;J7=fY;end;end;local J_=0X0;do for GX=rY,fY do J_=J_+0X001;s7[GX]=kY[J_];end;end;end;end;else local KC=0X2;J7=KC+4-1;(s7)[KC]=s7[KC](I(s7,KC+1,J7));J7=KC;l7=l7+0X001;l7=l7+0X001;l7=l7+0x001;for zH=0X3,0X04 do(s7)[zH]=nil;end;Mn=Re[l7];l7=l7+0X01;(s7)[0X5]=Mn[2];Mn=Re[l7];l7=l7+0X1;do l7=Mn[0X006];end;end;else if un>=32 then if un==0X21 then do s7[Mn[7]]=Mn[2];end;else local dO=je[Mn[6]];local qO=nil;local IO=dO[8];local lO=#IO;if lO>0X00000 then qO={};for z5=0X001,lO do local s5=(IO[z5]);do if s5[1]~=0x0 then(qO)[z5-1]=ve[s5[0X2]];else qO[z5-1]={s7,s5[2]};end;end;end;(A)(De,qO);end;do s7[Mn[7]]=NC(qO,h7,dO);end;end;else local Ze=(s7[Mn[0x6]]);local be=Mn[7];(s7)[be+0x0001]=Ze;(s7)[be]=Ze[Mn[0X5]];end;end;else if un<0X01b then if un~=26 then(s7)[Mn[7]]=h7[Mn[2]];else local iG=ve[0x0001];do s7[11]=iG[0X1][iG[2]];end;Mn=Re[l7];l7=l7+1;local KG=(0x0000b);(s7)[12]=s7[0X00009][Mn[5]];l7=l7+0X1;l7=l7+0X0001;l7=l7+1;(s7)[KG]=s7[KG](s7[KG+1]);J7=KG;Mn=Re[l7];l7=l7+0X001;if not s7[0X00b]then l7=Mn[6];end;end;else do if un~=0x01C then s7[6]=h7[Mn[0X002]];do Mn=Re[l7];end;do l7=l7+0X001;end;(s7)[0X6]=s7[0X6][Mn[0X05]];l7=l7+0X1;l7=l7+0X1;local DA=0X00006;Mn=Re[l7];l7=l7+0X01;local WA=s7[6];(s7)[DA+0X1]=WA;s7[DA]=WA[Mn[0X5]];l7=l7+0X1;DA=6;s7[DA](s7[DA+1]);J7=DA-0X1;Mn=Re[l7];l7=l7+0X1;l7=Mn[0X00006];else local nL=ve[0];(s7)[0x6]=nL[0X1][nL[2]];local AL=0X6;do Mn=Re[l7];end;do l7=l7+1;end;local WL=(s7[0X06]);(s7)[AL+1]=WL;(s7)[AL]=WL[Mn[5]];do l7=l7+0X1;end;s7[8]=s7[4];l7=l7+1;AL=6;(s7)[AL]=s7[AL](s7[AL+1],s7[AL+0x2]);J7=AL;Mn=Re[l7];l7=l7+0X0001;(s7)[0X7]=s7[0x6][Mn[5]];l7=l7+0x1;l7=l7+1;do l7=l7+1;end;do(s7)[5]=s7[7];end;Mn=Re[l7];do l7=l7+1;end;if not(s7[5])then else l7=Mn[0x006];end;end;end;end;end;else if not(un<21)then if not(un>=0X17)then do if un~=0X00016 then(s7)[7]=Mn[0X2];l7=l7+1;(s7)[0x005]=s7[0X7];Mn=Re[l7];l7=l7+1;l7=Mn[6];else s7[1]=h7[Mn[0X2]];Mn=Re[l7];local vJ=0x1;l7=l7+1;local HJ=(s7[1]);s7[vJ+1]=HJ;do(s7)[vJ]=HJ[Mn[5]];end;Mn=Re[l7];l7=l7+1;s7[0X3]=Mn[2];l7=l7+1;vJ=0X1;(s7)[vJ]=s7[vJ](s7[vJ+1],s7[vJ+2]);J7=vJ;l7=l7+0X1;do l7=l7+0X1;end;do Mn=Re[l7];end;do l7=l7+1;end;if not s7[1]then l7=Mn[0x0006];end;end;end;else do if un~=24 then(s7)[Mn[7]]=s7[Mn[0X00006]][s7[Mn[1]]];else s7[Mn[7]]=s7[Mn[0x6]][Mn[5]];end;end;end;else if un<19 then if un~=18 then local Ej=(Mn[0x0007]);local Uj,Yj,Fj=s7[Ej]();if Uj then s7[Ej+1]=Yj;s7[Ej+0X2]=Fj;l7=Mn[6];end;else s7[Mn[7]]=k(s7[Mn[6]],s7[Mn[1]]);end;else if un~=20 then s7[0x1]=h7[Mn[0X2]];l7=l7+0X1;do l7=l7+0x00001;end;Mn=Re[l7];l7=l7+1;(s7)[1]=s7[1][Mn[5]];l7=l7+1;l7=l7+1;Mn=Re[l7];l7=l7+1;if not(not s7[1])then else l7=Mn[6];end;else local He=(0x2);(s7)[0x2]=s7[He]..s7[He+1];Mn=Re[l7];l7=l7+1;local Ue=0X002;(s7[1])[Mn[2]]=s7[2];do Mn=Re[l7];end;l7=l7+1;do(s7)[2]=Mn[0X2];end;Mn=Re[l7];do l7=l7+0X1;end;local oe=s7[2];(s7)[Ue+0X1]=oe;s7[Ue]=oe[Mn[0X5]];Mn=Re[l7];l7=l7+0X1;(s7)[4]=h7[Mn[0x2]];Mn=Re[l7];l7=l7+1;(s7)[4]=s7[4][Mn[0x5]];Mn=Re[l7];l7=l7+0X0001;s7[0x5]=h7[Mn[0X2]];Mn=Re[l7];l7=l7+1;(s7)[5]=s7[5][Mn[0X05]];do Mn=Re[l7];end;l7=l7+1;if not s7[5]then l7=Mn[0X6];end;end;end;end;end;end;end;end);if k7 then if g7 then if t7~=1 then return s7[x7](I(s7,x7+0X1,J7));else return s7[x7]();end;elseif x7 then return I(s7,x7,t7);end;else do if f(g7)=='s\116r\i\110\g'then do if e(g7,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if e(g7,'\094\046\-\:%\100\043\:\032')then(b)('\Lu\114a\ph\032\083\099r\i\p\116:'..(Ae[l7-0X1]or"(internal)")..": "..r(g7),0);else(b)(g7,0X00);end;else b(g7,0);end;end;end;end;end;end;else if not(me<0x0BB)then if me~=0X0000bC then fe=function(...)local Sr,dr=1,({});local er=m();local Ir,Zr=rC(...);local Dr=(er==F and Le or er);local Qr=(0X00);local Xr={[0X2]=dr,[1]=ce};do Ir=Ir-1;end;for ts=0,Ir do do if not(he>ts)then break;else dr[ts]=Zr[ts+0X001];end;end;end;if not ge then Zr=nil;elseif not(xe)then else dr[he]={n=Ir>=he and Ir-he+0x1 or 0,I(Zr,he+1,Ir+1)};end;do if Dr==er then else i(fe,Dr);end;end;local Mr,Gr,ar,pr=j(function()while true do local EM=(Re[Sr]);local xM=(EM[4]);do Sr=Sr+1;end;if not(xM>=0X7)then do if not(xM>=0x3)then if not(xM>=1)then(dr)[EM[7]]=dr[EM[6]]>dr[EM[0X1]];else if xM~=2 then dr[EM[7]]=EM[0X2];else Sr=EM[0X0006];end;end;else if not(xM>=5)then if xM~=4 then for pZ=EM[0X007],EM[6]do do(dr)[pZ]=nil;end;end;else(dr)[EM[0x007]]=dr[EM[0X6]];end;else if xM~=0X6 then dr[EM[0X7]]={I({},0X1,EM[6])};else if not dr[EM[0X00007]]then Sr=EM[0X6];end;end;end;end;end;else if not(xM<0Xa)then if not(xM>=0XC)then do if xM==0X0b then else(dr)[0X0]=Dr[EM[2]];EM=Re[Sr];local o9=(dr[0]);Sr=Sr+1;local U9=(0x0);(dr)[U9+0x1]=o9;do dr[U9]=o9[EM[5]];end;EM=Re[Sr];do Sr=Sr+0X1;end;dr[2]=EM[2];do Sr=Sr+0X1;end;U9=0;(dr)[U9]=dr[U9](dr[U9+1],dr[U9+2]);Qr=U9;do Sr=Sr+0X1;end;do Sr=Sr+1;end;local m9=(nil);EM=Re[Sr];do Sr=Sr+0X001;end;(dr)[0X00001]=Dr[EM[2]];do EM=Re[Sr];end;Sr=Sr+0X00001;(dr)[1]=dr[0X0001][EM[5]];EM=Re[Sr];Sr=Sr+1;local n9=je[EM[6]];local g9=n9[0X8];local H9=(#g9);if not(H9>0)then else m9={};for kY=1,H9 do local mY=(g9[kY]);if mY[0X01]==0X0 then do(m9)[kY-1]={dr,mY[0X2]};end;else m9[kY-0X1]=ve[mY[0X0002]];end;end;A(De,m9);end;dr[2]=NC(m9,Dr,n9);do Sr=Sr+1;end;do U9=0X1;end;dr[U9](dr[U9+1]);Qr=U9-0X1;Sr=Sr+0X1;Sr=Sr+0X1;Sr=Sr+1;do repeat local C8,i8=De,(dr);if#C8>0X000 then local lh={};for PF,AF in D,C8 do do for iu,Su in D,AF do if Su[0x1]==i8 and Su[0X2]>=0 then local co=(Su[2]);if not(not lh[co])then else lh[co]={i8[co]};end;do Su[1]=lh[co];end;(Su)[0x002]=1;end;end;end;end;end;until true;end;return;end;end;else do if xM==0xd then local wZ=EM[0x7];local lZ,JZ=dr[wZ]();do if lZ then do Sr=EM[0X6];end;do dr[wZ+3]=JZ;end;end;end;else do repeat local Pu,Uu,Du=De,dr,EM[7];do if not(#Pu>0X0)then else local mp={};for wO,GO in D,Pu do for iQ,AQ in D,GO do do if not(AQ[0X1]==Uu and AQ[0X2]>=Du)then else local EV=AQ[0X2];do if not mp[EV]then mp[EV]={Uu[EV]};end;end;(AQ)[1]=mp[EV];(AQ)[2]=1;end;end;end;end;end;end;until true;end;end;end;end;else if xM<0X0008 then dr[EM[7]]=Dr[EM[0X00002]];else if xM~=9 then(dr)[EM[7]]=dr[EM[0X00006]]+dr[EM[0x1]];else local Fk=(je[EM[0X6]]);local qk=Fk[0X008];local ok,jk=#qk,(nil);do if ok>0 then do jk={};end;for c8=1,ok do local p8=qk[c8];do if p8[0X01]~=0X0 then do(jk)[c8-0X1]=ve[p8[0X00002]];end;else(jk)[c8-1]={dr,p8[0X002]};end;end;end;A(De,jk);end;end;(dr)[EM[0X7]]=NC(jk,Dr,Fk);end;end;end;end;end;end);if Mr then if Gr then if pr==1 then return dr[ar]();else return dr[ar](I(dr,ar+0X1,Qr));end;elseif ar then return I(dr,ar,pr);end;else if f(Gr)~='s\116ri\110\103'then(b)(Gr,0);else if e(Gr,"\097\116\116\empt\ \116\o\ \y\i\101ld\ \097\099r\o\s\s \109\101\116\097\m\et\104\o\d\/\067\%\-\099a\ll\032b\o\117\110\d\097\114y")then do return coroutine.yield();end;end;do if e(Gr,"^.-:%d+: ")then(b)('\Lu\114a\112\104\ \S\c\114\105\112\116\:'..(Ae[Sr-1]or"(internal)")..": "..r(Gr),0x00000);else(b)(Gr,0X0);end;end;end;end;end;else do fe=function(...)local SF,PF=0x1,({});local qF=({[0X2]=PF,[1]=ce});local NF=m();local sF=(NF==F and Le or NF);local iF,HF=rC(...);iF=iF-0X00001;for XL=0X0,iF do if not(he>XL)then break;else(PF)[XL]=HF[XL+0X1];end;end;do if not ge then HF=nil;elseif not(xe)then else do(PF)[he]={n=iF>=he and iF-he+1 or 0,I(HF,he+1,iF+1)};end;end;end;local dF=0x00;do if sF~=NF then(i)(fe,sF);end;end;local pF,FF,UF,KF=j(function()while true do local Vb=Re[SF];local kb=Vb[0x004];SF=SF+1;if not(kb>=0X0007)then if not(kb<3)then if kb>=5 then do if kb~=6 then PF[Vb[0x0007]]=sF[Vb[2]];else PF[Vb[0X7]]={I({},0X1,Vb[6])};end;end;else if kb==0X04 then(PF)[Vb[7]]=PF[Vb[6]];else(PF)[Vb[0X00007]]=true;end;end;else if kb<0x1 then(PF)[0]=sF[Vb[0x00002]];local ZF=0X00000;do Vb=Re[SF];end;SF=SF+1;local kF=(PF[0X00]);do(PF)[ZF+1]=kF;end;do PF[ZF]=kF[Vb[5]];end;Vb=Re[SF];SF=SF+1;do PF[0X2]=Vb[2];end;do SF=SF+1;end;ZF=0X0;do(PF)[ZF]=PF[ZF](PF[ZF+0X1],PF[ZF+0X2]);end;do dF=ZF;end;SF=SF+1;do SF=SF+1;end;Vb=Re[SF];SF=SF+1;(PF)[0x1]=sF[Vb[2]];Vb=Re[SF];SF=SF+1;(PF)[1]=PF[1][Vb[0X0005]];do SF=SF+0x1;end;SF=SF+1;Vb=Re[SF];local XF=(je[Vb[0x6]]);do SF=SF+1;end;local vF,fF=nil,XF[0x8];local lF=(#fF);if not(lF>0)then else vF={};for fn=0X1,lF do local Fn=fF[fn];if Fn[1]==0 then(vF)[fn-1]={PF,Fn[2]};else vF[fn-1]=ve[Fn[0X002]];end;end;A(De,vF);end;do(PF)[2]=NC(vF,sF,XF);end;do SF=SF+1;end;do ZF=1;end;PF[ZF](PF[ZF+0X1]);dF=ZF-1;do SF=SF+0x1;end;do repeat local Gz,Hz=De,(PF);if not(#Gz>0)then else local Fj={};for nz,dz in D,Gz do do for wa,oa in D,dz do if not(oa[1]==Hz and oa[0x2]>=0)then else local mS=(oa[2]);if not Fj[mS]then Fj[mS]={Hz[mS]};end;do oa[1]=Fj[mS];end;oa[2]=0X1;end;end;end;end;end;until true;end;do return;end;else if kb~=0x2 then(qF)[Vb[0X00006]]=PF[Vb[0X7]];else end;end;end;else if kb<0XB then if kb<0x9 then if kb~=8 then local bK=(PF[Vb[6]]/PF[Vb[0X0001]]);(PF)[Vb[7]]=bK-bK%1;else(PF)[Vb[7]]=Vb[0x2];end;else if kb==10 then do SF=Vb[6];end;else if not(PF[Vb[6]]<=PF[Vb[0x1]])then SF=Vb[7];end;end;end;else if not(kb>=13)then do if kb==12 then for ax=Vb[7],Vb[0X6]do(PF)[ax]=nil;end;else if PF[Vb[6]]~=PF[Vb[1]]then else SF=Vb[7];end;end;end;else if kb==0Xe then local I_,e_=Vb[0X7],(PF[Vb[6]]);do(PF)[I_+0X1]=e_;end;PF[I_]=e_[Vb[0X5]];else local Y6=je[Vb[0X6]];local O6=(Y6[8]);local N6=(#O6);local c6=(nil);if N6>0 then c6={};for ie=1,N6 do local Fe=(O6[ie]);if Fe[0X1]~=0 then(c6)[ie-1]=ve[Fe[0X2]];else(c6)[ie-1]={PF,Fe[0x2]};end;end;(A)(De,c6);end;(PF)[Vb[0X007]]=NC(c6,sF,Y6);end;end;end;end;end;end);if pF then if FF then if KF~=1 then return PF[UF](I(PF,UF+1,dF));else do return PF[UF]();end;end;elseif not(UF)then else return I(PF,UF,KF);end;else if f(FF)=="string"then if e(FF,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if e(FF,"^.-:%d+: ")then b("Luraph Script:"..(Ae[SF-0X00001]or"\040\in\116\e\114n\097l\041")..":\032"..r(FF),0X00);else(b)(FF,0X0);end;end;else b(FF,0);end;end;end;end;end;else do fe=function(...)local lW=(1);local cW={};local CW=(m());local vW=(0);local sW,bW={[0X2]=cW,[1]=ce},((CW==F and Le or CW));local GW,PW=rC(...);GW=GW-0X00001;for My=0,GW do do if not(he>My)then break;else(cW)[My]=PW[My+1];end;end;end;if not ge then PW=nil;elseif xe then do cW[he]={n=GW>=he and GW-he+0X00001 or 0,I(PW,he+1,GW+0X0001)};end;end;if bW==CW then else i(fe,bW);end;while true do local Mp=Re[lW];local ip=Mp[4];lW=lW+1;do return(function(A,N,...)for o,D in pairs(Backpack:GetChildren())do if D:IsA("Tool")and not D:FindFirstChildOfClass("RemoteFunction")then return true;end;end;end)(cW,ve,...);end;end;end;end;end;end;end;end;end;else if me<0x0099 then do if me<0X93 then if me<144 then if not(me>=142)then fe=function(...)local VD=(0x1);local SD=({});local BD=m();local bD,hD=rC(...);local ID=({[0X2]=SD,[1]=ce});bD=bD-1;for lQ=0X00,bD do if not(he>lQ)then do break;end;else SD[lQ]=hD[lQ+1];end;end;local jD=(0X0);local pD=(BD==F and Le or BD);if not ge then do hD=nil;end;elseif xe then do(SD)[he]={n=bD>=he and bD-he+1 or 0,I(hD,he+1,bD+1)};end;end;do if pD~=BD then(i)(fe,pD);end;end;local vD,ZD,XD,aD=j(function()while true do local Tx=(Re[VD]);local zx=Tx[4];VD=VD+1;if zx<10 then do if zx<5 then if not(zx>=0X2)then if zx==0X1 then local DE=Tx[7];local vE,GE=SD[DE]();do if not(vE)then else do VD=Tx[6];end;do(SD)[DE+3]=GE;end;end;end;else do(SD[Tx[7]])[SD[Tx[0x06]]]=SD[Tx[0X1]];end;end;else do if not(zx<3)then if zx==0x4 then local hW=(je[Tx[6]]);local mW=(nil);local QW=(hW[0X8]);local VW=#QW;do if VW>0 then do mW={};end;do for Py=0X01,VW do local Uy=(QW[Py]);if Uy[1]==0X0 then(mW)[Py-1]={SD,Uy[2]};else(mW)[Py-0X1]=ve[Uy[0X2]];end;end;end;(A)(De,mW);end;end;SD[Tx[0X00007]]=NC(mW,pD,hW);else VD=Tx[0X6];end;else local OC=ve[0x0];(SD)[0]=OC[0X1][OC[2]];Tx=Re[VD];VD=VD+1;SD[0x0]=SD[0X0][Tx[0X00005]];VD=VD+1;do VD=VD+0X1;end;do Tx=Re[VD];end;do VD=VD+1;end;do if not SD[0x0]then VD=Tx[6];end;end;end;end;end;else if not(zx>=7)then if zx==0X6 then do SD[Tx[7]]=Tx[2];end;else local qi=(ve[1]);(SD)[0x01]=qi[0X1][qi[0x2]];local Mi=1;Tx=Re[VD];VD=VD+0X001;(SD)[0x1]=SD[0X00001][Tx[0X5]];do VD=VD+1;end;VD=VD+0X1;do VD=VD+1;end;SD[0X2]=SD[0];VD=VD+0X1;do qi=ve[0X02];end;SD[0X3]=qi[1][qi[2]];VD=VD+1;SD[Mi](SD[Mi+1],SD[Mi+0X002]);jD=Mi-0X1;do VD=VD+0X00001;end;do qi=ve[2];end;SD[0X1]=qi[0X1][qi[0X00002]];Tx=Re[VD];local Ci=SD[1];VD=VD+0X1;do Mi=1;end;(SD)[Mi+0x1]=Ci;(SD)[Mi]=Ci[Tx[5]];VD=VD+1;Mi=0x1;(SD[Mi])(SD[Mi+0X1]);do jD=Mi-1;end;Tx=Re[VD];do VD=VD+0X01;end;do VD=Tx[6];end;end;else if not(zx>=0X0008)then repeat local kO,rO,lO=De,SD,Tx[0X0007];do if#kO>0 then local hG={};for xi,Pi in D,kO do for Xu,Uu in D,Pi do if not(Uu[0X1]==rO and Uu[2]>=lO)then else local qZ=(Uu[2]);if not(not hG[qZ])then else hG[qZ]={rO[qZ]};end;Uu[1]=hG[qZ];Uu[2]=0X1;end;end;end;end;end;until true;else if zx~=0X00009 then SD[0X0]=pD[Tx[0X2]];do VD=VD+1;end;do VD=VD+1;end;Tx=Re[VD];VD=VD+1;local Ql=ve[0x1];do SD[1]=Tx[0X2];end;VD=VD+1;local Nl=(0);SD[Nl]=SD[Nl](SD[Nl+0X0001]);jD=Nl;do VD=VD+1;end;do VD=VD+1;end;VD=VD+1;(SD)[0X001]=Ql[0X0001][Ql[2]];do VD=VD+1;end;VD=VD+0X001;Tx=Re[VD];do VD=VD+0X1;end;SD[0X1]=SD[0X00001][Tx[0x5]];VD=VD+0x001;VD=VD+0x1;do VD=VD+0X1;end;do SD[0X002]=SD[0];end;VD=VD+1;Nl=0X001;SD[Nl]=SD[Nl](SD[Nl+0X001]);jD=Nl;VD=VD+0x0001;VD=VD+0x1;do Tx=Re[VD];end;VD=VD+0X1;do if not(not SD[0x1])then else do VD=Tx[6];end;end;end;else do(SD)[Tx[7]]=SD[Tx[0X6]]/SD[Tx[1]];end;end;end;end;end;end;else if not(zx>=0X0f)then if zx>=12 then if not(zx>=0X0000D)then(SD)[Tx[0X0007]]=G(SD[Tx[0x6]],SD[Tx[0X1]]);else do if zx==14 then(SD)[Tx[7]]=pD[Tx[0X2]];else(SD)[0X4]=pD[Tx[0X2]];Tx=Re[VD];do VD=VD+0X001;end;do(SD)[5]=Tx[2];end;Tx=Re[VD];do VD=VD+0X1;end;(SD)[0X0006]=Tx[0X2];do VD=VD+1;end;local Z2=(4);SD[7]=SD[3];VD=VD+0X1;jD=Z2+0x4-0x1;SD[Z2](I(SD,Z2+1,jD));jD=Z2-0X1;do Tx=Re[VD];end;VD=VD+1;VD=Tx[0X6];end;end;end;else if zx==0XB then repeat local lP,SP=De,(SD);do if#lP>0 then local HB={};for gQ,wQ in D,lP do for Uy,vy in D,wQ do if not(vy[1]==SP and vy[0X2]>=0x00)then else local Lx=(vy[0X2]);do if not HB[Lx]then(HB)[Lx]={SP[Lx]};end;end;vy[1]=HB[Lx];vy[2]=1;end;end;end;end;end;until true;return;else SD[Tx[0x00007]]=not SD[Tx[6]];end;end;else if not(zx<0X12)then if zx>=19 then if zx==20 then else(SD)[0]=Tx[0X002];do Tx=Re[VD];end;VD=VD+1;(SD)[1]=Tx[2];Tx=Re[VD];do VD=VD+1;end;(SD)[0X0002]=Tx[2];Tx=Re[VD];local dD=0;do VD=VD+0X1;end;local iD=SD[dD+1];local cD=SD[dD];local AD=SD[dD+2];do SD[dD]=g(function()for vY=cD,iD,AD do d(true,vY);end;end);end;VD=Tx[0X6];end;else SD[Tx[7]]=SD[Tx[0X00006]]+SD[Tx[1]];end;else if zx>=0X10 then if zx~=0X11 then SD[0X0]=pD[Tx[0x002]];do Tx=Re[VD];end;VD=VD+0X0001;SD[1]=pD[Tx[0X0002]];do VD=VD+0X1;end;VD=VD+1;do Tx=Re[VD];end;do VD=VD+1;end;do(SD)[0x1]=SD[1][Tx[5]];end;do VD=VD+1;end;VD=VD+1;Tx=Re[VD];VD=VD+1;(SD)[2]=pD[Tx[2]];VD=VD+1;VD=VD+0X0001;do Tx=Re[VD];end;VD=VD+0x01;SD[2]=SD[2][Tx[5]];do VD=VD+0X1;end;do VD=VD+0X1;end;do Tx=Re[VD];end;VD=VD+1;SD[0X002]=SD[2][Tx[0X5]];Tx=Re[VD];VD=VD+1;local Jg=(0);SD[2]=SD[2][Tx[0X00005]];Tx=Re[VD];do VD=VD+0x0001;end;SD[2]=SD[0X2][Tx[5]];do Tx=Re[VD];end;do VD=VD+1;end;SD[0X2]=SD[0x2][Tx[0X0005]];Tx=Re[VD];do VD=VD+0X0001;end;do SD[0X2]=SD[2][Tx[0X5]];end;Tx=Re[VD];do VD=VD+1;end;SD[0X0002]=SD[0x2][Tx[5]];do Tx=Re[VD];end;VD=VD+0X1;(SD)[3]=Tx[0X2];VD=VD+1;jD=Jg+0X4-0X01;(SD[Jg])(I(SD,Jg+1,jD));do jD=Jg-1;end;do VD=VD+0X1;end;VD=VD+0X00001;Tx=Re[VD];VD=VD+0X00001;(SD)[0X00000]=pD[Tx[0X2]];do Tx=Re[VD];end;do VD=VD+1;end;do(SD)[1]=pD[Tx[2]];end;do Tx=Re[VD];end;VD=VD+0x01;(SD)[1]=SD[1][Tx[5]];Tx=Re[VD];VD=VD+0X1;do(SD)[2]=pD[Tx[2]];end;Tx=Re[VD];VD=VD+0X1;SD[0X2]=SD[2][Tx[5]];Tx=Re[VD];VD=VD+0X1;(SD)[0X02]=SD[2][Tx[0X5]];do VD=VD+0X1;end;do VD=VD+0X0001;end;do Tx=Re[VD];end;VD=VD+0X1;(SD)[2]=SD[0X2][Tx[5]];do VD=VD+1;end;VD=VD+0X1;Tx=Re[VD];VD=VD+0X1;(SD)[2]=SD[0X0002][Tx[0X5]];Tx=Re[VD];VD=VD+1;(SD)[2]=SD[2][Tx[0X0005]];do VD=VD+0X00001;end;VD=VD+1;Tx=Re[VD];do VD=VD+0X1;end;(SD)[0X0002]=SD[0X2][Tx[0X0005]];VD=VD+0X1;VD=VD+1;Tx=Re[VD];do VD=VD+0x001;end;do SD[0X0002]=SD[0X0002][Tx[0X5]];end;Tx=Re[VD];do VD=VD+1;end;(SD)[0X3]=Tx[0X2];VD=VD+1;Jg=0X0;do jD=Jg+0X0004-1;end;(SD[Jg])(I(SD,Jg+1,jD));do jD=Jg-1;end;do Tx=Re[VD];end;VD=VD+0X00001;SD[0]=pD[Tx[2]];VD=VD+0X1;VD=VD+1;Tx=Re[VD];VD=VD+0X1;do SD[0X001]=Tx[0X00002];end;VD=VD+0x1;do Jg=0;end;SD[Jg](SD[Jg+1]);jD=Jg-1;Tx=Re[VD];VD=VD+1;SD[0X0]=pD[Tx[2]];Tx=Re[VD];VD=VD+0X1;SD[1]=Tx[0X2];VD=VD+0X1;do Jg=0x0000;end;(SD)[Jg]=SD[Jg](SD[Jg+0x1]);do jD=Jg;end;Tx=Re[VD];VD=VD+0x1;if not(not SD[0])then else VD=Tx[0X6];end;else(SD)[Tx[0X7]]={I({},0X1,Tx[6])};end;else for ex=Tx[7],Tx[6]do(SD)[ex]=nil;end;end;end;end;end;end;end);if vD then if ZD then if aD==0x1 then do return SD[XD]();end;else return SD[XD](I(SD,XD+1,jD));end;elseif XD then return I(SD,XD,aD);end;else do if f(ZD)~="\str\105n\g"then(b)(ZD,0);else if e(ZD,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(e(ZD,"^.-:%d+: "))then b(ZD,0);else b("Luraph Script:"..(Ae[VD-0X0001]or'\(\105nt\101\114na\l\)')..": "..r(ZD),0);end;end;end;end;end;else if me~=0x8f then fe=function(...)local wo,Fo,Bo=0X0000,{},1;local io={[0X2]=Fo,[1]=ce};local po=(m());local yo=(po==F and Le or po);local eo,jo=rC(...);eo=eo-1;for RZ=0,eo do if he>RZ then do Fo[RZ]=jo[RZ+1];end;else do break;end;end;end;if not ge then jo=nil;elseif not(xe)then else(Fo)[he]={n=eo>=he and eo-he+0x1 or 0X00000,I(jo,he+1,eo+0X1)};end;if yo==po then else(i)(fe,yo);end;local Yo,Po,Xo,ao=j(function()do while true do local S4=(Re[Bo]);local G4=S4[4];Bo=Bo+0X1;if not(G4<0XB)then do if not(G4<0X010)then do if G4>=19 then if G4>=20 then if G4==21 then Fo[0x0]=yo[S4[2]];S4=Re[Bo];Bo=Bo+1;(Fo)[0X0]=Fo[0][S4[5]];S4=Re[Bo];Bo=Bo+1;local YS=0x000;Fo[1]=S4[0X2];Bo=Bo+0x1;do(Fo)[YS]=Fo[YS](Fo[YS+1]);end;wo=YS;do S4=Re[Bo];end;Bo=Bo+0X00001;if not(not Fo[0])then else do Bo=S4[6];end;end;else(Fo)[0]=yo[S4[2]];Bo=Bo+1;Bo=Bo+0X1;do Bo=Bo+1;end;wo=0x0000;Fo[wo]=Fo[wo]();do S4=Re[Bo];end;Bo=Bo+0X1;if not(Fo[0])then else Bo=S4[0X00006];end;end;else end;else if not(G4<0x000011)then if G4==0X12 then do Fo[S4[7]]=Fo[S4[0X0006]]*Fo[S4[1]];end;else do(Fo)[S4[7]]=S4[0X2];end;end;else local Gb=(ve[0]);Fo[0x0]=Gb[1][Gb[2]];local Ub=(0x0);S4=Re[Bo];Bo=Bo+1;local ib=(Fo[0]);Fo[Ub+1]=ib;(Fo)[Ub]=ib[S4[5]];Bo=Bo+1;Ub=0;Fo[Ub]=Fo[Ub](Fo[Ub+1]);wo=Ub;do S4=Re[Bo];end;Bo=Bo+1;if not Fo[0]then do Bo=S4[6];end;end;end;end;end;else do if not(G4<0Xd)then if not(G4>=0x00e)then(Fo)[S4[7]]={I({},1,S4[0x0006])};else if G4~=15 then Bo=S4[0X006];else local gD=S4[7];local eD=S4[0X6];do wo=gD+eD-1;end;repeat local ew,fw=De,(Fo);if#ew>0X0 then local Jl=({});for Nr,wr in D,ew do for Sz,hz in D,wr do do if not(hz[0x1]==fw and hz[2]>=0)then else local tX=hz[0X0002];if not(not Jl[tX])then else(Jl)[tX]={fw[tX]};end;(hz)[0X1]=Jl[tX];(hz)[0X2]=0X1;end;end;end;end;end;until true;do return true,gD,eD;end;end;end;else if G4==12 then do(Fo)[0]=yo[S4[2]];end;S4=Re[Bo];Bo=Bo+0X1;(Fo)[0x0000]=Fo[0][S4[0x05]];Bo=Bo+1;Bo=Bo+1;S4=Re[Bo];do Bo=Bo+0X1;end;do(Fo)[0]=Fo[0][S4[0X5]];end;Bo=Bo+1;do Bo=Bo+1;end;do S4=Re[Bo];end;Bo=Bo+1;if not(not(Fo[0X00]<S4[5]))then else do Bo=S4[7];end;end;else(Fo)[0x0]=yo[S4[2]];Bo=Bo+1;do Bo=Bo+1;end;S4=Re[Bo];local la=(je[S4[6]]);Bo=Bo+0X001;local ba=nil;local ra=la[8];local wa=(0x0);local Ha=(#ra);if Ha>0 then do ba={};end;for YJ=0x001,Ha do local QJ=ra[YJ];if QJ[0X01]==0 then(ba)[YJ-0X1]={Fo,QJ[0x002]};else do ba[YJ-0X1]=ve[QJ[0X002]];end;end;end;A(De,ba);end;(Fo)[1]=NC(ba,yo,la);Bo=Bo+1;Fo[wa](Fo[wa+0X001]);wo=wa-1;do S4=Re[Bo];end;Bo=Bo+0X1;Fo[0X0]=yo[S4[2]];do S4=Re[Bo];end;do Bo=Bo+1;end;do(Fo)[0X01]=S4[0X00002];end;do Bo=Bo+1;end;do wa=0;end;do Fo[wa]=Fo[wa](Fo[wa+0X00001]);end;wo=wa;S4=Re[Bo];Bo=Bo+0X01;do if not Fo[0]then Bo=S4[6];end;end;end;end;end;end;end;else if not(G4<5)then if not(G4>=8)then if G4<6 then local UI=ve[0];do Fo[0X0]=UI[0X1][UI[0x2]];end;local GI=(0);S4=Re[Bo];Bo=Bo+1;local xI=Fo[0];Fo[GI+1]=xI;Fo[GI]=xI[S4[0X05]];Bo=Bo+0X0001;do GI=0X0;end;(Fo[GI])(Fo[GI+1]);wo=GI-0X1;Bo=Bo+0X1;do Bo=Bo+0X0001;end;Bo=Bo+1;repeat local Wf,mf=De,Fo;if#Wf>0 then local yb=({});for OX,PX in D,Wf do for re,Me in D,PX do if Me[1]==mf and Me[0X2]>=0X0 then local Tn=(Me[2]);if not(not yb[Tn])then else yb[Tn]={mf[Tn]};end;(Me)[0x1]=yb[Tn];(Me)[2]=1;end;end;end;end;until true;return;else if G4==7 then Fo[0]=yo[S4[0X2]];do Bo=Bo+1;end;Bo=Bo+1;S4=Re[Bo];Bo=Bo+0x01;local Uj=(0);Fo[0X1]=S4[2];do Bo=Bo+0X1;end;do Fo[Uj]=Fo[Uj](Fo[Uj+1]);end;wo=Uj;Bo=Bo+1;Bo=Bo+0X01;S4=Re[Bo];do Bo=Bo+0x01;end;if not Fo[0X000]then Bo=S4[6];end;else(yo)[S4[2]]=Fo[S4[7]];end;end;else if not(G4>=0x0009)then(Fo)[0]=yo[S4[0X02]];S4=Re[Bo];Bo=Bo+1;do(Fo)[0X0]=Fo[0x0][S4[5]];end;Bo=Bo+0X01;Bo=Bo+0X1;S4=Re[Bo];do Bo=Bo+1;end;do if not Fo[0]then Bo=S4[6];end;end;else do if G4==10 then do(Fo)[S4[0X7]]=yo[S4[0X2]];end;else Fo[0]=yo[S4[2]];S4=Re[Bo];do Bo=Bo+1;end;(Fo)[0X0]=Fo[0][S4[5]];do S4=Re[Bo];end;Bo=Bo+1;if not(not Fo[0])then else Bo=S4[0X6];end;end;end;end;end;else if not(G4<0X00002)then if not(G4<3)then do if G4~=4 then do if Fo[S4[7]]then do Bo=S4[0X6];end;end;end;else for Rp=S4[7],S4[0X06]do(Fo)[Rp]=nil;end;end;end;else do repeat local T4,q4=De,(Fo);if not(#T4>0)then else local GB={};do for jt,Bt in D,T4 do do for fL,vL in D,Bt do if vL[0x1]==q4 and vL[0X00002]>=0X000 then local l8=(vL[0X02]);do if not(not GB[l8])then else do(GB)[l8]={q4[l8]};end;end;end;do vL[0X1]=GB[l8];end;do(vL)[0x002]=0X1;end;end;end;end;end;end;end;until true;end;return;end;else if G4~=0x1 then(Fo)[S4[7]]=Fo[S4[0X6]]%Fo[S4[0X0001]];else local Vz=(je[S4[0X6]]);local Az,fz=Vz[0X8],nil;local Oz=#Az;if Oz>0 then fz={};for Ew=0x1,Oz do local hw=Az[Ew];if hw[1]==0X0 then fz[Ew-1]={Fo,hw[0X2]};else do(fz)[Ew-0X1]=ve[hw[0X00002]];end;end;end;A(De,fz);end;do Fo[S4[0X7]]=NC(fz,yo,Vz);end;end;end;end;end;end;end;end);if Yo then do if Po then if ao==1 then return Fo[Xo]();else return Fo[Xo](I(Fo,Xo+1,wo));end;elseif Xo then return I(Fo,Xo,ao);end;end;else if f(Po)~="string"then b(Po,0x0);else if e(Po,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;do if e(Po,'\^\.\-\:\%d\+\:\032')then(b)("Luraph Script:"..(Ae[Bo-0x1]or"(internal)")..": "..r(Po),0X0);else b(Po,0);end;end;end;end;end;else do fe=function(...)local f9,y9,x9=1,{},0x0;local Q9=m();local s9={[0X2]=y9,[1]=ce};local u9,M9=rC(...);u9=u9-0X00001;for ZH=0X0,u9 do if not(he>ZH)then break;else do(y9)[ZH]=M9[ZH+0x001];end;end;end;local J9=(Q9==F and Le or Q9);do if not ge then do M9=nil;end;elseif not(xe)then else y9[he]={n=u9>=he and u9-he+0X0001 or 0,I(M9,he+0x01,u9+1)};end;end;if J9~=Q9 then i(fe,J9);end;local Z9,v9,C9,B9=j(function()do while true do local Hu=(Re[f9]);local cu=Hu[0X004];f9=f9+0X1;if cu<0X008 then if not(cu<0x04)then if not(cu<6)then do if cu==7 then(y9)[Hu[0X07]]=-y9[Hu[6]];else y9[Hu[0x7]]=J9[Hu[2]];end;end;else if cu==5 then y9[0X0]=J9[Hu[2]];Hu=Re[f9];do f9=f9+0X1;end;y9[0X001]=Hu[2];f9=f9+1;local ab=(0);y9[ab]=y9[ab](y9[ab+1]);x9=ab;local yb=0X0000;f9=f9+1;f9=f9+0X1;f9=f9+1;(y9)[0x0]=not y9[0];f9=f9+0X1;repeat local U5,E5=De,y9;if#U5>0X00000 then local AK={};for TY,dY in D,U5 do for jI,LI in D,dY do if not(LI[1]==E5 and LI[2]>=0)then else local KB=LI[2];if not AK[KB]then(AK)[KB]={E5[KB]};end;LI[1]=AK[KB];do(LI)[0x002]=0x1;end;end;end;end;end;until true;return false,yb,yb;else(y9)[Hu[0X0007]]={I({},0X001,Hu[0X6])};end;end;else if cu<2 then if cu==1 then(y9)[Hu[7]]=T(y9[Hu[6]]);else for v6=Hu[7],Hu[0x6]do do y9[v6]=nil;end;end;end;else if cu==3 then do if y9[Hu[0X00006]]==y9[Hu[0X1]]then do f9=Hu[7];end;end;end;else if y9[Hu[6]]<=y9[Hu[0x001]]then f9=Hu[0x00007];end;end;end;end;else do if not(cu>=0Xc)then if not(cu<0x0000a)then do if cu==0xb then local ad=(Hu[6]);local bd=Hu[7];x9=bd+ad-0X1;repeat local i7,V7=De,(y9);if#i7>0 then local iK=({});do for p7,k7 in D,i7 do do for Gb,Rb in D,k7 do if not(Rb[1]==V7 and Rb[2]>=0X0)then else local AR=Rb[2];if not iK[AR]then do iK[AR]={V7[AR]};end;end;Rb[1]=iK[AR];do Rb[0X0002]=1;end;end;end;end;end;end;end;until true;return true,bd,ad;else do y9[Hu[7]]=y9[Hu[0x006]]/y9[Hu[1]];end;end;end;else do if cu==0X9 then do y9[Hu[7]]=O(y9[Hu[0X6]],y9[Hu[0X1]]);end;else end;end;end;else do if cu>=14 then if cu>=0Xf then if cu~=0x10 then(y9)[Hu[7]]=Hu[2];else repeat local HW,oW=De,(y9);if not(#HW>0X0)then else local sM={};for Ql,Cl in D,HW do for GT,fT in D,Cl do if not(fT[0X1]==oW and fT[2]>=0)then else local T4=fT[0X2];if not(not sM[T4])then else sM[T4]={oW[T4]};end;(fT)[0X00001]=sM[T4];(fT)[2]=0X001;end;end;end;end;until true;return;end;else do(y9)[Hu[0X7]]=Hu[0X0002];end;end;else if cu~=13 then f9=Hu[6];else local LW=(je[Hu[0x6]]);local ZW=nil;local vW=LW[8];local rW=(#vW);if rW>0X0 then ZW={};for ki=1,rW do local Fi=vW[ki];do if Fi[1]~=0X000 then ZW[ki-1]=ve[Fi[2]];else do ZW[ki-1]={y9,Fi[0X0002]};end;end;end;end;A(De,ZW);end;y9[Hu[7]]=NC(ZW,J9,LW);end;end;end;end;end;end;end;end;end);if not(Z9)then if f(v9)=='\s\116\114i\110\g'then if e(v9,'\097t\116e\mpt\ t\o\ \y\iel\100\ a\099ro\ss \m\eta\m\101\116\h\111\d/\C\037-c\097\l\l \098\ou\110d\097r\y')then return coroutine.yield();end;do if not(e(v9,'^\.\045\:%\100+\: '))then(b)(v9,0X0000);else(b)("\076u\114\097\112h\032S\cri\p\116\058"..(Ae[f9-1]or"(internal)")..'\:\ '..r(v9),0X000);end;end;else(b)(v9,0X0);end;else if v9 then if B9~=0X01 then return y9[C9](I(y9,C9+0x00001,x9));else do return y9[C9]();end;end;elseif not(C9)then else return I(y9,C9,B9);end;end;end;end;end;end;else if me>=0x91 then do if me==146 then do fe=function(...)local nc=(0x0);local Fc,mc=1,({});local fc=m();local Ac={[1]=ce,[0X2]=mc};local ic,Wc=rC(...);do ic=ic-0X1;end;for LW=0X00000,ic do if not(he>LW)then break;else(mc)[LW]=Wc[LW+1];end;end;local Lc=((fc==F and Le or fc));if not ge then Wc=nil;elseif not(xe)then else(mc)[he]={n=ic>=he and ic-he+1 or 0,I(Wc,he+1,ic+1)};end;do if Lc==fc then else i(fe,Lc);end;end;local Cc,rc,pc,kc=j(function()do while true do local l0=Re[Fc];local r0=(l0[0X4]);do Fc=Fc+0x1;end;do if not(r0>=0xB)then do if not(r0>=5)then if r0>=2 then do if not(r0<3)then if r0~=0X04 then else do(mc[l0[7]])[mc[l0[6]]]=mc[l0[1]];end;end;else mc[l0[0x7]]=Lc[l0[2]];end;end;else if r0==1 then Lc[l0[0X2]]=mc[0X00];do l0=Re[Fc];end;Fc=Fc+0X0001;do(mc)[0]=Lc[l0[2]];end;l0=Re[Fc];Fc=Fc+1;if not(mc[0])then else Fc=l0[6];end;else(mc)[l0[7]]={I({},1,l0[0X6])};end;end;else do if not(r0>=8)then if r0>=6 then if r0==0x7 then nc=l0[7];(mc[nc])();nc=nc-0X00001;else(mc)[0]=Lc[l0[0X2]];do Fc=Fc+1;end;do Fc=Fc+1;end;l0=Re[Fc];Fc=Fc+0x1;mc[0]=mc[0X0][l0[0X00005]];Fc=Fc+1;do Fc=Fc+1;end;l0=Re[Fc];Fc=Fc+1;do(mc)[1]=Lc[l0[0X2]];end;do Fc=Fc+0X1;end;Fc=Fc+0X00001;Fc=Fc+1;do(mc)[0]=mc[0X0]==mc[1];end;do l0=Re[Fc];end;Fc=Fc+1;if not(mc[0])then else Fc=l0[6];end;end;else(mc)[0X0]=Lc[l0[2]];local cT=0X0;do l0=Re[Fc];end;do Fc=Fc+1;end;local dT=mc[0X0];mc[cT+1]=dT;do mc[cT]=dT[l0[5]];end;l0=Re[Fc];do Fc=Fc+1;end;mc[0x2]=Lc[l0[0X0002]];do Fc=Fc+0X00001;end;Fc=Fc+0X1;Fc=Fc+0X0001;cT=0X0;(mc)[cT]=mc[cT](mc[cT+0x1],mc[cT+0X002]);nc=cT;Fc=Fc+0X01;do Fc=Fc+0X00001;end;l0=Re[Fc];Fc=Fc+1;Fc=l0[0x0006];end;else do if r0>=9 then if r0~=10 then(mc)[1]=Lc[l0[0X0002]];Fc=Fc+0X1;Fc=Fc+0x1;l0=Re[Fc];Fc=Fc+1;(mc)[1]=mc[1][l0[0X5]];Fc=Fc+1;Fc=Fc+0X1;do Fc=Fc+1;end;nc=0x01;(mc)[nc]=mc[nc]();l0=Re[Fc];Fc=Fc+1;Fc=l0[6];else(mc)[0]=Lc[l0[2]];do Fc=Fc+1;end;Fc=Fc+1;l0=Re[Fc];Fc=Fc+0X001;mc[0X1]=Lc[l0[2]];Fc=Fc+1;Fc=Fc+0x1;do l0=Re[Fc];end;Fc=Fc+0X1;if mc[1]then Fc=l0[0X6];end;end;else do if not(mc[l0[0X00007]])then else Fc=l0[6];end;end;end;end;end;end;end;end;else if not(r0>=17)then if r0>=0Xe then if r0>=15 then if r0~=0X10 then Fc=l0[6];else local Xy=(je[l0[0X6]]);local Ny,ky=Xy[0x8],nil;local ry=#Ny;if not(ry>0)then else ky={};for d7=1,ry do local n7=Ny[d7];do if n7[1]~=0X0 then do ky[d7-1]=ve[n7[0X02]];end;else ky[d7-0X001]={mc,n7[2]};end;end;end;(A)(De,ky);end;(mc)[l0[7]]=NC(ky,Lc,Xy);end;else for r2=l0[7],l0[6]do do(mc)[r2]=nil;end;end;end;else if r0<0Xc then(mc)[l0[7]]=Ac[l0[0X6]];else if r0~=13 then(Ac)[l0[6]]=mc[l0[0X07]];else mc[0]=Lc[l0[0X0002]];l0=Re[Fc];Fc=Fc+0X1;do(mc)[1]=Lc[l0[2]];end;Fc=Fc+0x1;Fc=Fc+0x1;Fc=Fc+0X1;mc[0]=mc[0X0000][mc[0X1]];Fc=Fc+0X1;Fc=Fc+0X001;do l0=Re[Fc];end;Fc=Fc+1;if not(not mc[0])then else Fc=l0[6];end;end;end;end;else if r0>=20 then do if r0>=21 then if r0==22 then if not mc[l0[0X0007]]then do Fc=l0[6];end;end;else(mc)[l0[7]]=l0[0X002];end;else do repeat local ji,ui=De,mc;do if not(#ji>0)then else local mB={};do for Ti,Ji in D,ji do do for kH,gH in D,Ji do if not(gH[0X1]==ui and gH[2]>=0X000)then else local Hi=(gH[2]);do if not(not mB[Hi])then else mB[Hi]={ui[Hi]};end;end;do(gH)[1]=mB[Hi];end;(gH)[2]=1;end;end;end;end;end;end;end;until true;end;do return;end;end;end;else if r0>=18 then if r0~=0X13 then do(mc)[2]=Lc[l0[2]];end;local Xf=0X0000;Fc=Fc+0x1;(mc[Xf])(mc[Xf+1],mc[Xf+2]);do nc=Xf-0X0001;end;Fc=Fc+1;Fc=Fc+1;l0=Re[Fc];Fc=Fc+0X1;mc[0X0]=Lc[l0[0x2]];l0=Re[Fc];Fc=Fc+0X1;do if mc[0x000]then Fc=l0[6];end;end;else do(mc)[0]=Lc[l0[2]];end;Fc=Fc+1;Fc=Fc+0X1;l0=Re[Fc];Fc=Fc+1;(mc)[0x0]=mc[0][l0[0X5]];do l0=Re[Fc];end;do Fc=Fc+1;end;do Fc=l0[6];end;end;else(mc)[0]=Lc[l0[0X2]];Fc=Fc+1;Fc=Fc+1;do l0=Re[Fc];end;Fc=Fc+0x1;Fc=l0[6];end;end;end;end;end;end;end;end);if not(Cc)then if f(rc)=='str\i\110\g'then do if e(rc,'at\116em\pt\032t\o\032\121\i\e\ld \097\099\114\os\s me\116\097m\e\116\h\o\100/\C%\-\cal\l\ bou\110\d\097ry')then return coroutine.yield();end;end;do if e(rc,"^.-:%d+: ")then(b)("Luraph Script:"..(Ae[Fc-0x1]or'\(\in\116\e\114n\097\l\)')..':\ '..r(rc),0);else(b)(rc,0X00);end;end;else(b)(rc,0X0);end;else if rc then if kc==0X1 then return mc[pc]();else return mc[pc](I(mc,pc+0X001,nc));end;elseif not(pc)then else return I(mc,pc,kc);end;end;end;end;else fe=function(...)local b6,N6=0X0001,({});local S6=(m());local x6,z6={[0X2]=N6,[1]=ce},(0X0);local J6,q6=rC(...);local P6=(S6==F and Le or S6);J6=J6-1;do for XB=0,J6 do if not(he>XB)then break;else N6[XB]=q6[XB+1];end;end;end;if not ge then q6=nil;elseif not(xe)then else(N6)[he]={n=J6>=he and J6-he+1 or 0X00,I(q6,he+1,J6+0X1)};end;do if P6==S6 then else i(fe,P6);end;end;local e6,Q6,A6,h6=j(function()while true do local BZ=Re[b6];local zZ=(BZ[0x004]);b6=b6+0X0001;do if not(zZ>=10)then if not(zZ<0X0005)then if not(zZ>=7)then if zZ~=6 then if not N6[BZ[7]]then do b6=BZ[0X6];end;end;else b6=BZ[0X0006];end;else if zZ>=0X8 then if zZ~=9 then else local xL=(je[BZ[6]]);local jL,BL=xL[8],(nil);local dL=#jL;if not(dL>0)then else do BL={};end;for y4=0X1,dL do local Q4=(jL[y4]);if Q4[0X1]~=0X00000 then BL[y4-1]=ve[Q4[2]];else do(BL)[y4-1]={N6,Q4[0X2]};end;end;end;A(De,BL);end;N6[BZ[0X07]]=NC(BL,P6,xL);end;else local ZE=(N6[BZ[0X6]]/N6[BZ[1]]);(N6)[BZ[0X00007]]=ZE-ZE%0x1;end;end;else do if not(zZ>=0X2)then do if zZ==0X01 then N6[BZ[0X0007]]=N6[BZ[6]]==N6[BZ[0X1]];else(N6)[BZ[7]]=P6[BZ[2]];end;end;else if zZ>=0x3 then do if zZ==4 then N6[BZ[7]]=BZ[2];else do repeat local ra,qa=De,N6;if#ra>0 then local eY={};for V0,L0 in D,ra do for ZZ,NZ in D,L0 do if NZ[0x00001]==qa and NZ[0X2]>=0X00000 then local g0=NZ[2];if not(not eY[g0])then else(eY)[g0]={qa[g0]};end;(NZ)[0X001]=eY[g0];NZ[0X2]=1;end;end;end;end;until true;end;local sU=(BZ[7]);return false,sU,sU;end;end;else do N6[0]=P6[BZ[2]];end;do BZ=Re[b6];end;b6=b6+1;do(N6)[0X0]=N6[0X0][BZ[0X5]];end;BZ=Re[b6];b6=b6+0X1;if not(N6[0X0])then else do b6=BZ[0X0006];end;end;end;end;end;end;else if not(zZ<0Xf)then if not(zZ<0X0011)then if zZ<0X12 then do(N6)[BZ[0x0007]]=not N6[BZ[0X06]];end;else if zZ==19 then repeat local nv,Av,jv=De,N6,(BZ[7]);if#nv>0 then local Ld={};for Xi,Ii in D,nv do for Ye,le in D,Ii do if not(le[0x1]==Av and le[0x2]>=jv)then else local AX=(le[2]);if not Ld[AX]then do Ld[AX]={Av[AX]};end;end;(le)[1]=Ld[AX];(le)[0x002]=1;end;end;end;end;until true;else(N6)[BZ[0X0007]]=N6[BZ[0x06]]-N6[BZ[0X001]];end;end;else if zZ~=0X10 then(N6)[BZ[7]]=L(N6[BZ[6]],N6[BZ[1]]);else repeat local FX,yX=De,N6;do if not(#FX>0)then else local fW={};do for So,io in D,FX do do for hn,zn in D,io do if not(zn[0x0001]==yX and zn[2]>=0X0)then else local vk=(zn[2]);do if not(not fW[vk])then else fW[vk]={yX[vk]};end;end;zn[1]=fW[vk];do zn[0X2]=1;end;end;end;end;end;end;end;end;until true;return;end;end;else if not(zZ>=0xc)then if zZ~=0Xb then N6[BZ[7]]={I({},0X00001,BZ[0X0006])};else(N6[BZ[0X7]])[N6[BZ[6]]]=N6[BZ[1]];end;else if not(zZ<0X0d)then do if zZ~=14 then(N6)[0]=P6[BZ[0X2]];b6=b6+0X1;b6=b6+0X1;do BZ=Re[b6];end;b6=b6+1;b6=BZ[6];else P6[BZ[2]]=N6[BZ[0x0007]];end;end;else local xr=ve[0];do N6[0X0000]=xr[0X1][xr[0X2]];end;b6=b6+0X001;b6=b6+1;local tr=(0);BZ=Re[b6];b6=b6+0X1;local Yr=N6[0x0];(N6)[tr+1]=Yr;do N6[tr]=Yr[BZ[0x5]];end;b6=b6+1;do tr=0X0;end;(N6)[tr]=N6[tr](N6[tr+1]);z6=tr;BZ=Re[b6];b6=b6+1;b6=BZ[0X6];end;end;end;end;end;end;end);if e6 then do if Q6 then if h6~=1 then return N6[A6](I(N6,A6+1,z6));else return N6[A6]();end;elseif A6 then return I(N6,A6,h6);end;end;else if f(Q6)~="string"then(b)(Q6,0);else if e(Q6,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(Q6,"^.-:%d+: ")then b("L\117ra\ph\ \S\099r\105\112t\:"..(Ae[b6-0X1]or"(internal)")..": "..r(Q6),0);else b(Q6,0X00);end;end;end;end;end;end;else do fe=function(...)local zy,vy=0X001,(0);local ny=({});local py=(m());local Qy={[1]=ce,[0X2]=ny};local Yy,wy=rC(...);Yy=Yy-1;local My=((py==F and Le or py));for o4=0X0000,Yy do if not(he>o4)then break;else ny[o4]=wy[o4+0x001];end;end;if not ge then wy=nil;elseif not(xe)then else(ny)[he]={n=Yy>=he and Yy-he+0X01 or 0,I(wy,he+1,Yy+1)};end;if My~=py then(i)(fe,My);end;local Sy,Fy,Vy,my=j(function()while true do local E2=(Re[zy]);local W2=(E2[0X4]);zy=zy+1;if W2<0x0009 then if not(W2<0X004)then if W2>=0X6 then if not(W2<0X00007)then if W2==8 then ny[E2[0x007]]=ny[E2[0X6]]>ny[E2[0X0001]];else repeat local m2,N2=De,(ny);do if not(#m2>0)then else local QS={};for o1,N1 in D,m2 do do for wN,iN in D,N1 do if not(iN[0x1]==N2 and iN[2]>=0X00)then else local Lx=(iN[2]);if not QS[Lx]then QS[Lx]={N2[Lx]};end;do(iN)[1]=QS[Lx];end;(iN)[2]=1;end;end;end;end;end;end;until true;return;end;else if not(ny[E2[6]]<=ny[E2[0X1]])then else zy=E2[7];end;end;else if W2~=5 then(ny)[E2[0x7]]=E2[0x00002];else do ny[E2[0X7]]=My[E2[2]];end;end;end;else if W2>=2 then if W2==3 then(ny)[E2[0x007]]=ny[E2[6]]%ny[E2[0x1]];else do zy=E2[0x6];end;end;else do if W2==0x01 then repeat local ho,fo=De,(ny);if#ho>0x000 then local n6={};for op,Wp in D,ho do for iA,OA in D,Wp do do if not(OA[0X00001]==fo and OA[2]>=0)then else local Oa=OA[2];if not n6[Oa]then n6[Oa]={fo[Oa]};end;do OA[0x001]=n6[Oa];end;do OA[2]=1;end;end;end;end;end;end;until true;local iZ=E2[7];return false,iZ,iZ;else ny[E2[7]]=not ny[E2[6]];end;end;end;end;else if not(W2>=14)then if W2<11 then if W2~=10 then do ny[5]=ny[0X004][E2[5]];end;zy=zy+1;do zy=zy+0X001;end;do E2=Re[zy];end;zy=zy+0X1;ny[0X5]=ny[0X00005][E2[0X00005]];do zy=zy+0x1;end;do zy=zy+0x01;end;E2=Re[zy];zy=zy+1;ny[5]=ny[0X5][E2[5]];zy=zy+0x01;zy=zy+0X1;E2=Re[zy];zy=zy+0X1;ny[5]=ny[0X05]~=E2[5];E2=Re[zy];zy=zy+1;zy=E2[0X6];else ny[E2[7]]=ny[E2[0x0006]]+ny[E2[0X1]];end;else if W2>=12 then do if W2==0Xd then else(ny)[E2[7]]=E2[0X002];end;end;else local DT=(ny[0X03]);local wT=4;(ny)[wT+0x01]=DT;do ny[wT]=DT[E2[5]];end;zy=zy+1;do(ny)[6]=ny[1];end;zy=zy+1;wT=4;do ny[wT]=ny[wT](ny[wT+0x1],ny[wT+0X0002]);end;do vy=wT;end;E2=Re[zy];zy=zy+1;zy=E2[0X06];end;end;else do if W2>=0x10 then if W2>=17 then if W2~=0X12 then do if not(not ny[E2[7]])then else zy=E2[6];end;end;else do(ny)[2]=My[E2[2]];end;zy=zy+1;do zy=zy+1;end;E2=Re[zy];local Jm=(0x00003);local Pm=0X002;zy=zy+1;do(ny)[0X2]=ny[2][E2[5]];end;zy=zy+0X1;zy=zy+0X00001;E2=Re[zy];zy=zy+0X0001;(ny)[0X2]=ny[0X2][E2[0X5]];do E2=Re[zy];end;zy=zy+1;(ny)[0X2]=ny[0x0002][E2[5]];do zy=zy+0X0001;end;zy=zy+0x1;E2=Re[zy];zy=zy+1;local Mm=ny[2];(ny)[Jm+1]=Mm;do ny[Jm]=Mm[E2[5]];end;E2=Re[zy];do zy=zy+0x01;end;(ny)[5]=My[E2[2]];zy=zy+0X00001;ny[0X0006]=ny[0X00];zy=zy+0X1;Jm=5;local Qm=(0X0);if Pm~=0 then vy=Jm+Pm-0x1;end;local Sm,km=nil,nil;if Pm~=0X1 then Sm,km=rC(ny[Jm](I(ny,Jm+1,vy)));else Sm,km=rC(ny[Jm]());end;if Qm==0X1 then vy=Jm-0x001;else if Qm~=0 then Sm=Jm+Qm-2;vy=Sm+0X1;else Sm=Sm+Jm-0X00001;do vy=Sm;end;end;local BD=(0);for TV=Jm,Sm do do BD=BD+0X01;end;(ny)[TV]=km[BD];end;end;zy=zy+0X1;do Jm=0X003;end;ny[Jm]=ny[Jm](I(ny,Jm+0X001,vy));vy=Jm;zy=zy+1;ny[4]=ny[3];E2=Re[zy];zy=zy+0X0001;do if not(not ny[0X0004])then else zy=E2[6];end;end;end;else do ny[E2[7]]=ny[E2[0x6]];end;end;else do if W2==15 then(ny)[E2[7]]={I({},1,E2[6])};else local O4=je[E2[0X0006]];local N4=nil;local B4=O4[0X00008];local q4=(#B4);if q4>0 then do N4={};end;for G8=0X1,q4 do local j8=B4[G8];do if j8[1]==0X0 then do(N4)[G8-1]={ny,j8[0X2]};end;else do(N4)[G8-1]=ve[j8[2]];end;end;end;end;(A)(De,N4);end;do ny[E2[7]]=NC(N4,My,O4);end;end;end;end;end;end;end;end;end);if Sy then do if Fy then if my==1 then return ny[Vy]();else return ny[Vy](I(ny,Vy+1,vy));end;elseif not(Vy)then else do return I(ny,Vy,my);end;end;end;else if f(Fy)=="string"then if e(Fy,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(e(Fy,"\^\046\-\058\037\100\043\:\ "))then b(Fy,0X0);else(b)("L\117ra\p\104\ \083cr\i\112\116\:"..(Ae[zy-0x1]or"(internal)")..":\ "..r(Fy),0);end;else(b)(Fy,0x00000);end;end;end;end;end;end;else if me>=150 then if not(me<0x97)then if me~=0X098 then fe=function(...)local dv=(0);local Ov,nv=1,{};local Ev=(m());local lv={[1]=ce,[0X2]=nv};local Nv=(Ev==F and Le or Ev);local Kv,Vv=rC(...);Kv=Kv-1;for w6=0X0,Kv do if not(he>w6)then break;else nv[w6]=Vv[w6+0x1];end;end;if not ge then Vv=nil;elseif not(xe)then else nv[he]={n=Kv>=he and Kv-he+1 or 0,I(Vv,he+1,Kv+0x1)};end;if Nv~=Ev then i(fe,Nv);end;local jv,Tv,Gv,iv=j(function()while true do local Oa=Re[Ov];local Ea=(Oa[0x004]);Ov=Ov+0X1;if not(Ea>=15)then if Ea<7 then if Ea<0X3 then do if Ea<0X1 then nv[0X003]=Nv[Oa[2]];do Oa=Re[Ov];end;Ov=Ov+1;(nv)[0x00004]=Oa[2];Oa=Re[Ov];local Xs=(0X05);local is=0x00004;Ov=Ov+1;(nv)[0X00005]=Nv[Oa[0X2]];Ov=Ov+0x1;(nv)[6]=nv[2];Ov=Ov+0x1;do(nv)[Xs]=nv[Xs](nv[Xs+0x1]);end;dv=Xs;Ov=Ov+1;do Ov=Ov+1;end;Ov=Ov+1;(nv)[0X0004]=nv[is]..nv[is+0X0001];do Ov=Ov+0X1;end;Xs=3;(nv[Xs])(nv[Xs+0X0001]);dv=Xs-1;Ov=Ov+1;Ov=Ov+1;Oa=Re[Ov];Ov=Ov+0X00001;do Ov=Oa[6];end;else if Ea==0X00002 then nv[0]=Nv[Oa[2]];do Oa=Re[Ov];end;Ov=Ov+0x0001;do(nv)[1]=Oa[2];end;local r5,e5=0X0,(nil);do Ov=Ov+0X1;end;(nv)[r5]=nv[r5](nv[r5+1]);dv=r5;Oa=Re[Ov];Ov=Ov+1;do nv[1]=Nv[Oa[0X0002]];end;Ov=Ov+0X1;Ov=Ov+1;Oa=Re[Ov];Ov=Ov+1;local G5=(je[Oa[6]]);local c5=G5[0X8];local g5=(#c5);if g5>0 then e5={};do for mn=1,g5 do local Rn=(c5[mn]);do if Rn[1]~=0X00000 then e5[mn-0X1]=ve[Rn[2]];else(e5)[mn-0X1]={nv,Rn[2]};end;end;end;end;A(De,e5);end;do(nv)[0X2]=NC(e5,Nv,G5);end;local v5=2;Ov=Ov+1;r5=0X1;local T5=0X3;if v5~=0 then dv=r5+v5-1;end;local W5,D5=nil,nil;do if v5==0x1 then W5,D5=rC(nv[r5]());else do W5,D5=rC(nv[r5](I(nv,r5+0X1,dv)));end;end;end;if T5==0X1 then do dv=r5-1;end;else if T5==0X0 then W5=W5+r5-1;do dv=W5;end;else W5=r5+T5-0x2;do dv=W5+1;end;end;local r2=(0x0);for gA=r5,W5 do r2=r2+1;do(nv)[gA]=D5[r2];end;end;end;Oa=Re[Ov];Ov=Ov+0X001;if nv[0X1]then Ov=Oa[6];end;else do(nv)[Oa[0X7]]=true;end;end;end;end;else do if not(Ea>=0X0005)then do if Ea==0X4 then nv[Oa[0x7]]=Nv[Oa[0x2]];else nv[0X0]=Nv[Oa[2]];do Oa=Re[Ov];end;Ov=Ov+1;nv[0x0]=nv[0X0][Oa[5]];do Oa=Re[Ov];end;Ov=Ov+1;if not nv[0]then Ov=Oa[6];end;end;end;else if Ea~=0X006 then repeat local of,Yf,Af=De,nv,(Oa[7]);if not(#of>0)then else local Hh={};for wK,PK in D,of do do for OA,sA in D,PK do if sA[0x1]==Yf and sA[0x2]>=Af then local RZ=(sA[2]);if not(not Hh[RZ])then else(Hh)[RZ]={Yf[RZ]};end;sA[0x1]=Hh[RZ];sA[2]=1;end;end;end;end;end;until true;else nv[Oa[0x7]]=nv[Oa[6]]/nv[Oa[0x1]];end;end;end;end;else if not(Ea<0XB)then if not(Ea>=13)then if Ea==0Xc then local jp=Oa[0X7];for e9=jp,jp+(Oa[6]-0X001)do nv[e9]=Vv[he+(e9-jp)+1];end;else(nv)[0X0]=Nv[Oa[2]];Ov=Ov+1;Ov=Ov+0X1;Oa=Re[Ov];do Ov=Ov+1;end;(nv)[1]=Oa[0X2];local Zn=(0);Ov=Ov+1;(nv[Zn])(nv[Zn+1]);dv=Zn-1;do Ov=Ov+0X1;end;Ov=Ov+1;Oa=Re[Ov];Ov=Ov+1;nv[0]=Nv[Oa[0X00002]];Ov=Ov+0X00001;do Ov=Ov+0X0001;end;Ov=Ov+1;do dv=0;end;nv[dv]=nv[dv]();Oa=Re[Ov];Ov=Ov+1;do if not(not(Oa[0X2]<=nv[0]))then else Ov=Oa[0x7];end;end;end;else do if Ea==14 then(nv)[Oa[7]]=G(nv[Oa[6]],nv[Oa[1]]);else local jr,nr=Oa[7],Oa[0X006];if nr==0X0 then else dv=jr+nr-0x1;end;local gr,Pr,qr=Oa[1],nil,nil;if nr==1 then Pr,qr=rC(nv[jr]());else Pr,qr=rC(nv[jr](I(nv,jr+0X00001,dv)));end;if gr~=0X00001 then if gr==0 then Pr=Pr+jr-0x1;do dv=Pr;end;else Pr=jr+gr-0X002;dv=Pr+0X00001;end;local FM=0;for Tk=jr,Pr do FM=FM+0X001;(nv)[Tk]=qr[FM];end;else dv=jr-1;end;end;end;end;else if not(Ea<9)then if Ea~=10 then nv[0X0]=Nv[Oa[0X2]];Ov=Ov+0X1;Ov=Ov+0X1;do Oa=Re[Ov];end;Ov=Ov+0X1;if not(nv[0x00])then else Ov=Oa[0X0006];end;else nv[0X0]=Nv[Oa[0X2]];Oa=Re[Ov];Ov=Ov+0X0001;(nv)[0X00001]=Oa[0X02];Ov=Ov+1;local BW=0x0;nv[BW]=nv[BW](nv[BW+0X1]);do dv=BW;end;Ov=Ov+1;Ov=Ov+1;Oa=Re[Ov];do Ov=Ov+0X1;end;nv[0X00000]=nv[0x0][Oa[0X5]];Ov=Ov+0X1;Ov=Ov+1;Oa=Re[Ov];Ov=Ov+1;do if nv[0X0]then do Ov=Oa[0X006];end;end;end;end;else if Ea==8 then nv[Oa[7]]=Oa[2];else do(nv)[Oa[0X7]]={I({},1,Oa[6])};end;end;end;end;end;else do if Ea>=23 then if Ea>=0X01B then do if not(Ea<0X1d)then if Ea~=30 then else(nv)[0x00]=Nv[Oa[2]];Ov=Ov+1;Ov=Ov+1;Oa=Re[Ov];Ov=Ov+1;(nv)[0x0000]=nv[0][Oa[5]];do Oa=Re[Ov];end;Ov=Ov+0x1;if not(not nv[0])then else Ov=Oa[0x06];end;end;else if Ea~=0x1C then local BM=Oa[7];local EM,CM=nv[BM+1],(nv[BM+2]);local lM=nv[BM];do(nv)[BM]=g(function()for eq=lM,EM,CM do(d)(true,eq);end;end);end;Ov=Oa[6];else do nv[0x00]=Nv[Oa[0x2]];end;Oa=Re[Ov];Ov=Ov+1;(nv)[0]=nv[0X0][Oa[5]];Ov=Ov+1;Ov=Ov+0X1;do Oa=Re[Ov];end;do Ov=Ov+1;end;if not nv[0]then Ov=Oa[0X00006];end;end;end;end;else if Ea<0X19 then if Ea==24 then local HU=je[Oa[0x6]];local WU=HU[8];local kU=nil;local OU=(#WU);if not(OU>0X0)then else kU={};for uU=0X1,OU do local MU=(WU[uU]);if MU[0X1]~=0X0 then do kU[uU-1]=ve[MU[2]];end;else kU[uU-1]={nv,MU[0x2]};end;end;A(De,kU);end;(nv)[Oa[7]]=NC(kU,Nv,HU);else local OD=(0);local WD=ve[0];do(nv)[0]=WD[1][WD[0x2]];end;Ov=Ov+1;Ov=Ov+1;Oa=Re[Ov];Ov=Ov+0x1;local cD=nv[0X0];(nv)[OD+1]=cD;do(nv)[OD]=cD[Oa[5]];end;Ov=Ov+1;OD=0x000;(nv)[OD]=nv[OD](nv[OD+0X1]);dv=OD;Ov=Ov+0x1;Ov=Ov+0X001;Oa=Re[Ov];do Ov=Ov+1;end;if not(not nv[0x0])then else Ov=Oa[6];end;end;else if Ea==0X1a then do nv[0X00]=Nv[Oa[2]];end;Oa=Re[Ov];Ov=Ov+1;(nv)[1]=Oa[0X2];Ov=Ov+1;local Yf=0;do(nv)[Yf]=nv[Yf](nv[Yf+0x00001]);end;dv=Yf;Ov=Ov+1;Ov=Ov+0X0001;do Oa=Re[Ov];end;do Ov=Ov+1;end;do if nv[0X0000]then Ov=Oa[6];end;end;else nv[Oa[0x7]]=nv[Oa[0X6]]-nv[Oa[1]];end;end;end;else if not(Ea>=0X13)then if not(Ea<17)then if Ea==18 then nv[0]=Nv[Oa[0X002]];Ov=Ov+1;dv=0X0;nv[dv]=nv[dv]();Ov=Ov+1;do Ov=Ov+0X1;end;do Oa=Re[Ov];end;do Ov=Ov+1;end;if not(nv[0])then else do Ov=Oa[6];end;end;else if nv[Oa[0x7]]then Ov=Oa[0x6];end;end;else if Ea==0X10 then local gK=ve[0];nv[0]=gK[1][gK[2]];do Oa=Re[Ov];end;local YK=(0X0);Ov=Ov+0X1;local FK=nv[0X0];(nv)[YK+1]=FK;(nv)[YK]=FK[Oa[5]];do Ov=Ov+1;end;YK=0;(nv[YK])(nv[YK+1]);dv=YK-1;Ov=Ov+0X1;repeat local N4,x4=De,(nv);if#N4>0X0 then local r4={};do for PQ,pQ in D,N4 do for XK,aK in D,pQ do if not(aK[1]==x4 and aK[0x002]>=0X0)then else local Yg=(aK[2]);do if not(not r4[Yg])then else do(r4)[Yg]={x4[Yg]};end;end;end;(aK)[0x00001]=r4[Yg];aK[0X2]=1;end;end;end;end;end;until true;return;else nv[0X000]=Nv[Oa[2]];do Ov=Ov+1;end;Ov=Ov+0X1;Oa=Re[Ov];Ov=Ov+0X0001;nv[0]=nv[0][Oa[5]];Oa=Re[Ov];Ov=Ov+1;(nv)[0X1]=Oa[0x2];local Pw=(0);do Ov=Ov+0X1;end;(nv)[Pw]=nv[Pw](nv[Pw+0x1]);do dv=Pw;end;do Ov=Ov+0X1;end;do Ov=Ov+1;end;Oa=Re[Ov];Ov=Ov+1;if not nv[0]then Ov=Oa[6];end;end;end;else if Ea<0X015 then if Ea~=20 then repeat local pY,JY=De,(nv);if#pY>0X0 then local Q4={};do for vb,Bb in D,pY do for R5,s5 in D,Bb do if not(s5[0X1]==JY and s5[2]>=0X00)then else local Nt=(s5[0x2]);if not Q4[Nt]then do(Q4)[Nt]={JY[Nt]};end;end;s5[0X0001]=Q4[Nt];s5[0x2]=1;end;end;end;end;end;until true;return;else for HF=Oa[0X7],Oa[6]do nv[HF]=nil;end;end;else if Ea~=22 then Ov=Oa[6];else local QP,mP=Oa[7],(Oa[1]-0X1)*50;local pP=nv[QP];for be=0X1,Oa[0X6]do(pP)[mP+be]=nv[QP+be];end;end;end;end;end;end;end;end;end);do if jv then if Tv then do if iv~=0X0001 then return nv[Gv](I(nv,Gv+1,dv));else return nv[Gv]();end;end;elseif Gv then return I(nv,Gv,iv);end;else do if f(Tv)~='\st\114in\g'then(b)(Tv,0);else do if e(Tv,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(e(Tv,"^.-:%d+: "))then b(Tv,0X0000);else(b)('Lura\ph\ S\c\114\i\112\116\:'..(Ae[Ov-1]or"(internal)")..": "..r(Tv),0x0);end;end;end;end;end;end;else fe=function(...)local jT,RT={},0X000;local yT=0X1;local VT=({[1]=ce,[0X2]=jT});local sT=m();local AT,uT=rC(...);do AT=AT-0X1;end;local XT=((sT==F and Le or sT));for MO=0,AT do if he>MO then(jT)[MO]=uT[MO+1];else do break;end;end;end;do if not ge then uT=nil;elseif not(xe)then else(jT)[he]={n=AT>=he and AT-he+0X1 or 0X000,I(uT,he+1,AT+1)};end;end;if XT==sT then else(i)(fe,XT);end;local JT,IT,YT,oT=j(function()while true do local hX=Re[yT];local pX=(hX[4]);yT=yT+1;if not(pX<0X7)then if not(pX>=0X000B)then if pX<9 then if pX==8 then do jT[hX[7]]=jT[hX[6]]>jT[hX[0X1]];end;else repeat local qh,ih=De,jT;if not(#qh>0X00)then else local Th=({});for Kp,Ep in D,qh do for Qd,Vd in D,Ep do if not(Vd[1]==ih and Vd[0x2]>=0X0)then else local DT=(Vd[0X002]);if not(not Th[DT])then else(Th)[DT]={ih[DT]};end;do Vd[0X1]=Th[DT];end;(Vd)[0X00002]=1;end;end;end;end;until true;local go=(hX[7]);do return false,go,go;end;end;else if pX==10 then(jT)[hX[7]]=jT[hX[0x006]]>=jT[hX[1]];else do for V1=hX[7],hX[6]do jT[V1]=nil;end;end;end;end;else do if pX<0XD then if pX~=0XC then(jT)[hX[0X7]]=hX[0X02];else do repeat local M2,g2=De,(jT);if not(#M2>0)then else local AG=({});for ie,pe in D,M2 do for a2,Z2 in D,pe do do if not(Z2[1]==g2 and Z2[0X02]>=0X0)then else local re=(Z2[2]);do if not AG[re]then AG[re]={g2[re]};end;end;(Z2)[1]=AG[re];do(Z2)[2]=1;end;end;end;end;end;end;until true;end;local NB=hX[0x07];return false,NB,NB+hX[0X00006]-2;end;else if pX~=0xe then yT=hX[6];else(jT)[0X00000]=XT[hX[0X002]];yT=yT+1;yT=yT+0X1;hX=Re[yT];yT=yT+1;(jT)[0]=jT[0][hX[5]];do yT=yT+0X1;end;do yT=yT+0x1;end;hX=Re[yT];yT=yT+1;if not jT[0X00]then do yT=hX[6];end;end;end;end;end;end;else if pX>=3 then if not(pX>=0X00005)then if pX==4 then local gn=hX[0X7];local Wn=(hX[6]);do RT=gn+Wn-0x1;end;do repeat local j2,m2=De,(jT);if#j2>0 then local Hl={};for Ms,qs in D,j2 do for Eo,Ro in D,qs do if not(Ro[1]==m2 and Ro[0x2]>=0X0)then else local hG=Ro[2];if not(not Hl[hG])then else Hl[hG]={m2[hG]};end;(Ro)[1]=Hl[hG];do(Ro)[0X2]=1;end;end;end;end;end;until true;end;return true,gn,Wn;else repeat local n3,T3=De,(jT);if#n3>0X0 then local E0={};for TP,ZP in D,n3 do for cJ,OJ in D,ZP do if OJ[0x001]==T3 and OJ[2]>=0 then local pD=(OJ[0x0002]);if not(not E0[pD])then else(E0)[pD]={T3[pD]};end;OJ[0X1]=E0[pD];(OJ)[0X2]=1;end;end;end;end;until true;return;end;else do if pX==0x6 then(jT)[hX[0x0007]]=XT[hX[0x2]];else local gY=(je[hX[6]]);local AY=(nil);local OY=(gY[8]);local dY=(#OY);if dY>0 then AY={};do for pu=0X00001,dY do local Pu=(OY[pu]);if Pu[0X1]~=0 then AY[pu-0X0001]=ve[Pu[2]];else(AY)[pu-0X1]={jT,Pu[0x2]};end;end;end;(A)(De,AY);end;do jT[hX[7]]=NC(AY,XT,gY);end;end;end;end;else if not(pX<0X001)then if pX==2 then jT[0]=XT[hX[0x2]];yT=yT+1;yT=yT+1;hX=Re[yT];yT=yT+1;local DZ=(0);jT[0X0001]=hX[2];do yT=yT+1;end;jT[DZ]=jT[DZ](jT[DZ+0X00001]);do RT=DZ;end;yT=yT+0X1;yT=yT+0X1;yT=yT+1;(jT)[0]=not jT[0];hX=Re[yT];do yT=yT+0X1;end;yT=hX[0X0006];else end;else jT[hX[7]]={I({},1,hX[0X6])};end;end;end;end;end);if JT then do if IT then if oT~=1 then do return jT[YT](I(jT,YT+1,RT));end;else return jT[YT]();end;elseif not(YT)then else do return I(jT,YT,oT);end;end;end;else if f(IT)~="\st\114\105\110g"then(b)(IT,0x00000);else if e(IT,"\097\116t\e\m\p\116\032to y\i\e\ld\ a\cr\111\115\115 m\e\116a\m\101t\h\111\100\/\C\037\-\cal\l\ b\oun\100a\114\y")then return coroutine.yield();end;do if e(IT,"\^\.\045:%\d+:\ ")then b('L\117\114a\ph\ \Sc\114i\pt\:'..(Ae[yT-0X1]or"(internal)")..": "..r(IT),0X0000);else(b)(IT,0x0);end;end;end;end;end;end;else fe=function(...)local UJ=(0);local jJ,gJ=1,({});local eJ=(m());local cJ,FJ=rC(...);local oJ={[0X2]=gJ,[1]=ce};do cJ=cJ-0X1;end;local YJ=((eJ==F and Le or eJ));for ls=0,cJ do if not(he>ls)then break;else gJ[ls]=FJ[ls+0X1];end;end;do if not ge then FJ=nil;elseif xe then gJ[he]={n=cJ>=he and cJ-he+1 or 0X0,I(FJ,he+0X0001,cJ+1)};end;end;if YJ~=eJ then(i)(fe,YJ);end;local iJ,EJ,qJ,JJ=j(function()while true do local Ms=(Re[jJ]);local Ks=(Ms[4]);jJ=jJ+0X00001;do if Ks<0X0009 then if not(Ks>=4)then do if Ks>=2 then if Ks==0x3 then do gJ[0X5]=YJ[Ms[0x2]];end;do jJ=jJ+1;end;jJ=jJ+1;do jJ=jJ+0X1;end;UJ=5;do gJ[UJ]=gJ[UJ]();end;jJ=jJ+1;jJ=jJ+1;Ms=Re[jJ];jJ=jJ+0X001;do(gJ)[6]=YJ[Ms[2]];end;jJ=jJ+1;jJ=jJ+0X1;jJ=jJ+1;(gJ)[0X5]=gJ[0X5]-gJ[0X6];do Ms=Re[jJ];end;do jJ=jJ+1;end;if not(not(gJ[5]<Ms[0x5]))then else jJ=Ms[7];end;else gJ[0X5]=YJ[Ms[2]];jJ=jJ+0X1;jJ=jJ+0X1;Ms=Re[jJ];jJ=jJ+0X0001;if not(gJ[0X0005])then else jJ=Ms[0x6];end;end;else if Ks~=1 then local jR=Ms[0x7];for pv=jR,jR+(Ms[0X06]-0X01)do gJ[pv]=FJ[he+(pv-jR)+1];end;else local fw=(je[Ms[6]]);local Ew=fw[8];local Mw,Yw=#Ew,(nil);if Mw>0 then Yw={};do for KC=1,Mw do local TC=Ew[KC];if TC[1]==0X0 then do Yw[KC-0X1]={gJ,TC[0X0002]};end;else do Yw[KC-0x1]=ve[TC[2]];end;end;end;end;(A)(De,Yw);end;gJ[Ms[0x00007]]=NC(Yw,YJ,fw);end;end;end;else if not(Ks<6)then if not(Ks>=0x7)then gJ[Ms[0X7]]=gJ[Ms[0x6]]/gJ[Ms[1]];else if Ks==0x8 then if gJ[Ms[0X00007]]then jJ=Ms[6];end;else if gJ[Ms[6]]<=gJ[Ms[1]]then jJ=Ms[7];end;end;end;else if Ks==0X0005 then for T8=Ms[7],Ms[0X6]do(gJ)[T8]=nil;end;else(gJ)[0X005]=nil;Ms=Re[jJ];jJ=jJ+1;(gJ)[0X6]=YJ[Ms[2]];jJ=jJ+1;jJ=jJ+0X00001;local h2=(8);do Ms=Re[jJ];end;jJ=jJ+1;local d2,g2=3,je[Ms[6]];local S2=nil;local q2=g2[0X8];local M2=#q2;do if M2>0 then S2={};for Kw=1,M2 do local rw=(q2[Kw]);do if rw[0X0001]~=0 then(S2)[Kw-1]=ve[rw[0X2]];else(S2)[Kw-0X1]={gJ,rw[2]};end;end;end;A(De,S2);end;end;local J2=6;(gJ)[0x7]=NC(S2,YJ,g2);jJ=jJ+0X1;local p2=(2);if p2==0 then else UJ=J2+p2-1;end;local O2,W2=nil,(nil);if p2~=1 then O2,W2=rC(gJ[J2](I(gJ,J2+1,UJ)));else O2,W2=rC(gJ[J2]());end;if d2==1 then UJ=J2-0X1;else if d2==0x0 then O2=O2+J2-0x1;UJ=O2;else do O2=J2+d2-2;end;do UJ=O2+1;end;end;local sD=0;for XS=J2,O2 do sD=sD+0X1;gJ[XS]=W2[sD];end;end;jJ=jJ+0X0001;gJ[0x08]=gJ[0X5];jJ=jJ+1;repeat local PK,cK=De,(gJ);if not(#PK>0X0)then else local zW={};for PP,QP in D,PK do do for Sr,Qr in D,QP do do if not(Qr[0X00001]==cK and Qr[0X2]>=0)then else local iu=Qr[0X002];if not(not zW[iu])then else(zW)[iu]={cK[iu]};end;(Qr)[1]=zW[iu];(Qr)[2]=0x001;end;end;end;end;end;end;until true;return false,h2,h2;end;end;end;else if Ks<14 then do if Ks>=0X00b then if not(Ks<12)then do if Ks~=0x00D then gJ[Ms[0x7]]=Ms[0X00002];else(gJ)[Ms[7]]={I({},0x1,Ms[6])};end;end;else local wX=(Ms[7]);local PX,hX=gJ[wX]();do if PX then for Hv=1,Ms[0X1]do(gJ)[wX+Hv]=hX[Hv];end;jJ=Ms[6];end;end;end;else do if Ks~=10 then(gJ)[Ms[0X00007]]=-gJ[Ms[6]];else(gJ)[0X005]=YJ[Ms[0X2]];jJ=jJ+1;UJ=5;gJ[UJ]=gJ[UJ]();Ms=Re[jJ];do jJ=jJ+1;end;if not(not gJ[5])then else do jJ=Ms[0X6];end;end;end;end;end;end;else if Ks>=0X10 then if not(Ks<17)then if Ks~=0X12 then else do gJ[0X05]=YJ[Ms[2]];end;jJ=jJ+0X01;jJ=jJ+0x1;Ms=Re[jJ];jJ=jJ+1;if not(not gJ[5])then else do jJ=Ms[0x6];end;end;end;else jJ=Ms[0X0006];end;else if Ks==0X000f then repeat local Ur,Br=De,(gJ);if not(#Ur>0X0)then else local If={};for qf,af in D,Ur do for Ha,La in D,af do if not(La[1]==Br and La[2]>=0)then else local BY=(La[2]);if not If[BY]then(If)[BY]={Br[BY]};end;(La)[1]=If[BY];(La)[0X00002]=0X01;end;end;end;end;until true;return;else(gJ)[Ms[7]]=YJ[Ms[0x02]];end;end;end;end;end;end;end);if not(iJ)then do if f(EJ)~="string"then(b)(EJ,0);else do if not(e(EJ,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if e(EJ,"^.-:%d+: ")then b("Luraph Script:"..(Ae[jJ-0X1]or"(internal)").."\058\ "..r(EJ),0);else b(EJ,0X0);end;end;end;else if EJ then if JJ==0X001 then return gJ[qJ]();else return gJ[qJ](I(gJ,qJ+1,UJ));end;elseif qJ then return I(gJ,qJ,JJ);end;end;end;end;else if me>=148 then do if me~=0X95 then do fe=function(...)local WQ,FQ=1,{};local sQ=(m());local qQ,fQ=(sQ==F and Le or sQ),{[0X2]=FQ,[1]=ce};local cQ,DQ=rC(...);cQ=cQ-1;for lM=0x00000,cQ do if not(he>lM)then break;else FQ[lM]=DQ[lM+0x1];end;end;local IQ=(0);do if not ge then DQ=nil;elseif xe then do(FQ)[he]={n=cQ>=he and cQ-he+1 or 0X00000,I(DQ,he+0x1,cQ+1)};end;end;end;if qQ==sQ then else(i)(fe,qQ);end;local oQ,ZQ,VQ,rQ=j(function()do while true do local h4=(Re[WQ]);local A4=h4[4];WQ=WQ+1;if A4>=8 then do if not(A4<0Xc)then if A4>=0X000e then if A4==0XF then else WQ=h4[0X6];end;else if A4~=13 then do(FQ)[0X1]=qQ[h4[0X02]];end;WQ=WQ+1;local jw=0x1;WQ=WQ+1;h4=Re[WQ];WQ=WQ+1;do FQ[0X2]=FQ[0X00][h4[5]];end;WQ=WQ+0X1;WQ=WQ+1;h4=Re[WQ];WQ=WQ+0X01;do FQ[2]=FQ[0X2][h4[0X5]];end;do WQ=WQ+0X1;end;FQ[jw]=FQ[jw](FQ[jw+0X1]);IQ=jw;WQ=WQ+0X1;WQ=WQ+1;do h4=Re[WQ];end;WQ=WQ+1;do if not(h4[0X2]<FQ[1])then WQ=h4[7];end;end;else(FQ)[0X00001]=qQ[h4[2]];h4=Re[WQ];do WQ=WQ+0x1;end;(FQ)[2]=h4[0X02];h4=Re[WQ];WQ=WQ+0X1;(FQ)[0x3]=qQ[h4[0X2]];h4=Re[WQ];WQ=WQ+1;do(FQ)[0X3]=FQ[3][h4[5]];end;WQ=WQ+0x1;WQ=WQ+0X1;local Na=(0);h4=Re[WQ];local pa=(0X3);WQ=WQ+0X01;(FQ)[4]=h4[0x2];h4=Re[WQ];WQ=WQ+1;FQ[5]=h4[2];h4=Re[WQ];do WQ=WQ+1;end;(FQ)[6]=h4[2];WQ=WQ+0X1;local ca=4;do if ca~=0 then IQ=pa+ca-0X1;end;end;local Aa,wa=nil,nil;do if ca==0x1 then Aa,wa=rC(FQ[pa]());else Aa,wa=rC(FQ[pa](I(FQ,pa+0X1,IQ)));end;end;if Na~=0X1 then do if Na~=0 then Aa=pa+Na-0x02;IQ=Aa+1;else do Aa=Aa+pa-1;end;do IQ=Aa;end;end;end;local my=(0);for TC=pa,Aa do my=my+1;(FQ)[TC]=wa[my];end;else IQ=pa-0X0001;end;WQ=WQ+0X01;do WQ=WQ+0X1;end;WQ=WQ+0X1;pa=1;(FQ[pa])(I(FQ,pa+1,IQ));IQ=pa-0X1;end;end;else do if not(A4>=10)then if A4~=0X9 then if not(not(FQ[h4[6]]<=FQ[h4[0X1]]))then else WQ=h4[7];end;else local Sc,Dc=h4[0x7],(h4[0X00006]);IQ=Sc+Dc-1;do repeat local GT,AT=De,FQ;if#GT>0 then local Gt=({});do for fg,ag in D,GT do for YM,dM in D,ag do do if dM[0X01]==AT and dM[2]>=0X000 then local ea=dM[2];if not Gt[ea]then(Gt)[ea]={AT[ea]};end;dM[1]=Gt[ea];(dM)[2]=1;end;end;end;end;end;end;until true;end;return true,Sc,Dc;end;else if A4==11 then for qg=h4[0X07],h4[6]do(FQ)[qg]=nil;end;else FQ[h4[7]]={I({},0X0001,h4[6])};end;end;end;end;end;else if not(A4>=4)then if A4>=2 then do if A4~=0X03 then local sW=(je[h4[0X006]]);local BW,OW=sW[8],nil;local JW=(#BW);do if not(JW>0)then else OW={};for j6=1,JW do local l6=(BW[j6]);if l6[0X1]~=0X000 then OW[j6-1]=ve[l6[0X00002]];else OW[j6-1]={FQ,l6[0X2]};end;end;A(De,OW);end;end;FQ[h4[7]]=NC(OW,qQ,sW);else do repeat local g9,E9=De,(FQ);if not(#g9>0x0)then else local Z2=({});for Lp,Bp in D,g9 do for KO,HO in D,Bp do do if not(HO[1]==E9 and HO[2]>=0)then else local cJ=HO[2];if not(not Z2[cJ])then else Z2[cJ]={E9[cJ]};end;do(HO)[1]=Z2[cJ];end;do HO[2]=1;end;end;end;end;end;end;until true;end;return;end;end;else if A4~=0X1 then do(FQ)[h4[7]]=T(FQ[h4[6]]);end;else FQ[h4[0x7]]=qQ[h4[0X2]];end;end;else if A4<6 then if A4==5 then do(FQ)[h4[7]]=FQ[h4[0X0006]]/FQ[h4[1]];end;else local No=h4[0X007];local zo=g(function(...)d();for Dc,ic,bc,Rc,Ic,Hc,zc,ec,Zc,vc in...do d(true,{Dc,ic,bc,Rc,Ic,Hc,zc,ec,Zc,vc});end;end);zo(FQ[No],FQ[No+1],FQ[No+0X2]);do IQ=No;end;do FQ[No]=zo;end;WQ=h4[6];end;else do if A4~=0X7 then repeat local Wq,Tq,iq=De,FQ,(h4[7]);if#Wq>0X0 then local Ea=({});for tr,kr in D,Wq do for Jb,sb in D,kr do if sb[0X01]==Tq and sb[2]>=iq then local y4=(sb[0X2]);if not Ea[y4]then do(Ea)[y4]={Tq[y4]};end;end;sb[1]=Ea[y4];(sb)[2]=1;end;end;end;end;until true;else do(FQ)[h4[0X7]]=h4[0X2];end;end;end;end;end;end;end;end;end);if not(oQ)then if f(ZQ)=="string"then if e(ZQ,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(ZQ,'^\.-:\037d+\:\ ')then b("Luraph Script:"..(Ae[WQ-1]or"(internal)")..': '..r(ZQ),0X0);else b(ZQ,0X0);end;else b(ZQ,0);end;else do if ZQ then if rQ==1 then return FQ[VQ]();else return FQ[VQ](I(FQ,VQ+1,IQ));end;elseif VQ then do return I(FQ,VQ,rQ);end;end;end;end;end;end;else fe=function(...)local FR,MR=1,({});local LR={[0X2]=MR,[1]=ce};local VR=m();local BR=((VR==F and Le or VR));local DR,uR=rC(...);local PR=0X00;do DR=DR-0x1;end;do for AG=0X0000,DR do do if he>AG then MR[AG]=uR[AG+1];else break;end;end;end;end;if not ge then do uR=nil;end;elseif not(xe)then else(MR)[he]={n=DR>=he and DR-he+0x001 or 0,I(uR,he+1,DR+0X1)};end;if BR==VR then else(i)(fe,BR);end;local tR,NR,pR,TR=j(function()do while true do local k6=Re[FR];local g6=(k6[0x4]);FR=FR+0X01;do if not(g6<0X9)then if g6>=0XE then if g6>=16 then do if g6<0x11 then MR[k6[7]]=k(MR[k6[6]],MR[k6[0X1]]);else do if g6==18 then MR[0x0]=BR[k6[2]];FR=FR+1;FR=FR+1;k6=Re[FR];FR=FR+1;(MR)[0X000]=MR[0][k6[0X5]];FR=FR+1;do FR=FR+0X01;end;k6=Re[FR];FR=FR+0X0001;if not MR[0]then FR=k6[6];end;else(BR)[k6[0X2]]=MR[k6[0X7]];end;end;end;end;else if g6~=0Xf then do if not MR[k6[0X00007]]then FR=k6[0x06];end;end;else do if MR[k6[0X00006]]<=MR[k6[1]]then FR=k6[7];end;end;end;end;else if g6<0X00B then if g6==10 then local cV=(ve[0x0000]);(MR)[0]=cV[1][cV[2]];local QV=0;k6=Re[FR];FR=FR+1;local MV=MR[0X00000];MR[QV+1]=MV;(MR)[QV]=MV[k6[0X5]];FR=FR+1;QV=0;do MR[QV]=MR[QV](MR[QV+1]);end;do PR=QV;end;k6=Re[FR];do FR=FR+1;end;FR=k6[0X006];else do MR[k6[7]]={I({},1,k6[0X06])};end;end;else do if not(g6>=12)then(MR)[k6[7]]=#MR[k6[6]];else do if g6~=13 then MR[k6[7]]=BR[k6[0X02]];else MR[0]=BR[k6[2]];do FR=FR+0X1;end;PR=0;(MR)[PR]=MR[PR]();FR=FR+0X1;FR=FR+0X1;FR=FR+1;do MR[0x0000]=not MR[0X0];end;k6=Re[FR];FR=FR+1;FR=k6[0X006];end;end;end;end;end;end;else do if not(g6<4)then if not(g6>=6)then do if g6==0x5 then(MR)[k6[7]]=true;else do for rF=k6[0X7],k6[0X6]do(MR)[rF]=nil;end;end;end;end;else if g6<7 then(MR)[k6[7]]=k6[0X2];else if g6==8 then else do FR=k6[6];end;end;end;end;else do if g6<2 then if g6~=1 then repeat local sK,WK=De,(MR);if not(#sK>0)then else local XH={};for Wq,rq in D,sK do for dZ,pZ in D,rq do if not(pZ[0x1]==WK and pZ[0X0002]>=0)then else local G0=pZ[2];if not(not XH[G0])then else(XH)[G0]={WK[G0]};end;do pZ[1]=XH[G0];end;pZ[2]=1;end;end;end;end;until true;local OC=k6[0X7];return false,OC,OC;else repeat local gQ,KQ=De,MR;if#gQ>0 then local hD={};do for C2,T2 in D,gQ do for fB,WB in D,T2 do do if WB[1]==KQ and WB[2]>=0X0 then local Zx=(WB[2]);do if not hD[Zx]then hD[Zx]={KQ[Zx]};end;end;WB[0x01]=hD[Zx];(WB)[2]=0X001;end;end;end;end;end;end;until true;return;end;else if g6~=3 then local B0=(je[k6[0X6]]);local s0=(nil);local N0=B0[8];local j0=#N0;if j0>0X0000 then s0={};for tg=0X01,j0 do local kg=N0[tg];do if kg[1]==0X0 then do s0[tg-1]={MR,kg[2]};end;else s0[tg-1]=ve[kg[2]];end;end;end;A(De,s0);end;MR[k6[0X7]]=NC(s0,BR,B0);else local Y4=(k6[7]);local a4,C4=MR[Y4]();if a4 then FR=k6[0X6];(MR)[Y4+0x3]=C4;end;end;end;end;end;end;end;end;end;end;end);if not(tR)then if f(NR)~="string"then(b)(NR,0x000);else if e(NR,"\097\116\116e\m\pt\032t\o\032\y\105\e\l\100\ a\cr\o\s\115\ \m\e\116a\m\e\116\h\111\100\047\C\%-\099\097\l\l\ \098ou\110\da\114\y")then return coroutine.yield();end;if not(e(NR,"^.-:%d+: "))then b(NR,0X000);else(b)("Luraph Script:"..(Ae[FR-0X01]or"(internal)")..'\:\ '..r(NR),0X0);end;end;else if NR then if TR==1 then return MR[pR]();else return MR[pR](I(MR,pR+0X1,PR));end;elseif pR then return I(MR,pR,TR);end;end;end;end;end;else do fe=function(...)local A3,j3=1,{};local y3=(m());local r3,a3=rC(...);local Y3={[1]=ce,[0X2]=j3};local v3=((y3==F and Le or y3));r3=r3-1;for fH=0x00,r3 do if he>fH then(j3)[fH]=a3[fH+0X01];else break;end;end;local J3=0X0;if not ge then do a3=nil;end;elseif xe then(j3)[he]={n=r3>=he and r3-he+1 or 0X00000,I(a3,he+0X1,r3+1)};end;do if v3==y3 then else(i)(fe,v3);end;end;local K3,S3,E3,w3=j(function()do while true do local c5=(Re[A3]);local l5=c5[4];A3=A3+0X1;if l5<0x10 then if not(l5<0X0008)then if not(l5>=0XC)then if not(l5<0X0a)then do if l5~=0XB then do if not(not j3[c5[0X07]])then else do A3=c5[6];end;end;end;else do A3=c5[0x06];end;end;end;else if l5==0X09 then local G0=(c5[7]);local m0=g(function(...)(d)();for CH,xH,wH,nH,uH,sH,mH,JH,QH,EH in...do d(true,{CH,xH,wH,nH,uH,sH,mH,JH,QH,EH});end;end);m0(j3[G0],j3[G0+1],j3[G0+0x2]);J3=G0;(j3)[G0]=m0;A3=c5[6];else for Te=c5[7],c5[0X06]do do(j3)[Te]=nil;end;end;end;end;else do if not(l5>=0Xe)then if l5~=0X0D then do if j3[c5[0X0006]]~=c5[5]then else A3=c5[0X7];end;end;else do j3[c5[7]]=v3[c5[0X2]];end;end;else if l5==0XF then do if not(c5[2]<j3[c5[1]])then A3=c5[0X007];end;end;else j3[1]=v3[c5[2]];A3=A3+1;A3=A3+0X1;c5=Re[A3];do A3=A3+0x1;end;if not j3[0X00001]then A3=c5[6];end;end;end;end;end;else if not(l5<0X4)then if not(l5>=0X006)then do if l5~=5 then(j3)[0X1]=v3[c5[2]];do A3=A3+1;end;A3=A3+1;do c5=Re[A3];end;do A3=A3+0X1;end;(j3[1])[c5[0X2]]=c5[0X005];c5=Re[A3];A3=A3+0x0001;j3[1]=v3[c5[2]];c5=Re[A3];do A3=A3+0X01;end;do(j3[0X1])[c5[2]]=c5[5];end;do c5=Re[A3];end;A3=A3+1;local Tj=(ve[0X0]);do(j3)[0x1]=v3[c5[0X2]];end;do A3=A3+0x1;end;J3=0X0001;local Uj=(0x0001);j3[J3]();J3=J3-0x1;c5=Re[A3];A3=A3+0x001;do(j3)[1]=v3[c5[2]];end;c5=Re[A3];A3=A3+0X0001;do(j3)[0X0002]=v3[c5[0X2]];end;A3=A3+1;(j3[Uj])(j3[Uj+0x001]);J3=Uj-0x1;A3=A3+0X1;A3=A3+0x01;A3=A3+1;j3[0X00001]=Tj[1][Tj[0X0002]];local rj=j3[0X00001];A3=A3+0X00001;A3=A3+0X0001;c5=Re[A3];A3=A3+0X01;Uj=0X0001;(j3)[Uj+0x1]=rj;j3[Uj]=rj[c5[5]];do A3=A3+1;end;Uj=0x01;(j3[Uj])(j3[Uj+1]);J3=Uj-0x00001;A3=A3+0X00001;do repeat local lJ,AJ=De,(j3);if not(#lJ>0X0000)then else local tk={};for Kd,Wd in D,lJ do for jI,hI in D,Wd do if not(hI[1]==AJ and hI[0X2]>=0)then else local bo=(hI[2]);if not(not tk[bo])then else(tk)[bo]={AJ[bo]};end;do(hI)[1]=tk[bo];end;(hI)[2]=1;end;end;end;end;until true;end;return;else do(j3)[0x0001]=v3[c5[2]];end;A3=A3+0x1;A3=A3+1;do c5=Re[A3];end;A3=A3+0x1;(j3[1])[c5[2]]=c5[0x0005];c5=Re[A3];A3=A3+1;(j3)[0X1]=v3[c5[2]];c5=Re[A3];A3=A3+1;do(j3)[1]=j3[1][c5[0x0005]];end;A3=A3+0X1;do A3=A3+1;end;do c5=Re[A3];end;do A3=A3+1;end;j3[1]=j3[1][c5[5]];c5=Re[A3];A3=A3+0x1;(j3)[0X1]=j3[0x0001][c5[5]];do c5=Re[A3];end;do A3=A3+0X00001;end;if not(c5[0X2]<=j3[1])then A3=c5[0X07];end;end;end;else if l5==0X7 then j3[0]=v3[c5[0X02]];do c5=Re[A3];end;do A3=A3+0X1;end;(j3)[0X00]=j3[0][c5[5]];A3=A3+1;do A3=A3+1;end;do c5=Re[A3];end;A3=A3+1;if j3[0]then A3=c5[6];end;else(j3)[1]=false;c5=Re[A3];local sA=1;do A3=A3+0x1;end;(v3)[c5[2]]=j3[0X0001];c5=Re[A3];A3=A3+1;(j3)[0X01]=v3[c5[2]];do A3=A3+1;end;A3=A3+0X01;do c5=Re[A3];end;A3=A3+0x001;do(j3)[2]=c5[2];end;A3=A3+1;j3[sA]=j3[sA](j3[sA+1]);J3=sA;A3=A3+0X1;A3=A3+1;c5=Re[A3];A3=A3+1;if not j3[0X1]then A3=c5[6];end;end;end;else if not(l5<0x2)then if l5==0X3 then(j3)[0X2]=v3[c5[0X0002]];c5=Re[A3];do A3=A3+0X0001;end;(j3)[2]=j3[2][c5[5]];c5=Re[A3];A3=A3+1;if not(j3[0X2])then else do A3=c5[0x6];end;end;else do j3[c5[0x00007]]=T(j3[c5[0X6]]);end;end;else if l5==0X00001 then(j3)[0x1]=v3[c5[0X002]];c5=Re[A3];do A3=A3+0X1;end;do(j3)[1]=j3[1][c5[5]];end;do c5=Re[A3];end;A3=A3+0X01;if not(not j3[0x01])then else A3=c5[0X00006];end;else(j3)[c5[7]]=O(j3[c5[6]],j3[c5[0X0001]]);end;end;end;end;else if not(l5<0x000018)then if l5>=28 then do if not(l5>=30)then do if l5~=0X00001D then local LG,oG=je[c5[6]],nil;local iG=LG[0X08];local aG=(#iG);if aG>0 then oG={};for OI=0X1,aG do local zI=iG[OI];if zI[1]==0X0 then(oG)[OI-1]={j3,zI[0X2]};else oG[OI-0X1]=ve[zI[0X00002]];end;end;(A)(De,oG);end;(j3)[c5[7]]=NC(oG,v3,LG);else end;end;else do if not(l5>=31)then do j3[2]=v3[c5[2]];end;A3=A3+0x001;A3=A3+1;A3=A3+0X1;J3=0X2;j3[J3]=j3[J3]();c5=Re[A3];A3=A3+0X1;if not(j3[0x2])then else A3=c5[0X0006];end;else if l5==0x20 then(j3)[c5[7]]=j3[c5[0X006]]%j3[c5[1]];else do(j3)[0X1]=v3[c5[0X02]];end;A3=A3+1;A3=A3+1;c5=Re[A3];A3=A3+1;if not(j3[0x1])then else do A3=c5[0x6];end;end;end;end;end;end;end;else do if not(l5>=26)then if l5==25 then j3[1]=v3[c5[2]];do A3=A3+1;end;A3=A3+0X1;local S1=0X00001;do A3=A3+1;end;(j3)[0X2]=j3[0x0];do A3=A3+1;end;j3[S1]=j3[S1](j3[S1+0x0001]);do J3=S1;end;do c5=Re[A3];end;A3=A3+0X1;if j3[0x1]==c5[0X5]then else A3=c5[0X7];end;else do(j3)[0X1]=v3[c5[0X2]];end;c5=Re[A3];A3=A3+0X1;do j3[1]=j3[1][c5[5]];end;c5=Re[A3];A3=A3+0X1;if not j3[0X00001]then do A3=c5[6];end;end;end;else do if l5~=0X001B then do(j3)[0X0]=v3[c5[2]];end;c5=Re[A3];local vu=0;A3=A3+1;do j3[0X1]=c5[0X00002];end;A3=A3+1;j3[vu]=j3[vu](j3[vu+0X1]);do J3=vu;end;A3=A3+1;do A3=A3+0x1;end;c5=Re[A3];A3=A3+0X1;A3=c5[0X6];else local ru=(c5[7]);local Tu,Ou=j3[ru]();if Tu then A3=c5[0X6];j3[ru+0X3]=Ou;end;end;end;end;end;end;else if l5<20 then if not(l5>=18)then if l5~=0X0011 then if not(c5[2]<=j3[c5[0x001]])then A3=c5[0X07];end;else(j3)[0X1]=v3[c5[0X2]];A3=A3+0X00001;A3=A3+1;c5=Re[A3];do A3=A3+0x00001;end;(j3[0X1])[c5[0X0002]]=c5[5];c5=Re[A3];A3=A3+1;A3=c5[6];end;else if l5==0X13 then j3[c5[0X00007]]={I({},0X1,c5[0X0006])};else do repeat local qT,oT=De,(j3);if not(#qT>0X00)then else local ms={};for cU,XU in D,qT do for DV,FV in D,XU do if not(FV[0x1]==oT and FV[2]>=0X0)then else local t8=FV[2];if not(not ms[t8])then else ms[t8]={oT[t8]};end;do FV[0X1]=ms[t8];end;(FV)[2]=0X001;end;end;end;end;until true;end;return;end;end;else if l5<22 then if l5==21 then(j3)[1]=v3[c5[0X2]];c5=Re[A3];do A3=A3+0X1;end;(j3)[0x1]=j3[1][c5[0X5]];do A3=A3+0x01;end;A3=A3+1;c5=Re[A3];A3=A3+0X1;if not(not j3[0X1])then else A3=c5[0x0006];end;else j3[0X002]=v3[c5[2]];do A3=A3+0X1;end;do A3=A3+0x1;end;c5=Re[A3];A3=A3+0x1;local Yp=2;do j3[3]=c5[0X02];end;A3=A3+0x0001;j3[0X004]=true;A3=A3+1;j3[Yp]=j3[Yp](j3[Yp+1],j3[Yp+0x2]);local Sp=j3[0X2];do J3=Yp;end;A3=A3+0X00001;A3=A3+0X001;c5=Re[A3];A3=A3+0X0001;do Yp=0X00002;end;(j3)[Yp+1]=Sp;do j3[Yp]=Sp[c5[5]];end;do c5=Re[A3];end;A3=A3+0x1;do j3[4]=c5[0x2];end;do A3=A3+0X1;end;Yp=0X2;(j3)[Yp]=j3[Yp](j3[Yp+0X1],j3[Yp+0X2]);J3=Yp;A3=A3+1;A3=A3+0x1;c5=Re[A3];A3=A3+0X1;(j3)[2]=j3[0X2][c5[0X5]];c5=Re[A3];do A3=A3+0X001;end;A3=c5[6];end;else do if l5==0X00017 then(j3)[c5[7]]=c5[2];else(j3)[1]=true;c5=Re[A3];A3=A3+0X1;(v3)[c5[0X2]]=j3[0x1];c5=Re[A3];A3=A3+1;A3=c5[0X006];end;end;end;end;end;end;end;end;end);if not(K3)then if f(S3)~="\st\114\105ng"then b(S3,0x0);else if not(e(S3,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if e(S3,'\094\.\-\:\%\d\+\:\032')then(b)("Luraph Script:"..(Ae[A3-1]or"(internal)")..'\058\032'..r(S3),0);else b(S3,0X0);end;end;end;else if S3 then if w3==1 then do return j3[E3]();end;else return j3[E3](I(j3,E3+1,J3));end;elseif not(E3)then else return I(j3,E3,w3);end;end;end;end;end;end;end;end;else if me>=159 then if me>=0X000A2 then if not(me>=163)then fe=function(...)local Qn,un=0X01,({});local an=m();local sn,Mn=rC(...);local Bn=((an==F and Le or an));do sn=sn-0X01;end;local kn,On={[0X2]=un,[1]=ce},(0X000);for E_=0,sn do if not(he>E_)then break;else(un)[E_]=Mn[E_+1];end;end;if not ge then Mn=nil;elseif not(xe)then else(un)[he]={n=sn>=he and sn-he+0X0001 or 0,I(Mn,he+1,sn+0X1)};end;if Bn==an then else i(fe,Bn);end;local Nn,Dn,gn,In=j(function()while true do local C3=Re[Qn];local P3=(C3[0X00004]);do Qn=Qn+0X1;end;if P3<15 then if P3>=0X7 then if not(P3>=0x0b)then if not(P3<9)then if P3~=0X00A then local SJ=(C3[0x06]);local eJ=(un[SJ]);do for uL=SJ+1,C3[1]do do eJ=eJ..un[uL];end;end;end;un[C3[7]]=eJ;else if not(not(un[C3[6]]<=un[C3[1]]))then else Qn=C3[7];end;end;else do if P3==8 then for uv=C3[0X7],C3[0X6]do un[uv]=nil;end;else if not(not un[C3[0X7]])then else Qn=C3[0X00006];end;end;end;end;else if P3>=0Xd then do if P3~=14 then do(un)[4]=Bn[C3[0X02]];end;local VB=0X4;do Qn=Qn+0X1;end;un[5]=un[0X0];do Qn=Qn+0x1;end;un[6]=un[0X01];Qn=Qn+1;un[VB]=un[VB](un[VB+1],un[VB+0X002]);On=VB;Qn=Qn+0x0001;Qn=Qn+1;Qn=Qn+0x1;un[0X05]=un[0X0003];C3=Re[Qn];Qn=Qn+0X1;if not(un[0X5])then else do Qn=C3[0X6];end;end;else un[12]=un[0X04][un[11]];Qn=Qn+1;local TL=un[0X000C];Qn=Qn+0x1;C3=Re[Qn];Qn=Qn+1;local uL=0Xd;(un)[uL+1]=TL;un[uL]=TL[C3[0X5]];C3=Re[Qn];Qn=Qn+1;un[0XF]=C3[2];do Qn=Qn+1;end;uL=0Xd;(un)[uL]=un[uL](un[uL+0x1],un[uL+2]);On=uL;Qn=Qn+0X1;Qn=Qn+1;C3=Re[Qn];Qn=Qn+0X1;(un)[0XE]=Bn[C3[0X00002]];Qn=Qn+0x1;Qn=Qn+0x00001;C3=Re[Qn];Qn=Qn+0X01;(un)[15]=un[0XD][C3[5]];Qn=Qn+1;do Qn=Qn+0X1;end;do C3=Re[Qn];end;do Qn=Qn+0X1;end;un[15]=un[0xf][C3[0x0005]];do Qn=Qn+1;end;Qn=Qn+0X00001;Qn=Qn+1;do uL=0xE;end;do(un)[uL]=un[uL](un[uL+0X1]);end;On=uL;Qn=Qn+0X1;Qn=Qn+1;C3=Re[Qn];Qn=Qn+0X1;if not(un[0X0E]<un[5])then else do Qn=C3[0X7];end;end;end;end;else if P3~=12 then un[C3[7]]=un[C3[6]]/un[C3[0X1]];else(un)[C3[7]]=un[C3[6]];end;end;end;else if not(P3<0X3)then if P3>=5 then if P3==0x6 then if not(not(un[C3[6]]<C3[5]))then else Qn=C3[0X007];end;else(un)[C3[0X7]]={I({},1,C3[6])};end;else if P3~=4 then local NZ=(je[C3[0X6]]);local nZ=(nil);local QZ=(NZ[0X00008]);local rZ=#QZ;if not(rZ>0)then else nZ={};for cY=1,rZ do local eY=QZ[cY];if eY[0X01]~=0X0 then(nZ)[cY-1]=ve[eY[2]];else nZ[cY-0x1]={un,eY[2]};end;end;(A)(De,nZ);end;(un)[C3[0X7]]=NC(nZ,Bn,NZ);else end;end;else do if P3>=0X001 then if P3~=0x2 then do(un)[0x00010]=un[13][C3[0X5]];end;Qn=Qn+1;Qn=Qn+0x0001;Qn=Qn+0X1;un[17]=un[12];do Qn=Qn+0X1;end;do(un)[0X7]=un[0x00011];end;Qn=Qn+0X1;do un[0X0006]=un[16];end;Qn=Qn+1;(un)[5]=un[0Xf];do C3=Re[Qn];end;Qn=Qn+1;do Qn=C3[6];end;else local Gd=C3[7];local Rd,Ad=un[Gd]();if Rd then Qn=C3[6];do(un)[Gd+0X0003]=Ad;end;end;end;else local Dd,rd=15,un[0xC];un[Dd+1]=rd;(un)[Dd]=rd[C3[5]];C3=Re[Qn];do Qn=Qn+1;end;do un[0X11]=C3[2];end;Qn=Qn+0X1;(un)[0X12]=true;Qn=Qn+0X1;do Dd=15;end;On=Dd+4-0X01;un[Dd]=un[Dd](I(un,Dd+0X0001,On));do On=Dd;end;Qn=Qn+0x1;do Qn=Qn+0X1;end;C3=Re[Qn];Qn=Qn+0X1;if not un[15]then Qn=C3[0X00006];end;end;end;end;end;else do if not(P3>=0X16)then if P3<0X12 then do if not(P3>=0X0010)then(un)[C3[0X00007]]=#un[C3[6]];else if P3==0x0011 then Bn[C3[0X2]]=un[C3[0X7]];else repeat local QF,nF=De,un;if#QF>0X000 then local pw=({});for sP,AP in D,QF do for is,ys in D,AP do if not(ys[1]==nF and ys[0x2]>=0X0)then else local Z9=(ys[0x02]);if not pw[Z9]then do pw[Z9]={nF[Z9]};end;end;(ys)[1]=pw[Z9];ys[0X2]=0x00001;end;end;end;end;until true;return;end;end;end;else if P3>=20 then if P3==0X15 then(un)[C3[7]]=un[C3[6]]>=un[C3[0X1]];else un[C3[0x007]]=C3[0X0002];end;else do if P3==19 then do un[0x6]=C3[2]/C3[5];end;do Qn=Qn+1;end;do un[0X7]=nil;end;C3=Re[Qn];Qn=Qn+0X1;(un)[0X008]=C3[0X2];Qn=Qn+0x1;un[9]=#un[4];C3=Re[Qn];Qn=Qn+1;do(un)[0X00a]=C3[0X002];end;C3=Re[Qn];local Xv=(8);Qn=Qn+0X0001;local hv,Wv=un[Xv+0X1],un[Xv+2];local Uv=(un[Xv]);un[Xv]=g(function()for RI=Uv,hv,Wv do(d)(true,RI);end;end);do Qn=C3[6];end;else un[C3[0X7]]=Bn[C3[0x002]];end;end;end;end;else if not(P3>=26)then if not(P3<24)then if P3==25 then do repeat local P_,B_=De,un;if not(#P_>0X000)then else local iB=({});for XE,JE in D,P_ do for fM,rM in D,JE do if not(rM[0X001]==B_ and rM[0x2]>=0)then else local Qx=(rM[0X0002]);if not iB[Qx]then(iB)[Qx]={B_[Qx]};end;do(rM)[0X1]=iB[Qx];end;do(rM)[0X2]=0X1;end;end;end;end;end;until true;end;local mO=(C3[0x007]);return false,mO,mO;else do un[C3[7]]=un[C3[6]]+un[C3[1]];end;end;else if P3~=23 then do(un)[C3[0X0007]]=false;end;else un[C3[0X7]]=un[C3[6]]-un[C3[1]];end;end;else if not(P3>=0x01C)then if P3~=27 then Qn=C3[6];else(un)[0X10]=un[0XD][C3[5]];do Qn=Qn+0X01;end;do Qn=Qn+1;end;do C3=Re[Qn];end;Qn=Qn+1;if not(un[16]<un[0x6])then Qn=C3[7];end;end;else if P3==29 then do if un[C3[0X0007]]then Qn=C3[6];end;end;else un[C3[0X0007]]=C3[2]/C3[5];end;end;end;end;end;end;end;end);do if not(Nn)then if f(Dn)~="string"then b(Dn,0X0);else if e(Dn,"\097\116t\e\m\112t\ \116o\ \121i\e\l\100 a\c\114\111\115\s \109\et\097\m\101\116h\111d/\067\%-\c\097l\l \098o\117n\d\097r\y")then return coroutine.yield();end;do if not(e(Dn,"\094.\-\058\037\100\+\058\032"))then b(Dn,0x00000);else(b)("Luraph Script:"..(Ae[Qn-1]or'\040\105nt\ern\097l\)').."\058 "..r(Dn),0);end;end;end;else if Dn then if In~=0x1 then do return un[gn](I(un,gn+0X1,On));end;else return un[gn]();end;elseif not(gn)then else do return I(un,gn,In);end;end;end;end;end;else do if me~=0x0000a4 then fe=function(...)local Lw,Ow=0X01,{};local Rw=m();local iw,aw=rC(...);local Hw={[1]=ce,[0X2]=Ow};iw=iw-1;for I9=0,iw do do if he>I9 then(Ow)[I9]=aw[I9+0X1];else do break;end;end;end;end;local Yw=(0X0);local Pw=(Rw==F and Le or Rw);do if not ge then aw=nil;elseif not(xe)then else do(Ow)[he]={n=iw>=he and iw-he+0x1 or 0,I(aw,he+1,iw+0X00001)};end;end;end;if Pw==Rw then else i(fe,Pw);end;local cw,lw,mw,Zw=j(function()while true do local be=Re[Lw];local ie=be[0x00004];Lw=Lw+1;if not(ie>=6)then if not(ie<0X0003)then if ie>=4 then if ie~=0X5 then(Ow)[be[7]]={I({},0X01,be[0x6])};else Ow[0]=Pw[be[2]];Lw=Lw+1;Lw=Lw+1;be=Re[Lw];Lw=Lw+0X01;Ow[0X1]=be[0X002];Lw=Lw+1;local Rj,Aj=0,(ve[0X0]);do Ow[Rj]=Ow[Rj](Ow[Rj+0X0001]);end;Yw=Rj;Lw=Lw+0X1;Ow[0X01]=Aj[1][Aj[0X2]];Lw=Lw+0X1;Lw=Lw+0x1;be=Re[Lw];Lw=Lw+0X1;Ow[0X1]=Ow[0X00001][be[0X5]];do Lw=Lw+0X1;end;do Ow[0X002]=Ow[0];end;Lw=Lw+1;Rj=0X1;do(Ow)[Rj]=Ow[Rj](Ow[Rj+1]);end;Yw=Rj;do be=Re[Lw];end;Lw=Lw+1;if not Ow[0X01]then Lw=be[0X6];end;end;else do Ow[be[0X7]]=Ow[be[6]];end;end;else if not(ie<1)then if ie==0X00002 then do for OP=be[0X0007],be[0x006]do do(Ow)[OP]=nil;end;end;end;else do(Ow)[be[0x07]]=Pw[be[0X2]];end;end;else do if Ow[be[0x6]]<Ow[be[0X00001]]then Lw=be[7];end;end;end;end;else if not(ie>=0X00009)then if ie>=7 then if ie==0x0008 then do(Ow)[be[0x7]]=Ow[be[0X0006]]*Ow[be[1]];end;else repeat local eg,Xg=De,(Ow);do if#eg>0 then local Ih=({});for vY,pY in D,eg do for Tg,bg in D,pY do if bg[0X0001]==Xg and bg[0X00002]>=0 then local ql=(bg[2]);if not(not Ih[ql])then else(Ih)[ql]={Xg[ql]};end;(bg)[0X1]=Ih[ql];do bg[0X2]=0X1;end;end;end;end;end;end;until true;return;end;else end;else do if ie<11 then do if ie~=0Xa then local bI=ve[0X0000];do Ow[0x00001]=bI[1][bI[2]];end;be=Re[Lw];do Lw=Lw+0X1;end;Ow[1]=Ow[0X0001][be[0x5]];local lI=1;Lw=Lw+1;Lw=Lw+1;Lw=Lw+1;(Ow)[0X002]=Ow[0];do Lw=Lw+0X1;end;bI=ve[1];Ow[0x003]=bI[0X1][bI[0x00002]];Lw=Lw+1;(Ow[lI])(Ow[lI+0X1],Ow[lI+2]);Yw=lI-1;Lw=Lw+0x1;Lw=Lw+0X00001;Lw=Lw+1;bI=ve[0X1];(Ow)[0X0001]=bI[0x1][bI[2]];be=Re[Lw];local KI=Ow[1];Lw=Lw+0x1;lI=0X00001;Ow[lI+0X1]=KI;Ow[lI]=KI[be[5]];Lw=Lw+0X1;lI=1;Ow[lI](Ow[lI+0X01]);Yw=lI-1;be=Re[Lw];Lw=Lw+0X1;Lw=be[0X06];else local ip,pp=je[be[0x6]],(nil);local Fp=ip[8];local np=#Fp;if np>0 then do pp={};end;for PQ=1,np do local mQ=(Fp[PQ]);do if mQ[0X001]==0 then(pp)[PQ-0X1]={Ow,mQ[2]};else(pp)[PQ-1]=ve[mQ[0X2]];end;end;end;(A)(De,pp);end;(Ow)[be[0x7]]=NC(pp,Pw,ip);end;end;else if ie==12 then do Lw=be[6];end;else do Ow[be[7]]=be[2];end;end;end;end;end;end;end;end);do if cw then if lw then if Zw==1 then do return Ow[mw]();end;else return Ow[mw](I(Ow,mw+0X0001,Yw));end;elseif mw then return I(Ow,mw,Zw);end;else if f(lw)~='\s\116r\105n\103'then(b)(lw,0x0);else if not(e(lw,"\097\116te\m\p\116\ \116\o\ \121iel\d \097\c\114o\115\s\ \m\e\116\097\m\e\116\104\111\d\/\067\037\-\099\097\ll\ \098o\117\110da\114\121"))then else do return coroutine.yield();end;end;if not(e(lw,'\^\.\-:\037\d+\058 '))then b(lw,0);else b("Luraph Script:"..(Ae[Lw-1]or'\040\in\116\e\114\110al\041')..": "..r(lw),0X0);end;end;end;end;end;else do fe=function(...)local gD=1;local dD,fD=0X0,({});local cD=m();local qD=((cD==F and Le or cD));local oD,DD=rC(...);local nD=({[1]=ce,[0X2]=fD});oD=oD-1;for HT=0X000,oD do do if not(he>HT)then do break;end;else fD[HT]=DD[HT+0X1];end;end;end;do if not ge then DD=nil;elseif xe then(fD)[he]={n=oD>=he and oD-he+1 or 0,I(DD,he+1,oD+1)};end;end;if qD~=cD then i(fe,qD);end;do while true do local LC=(Re[gD]);local uC=(LC[0x4]);gD=gD+1;return(function(s,W,...)local z=Client.Backpack:GetChildren();for r=1,#z do local g=z[r];if g.Name:lower():find("microchip")then return true;end;end;local f=Client.Character:GetChildren();for y=1,#f do local b=f[y];if b:IsA("Tool")and b.Name:lower():find("microchip")then return true;end;end;end)(fD,ve,...);end;end;end;end;end;end;end;else do if me<160 then fe=function(...)local EY=0X1;local uY=({});local QY=m();local hY=({[1]=ce,[0X2]=uY});local DY=(QY==F and Le or QY);local OY,JY=rC(...);OY=OY-1;do for eK=0X0,OY do if he>eK then do(uY)[eK]=JY[eK+1];end;else break;end;end;end;if not ge then JY=nil;elseif not(xe)then else do uY[he]={n=OY>=he and OY-he+1 or 0,I(JY,he+0X1,OY+0X01)};end;end;local PY=(0X0);do if DY~=QY then(i)(fe,DY);end;end;local XY,pY,MY,yY=j(function()while true do local ta=(Re[EY]);local la=ta[4];EY=EY+0X00001;if not(la<8)then if not(la>=0X0C)then if la<0x0a then if la~=9 then else do uY[ta[0x00007]]=uY[ta[0x0006]]/uY[ta[1]];end;end;else do if la~=11 then uY[ta[0x7]]={I({},0X1,ta[6])};else do(uY)[0X0]=DY[ta[2]];end;ta=Re[EY];EY=EY+0x1;local Et=0;(uY)[1]=ta[0X2];EY=EY+1;(uY)[Et]=uY[Et](uY[Et+0x1]);PY=Et;do EY=EY+0X1;end;do EY=EY+0x001;end;local rt=(ve[0]);do EY=EY+0X1;end;uY[0X1]=rt[1][rt[0X002]];do ta=Re[EY];end;do EY=EY+1;end;(uY)[0x1]=uY[1][ta[5]];EY=EY+0X01;uY[0X02]=uY[0X0];EY=EY+1;do Et=1;end;(uY)[Et]=uY[Et](uY[Et+1]);PY=Et;EY=EY+1;EY=EY+0X1;ta=Re[EY];do EY=EY+1;end;if not(not uY[0X1])then else EY=ta[6];end;end;end;end;else if la<0XE then do if la~=0XD then local AK=je[ta[0X06]];local sK,CK=AK[8],nil;local UK=(#sK);if not(UK>0)then else do CK={};end;do for Eq=0X1,UK do local bq=(sK[Eq]);if bq[1]~=0x0 then(CK)[Eq-0X001]=ve[bq[0X2]];else do CK[Eq-0x0001]={uY,bq[0X2]};end;end;end;end;(A)(De,CK);end;do uY[ta[0X00007]]=NC(CK,DY,AK);end;else uY[ta[0X7]]=-uY[ta[6]];end;end;else if la==15 then repeat local OO,lO=De,uY;if not(#OO>0X0)then else local pr=({});do for Sh,Nh in D,OO do for rt,st in D,Nh do if st[0X001]==lO and st[0X0002]>=0 then local W2=st[2];if not pr[W2]then(pr)[W2]={lO[W2]};end;st[0x001]=pr[W2];st[0X02]=0X01;end;end;end;end;end;until true;return;else uY[ta[7]]=ta[2];end;end;end;else if la<0X0004 then if not(la>=0X00002)then if la~=1 then(uY)[0x1]=DY[ta[0x2]];do ta=Re[EY];end;EY=EY+0X00001;local IB=1;(uY)[2]=ta[2];do EY=EY+1;end;(uY[IB])(uY[IB+0X1]);PY=IB-1;ta=Re[EY];EY=EY+1;EY=ta[6];else EY=ta[6];end;else if la~=3 then local mK=(ta[0X7]);for PJ=mK,mK+(ta[6]-0X1)do(uY)[PJ]=JY[he+(PJ-mK)+0x1];end;else for Ea=ta[7],ta[0X6]do do uY[Ea]=nil;end;end;end;end;else if not(la>=0x6)then if la==5 then local Ms=(ta[0X7]);local cs,fs=uY[Ms],((ta[0x1]-1)*0X00032);do for lG=1,ta[0X6]do(cs)[fs+lG]=uY[Ms+lG];end;end;else do uY[ta[7]]=ta[0X2];end;end;else if la==7 then(uY)[ta[0X7]]=DY[ta[2]];else local XW=ve[0X000];uY[1]=XW[0x1][XW[0X0002]];do ta=Re[EY];end;EY=EY+0X1;uY[1]=uY[0X001][ta[0X0005]];EY=EY+0X1;local CW=(nil);EY=EY+0X01;EY=EY+1;do uY[0X2]=uY[0X00000];end;EY=EY+1;do XW=ve[1];end;(uY)[0X3]=XW[0X1][XW[2]];do ta=Re[EY];end;EY=EY+0x01;local vW=(0X00001);local NW=je[ta[0x006]];local LW=NW[8];local zW=#LW;if zW>0X00000 then do CW={};end;do for O7=0X1,zW do local c7=(LW[O7]);do if c7[1]==0 then CW[O7-0X1]={uY,c7[0X02]};else do(CW)[O7-1]=ve[c7[0X02]];end;end;end;end;end;(A)(De,CW);end;(uY)[4]=NC(CW,DY,NW);EY=EY+0X1;PY=vW+4-1;(uY[vW])(I(uY,vW+0X1,PY));PY=vW-0X01;EY=EY+1;XW=ve[0x1];do uY[0X1]=XW[1][XW[2]];end;do ta=Re[EY];end;EY=EY+0X001;local uW=(uY[1]);vW=1;do uY[vW+1]=uW;end;uY[vW]=uW[ta[5]];EY=EY+1;vW=1;(uY[vW])(uY[vW+1]);PY=vW-0X1;ta=Re[EY];EY=EY+1;EY=ta[0X6];end;end;end;end;end;end);if XY then if pY then if yY~=0X1 then return uY[MY](I(uY,MY+1,PY));else return uY[MY]();end;elseif not(MY)then else return I(uY,MY,yY);end;else if f(pY)~="string"then b(pY,0);else do if e(pY,"at\116\101\109pt\032\116\111\ y\i\el\d a\099\114\o\s\s \m\eta\m\et\h\o\d\/\C\037\-\ca\108\108\ \098\o\117\110\dary")then return coroutine.yield();end;end;if e(pY,"^.-:%d+: ")then b("Luraph Script:"..(Ae[EY-1]or"(internal)").."\058 "..r(pY),0);else b(pY,0);end;end;end;end;else do if me==161 then fe=function(...)local PH=(0X1);local kH={};local CH=m();local uH={[0X2]=kH,[1]=ce};local sH,NH=rC(...);local rH=((CH==F and Le or CH));sH=sH-1;local oH=(0x00000);for RK=0X0,sH do if he>RK then kH[RK]=NH[RK+0x1];else do break;end;end;end;if not ge then NH=nil;elseif not(xe)then else(kH)[he]={n=sH>=he and sH-he+0X00001 or 0,I(NH,he+1,sH+1)};end;if rH==CH then else i(fe,rH);end;local UH,IH,eH,dH=j(function()do while true do local Ol=Re[PH];local Fl=Ol[0X4];do PH=PH+1;end;if Fl<6 then if Fl<3 then if not(Fl<0X1)then if Fl~=0X2 then local bb=Ol[0X7];local Wb=(Ol[0X006]);oH=bb+Wb-1;do repeat local aO,vO=De,(kH);if#aO>0 then local cE=({});do for KP,rP in D,aO do for GR,nR in D,rP do do if not(nR[1]==vO and nR[2]>=0)then else local Rc=nR[0X2];if not(not cE[Rc])then else(cE)[Rc]={vO[Rc]};end;do(nR)[1]=cE[Rc];end;do(nR)[0X002]=1;end;end;end;end;end;end;end;until true;end;return true,bb,Wb;else kH[0X0]=rH[Ol[2]];do Ol=Re[PH];end;do PH=PH+0X1;end;(kH)[0X0]=kH[0][Ol[0x5]];do Ol=Re[PH];end;local Wl=je[Ol[0X6]];PH=PH+0x01;local dl,Al=0,nil;local Ll=(Wl[8]);local Bl=#Ll;if Bl>0X000 then Al={};do for vc=1,Bl do local Dc=(Ll[vc]);if Dc[1]==0x000 then Al[vc-1]={kH,Dc[2]};else Al[vc-1]=ve[Dc[0X2]];end;end;end;(A)(De,Al);end;kH[0X1]=NC(Al,rH,Wl);PH=PH+1;kH[dl](kH[dl+1]);oH=dl-0X1;PH=PH+1;do repeat local Xc,Oc=De,kH;if#Xc>0X0 then local re=({});do for SK,DK in D,Xc do for dc,jc in D,DK do do if jc[1]==Oc and jc[0X2]>=0x0 then local zR=jc[0x2];do if not(not re[zR])then else do re[zR]={Oc[zR]};end;end;end;(jc)[1]=re[zR];(jc)[2]=1;end;end;end;end;end;end;until true;end;do return;end;end;else(kH)[Ol[7]]=kH[Ol[0x6]];end;else if Fl>=4 then do if Fl~=0X5 then(kH)[Ol[7]]=kH[Ol[6]]>kH[Ol[1]];else local n3,g3=Ol[0X7],(Ol[6]);if g3~=0X000 then do oH=n3+g3-0x1;end;end;local B3,t3,w3=nil,nil,Ol[0X001];if g3==0X00001 then B3,t3=rC(kH[n3]());else B3,t3=rC(kH[n3](I(kH,n3+0X1,oH)));end;if w3==1 then do oH=n3-0X1;end;else if w3==0X000 then B3=B3+n3-0X01;oH=B3;else do B3=n3+w3-0X02;end;oH=B3+1;end;local yL=0X00000;do for w1=n3,B3 do do yL=yL+1;end;kH[w1]=t3[yL];end;end;end;end;end;else end;end;else if not(Fl<9)then do if not(Fl<0xb)then if Fl~=12 then kH[Ol[0X00007]]={I({},1,Ol[0X06])};else(kH)[Ol[7]]=Ol[2];end;else if Fl==10 then local Wk=(je[Ol[0X0006]]);local ik=(Wk[8]);local Bk,Mk=#ik,(nil);if Bk>0 then Mk={};for t6=1,Bk do local m6=ik[t6];do if m6[0X001]~=0 then(Mk)[t6-1]=ve[m6[0x2]];else Mk[t6-0x00001]={kH,m6[2]};end;end;end;A(De,Mk);end;(kH)[Ol[0X07]]=NC(Mk,rH,Wk);else do kH[Ol[7]]=not kH[Ol[0x6]];end;end;end;end;else if Fl<7 then kH[Ol[0X0007]]=rH[Ol[2]];else if Fl~=0x8 then do PH=Ol[6];end;else do(kH)[Ol[7]]=kH[Ol[6]]<kH[Ol[1]];end;end;end;end;end;end;end;end);do if not(UH)then if f(IH)=="string"then if not(e(IH,"\097\116\116\em\112t\032\116\111\032\yi\e\l\d\ ac\114o\ss \109\e\116a\m\101tho\100\047C\%\-\ca\l\l b\oun\d\097r\121"))then else return coroutine.yield();end;if not(e(IH,'^.-\:%\d\043:\032'))then b(IH,0);else b("\076\117r\097\112h\032\S\099ript\058"..(Ae[PH-1]or"(internal)")..": "..r(IH),0);end;else(b)(IH,0);end;else do if IH then if dH==1 then return kH[eH]();else return kH[eH](I(kH,eH+0X1,oH));end;elseif eH then return I(kH,eH,dH);end;end;end;end;end;else fe=function(...)local H6,K6=1,{};local R6=(0);local h6=m();local N6,W6={[0X2]=K6,[1]=ce},(h6==F and Le or h6);local Z6,M6=rC(...);Z6=Z6-1;for oR=0,Z6 do if not(he>oR)then do break;end;else(K6)[oR]=M6[oR+0X1];end;end;if not ge then M6=nil;elseif xe then do(K6)[he]={n=Z6>=he and Z6-he+1 or 0X0,I(M6,he+0X001,Z6+1)};end;end;if W6~=h6 then(i)(fe,W6);end;do while true do local Z8=Re[H6];do H6=H6+0x01;end;local g8=Z8[0X04];return(function(u,p,...)local I=u[0];return Client.Backpack:FindFirstChild(I);end)(K6,ve,...);end;end;end;end;end;end;end;end;else if not(me<156)then if me>=157 then do if me~=158 then do fe=function(...)local G9={};local u9=1;local R9=m();local Z9=({[0X2]=G9,[1]=ce});local V9,L9=rC(...);V9=V9-1;local n9=((R9==F and Le or R9));for uc=0x0000,V9 do if not(he>uc)then break;else(G9)[uc]=L9[uc+1];end;end;if not ge then L9=nil;elseif xe then(G9)[he]={n=V9>=he and V9-he+0X1 or 0x00000,I(L9,he+0X1,V9+1)};end;local h9=(0);if n9~=R9 then(i)(fe,n9);end;local t9,A9,F9,P9=j(function()do while true do local Bs=Re[u9];local Ys=(Bs[0X004]);u9=u9+0X00001;if not(Ys>=13)then if not(Ys<0X6)then if not(Ys<9)then if not(Ys>=11)then if Ys~=10 then do G9[Bs[0X00007]]=G9[Bs[6]];end;else local pw=ve[0X0];(G9)[1]=pw[0X01][pw[2]];local Kw=(1);u9=u9+1;u9=u9+0x1;u9=u9+0X00001;repeat local ss,vs=De,(G9);do if#ss>0X0 then local qX=({});do for j0,k0 in D,ss do for t0,d0 in D,k0 do do if not(d0[0X001]==vs and d0[2]>=0)then else local qz=d0[2];if not qX[qz]then(qX)[qz]={vs[qz]};end;(d0)[1]=qX[qz];do(d0)[0X002]=0x1;end;end;end;end;end;end;end;end;until true;return false,Kw,Kw;end;else if Ys~=12 then local Fp=ve[0x00];(G9)[1]=Fp[1][Fp[0x2]];Bs=Re[u9];u9=u9+0X001;(G9[1])[Bs[0x00002]]=Bs[5];do Bs=Re[u9];end;u9=u9+1;do u9=Bs[6];end;else local k8=Bs[0X6];local U8=(G9[k8]);do for Sf=k8+1,Bs[1]do U8=U8..G9[Sf];end;end;(G9)[Bs[0x7]]=U8;end;end;else if not(Ys>=7)then(G9)[1]=n9[Bs[2]];u9=u9+0X00001;do u9=u9+1;end;do u9=u9+1;end;h9=0X01;G9[h9]=G9[h9]();do Bs=Re[u9];end;u9=u9+1;if not(G9[1])then else u9=Bs[6];end;else do if Ys~=8 then for DU=Bs[0X00007],Bs[6]do G9[DU]=nil;end;else local ZC=(ve[0]);G9[0X01]=ZC[0X001][ZC[2]];Bs=Re[u9];u9=u9+1;(G9)[1]=G9[1][Bs[0x005]];do Bs=Re[u9];end;do u9=u9+0X1;end;if not(G9[1])then else u9=Bs[6];end;end;end;end;end;else if not(Ys>=3)then if not(Ys>=0X0001)then else if Ys==0X2 then G9[5]=n9[Bs[0x2]];local Ej,ej=6,ve[0X01];do u9=u9+0X0001;end;(G9)[6]=ej[1][ej[2]];Bs=Re[u9];u9=u9+1;local Yj=(G9[0x06]);G9[Ej+0X1]=Yj;do G9[Ej]=Yj[Bs[0X5]];end;u9=u9+0X1;local Uj=2;Ej=0X6;local Gj=0x0000;if Uj==0 then else h9=Ej+Uj-0X1;end;local fj,Xj=nil,nil;if Uj~=0X0001 then fj,Xj=rC(G9[Ej](I(G9,Ej+0X00001,h9)));else fj,Xj=rC(G9[Ej]());end;if Gj~=1 then if Gj~=0 then fj=Ej+Gj-0x2;do h9=fj+0x1;end;else fj=fj+Ej-1;h9=fj;end;local Uv=0X00;do for n4=Ej,fj do do Uv=Uv+0X00001;end;(G9)[n4]=Xj[Uv];end;end;else h9=Ej-1;end;u9=u9+0X1;Ej=0X5;Uj=0X00;do Gj=0X4;end;if Uj~=0X0 then h9=Ej+Uj-0X1;end;fj,Xj=nil;if Uj==1 then do fj,Xj=rC(G9[Ej]());end;else fj,Xj=rC(G9[Ej](I(G9,Ej+1,h9)));end;if Gj~=1 then do if Gj~=0 then do fj=Ej+Gj-2;end;h9=fj+0X1;else fj=fj+Ej-0x1;h9=fj;end;end;local Ok=0;do for Gs=Ej,fj do Ok=Ok+0X1;G9[Gs]=Xj[Ok];end;end;else h9=Ej-1;end;Bs=Re[u9];u9=u9+0X1;Ej=5;local dj=g(function(...)d();do for j7,i7 in...do d(true,j7,i7);end;end;end);dj(G9[Ej],G9[Ej+1],G9[Ej+2]);do h9=Ej;end;(G9)[Ej]=dj;u9=Bs[0X6];else u9=Bs[6];end;end;else if Ys>=0x04 then if Ys~=0X00005 then(n9)[Bs[0x02]]=G9[Bs[0X0007]];else local ET=G9[0x007];local wT=(8);(G9)[wT+0X1]=ET;local zT=(ve[0X0]);(G9)[wT]=ET[Bs[5]];u9=u9+1;do G9[10]=zT[0X1][zT[2]];end;u9=u9+0X1;u9=u9+1;Bs=Re[u9];u9=u9+0X1;(G9)[10]=G9[0x00A][Bs[0x5]];u9=u9+0X00001;do wT=8;end;G9[wT]=G9[wT](G9[wT+1],G9[wT+2]);do h9=wT;end;u9=u9+1;u9=u9+0x1;do Bs=Re[u9];end;u9=u9+1;do if not(not G9[0X8])then else u9=Bs[6];end;end;end;else if not(not(G9[Bs[0x6]]<G9[Bs[0X1]]))then else u9=Bs[0X7];end;end;end;end;else do if Ys>=19 then if not(Ys<0X16)then if not(Ys<0X18)then if Ys~=25 then do(G9)[Bs[0X07]]={I({},0X001,Bs[6])};end;else local Np=ve[0];(G9)[0X008]=Np[0X01][Np[0X2]];u9=u9+0X0001;do G9[9]=G9[0x0007];end;Bs=Re[u9];u9=u9+1;(G9[8])[Bs[0x0002]]=G9[9];u9=u9+0X1;Np=ve[0X0];(G9)[0X8]=Np[0X001][Np[0X2]];u9=u9+1;(G9)[9]=G9[4];Bs=Re[u9];u9=u9+1;(G9[0X8])[Bs[0X2]]=G9[9];do Bs=Re[u9];end;u9=u9+1;u9=Bs[6];end;else if Ys~=0X00017 then local nr=Bs[0x7];do for yf=nr,nr+(Bs[0X00006]-1)do do G9[yf]=L9[he+(yf-nr)+1];end;end;end;else do G9[Bs[7]]=n9[Bs[0X0002]];end;end;end;else if not(Ys<20)then if Ys~=0X15 then local Dq=Bs[0X007];local Vq,sq=G9[Dq]();if Vq then u9=Bs[6];(G9)[Dq+0X00003]=sq;end;else(G9)[Bs[0X007]]=G(G9[Bs[6]],G9[Bs[1]]);end;else local fw=(Bs[7]);local Rw,Pw,Vw=G9[fw]();do if not(Rw)then else(G9)[fw+1]=Pw;G9[fw+0X2]=Vw;u9=Bs[6];end;end;end;end;else if not(Ys>=16)then do if not(Ys<14)then if Ys~=15 then G9[1]=Bs[2];Bs=Re[u9];local C9=(0X1);do u9=u9+0X1;end;do G9[0X2]=Bs[0x2];end;Bs=Re[u9];u9=u9+1;(G9)[0X00003]=Bs[2];do Bs=Re[u9];end;u9=u9+1;local d9,i9,v9=G9[C9],G9[C9+0X01],G9[C9+2];do G9[C9]=g(function()do for uV=d9,i9,v9 do(d)(true,uV);end;end;end);end;u9=Bs[6];else local MU=(je[Bs[0x6]]);local sU=nil;local TU=MU[8];local FU=#TU;if FU>0 then sU={};for Ff=0X1,FU do local mf=(TU[Ff]);do if mf[1]==0 then do sU[Ff-1]={G9,mf[2]};end;else sU[Ff-1]=ve[mf[2]];end;end;end;(A)(De,sU);end;(G9)[Bs[7]]=NC(sU,n9,MU);end;else(G9)[Bs[7]]=O(G9[Bs[6]],G9[Bs[0x1]]);end;end;else do if Ys>=17 then if Ys==18 then repeat local xb,Nb=De,(G9);if not(#xb>0X0)then else local c4=({});for gH,XH in D,xb do do for tV,HV in D,XH do if HV[1]==Nb and HV[0X2]>=0x0000 then local cI=HV[0X0002];do if not c4[cI]then(c4)[cI]={Nb[cI]};end;end;HV[0X00001]=c4[cI];do HV[2]=0X1;end;end;end;end;end;end;until true;return;else(G9)[Bs[0X7]]=Bs[2];end;else(G9)[8]=G9[0X7][Bs[5]];u9=u9+1;do u9=u9+0X001;end;local TN=0x0008;Bs=Re[u9];u9=u9+1;local YN=(G9[8]);G9[TN+0X1]=YN;do(G9)[TN]=YN[Bs[0x5]];end;local IN=(3);do Bs=Re[u9];end;u9=u9+1;(G9)[10]=Bs[0X2];Bs=Re[u9];u9=u9+1;TN=10;YN=G9[10];(G9)[TN+0x1]=YN;(G9)[TN]=YN[Bs[0X5]];u9=u9+1;(G9)[0xc]=G9[4];u9=u9+1;do TN=0x00A;end;local GN=(0X0);if IN~=0 then do h9=TN+IN-1;end;end;local NN,CN=nil,nil;if IN==1 then NN,CN=rC(G9[TN]());else NN,CN=rC(G9[TN](I(G9,TN+0x00001,h9)));end;do if GN==1 then h9=TN-0X001;else do if GN==0 then NN=NN+TN-0x1;h9=NN;else do NN=TN+GN-2;end;h9=NN+1;end;end;local S9=(0X000);for lp=TN,NN do S9=S9+1;G9[lp]=CN[S9];end;end;end;u9=u9+0x1;TN=0X8;do G9[TN]=G9[TN](I(G9,TN+1,h9));end;h9=TN;Bs=Re[u9];u9=u9+1;if not G9[0x08]then u9=Bs[0X6];end;end;end;end;end;end;end;end;end;end);if t9 then if A9 then do if P9==1 then return G9[F9]();else do return G9[F9](I(G9,F9+0X1,h9));end;end;end;elseif not(F9)then else return I(G9,F9,P9);end;else do if f(A9)~="string"then(b)(A9,0);else if e(A9,'a\116t\e\m\pt\ t\o\032y\i\e\108\d\ \097\c\114\111\ss\032me\116am\101\116\h\od\/\C\%\-\099\097ll\ \098ou\110\da\114\y')then do return coroutine.yield();end;end;do if e(A9,'\^.\045:%d\+\: ')then(b)("Luraph Script:"..(Ae[u9-1]or"(internal)").."\: "..r(A9),0);else(b)(A9,0X00);end;end;end;end;end;end;end;else fe=function(...)local sL,fL,QL=1,{},0;local IL=({[0X2]=fL,[1]=ce});local NL=m();local jL,hL=rC(...);local nL=(NL==F and Le or NL);jL=jL-1;for xc=0X00,jL do if he>xc then fL[xc]=hL[xc+0X1];else break;end;end;do if not ge then hL=nil;elseif not(xe)then else(fL)[he]={n=jL>=he and jL-he+0X00001 or 0,I(hL,he+1,jL+0X001)};end;end;if nL==NL then else(i)(fe,nL);end;local OL,CL,zL,yL=j(function()while true do local RT=Re[sL];local pT=RT[0X04];sL=sL+1;if not(pT<0X008)then if not(pT<0X00C)then if not(pT<14)then if pT~=0Xf then do(fL)[RT[7]]=nL[RT[2]];end;else local Qk=(RT[0X0007]);do for mS=Qk,Qk+(RT[6]-0x1)do(fL)[mS]=hL[he+(mS-Qk)+1];end;end;end;else if pT==13 then do fL[RT[7]]=-fL[RT[0X6]];end;else do(fL)[RT[0X7]]=fL[RT[6]][fL[RT[0X001]]];end;end;end;else if not(pT<10)then if pT~=11 then fL[RT[7]]=fL[RT[0x6]]==fL[RT[1]];else(fL)[RT[7]]={I({},1,RT[0X6])};end;else do if pT~=0x9 then do sL=RT[0x0006];end;else fL[RT[0X0007]]=fL[RT[6]]~=fL[RT[1]];end;end;end;end;else do if not(pT>=0X04)then if not(pT>=2)then if pT~=0X001 then if not(fL[RT[6]]<fL[RT[1]])then else sL=RT[7];end;else repeat local Gb,Ab=De,(fL);if#Gb>0X00000 then local zW={};for zA,aA in D,Gb do for Mu,fu in D,aA do do if not(fu[0x00001]==Ab and fu[2]>=0X0000)then else local R3=fu[0X2];if not(not zW[R3])then else(zW)[R3]={Ab[R3]};end;do(fu)[1]=zW[R3];end;(fu)[2]=1;end;end;end;end;end;until true;return;end;else if pT==0X0003 then local Ty=ve[0x00000];do fL[0X0]=Ty[1][Ty[0x2]];end;sL=sL+1;QL=0X0;fL[QL]=fL[QL]();sL=sL+0X1;fL[0]=not fL[0];sL=sL+0X1;local fy=0X0;repeat local ts,Rs=De,fL;if#ts>0X0 then local AR={};for O8,l8 in D,ts do for TH,EH in D,l8 do if not(EH[0x0001]==Rs and EH[2]>=0)then else local qY=EH[0x2];do if not(not AR[qY])then else(AR)[qY]={Rs[qY]};end;end;do EH[1]=AR[qY];end;do(EH)[0X2]=1;end;end;end;end;end;until true;return false,fy,fy;else local bd=(je[RT[0X6]]);local Qd,sd=bd[8],(nil);local jd=#Qd;if jd>0 then sd={};for ng=1,jd do local Sg=Qd[ng];if Sg[0X1]~=0X0000 then(sd)[ng-0X1]=ve[Sg[0X02]];else do sd[ng-1]={fL,Sg[2]};end;end;end;A(De,sd);end;fL[RT[7]]=NC(sd,nL,bd);end;end;else if pT<6 then if pT~=5 then(fL)[RT[7]]=T(fL[RT[6]]);else fL[RT[7]]=RT[0X2];end;else do if pT~=0X7 then else do(fL)[RT[0X7]]=fL[RT[0X006]]>fL[RT[0x01]];end;end;end;end;end;end;end;end;end);if not(OL)then if f(CL)=="\115tr\105\110\103"then if e(CL,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(e(CL,"\^\.\045\:\037\100\043\:\032"))then(b)(CL,0X0);else b("Luraph Script:"..(Ae[sL-0x01]or'\040\105\110\116\er\110\097\l\041')..'\:\032'..r(CL),0);end;else b(CL,0);end;else if CL then do if yL==1 then return fL[zL]();else return fL[zL](I(fL,zL+1,QL));end;end;elseif zL then do return I(fL,zL,yL);end;end;end;end;end;end;else fe=function(...)local OA=1;local DA={};local nA=m();local hA=(0);local eA=({[0X2]=DA,[1]=ce});local rA,mA=rC(...);do rA=rA-1;end;local kA=((nA==F and Le or nA));do for Fe=0,rA do if he>Fe then do(DA)[Fe]=mA[Fe+0X001];end;else break;end;end;end;do if not ge then do mA=nil;end;elseif xe then DA[he]={n=rA>=he and rA-he+1 or 0x0,I(mA,he+0x0001,rA+1)};end;end;if kA~=nA then(i)(fe,kA);end;local wA,ZA,HA,iA=j(function()while true do local PK=(Re[OA]);local FK=(PK[4]);do OA=OA+0X001;end;do if not(FK>=17)then if FK<8 then if FK>=0x4 then if FK<0X6 then if FK~=5 then local cw=ve[1];DA[2]=cw[1][cw[0X2]];PK=Re[OA];do OA=OA+1;end;DA[0X2]=DA[0X2][PK[0X0005]];local xw=2;OA=OA+0X01;do OA=OA+1;end;OA=OA+1;(DA)[3]=DA[1];OA=OA+1;do cw=ve[0];end;DA[0X4]=cw[1][cw[2]];PK=Re[OA];local jw=je[PK[6]];OA=OA+0X1;local Rw,tw=jw[8],(nil);local bw=(#Rw);if bw>0 then tw={};for ls=1,bw do local Zs=Rw[ls];if Zs[0X01]==0X0 then do tw[ls-1]={DA,Zs[0X0002]};end;else do tw[ls-1]=ve[Zs[0x2]];end;end;end;(A)(De,tw);end;DA[5]=NC(tw,kA,jw);OA=OA+1;hA=xw+0x4-1;DA[xw](I(DA,xw+0X0001,hA));do hA=xw-0X01;end;OA=OA+1;OA=OA+1;do OA=OA+0x1;end;cw=ve[0];do(DA)[0X0002]=cw[1][cw[0x2]];end;PK=Re[OA];OA=OA+0X1;local Tw=(DA[0X2]);xw=0X02;DA[xw+0X1]=Tw;DA[xw]=Tw[PK[0X5]];do OA=OA+0X1;end;do xw=0X0002;end;DA[xw](DA[xw+0X1]);hA=xw-1;do PK=Re[OA];end;do OA=OA+0X1;end;OA=PK[6];else do DA[PK[7]]=PK[2];end;end;else if FK==0X7 then local l_=ve[1];(DA)[2]=l_[0x00001][l_[2]];do OA=OA+1;end;OA=OA+1;PK=Re[OA];do OA=OA+1;end;local K_=0X002;DA[0x0002]=DA[2][PK[5]];OA=OA+0X1;OA=OA+1;do OA=OA+1;end;do DA[3]=DA[0X1];end;do OA=OA+0x001;end;DA[K_]=DA[K_](DA[K_+1]);hA=K_;do OA=OA+1;end;OA=OA+1;do PK=Re[OA];end;OA=OA+1;if not(not DA[2])then else OA=PK[6];end;else if DA[PK[0X7]]then do OA=PK[6];end;end;end;end;else do if FK>=2 then do if FK==3 then local iF=(PK[7]);for eP=iF,iF+(PK[0x6]-0x1)do do DA[eP]=mA[he+(eP-iF)+1];end;end;else local S8=ve[0X0];DA[0X0]=S8[0X001][S8[0X00002]];local K8=(DA[0x0]);do PK=Re[OA];end;OA=OA+0X1;local Z8=(0);DA[Z8+1]=K8;DA[Z8]=K8[PK[5]];OA=OA+0X1;Z8=0;(DA[Z8])(DA[Z8+0x01]);hA=Z8-0X00001;do OA=OA+1;end;do OA=OA+0X1;end;OA=OA+1;repeat local E0,O0=De,DA;if not(#E0>0X0)then else local aU=({});do for KO,xO in D,E0 do for Zy,jy in D,xO do if jy[1]==O0 and jy[0X0002]>=0x0 then local zF=jy[2];do if not aU[zF]then do(aU)[zF]={O0[zF]};end;end;end;jy[1]=aU[zF];(jy)[0X2]=1;end;end;end;end;end;until true;return;end;end;else do if FK==1 then DA[0X0]=kA[PK[0X2]];do OA=OA+0x1;end;hA=0x0;do DA[hA]=DA[hA]();end;PK=Re[OA];OA=OA+1;if not(DA[0]<PK[0X5])then OA=PK[0x7];end;else local SP,oP=ve[0],(5);do(DA)[0X5]=SP[1][SP[2]];end;OA=OA+1;OA=OA+1;PK=Re[OA];do OA=OA+0x1;end;local hP=DA[5];DA[oP+1]=hP;DA[oP]=hP[PK[0X0005]];OA=OA+1;oP=0X5;(DA[oP])(DA[oP+1]);hA=oP-0X1;do PK=Re[OA];end;OA=OA+1;DA[5]=DA[0X4][PK[5]];do OA=OA+1;end;hA=5;DA[hA]();do hA=hA-0X1;end;OA=OA+1;do OA=OA+0X001;end;do PK=Re[OA];end;OA=OA+0x00001;do OA=PK[0X6];end;end;end;end;end;end;else if not(FK<0XC)then do if FK>=0xE then do if FK>=0xF then if FK==0X10 then local I6=(ve[0]);(DA)[0]=I6[1][I6[2]];PK=Re[OA];local b6=(0);OA=OA+0X1;local V6=(DA[0]);(DA)[b6+0X00001]=V6;(DA)[b6]=V6[PK[5]];OA=OA+0X1;b6=0;(DA)[b6]=DA[b6](DA[b6+0X1]);do hA=b6;end;do OA=OA+0x1;end;OA=OA+1;do PK=Re[OA];end;OA=OA+1;if not DA[0X000]then OA=PK[6];end;else OA=PK[0X6];end;else local Ie,Qe=je[PK[0x6]],(nil);local se=(Ie[8]);local Oe=(#se);if not(Oe>0X0)then else Qe={};for dj=1,Oe do local Tj=se[dj];if Tj[1]==0 then(Qe)[dj-1]={DA,Tj[2]};else Qe[dj-0x00001]=ve[Tj[0X2]];end;end;A(De,Qe);end;DA[PK[0X7]]=NC(Qe,kA,Ie);end;end;else if FK~=0xD then repeat local cw,vw=De,DA;do if#cw>0 then local zt={};for hB,tB in D,cw do do for cR,MR in D,tB do if not(MR[0x1]==vw and MR[2]>=0)then else local t4=(MR[0X2]);if not(not zt[t4])then else(zt)[t4]={vw[t4]};end;do MR[1]=zt[t4];end;MR[0X002]=1;end;end;end;end;end;end;until true;do return;end;else(DA)[0X0]=kA[PK[2]];do OA=OA+0X1;end;OA=OA+0X1;OA=OA+0X1;hA=0X00;(DA)[hA]=DA[hA]();OA=OA+1;do OA=OA+0X1;end;PK=Re[OA];do OA=OA+1;end;if DA[0X00]then OA=PK[0X6];end;end;end;end;else if FK>=10 then if FK==0Xb then DA[0]=kA[PK[2]];PK=Re[OA];OA=OA+1;DA[0X000]=DA[0][PK[5]];PK=Re[OA];OA=OA+0X1;do if not(not DA[0X0])then else OA=PK[6];end;end;else do DA[0X00]=kA[PK[0X00002]];end;OA=OA+0X01;OA=OA+0x01;OA=OA+1;hA=0X00;(DA)[hA]=DA[hA]();do PK=Re[OA];end;OA=OA+1;if not(not(DA[0]<PK[5]))then else do OA=PK[7];end;end;end;else if FK~=9 then(DA)[PK[0X0007]]=eA[PK[0X6]];else end;end;end;end;else if FK<25 then if FK>=21 then if FK<0X17 then do if FK==22 then DA[PK[0X07]]={I({},0x1,PK[0X6])};else do DA[0]=kA[PK[0X2]];end;OA=OA+0x1;OA=OA+0X0001;PK=Re[OA];local r6=(0);OA=OA+1;do DA[1]=PK[0x002];end;OA=OA+1;(DA)[r6]=DA[r6](DA[r6+1]);hA=r6;do PK=Re[OA];end;do OA=OA+0X001;end;do if not DA[0]then OA=PK[0X6];end;end;end;end;else do if FK==24 then(DA)[PK[0X00007]]=kA[PK[0X02]];else local MR,RR=ve[0],(2);do DA[0X2]=MR[0X001][MR[0x02]];end;do OA=OA+0X00001;end;OA=OA+0X1;PK=Re[OA];OA=OA+1;local YR=DA[0X0002];(DA)[RR+0X1]=YR;(DA)[RR]=YR[PK[0x0005]];OA=OA+0X001;do RR=0x0002;end;(DA[RR])(DA[RR+1]);hA=RR-1;OA=OA+1;OA=OA+0X1;PK=Re[OA];OA=OA+1;OA=PK[6];end;end;end;else if not(FK<0x013)then if FK==20 then do DA[PK[0X0007]]=DA[PK[6]][PK[5]];end;else(DA)[0x00000]=kA[PK[2]];OA=OA+1;(DA)[0X1]={I({},1,0X00003)};local qf=1;PK=Re[OA];OA=OA+1;(DA)[0x2]=PK[2];PK=Re[OA];do OA=OA+0X1;end;do(DA)[0x3]=PK[2];end;PK=Re[OA];local uf=0X3;OA=OA+1;DA[0X0004]=PK[2];OA=OA+0X1;local pf,Sf,af=nil,(1-0x1)*50,DA[qf];for FM=0X001,0X3 do do af[Sf+FM]=DA[qf+FM];end;end;PK=Re[OA];OA=OA+1;local Vf=je[PK[0X6]];local Qf=Vf[0X08];local Rf=#Qf;if Rf>0 then pf={};for mX=0X1,Rf do local SX=(Qf[mX]);if SX[1]==0 then do pf[mX-0x1]={DA,SX[2]};end;else pf[mX-1]=ve[SX[0X2]];end;end;(A)(De,pf);end;DA[2]=NC(pf,kA,Vf);OA=OA+0X01;qf=0X00000;local gf=3;if uf~=0 then hA=qf+uf-0X1;end;local ef,Ff=nil,nil;if uf~=1 then ef,Ff=rC(DA[qf](I(DA,qf+0X1,hA)));else ef,Ff=rC(DA[qf]());end;if gf~=1 then if gf==0x0000 then ef=ef+qf-0X1;hA=ef;else ef=qf+gf-2;hA=ef+1;end;local BT=(0);do for cq=qf,ef do BT=BT+1;DA[cq]=Ff[BT];end;end;else hA=qf-0X1;end;do PK=Re[OA];end;OA=OA+0X0001;(DA)[2]=kA[PK[0X2]];do OA=OA+0X001;end;do OA=OA+1;end;OA=OA+1;(DA)[3]=DA[0];OA=OA+1;qf=0X2;uf=2;gf=4;do if uf==0 then else hA=qf+uf-1;end;end;ef,Ff=nil;if uf==1 then ef,Ff=rC(DA[qf]());else do ef,Ff=rC(DA[qf](I(DA,qf+0X1,hA)));end;end;if gf~=1 then if gf~=0 then ef=qf+gf-0X0002;hA=ef+0X1;else do ef=ef+qf-1;end;hA=ef;end;local LJ=0x000;for M4=qf,ef do LJ=LJ+0X1;do DA[M4]=Ff[LJ];end;end;else hA=qf-1;end;OA=OA+0X1;OA=OA+0x1;PK=Re[OA];OA=OA+1;qf=2;local cf=(g(function(...)d();for gQ,CQ in...do d(true,gQ,CQ);end;end));(cf)(DA[qf],DA[qf+1],DA[qf+2]);hA=qf;DA[qf]=cf;OA=PK[6];end;else do if FK~=0X12 then local nE,jE=PK[0X07],PK[0X006];hA=nE+jE-0X1;repeat local iv,Kv=De,(DA);do if#iv>0 then local n1=({});for i7,v7 in D,iv do for Mt,bt in D,v7 do if bt[0x1]==Kv and bt[0X2]>=0X0 then local LW=(bt[0x2]);if not(not n1[LW])then else do(n1)[LW]={Kv[LW]};end;end;(bt)[0X001]=n1[LW];(bt)[0X002]=1;end;end;end;end;end;until true;return true,nE,jE;else do(DA)[0X2]=kA[PK[0X2]];end;PK=Re[OA];OA=OA+0X1;DA[0X3]=PK[0X2];local qj=(0X002);OA=OA+1;local Lj=(ve[0]);DA[qj]=DA[qj](DA[qj+0X1]);hA=qj;PK=Re[OA];OA=OA+0X1;do kA[PK[2]]=DA[0X2];end;do OA=OA+1;end;DA[0X2]=Lj[1][Lj[0x2]];do OA=OA+1;end;OA=OA+1;PK=Re[OA];OA=OA+0X00001;qj=2;local Cj=DA[2];(DA)[qj+1]=Cj;(DA)[qj]=Cj[PK[0X5]];OA=OA+1;qj=0X00002;DA[qj](DA[qj+1]);do hA=qj-1;end;do PK=Re[OA];end;OA=OA+0X00001;OA=PK[6];end;end;end;end;else if FK<0X0001d then do if FK<0x0001b then do if FK==26 then do if not DA[PK[7]]then OA=PK[0X06];end;end;else do DA[PK[0X7]]=DA[PK[0X6]]/DA[PK[0X1]];end;end;end;else if FK~=0x00001c then do(DA)[0x00]=kA[PK[2]];end;do PK=Re[OA];end;OA=OA+1;do DA[0]=DA[0X000][PK[0x5]];end;do PK=Re[OA];end;OA=OA+0X01;if not(not DA[0])then else OA=PK[6];end;else(DA)[0]=kA[PK[2]];OA=OA+1;OA=OA+0X00001;PK=Re[OA];OA=OA+1;local fz=0X0;(DA)[0X0000]=DA[0][PK[0X5]];PK=Re[OA];OA=OA+0X1;(DA)[0X001]=PK[0X2];OA=OA+1;DA[fz]=DA[fz](DA[fz+0X1]);hA=fz;OA=OA+0x1;OA=OA+0X1;PK=Re[OA];OA=OA+1;do if not DA[0X000]then OA=PK[6];end;end;end;end;end;else do if not(FK>=0X00001F)then if FK==0x01e then DA[5]=DA[0X00004][PK[0X5]];OA=OA+1;OA=OA+0X1;OA=OA+1;DA[0X1]=DA[5];do PK=Re[OA];end;do OA=OA+0X1;end;do if not DA[1]then do OA=PK[0X06];end;end;end;else DA[2]=kA[PK[0X2]];OA=OA+0x001;OA=OA+0X01;PK=Re[OA];local Ct=0X2;do OA=OA+0x1;end;(DA)[0X00002]=DA[2][PK[5]];PK=Re[OA];OA=OA+0X1;local tt=(DA[0X00002]);do DA[Ct+1]=tt;end;(DA)[Ct]=tt[PK[0X05]];PK=Re[OA];do OA=OA+0X1;end;(DA)[0X4]=PK[2];do OA=OA+0X001;end;Ct=0X02;DA[Ct]=DA[Ct](DA[Ct+0X1],DA[Ct+0x2]);hA=Ct;do OA=OA+0X00001;end;OA=OA+1;do PK=Re[OA];end;do OA=OA+1;end;if not DA[2]then OA=PK[6];end;end;else if not(FK<32)then if FK~=33 then(DA)[0X0]=kA[PK[0X2]];do OA=OA+0X1;end;OA=OA+0x00001;PK=Re[OA];do OA=OA+1;end;DA[0]=DA[0X0][PK[0X5]];do PK=Re[OA];end;OA=OA+0X001;if not DA[0]then OA=PK[6];end;else local vx=(PK[7]);local Bx,Ux,Ox=DA[vx]();if Bx then DA[vx+0X1]=Ux;(DA)[vx+2]=Ox;do OA=PK[6];end;end;end;else for UE=PK[7],PK[6]do DA[UE]=nil;end;end;end;end;end;end;end;end;end;end);if not(wA)then if f(ZA)=='\115t\114\in\103'then if e(ZA,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if e(ZA,'\094.\-\058\%\d\+\:\ ')then b("Luraph Script:"..(Ae[OA-0X1]or"(internal)")..'\:\ '..r(ZA),0X0);else b(ZA,0);end;else(b)(ZA,0X0);end;else if ZA then if iA==1 then return DA[HA]();else return DA[HA](I(DA,HA+0x1,hA));end;elseif not(HA)then else do return I(DA,HA,iA);end;end;end;end;end;else if not(me>=0x9a)then fe=function(...)local w8=1;local m8,z8={},(0X000);local R8=m();local A8,d8=rC(...);local c8={[1]=ce,[0X2]=m8};A8=A8-0X001;local W8=((R8==F and Le or R8));for Yf=0,A8 do do if he>Yf then(m8)[Yf]=d8[Yf+0X001];else break;end;end;end;if not ge then d8=nil;elseif xe then(m8)[he]={n=A8>=he and A8-he+0X1 or 0,I(d8,he+1,A8+1)};end;do if W8~=R8 then(i)(fe,W8);end;end;local v8,P8,b8,q8=j(function()while true do local TC=Re[w8];local OC=(TC[0x4]);w8=w8+0x1;do if not(OC<18)then if not(OC>=0X01b)then if OC<0X16 then if not(OC>=20)then do if OC~=19 then do(m8)[0X0]=W8[TC[2]];end;w8=w8+1;w8=w8+0X001;do TC=Re[w8];end;local Ya=(0);w8=w8+0X01;(m8)[0x1]=TC[0X00002];w8=w8+0X0001;do(m8)[Ya]=m8[Ya](m8[Ya+1]);end;z8=Ya;TC=Re[w8];w8=w8+0X00001;if not m8[0X0]then w8=TC[6];end;else do repeat local O6,D6=De,(m8);if not(#O6>0)then else local Jr=({});for mO,xO in D,O6 do for gQ,WQ in D,xO do if WQ[1]==D6 and WQ[2]>=0 then local as=(WQ[0x002]);if not(not Jr[as])then else(Jr)[as]={D6[as]};end;do WQ[0X001]=Jr[as];end;do WQ[2]=0x1;end;end;end;end;end;until true;end;return;end;end;else do if OC~=21 then(m8)[2]=W8[TC[2]];TC=Re[w8];w8=w8+1;local zn=(0X002);m8[3]=TC[0X0002];do w8=w8+1;end;m8[4]=m8[0X1];w8=w8+1;(m8[zn])(m8[zn+1],m8[zn+0X2]);z8=zn-1;TC=Re[w8];w8=w8+1;do w8=TC[0X00006];end;else w8=TC[0x6];end;end;end;else if not(OC<0X18)then do if OC<25 then(m8)[0x00000]=W8[TC[2]];w8=w8+1;w8=w8+1;do TC=Re[w8];end;w8=w8+1;m8[0]=m8[0][TC[5]];do TC=Re[w8];end;w8=w8+0x0001;(m8)[0]=m8[0x0][TC[5]];w8=w8+0X1;w8=w8+0X1;TC=Re[w8];do w8=w8+1;end;m8[0]=m8[0X00][TC[5]];w8=w8+1;do w8=w8+1;end;TC=Re[w8];w8=w8+1;if not(m8[0])then else w8=TC[6];end;else if OC==0X01A then(c8)[TC[0X6]]=m8[TC[0X7]];else do m8[0]=W8[TC[0x002]];end;TC=Re[w8];w8=w8+0X00001;do(m8)[0x1]=W8[TC[0x2]];end;do w8=w8+0X1;end;w8=w8+1;TC=Re[w8];w8=w8+0X1;m8[0X00002]=TC[0X00002];local sF=(0);TC=Re[w8];do w8=w8+1;end;m8[0x3]=TC[2];w8=w8+1;do z8=sF+4-1;end;(m8[sF])(I(m8,sF+0X1,z8));do z8=sF-0X1;end;TC=Re[w8];w8=w8+1;w8=TC[0X6];end;end;end;else do if OC==0x17 then(m8)[0X0]=W8[TC[0X0002]];w8=w8+1;do w8=w8+0X1;end;do TC=Re[w8];end;w8=w8+1;(m8)[0X0]=m8[0][TC[0X5]];w8=w8+0X00001;do w8=w8+0x1;end;TC=Re[w8];do w8=w8+0x0001;end;if not(not m8[0X0])then else do w8=TC[0x006];end;end;else m8[0]=W8[TC[2]];do TC=Re[w8];end;w8=w8+0X1;(m8)[1]=TC[0X02];w8=w8+0X1;local F1=0;(m8[F1])(m8[F1+0X1]);z8=F1-0X01;TC=Re[w8];w8=w8+1;m8[0x00000]=TC[0X00002];TC=Re[w8];w8=w8+0x0001;(W8)[TC[2]]=m8[0x0];do TC=Re[w8];end;w8=w8+0X1;w8=TC[0x6];end;end;end;end;else if not(OC<0x1F)then do if not(OC>=0X021)then if OC~=0X20 then do(m8)[TC[7]]=W8[TC[0X2]];end;else m8[TC[7]]=TC[0X2];end;else if not(OC>=0X22)then(m8)[0X0]=W8[TC[0x0002]];TC=Re[w8];w8=w8+0X1;local E2=(0);do m8[1]=TC[2];end;w8=w8+0X1;m8[E2]=m8[E2](m8[E2+1]);z8=E2;TC=Re[w8];w8=w8+1;if not m8[0X0]then w8=TC[0X6];end;else if OC==0X23 then m8[0]=W8[TC[2]];w8=w8+0X00001;do w8=w8+0X01;end;TC=Re[w8];w8=w8+1;m8[0X0]=m8[0][TC[5]];do w8=w8+1;end;w8=w8+1;TC=Re[w8];w8=w8+1;do(m8)[1]=TC[2];end;w8=w8+0X1;local k_=0X0;m8[k_]=m8[k_](m8[k_+1]);z8=k_;do TC=Re[w8];end;w8=w8+1;if not m8[0]then w8=TC[0X06];end;else end;end;end;end;else if not(OC>=0X1d)then do if OC~=0X1c then do(m8)[TC[7]]=m8[TC[6]]<=m8[TC[1]];end;else do(m8)[TC[7]]={I({},0x001,TC[0X6])};end;end;end;else if OC~=30 then do(m8)[0]=W8[TC[0x00002]];end;do TC=Re[w8];end;do w8=w8+0X0001;end;m8[0X0]=m8[0][TC[5]];TC=Re[w8];w8=w8+1;m8[0]=m8[0][TC[0X0005]];TC=Re[w8];w8=w8+1;do m8[0]=m8[0][TC[0x5]];end;w8=w8+1;w8=w8+0X00001;do TC=Re[w8];end;w8=w8+1;if m8[0]then do w8=TC[0X6];end;end;else do(m8)[0X00]=W8[TC[0X2]];end;TC=Re[w8];local IH=0;w8=w8+1;m8[0X1]=TC[2];w8=w8+1;m8[IH](m8[IH+0X1]);z8=IH-0X1;w8=w8+0X1;w8=w8+1;TC=Re[w8];w8=w8+0X1;(m8)[0]=TC[0X2];TC=Re[w8];w8=w8+1;W8[TC[0X002]]=m8[0x0];TC=Re[w8];do w8=w8+0X01;end;do w8=TC[0X6];end;end;end;end;end;else do if not(OC<0X0009)then if OC>=13 then if not(OC>=0xf)then do if OC~=0Xe then m8[TC[0X007]][m8[TC[6]]]=m8[TC[1]];else do m8[0X000]=W8[TC[0X2]];end;TC=Re[w8];w8=w8+0x1;do m8[0]=m8[0X0][TC[5]];end;w8=w8+0X1;w8=w8+1;TC=Re[w8];w8=w8+1;(m8)[0x000]=m8[0x0][TC[5]];do w8=w8+1;end;w8=w8+1;TC=Re[w8];do w8=w8+0X1;end;do(m8)[0]=m8[0X0][TC[5]];end;TC=Re[w8];w8=w8+1;do if not(m8[0X0]<TC[5])then w8=TC[7];end;end;end;end;else do if not(OC<16)then if OC~=0x11 then m8[0]=W8[TC[2]];w8=w8+1;w8=w8+1;TC=Re[w8];w8=w8+0X1;do(m8)[0X001]=W8[TC[2]];end;local Vd=0X0;TC=Re[w8];w8=w8+0x1;m8[2]=TC[2];do TC=Re[w8];end;w8=w8+0X00001;m8[0x03]=TC[0X002];w8=w8+1;z8=Vd+4-0X1;m8[Vd](I(m8,Vd+1,z8));z8=Vd-0X01;w8=w8+1;do w8=w8+0X1;end;TC=Re[w8];w8=w8+0x1;do w8=TC[6];end;else local Du=(TC[0x7]);local Nu,Hu=TC[6],(TC[0X01]);if Nu~=0 then z8=Du+Nu-0X1;end;local fu,Eu=nil,nil;if Nu==1 then fu,Eu=rC(m8[Du]());else fu,Eu=rC(m8[Du](I(m8,Du+1,z8)));end;if Hu~=1 then if Hu~=0X0 then fu=Du+Hu-0X2;z8=fu+0X1;else do fu=fu+Du-0X01;end;do z8=fu;end;end;local lM=0;for Li=Du,fu do do lM=lM+0X00001;end;m8[Li]=Eu[lM];end;else do z8=Du-1;end;end;end;else(m8)[TC[7]]=m8[TC[0X6]]%m8[TC[1]];end;end;end;else if OC>=0X0b then if OC~=12 then m8[0]=W8[TC[2]];w8=w8+0X1;do w8=w8+0X01;end;TC=Re[w8];w8=w8+1;local Fz,ez=je[TC[6]],0X0;local xz=(Fz[8]);local Oz=nil;local Az=(0X3);local Kz=(#xz);if Kz>0X0 then Oz={};for ds=0X00001,Kz do local cs=(xz[ds]);if cs[1]~=0 then(Oz)[ds-1]=ve[cs[0X2]];else(Oz)[ds-0X0001]={m8,cs[0X2]};end;end;A(De,Oz);end;(m8)[0X1]=NC(Oz,W8,Fz);w8=w8+0X0001;local wz=(0x2);if wz~=0 then do z8=ez+wz-0X1;end;end;local cz,Ez=nil,(nil);if wz==1 then cz,Ez=rC(m8[ez]());else do cz,Ez=rC(m8[ez](I(m8,ez+0X1,z8)));end;end;if Az~=1 then do if Az==0x00000 then cz=cz+ez-0X1;do z8=cz;end;else do cz=ez+Az-0X2;end;z8=cz+0X00001;end;end;local ke=0;for rH=ez,cz do ke=ke+0X1;m8[rH]=Ez[ke];end;else z8=ez-1;end;w8=w8+0X1;do w8=w8+0X001;end;TC=Re[w8];w8=w8+0X001;if m8[0]then do w8=TC[0X6];end;end;else for lE=TC[7],TC[0X6]do m8[lE]=nil;end;end;else if OC==10 then local tN=ve[0];(m8)[2]=tN[1][tN[0X02]];w8=w8+0X01;local lN=(2);w8=w8+1;TC=Re[w8];do w8=w8+1;end;local pN=m8[2];(m8)[lN+1]=pN;m8[lN]=pN[TC[5]];w8=w8+1;lN=0X2;(m8[lN])(m8[lN+1]);do z8=lN-0X1;end;w8=w8+0X01;w8=w8+0X1;TC=Re[w8];w8=w8+1;w8=TC[0x00006];else repeat local k3,F3=De,(m8);if not(#k3>0X0)then else local tl=({});for AK,JK in D,k3 do for aN,QN in D,JK do if not(QN[1]==F3 and QN[2]>=0X00)then else local Tt=QN[2];if not tl[Tt]then do(tl)[Tt]={F3[Tt]};end;end;QN[0x1]=tl[Tt];(QN)[0x02]=0X1;end;end;end;end;until true;local wN=TC[7];return false,wN,wN+TC[0x6]-2;end;end;end;else if OC<0x4 then do if not(OC<0x2)then if OC~=3 then(m8)[TC[7]]=G(m8[TC[6]],m8[TC[0x1]]);else local J5=je[TC[0X06]];local V5=J5[8];local k5=(nil);local g5=(#V5);if g5>0 then do k5={};end;for bO=0X1,g5 do local OO=(V5[bO]);if OO[0X01]~=0x0 then do(k5)[bO-0x1]=ve[OO[2]];end;else k5[bO-1]={m8,OO[2]};end;end;(A)(De,k5);end;m8[TC[0X0007]]=NC(k5,W8,J5);end;else do if OC==1 then m8[TC[7]]=u(m8[TC[0X006]],m8[TC[0X1]]);else(m8)[0X0]=nil;TC=Re[w8];do w8=w8+0x01;end;(W8)[TC[2]]=m8[0];do w8=w8+0x1;end;local Xa=ve[0X0];local pa=(0);do(m8)[0X00000]=Xa[1][Xa[2]];end;TC=Re[w8];do w8=w8+1;end;local ma=(m8[0X00000]);(m8)[pa+0X00001]=ma;m8[pa]=ma[TC[5]];w8=w8+1;pa=0x0;m8[pa]=m8[pa](m8[pa+0X1]);z8=pa;TC=Re[w8];w8=w8+0X00001;if m8[0X0000]then w8=TC[0x00006];end;end;end;end;end;else do if not(OC>=6)then if OC~=0x5 then m8[0X0]=W8[TC[0x002]];local T2=0X0;do TC=Re[w8];end;do w8=w8+0X1;end;do(m8)[1]=TC[0X00002];end;w8=w8+1;(m8)[T2]=m8[T2](m8[T2+0X1]);do z8=T2;end;TC=Re[w8];do w8=w8+1;end;if m8[0x0]then w8=TC[6];end;else do m8[0]=W8[TC[2]];end;TC=Re[w8];do w8=w8+0x1;end;m8[0X000]=m8[0][TC[0X0005]];TC=Re[w8];w8=w8+0X1;m8[0X00000]=m8[0][TC[0x5]];do w8=w8+0x1;end;w8=w8+0X1;do TC=Re[w8];end;w8=w8+1;m8[0]=m8[0X0][TC[0x05]];TC=Re[w8];w8=w8+1;do if not(m8[0]<TC[5])then w8=TC[7];end;end;end;else do if not(OC>=0x7)then local Be=TC[6];local Te=m8[Be];for sT=Be+1,TC[1]do do Te=Te..m8[sT];end;end;m8[TC[0X7]]=Te;else if OC~=0X00008 then if not(m8[TC[6]]<=m8[TC[1]])then do w8=TC[7];end;end;else local WX=(ve[0]);do m8[0]=WX[1][WX[0X2]];end;w8=w8+0x1;w8=w8+0x1;local TX=0X000;TC=Re[w8];w8=w8+0X00001;local rX=m8[0];(m8)[TX+1]=rX;do m8[TX]=rX[TC[5]];end;w8=w8+1;TX=0;m8[TX](m8[TX+0x00001]);z8=TX-0x1;w8=w8+1;repeat local Ji,Di=De,(m8);if not(#Ji>0)then else local ng={};for yq,kq in D,Ji do for A5,J5 in D,kq do if J5[1]==Di and J5[2]>=0 then local N5=(J5[2]);if not(not ng[N5])then else do ng[N5]={Di[N5]};end;end;J5[1]=ng[N5];J5[2]=1;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end;end;end;end;end;end);do if v8 then do if P8 then if q8~=0X00001 then do return m8[b8](I(m8,b8+1,z8));end;else do return m8[b8]();end;end;elseif b8 then do return I(m8,b8,q8);end;end;end;else do if f(P8)=='\s\116ri\110\103'then do if not(e(P8,"\097\116t\em\p\116\ \116\o\032\121\i\e\108\d \097\cr\o\s\s meta\me\116h\o\100\047\067\%\045\c\097ll\032b\111u\110\d\097\114\121"))then else do return coroutine.yield();end;end;end;if e(P8,"^.-:%d+: ")then(b)("Luraph Script:"..(Ae[w8-1]or'\040\i\110t\erna\108\)')..'\058\ '..r(P8),0X0000);else(b)(P8,0);end;else b(P8,0X0);end;end;end;end;end;else if me==155 then fe=function(...)local g8=({});local E8=(1);local T8=(m());local b8=0;local v8,x8=rC(...);local V8=({[1]=ce,[0X2]=g8});local k8=(T8==F and Le or T8);do v8=v8-1;end;for yl=0,v8 do if he>yl then do(g8)[yl]=x8[yl+1];end;else break;end;end;if not ge then x8=nil;elseif xe then g8[he]={n=v8>=he and v8-he+0X1 or 0,I(x8,he+0X1,v8+0x1)};end;if k8==T8 then else i(fe,k8);end;local P8,r8,X8,N8=j(function()while true do local J8=Re[E8];local d8=(J8[0x0004]);do E8=E8+1;end;if d8<7 then if d8>=3 then if d8<5 then if d8~=0X4 then g8[J8[0x7]]=true;else E8=J8[0X006];end;else do if d8==0X6 then(g8)[J8[0X00007]]=k8[J8[0X2]];else g8[J8[7]]=g8[J8[6]]>=g8[J8[1]];end;end;end;else if not(d8<1)then if d8==2 then for fj=J8[7],J8[6]do(g8)[fj]=nil;end;else do g8[J8[0X7]]=J8[2];end;end;else g8[J8[7]][g8[J8[0x6]]]=g8[J8[1]];end;end;else do if not(d8<0X0b)then do if d8<0x00D then do if d8==0x00C then g8[J8[0x0007]]={I({},0X1,J8[0X6])};else g8[J8[0x7]]=g8[J8[0x06]]%g8[J8[1]];end;end;else if d8==14 then do(g8)[J8[0x7]]=not g8[J8[6]];end;else g8[0]=k8[J8[2]];E8=E8+1;local Qh=(0);E8=E8+0X001;J8=Re[E8];do E8=E8+0X1;end;local rh=g8[0X000];do g8[Qh+1]=rh;end;(g8)[Qh]=rh[J8[5]];J8=Re[E8];E8=E8+0x1;(g8)[0X002]=J8[2];do E8=E8+0X1;end;Qh=0X0;(g8)[Qh]=g8[Qh](g8[Qh+1],g8[Qh+0X00002]);b8=Qh;E8=E8+0X1;E8=E8+0X1;J8=Re[E8];do E8=E8+0X1;end;(g8)[1]=k8[J8[0x2]];J8=Re[E8];E8=E8+1;(g8)[0x1]=g8[1][J8[0X5]];E8=E8+0X1;E8=E8+0X1;do J8=Re[E8];end;local Nh=je[J8[0X6]];local ch=(Nh[0x08]);do E8=E8+1;end;local mh,Eh=nil,(#ch);if not(Eh>0)then else do mh={};end;for Gv=0x1,Eh do local wv=ch[Gv];if wv[1]~=0X0 then(mh)[Gv-0x1]=ve[wv[0X2]];else(mh)[Gv-1]={g8,wv[2]};end;end;(A)(De,mh);end;(g8)[0X2]=NC(mh,k8,Nh);E8=E8+0X1;do Qh=0X1;end;g8[Qh](g8[Qh+1]);b8=Qh-0X001;E8=E8+0X00001;repeat local M1,t1=De,(g8);if#M1>0 then local V3={};for JS,MS in D,M1 do for YC,uC in D,MS do if uC[1]==t1 and uC[0x2]>=0X0 then local WW=uC[0x2];do if not(not V3[WW])then else V3[WW]={t1[WW]};end;end;(uC)[0x1]=V3[WW];(uC)[2]=1;end;end;end;end;until true;return;end;end;end;else do if d8<0X09 then if d8~=0X8 then g8[J8[0X7]]=u(g8[J8[6]],g8[J8[0x1]]);else local W1=(je[J8[6]]);local T1=(W1[0X8]);local q1=(#T1);local S1=(nil);if q1>0x00000 then S1={};do for Ch=1,q1 do local yh=T1[Ch];do if yh[1]~=0 then(S1)[Ch-1]=ve[yh[2]];else S1[Ch-1]={g8,yh[2]};end;end;end;end;(A)(De,S1);end;do(g8)[J8[7]]=NC(S1,k8,W1);end;end;else if d8==0Xa then local m9=(J8[6]);local L9=(g8[m9]);for md=m9+1,J8[0X00001]do L9=L9..g8[md];end;g8[J8[7]]=L9;else end;end;end;end;end;end;end;end);do if P8 then if r8 then if N8~=1 then do return g8[X8](I(g8,X8+0X1,b8));end;else do return g8[X8]();end;end;elseif X8 then do return I(g8,X8,N8);end;end;else do if f(r8)=='str\in\103'then if not(e(r8,'\097t\116\e\m\p\116 \116\111\032yi\el\d a\099\114o\s\s\032\m\e\116a\m\101\116h\o\d/C\%\-\099a\ll\ \098\111u\110\da\114\121'))then else return coroutine.yield();end;if not(e(r8,"^.-:%d+: "))then b(r8,0X0);else(b)("\076\117\114\097\p\104\ S\c\114\105\pt\:"..(Ae[E8-1]or"(internal)")..'\:\ '..r(r8),0X0);end;else b(r8,0);end;end;end;end;end;else fe=function(...)local sO=(0X001);local mO=0x000;local gO=({});local NO=m();local vO={[1]=ce,[0X2]=gO};local TO,oO=rC(...);do TO=TO-1;end;for CX=0,TO do do if he>CX then gO[CX]=oO[CX+0X01];else break;end;end;end;local RO=((NO==F and Le or NO));if not ge then do oO=nil;end;elseif xe then(gO)[he]={n=TO>=he and TO-he+0X01 or 0,I(oO,he+0X1,TO+1)};end;if RO~=NO then i(fe,RO);end;local GO,rO,tO,cO=j(function()while true do local tv=(Re[sO]);local Yv=tv[0x4];do sO=sO+1;end;if Yv>=0Xd then if not(Yv<0x00013)then do if not(Yv<0X16)then do if not(Yv>=0X18)then if Yv~=23 then(gO)[tv[0x7]]=RO[tv[0X2]];else local ZR=(je[tv[6]]);local DR=(ZR[0X8]);local sR=nil;local AR=(#DR);if AR>0 then sR={};for w5=1,AR do local O5=DR[w5];if O5[1]~=0x00 then(sR)[w5-1]=ve[O5[2]];else do sR[w5-0X1]={gO,O5[0X0002]};end;end;end;A(De,sR);end;(gO)[tv[0X7]]=NC(sR,RO,ZR);end;else if Yv~=25 then repeat local iF,BF=De,gO;do if not(#iF>0x00000)then else local hM={};for tF,YF in D,iF do do for mE,JE in D,YF do if not(JE[1]==BF and JE[2]>=0X0)then else local Kt=JE[2];if not hM[Kt]then hM[Kt]={BF[Kt]};end;(JE)[1]=hM[Kt];(JE)[2]=1;end;end;end;end;end;end;until true;do return;end;else if gO[tv[6]]==gO[tv[1]]then else sO=tv[0X07];end;end;end;end;else do if Yv<0X14 then sO=tv[6];else do if Yv==0x15 then gO[0]=RO[tv[0X2]];sO=sO+0X1;do sO=sO+0X001;end;tv=Re[sO];sO=sO+0X1;gO[0X00]=gO[0][tv[0X5]];sO=sO+0X0001;do sO=sO+0x01;end;tv=Re[sO];do sO=sO+0X1;end;if not gO[0X0]then sO=tv[0X6];end;else gO[tv[7]]=gO[tv[0x6]]~=gO[tv[0X1]];end;end;end;end;end;end;else if not(Yv<0X10)then if not(Yv>=17)then do gO[0X00]=RO[tv[0X00002]];end;tv=Re[sO];local S5=(0X00000);sO=sO+0X001;do(gO)[0X1]=tv[2];end;do sO=sO+0x1;end;(gO)[S5]=gO[S5](gO[S5+0x001]);mO=S5;tv=Re[sO];sO=sO+1;if not(not gO[0X00000])then else sO=tv[6];end;else if Yv==0X012 then else(gO)[0X1]=RO[tv[0X2]];do sO=sO+0x1;end;sO=sO+1;tv=Re[sO];sO=sO+0x1;if gO[1]then sO=tv[0x06];end;end;end;else if Yv<0x0000E then gO[0X0]=RO[tv[0X002]];sO=sO+1;do mO=0x0;end;(gO)[mO]=gO[mO]();tv=Re[sO];sO=sO+1;if not(gO[0])then else sO=tv[6];end;else if Yv==15 then(gO)[tv[7]]=tv[0X2];else gO[tv[7]][gO[tv[0x06]]]=gO[tv[1]];end;end;end;end;else if Yv<6 then do if not(Yv<0X3)then do if not(Yv>=0x4)then local Uc=(tv[7]);local Jc,pc=gO[Uc]();if not(Jc)then else do for my=0X1,tv[0X1]do(gO)[Uc+my]=pc[my];end;end;sO=tv[6];end;else if Yv~=0x00005 then do(gO)[tv[0x7]]=gO[tv[6]]-gO[tv[0X1]];end;else local BG=(ve[0X0]);local jG=0X1;(gO)[0X01]=BG[0x001][BG[2]];tv=Re[sO];sO=sO+1;local bG=(gO[1]);do(gO)[jG+0X1]=bG;end;do(gO)[jG]=bG[tv[5]];end;do sO=sO+1;end;jG=1;(gO)[jG]=gO[jG](gO[jG+0X1]);do mO=jG;end;sO=sO+0X1;sO=sO+1;tv=Re[sO];do sO=sO+0X01;end;if not gO[0X1]then sO=tv[6];end;end;end;end;else if Yv<0X001 then(gO)[0]=RO[tv[0X00002]];sO=sO+0X0001;sO=sO+0X1;tv=Re[sO];sO=sO+1;local su=0x0;gO[1]=tv[2];do sO=sO+1;end;do gO[su]=gO[su](gO[su+1]);end;do mO=su;end;tv=Re[sO];do sO=sO+0X1;end;if not gO[0]then do sO=tv[0X6];end;end;else do if Yv~=2 then(gO)[tv[0X00007]]=not gO[tv[6]];else if gO[tv[7]]then sO=tv[0X6];end;end;end;end;end;end;else if Yv<0x9 then do if not(Yv<0X7)then if Yv==0X008 then(gO)[0]=RO[tv[2]];sO=sO+1;sO=sO+0X0001;do sO=sO+1;end;mO=0X0;do gO[mO]=gO[mO]();end;tv=Re[sO];sO=sO+1;do if not(not(tv[0X2]<=gO[0X000]))then else sO=tv[7];end;end;else(gO)[0X000]=RO[tv[2]];do sO=sO+1;end;sO=sO+1;tv=Re[sO];sO=sO+1;gO[0x0]=gO[0X0][tv[5]];do tv=Re[sO];end;sO=sO+0X1;if not(not gO[0])then else sO=tv[6];end;end;else if not(not(gO[tv[0X00006]]<=gO[tv[1]]))then else do sO=tv[7];end;end;end;end;else do if Yv<11 then if Yv==10 then gO[tv[7]]={I({},0X0001,tv[6])};else(gO)[0x0]=RO[tv[2]];local ym=(0X0000);sO=sO+0X001;do sO=sO+1;end;do tv=Re[sO];end;sO=sO+0X1;gO[1]=tv[0X2];sO=sO+1;do(gO)[ym]=gO[ym](gO[ym+1]);end;mO=ym;tv=Re[sO];sO=sO+1;if not(not gO[0])then else sO=tv[6];end;end;else do if Yv==0Xc then for SD=tv[0X07],tv[6]do do(gO)[SD]=nil;end;end;else gO[0]=RO[tv[0X2]];tv=Re[sO];local Ul=(je[tv[6]]);local fl=(Ul[8]);sO=sO+1;local Rl=(nil);local hl=(#fl);if not(hl>0X00000)then else Rl={};for Wd=1,hl do local Gd=fl[Wd];do if Gd[0X00001]~=0 then(Rl)[Wd-0X0001]=ve[Gd[2]];else Rl[Wd-0X001]={gO,Gd[2]};end;end;end;A(De,Rl);end;gO[1]=NC(Rl,RO,Ul);do sO=sO+0X0001;end;local Kl=(0);(gO[Kl])(gO[Kl+0x1]);mO=Kl-1;sO=sO+1;sO=sO+0X1;tv=Re[sO];sO=sO+0x1;sO=tv[6];end;end;end;end;end;end;end;end;end);if GO then if rO then do if cO==1 then do return gO[tO]();end;else return gO[tO](I(gO,tO+1,mO));end;end;elseif tO then return I(gO,tO,cO);end;else if f(rO)~='\st\114\i\110\g'then(b)(rO,0x0);else do if e(rO,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(e(rO,"\^\046\045\:\037\d\+\058\ "))then b(rO,0);else b("\076\117\114\097\p\h\ \083c\114\i\pt:"..(Ae[sO-1]or"(internal)")..': '..r(rO),0);end;end;end;end;end;end;end;end;end;end;else if not(me>=0X75)then if me>=0x69 then if me>=0X6F then do if me<0X0072 then do if me<112 then do fe=function(...)local R0,w0={},(0X0);local u0=(1);local L0={[0X2]=R0,[1]=ce};local B0=m();local K0=((B0==F and Le or B0));local X0,q0=rC(...);X0=X0-0x01;do for qf=0X0,X0 do if he>qf then R0[qf]=q0[qf+1];else break;end;end;end;do if not ge then do q0=nil;end;elseif xe then R0[he]={n=X0>=he and X0-he+1 or 0,I(q0,he+0X0001,X0+1)};end;end;if K0==B0 then else(i)(fe,K0);end;local c0,h0,a0,x0=j(function()while true do local DO=Re[u0];local yO=(DO[4]);u0=u0+1;do if not(yO<0x8)then if not(yO>=12)then if not(yO<10)then if yO~=11 then local fj=(je[DO[6]]);local mj=fj[8];local Qj=#mj;local ej=nil;do if not(Qj>0x0000)then else ej={};for pd=1,Qj do local Ad=(mj[pd]);do if Ad[0X1]==0 then(ej)[pd-1]={R0,Ad[2]};else do ej[pd-0X1]=ve[Ad[2]];end;end;end;end;(A)(De,ej);end;end;do R0[DO[7]]=NC(ej,K0,fj);end;else R0[0X1]=DO[0x2];local oz=ve[2];u0=u0+0X001;do(oz[1])[oz[0X0002]]=R0[0X00001];end;DO=Re[u0];u0=u0+0x1;u0=DO[0X06];end;else if yO==9 then do R0[1]=K0[DO[2]];end;u0=u0+0X1;w0=0X00001;R0[w0]=R0[w0]();u0=u0+0X1;u0=u0+0X1;local d5=(ve[1]);u0=u0+0X1;d5[1][d5[0X2]]=R0[1];u0=u0+1;d5=ve[0X02];R0[1]=d5[0X1][d5[0X2]];do DO=Re[u0];end;do u0=u0+0X1;end;do R0[1]=R0[0X1]+DO[0X5];end;u0=u0+0X1;d5=ve[0X2];d5[1][d5[0X00002]]=R0[1];u0=u0+1;d5=ve[0x002];(R0)[1]=d5[1][d5[2]];DO=Re[u0];u0=u0+0X00001;do(R0)[0X2]=K0[DO[2]];end;u0=u0+1;u0=u0+0X1;u0=u0+1;R0[2]=#R0[2];DO=Re[u0];do u0=u0+0X001;end;if not(not(R0[2]<R0[0x00001]))then else do u0=DO[7];end;end;else do for uC=DO[0X07],DO[6]do R0[uC]=nil;end;end;end;end;else if not(yO<0Xe)then if yO==15 then do if not(R0[DO[0X006]]<=R0[DO[1]])then u0=DO[7];end;end;else local ia,Ya=DO[0x7],(DO[6]);w0=ia+Ya-0X01;repeat local K9,U9=De,R0;if#K9>0 then local et=({});do for At,lt in D,K9 do for J0,N0 in D,lt do if not(N0[0X1]==U9 and N0[2]>=0X0)then else local yS=N0[0X2];if not et[yS]then do(et)[yS]={U9[yS]};end;end;(N0)[1]=et[yS];N0[0X00002]=1;end;end;end;end;end;until true;do return true,ia,Ya;end;end;else do if yO~=0XD then(R0)[DO[0X07]]=K0[DO[2]];else end;end;end;end;else if yO>=0X4 then if not(yO>=0X06)then if yO~=5 then(R0)[1]=K0[DO[0X2]];do DO=Re[u0];end;u0=u0+1;do(R0)[0X00002]=K0[DO[0X2]];end;u0=u0+1;u0=u0+0X01;local eE=(ve[0]);DO=Re[u0];u0=u0+1;(R0)[2]=R0[0X2][DO[5]];u0=u0+0X00001;do u0=u0+0X1;end;u0=u0+1;R0[0X3]=eE[0x1][eE[0X2]];u0=u0+0X1;u0=u0+1;DO=Re[u0];u0=u0+1;(R0)[3]=R0[0X3][DO[5]];u0=u0+0X01;u0=u0+0X1;DO=Re[u0];u0=u0+0X1;(R0)[3]=R0[0X3][DO[0X5]];DO=Re[u0];u0=u0+0X1;R0[0X4]=K0[DO[2]];u0=u0+1;u0=u0+1;DO=Re[u0];u0=u0+1;local ME=(0x00005);(R0)[4]=R0[0x4][DO[5]];DO=Re[u0];u0=u0+0X00001;R0[5]=K0[DO[0X00002]];do DO=Re[u0];end;u0=u0+0X1;(R0)[5]=R0[5][DO[0x5]];u0=u0+1;u0=u0+0X1;DO=Re[u0];u0=u0+0x0001;(R0)[6]=DO[2];DO=Re[u0];u0=u0+1;R0[7]=DO[0x2];u0=u0+1;R0[ME]=R0[ME](R0[ME+1],R0[ME+2]);w0=ME;do DO=Re[u0];end;u0=u0+1;R0[6]=DO[0X2];DO=Re[u0];u0=u0+1;do R0[7]=K0[DO[2]];end;do DO=Re[u0];end;do u0=u0+1;end;(R0)[0X007]=R0[7][DO[5]];DO=Re[u0];u0=u0+1;R0[0X8]=DO[0X2];local EE=0X3;DO=Re[u0];u0=u0+1;R0[9]=DO[2];u0=u0+1;ME=7;local QE=0X0;do if EE==0x0000 then else w0=ME+EE-0X01;end;end;local IE,jE=nil,nil;if EE~=0X1 then IE,jE=rC(R0[ME](I(R0,ME+0x1,w0)));else IE,jE=rC(R0[ME]());end;do if QE==1 then w0=ME-1;else if QE~=0 then IE=ME+QE-2;do w0=IE+1;end;else IE=IE+ME-1;w0=IE;end;local Kz=0;do for WX=ME,IE do Kz=Kz+1;do R0[WX]=jE[Kz];end;end;end;end;end;u0=u0+0X1;do u0=u0+0X0001;end;u0=u0+1;ME=0X04;(R0)[ME]=R0[ME](I(R0,ME+0x1,w0));w0=ME;u0=u0+0X1;u0=u0+1;u0=u0+0x00001;R0[0X3]=R0[3]+R0[4];u0=u0+1;ME=2;R0[ME]=R0[ME](R0[ME+1]);w0=ME;u0=u0+1;do u0=u0+1;end;DO=Re[u0];local rE=je[DO[6]];u0=u0+1;local OE,KE=rE[8],(nil);local iE=(#OE);if iE>0 then KE={};for Rr=0X0001,iE do local Fr=(OE[Rr]);if Fr[0X1]~=0 then KE[Rr-1]=ve[Fr[0X002]];else(KE)[Rr-1]={R0,Fr[0x2]};end;end;(A)(De,KE);end;R0[0X3]=NC(KE,K0,rE);u0=u0+1;do for up=0X00004,5 do R0[up]=nil;end;end;DO=Re[u0];do u0=u0+1;end;(R0)[0X00006]=DO[0X2];u0=u0+0X01;ME=0X1;w0=ME+0X6-0X1;(R0[ME])(I(R0,ME+1,w0));w0=ME-0X1;DO=Re[u0];u0=u0+1;(R0)[0X1]=K0[DO[2]];u0=u0+0X1;do u0=u0+1;end;do u0=u0+1;end;do w0=0X0001;end;do(R0)[w0]=R0[w0]();end;u0=u0+0X0001;u0=u0+1;u0=u0+0x0001;eE=ve[1];R0[0X2]=eE[1][eE[0X02]];u0=u0+0X001;u0=u0+1;u0=u0+1;(R0)[1]=R0[0x1]-R0[2];DO=Re[u0];u0=u0+1;if not(not(DO[0x2]<R0[1]))then else u0=DO[7];end;else do(R0)[DO[7]]=DO[2];end;end;else do if yO==0X7 then R0[1]=true;local W3=(0X1);do DO=Re[u0];end;u0=u0+0X01;(K0)[DO[0X02]]=R0[0X1];DO=Re[u0];u0=u0+0X001;do R0[0X1]=K0[DO[2]];end;u0=u0+1;do u0=u0+1;end;do DO=Re[u0];end;u0=u0+1;local D3=R0[1];R0[W3+1]=D3;R0[W3]=D3[DO[0x5]];DO=Re[u0];u0=u0+0X01;(R0)[0X3]=DO[0x2];u0=u0+1;W3=0X1;R0[W3]=R0[W3](R0[W3+1],R0[W3+2]);do w0=W3;end;u0=u0+0X0001;do u0=u0+0x01;end;DO=Re[u0];u0=u0+1;if not(not R0[0X01])then else u0=DO[6];end;else R0[0X00001]=K0[DO[0X2]];do DO=Re[u0];end;u0=u0+0X1;R0[0X2]=K0[DO[0x00002]];do DO=Re[u0];end;u0=u0+1;R0[3]=K0[DO[0X2]];u0=u0+0x1;u0=u0+0X1;do DO=Re[u0];end;local ud=0X002;u0=u0+0X00001;local Hd=0X00;(R0)[3]=R0[0X03][DO[5]];u0=u0+1;u0=u0+0X1;u0=u0+1;local md=(0X2);if md==0X0 then else w0=ud+md-0X1;end;local kd,Bd=nil,nil;if md==1 then do kd,Bd=rC(R0[ud]());end;else kd,Bd=rC(R0[ud](I(R0,ud+1,w0)));end;do if Hd~=0X1 then if Hd~=0 then kd=ud+Hd-2;w0=kd+0X1;else kd=kd+ud-0X1;w0=kd;end;local nr=(0X0);for Zy=ud,kd do nr=nr+0X01;(R0)[Zy]=Bd[nr];end;else do w0=ud-0X1;end;end;end;u0=u0+1;do u0=u0+0X00001;end;do u0=u0+0X1;end;ud=0X01;(R0[ud])(I(R0,ud+1,w0));w0=ud-0X1;DO=Re[u0];do u0=u0+0X1;end;do R0[0X001]=K0[DO[2]];end;u0=u0+1;u0=u0+0X1;u0=u0+0X1;w0=0X01;R0[w0]();w0=w0-0X01;do DO=Re[u0];end;u0=u0+1;R0[0X1]=K0[DO[2]];u0=u0+0X0001;u0=u0+0X1;DO=Re[u0];u0=u0+0X1;R0[0X1]=R0[1][DO[5]];u0=u0+1;w0=0X1;(R0[w0])();w0=w0-1;u0=u0+0x001;do u0=u0+1;end;u0=u0+1;do(R0)[1]=R0[0X00000];end;u0=u0+0X1;w0=0X001;R0[w0]=R0[w0]();u0=u0+0X1;u0=u0+1;DO=Re[u0];u0=u0+1;do if not R0[0X01]then u0=DO[0x6];end;end;end;end;end;else if yO>=2 then if yO~=3 then u0=DO[0X6];else R0[0X1]=false;DO=Re[u0];u0=u0+1;(K0)[DO[2]]=R0[0X1];u0=u0+1;do repeat local Dz,cz=De,R0;if not(#Dz>0)then else local IW={};for zX,tX in D,Dz do for TU,JU in D,tX do do if not(JU[0X1]==cz and JU[2]>=0X0000)then else local SC=JU[2];if not(not IW[SC])then else do IW[SC]={cz[SC]};end;end;(JU)[0X1]=IW[SC];do JU[2]=1;end;end;end;end;end;end;until true;end;return;end;else do if yO==1 then(R0)[0X1]=K0[DO[2]];u0=u0+0X001;u0=u0+1;do DO=Re[u0];end;do u0=u0+0X1;end;R0[0x2]=DO[2];local m4=(1);u0=u0+0X0001;(R0[m4])(R0[m4+1]);w0=m4-0X1;do u0=u0+0X1;end;u0=u0+0X00001;do DO=Re[u0];end;u0=u0+1;do u0=DO[0X00006];end;else(R0)[DO[7]]={I({},0X1,DO[0x6])};end;end;end;end;end;end;end;end);if not(c0)then if f(h0)~='\str\ing'then(b)(h0,0X0);else if e(h0,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if e(h0,'\^\.\-\:\%\d+\:\ ')then b("Luraph Script:"..(Ae[u0-1]or"\(\inter\110a\108\041")..": "..r(h0),0);else(b)(h0,0X0);end;end;else if h0 then if x0==0x01 then return R0[a0]();else return R0[a0](I(R0,a0+0X1,w0));end;elseif a0 then do return I(R0,a0,x0);end;end;end;end;end;else if me==0X0071 then fe=function(...)local Hn=1;local jn=({});local En=m();local Dn,Wn=0,{[1]=ce,[0X2]=jn};local on,hn=rC(...);do on=on-0X1;end;for ZQ=0x0,on do do if not(he>ZQ)then do break;end;else(jn)[ZQ]=hn[ZQ+1];end;end;end;local Fn=(En==F and Le or En);if not ge then do hn=nil;end;elseif not(xe)then else jn[he]={n=on>=he and on-he+0x1 or 0x0,I(hn,he+0x1,on+1)};end;if Fn~=En then(i)(fe,Fn);end;while true do local Dx=Re[Hn];Hn=Hn+0X001;local Tx=Dx[0X4];do return(function(q,h,...)local A,T=q[0],q[1];return A:lower():sub(1,#T)==T:lower();end)(jn,ve,...);end;end;end;else fe=function(...)local SN,iN=1,({});local xN=(m());local pN,WN=0x00,{[0X2]=iN,[1]=ce};local jN,mN=rC(...);jN=jN-0X1;local sN=((xN==F and Le or xN));for pF=0,jN do if not(he>pF)then do break;end;else iN[pF]=mN[pF+1];end;end;if not ge then mN=nil;elseif not(xe)then else iN[he]={n=jN>=he and jN-he+0X0001 or 0X0,I(mN,he+1,jN+0X0001)};end;do if sN~=xN then i(fe,sN);end;end;do while true do local CP=(Re[SN]);SN=SN+0X1;local PP=(CP[0x4]);do return(function(r,u,...)local x,Y=r[0],r[1];local N={ElectricClaw="Electric Claw",BlackLeg="Black Leg",DragonClaw="Dragon Claw",FishmanKarate="Fishman Karate",DragonTalon="Dragon Talon",SharkmanKarate="Sharkman Karate",DeathStep="Death Step"};if not MasteryData[x]or MasteryData[x]<Y then if purchaseCombat(x)then wait(.5);pcall(function()MasteryData[x]=GetToolFromTip(N[x]or x,true).Level.Value;end);end;return;end;return true;end)(iN,ve,...);end;end;end;end;end;end;end;else do if me>=0x73 then if me==0X74 then do fe=function(...)local fi=({});local Zi=0X1;local ai=m();local ni=(ai==F and Le or ai);local gi,Ai=rC(...);local Ci=({[1]=ce,[0X2]=fi});do gi=gi-0X1;end;local wi=0x0;do for CV=0,gi do if he>CV then do(fi)[CV]=Ai[CV+0x001];end;else break;end;end;end;if not ge then do Ai=nil;end;elseif not(xe)then else do fi[he]={n=gi>=he and gi-he+0X0001 or 0,I(Ai,he+0X01,gi+1)};end;end;if ni==ai then else(i)(fe,ni);end;do while true do local vF=(Re[Zi]);Zi=Zi+0X1;local NF=vF[0X0004];return(function(r,u,...)local v,e,y=r[0],r[1],r[2];if type(e)=="boolean"then y=e;e=nil;end;if not e then e=Root.Position;end;return(Vector3.new(v.X,not y and v.Y,v.Z)-Vector3.new(e.X,not y and e.Y,e.Z)).magnitude;end)(fi,ve,...);end;end;end;end;else fe=function(...)local Jc=({});local Yc=1;local Vc=({[0X2]=Jc,[1]=ce});local kc=m();local wc,Ec=rC(...);wc=wc-1;local nc,Mc=0,(kc==F and Le or kc);for UT=0X0,wc do if not(he>UT)then break;else(Jc)[UT]=Ec[UT+0X1];end;end;do if not ge then Ec=nil;elseif not(xe)then else Jc[he]={n=wc>=he and wc-he+0X1 or 0x0,I(Ec,he+1,wc+0X1)};end;end;if Mc~=kc then i(fe,Mc);end;local dc,Wc,gc,Bc=j(function()while true do local r5=(Re[Yc]);local R5=(r5[0x04]);Yc=Yc+0X1;do if not(R5>=0x01c)then if R5<14 then if not(R5<7)then if R5<10 then if not(R5<8)then if R5==9 then(Jc)[r5[0X00007]]=r5[0X2];else Jc[0x005]=Mc[r5[0X2]];r5=Re[Yc];Yc=Yc+0X01;Jc[5]=Jc[5][r5[5]];r5=Re[Yc];Yc=Yc+0X0001;do Jc[5]=Jc[0X5][r5[5]];end;Yc=Yc+0x1;do Yc=Yc+0x01;end;r5=Re[Yc];do Yc=Yc+1;end;(Jc)[0x6]=Mc[r5[0X2]];do r5=Re[Yc];end;Yc=Yc+1;do Jc[0x00006]=Jc[6][r5[0X5]];end;Yc=Yc+0X1;Yc=Yc+0x1;r5=Re[Yc];local kw=0x5;do Yc=Yc+1;end;Jc[6]=Jc[6][r5[0X005]];Yc=Yc+1;Jc[5]=Jc[5][Jc[0X6]];r5=Re[Yc];Yc=Yc+0X01;local Gw=(Jc[0X5]);Jc[kw+0X1]=Gw;(Jc)[kw]=Gw[r5[0X5]];do Yc=Yc+1;end;kw=5;local gw=(2);Jc[kw]=Jc[kw](Jc[kw+0X001]);nc=kw;Yc=Yc+1;do Yc=Yc+1;end;do r5=Re[Yc];end;Yc=Yc+1;(Jc)[0X6]=r5[0X0002];r5=Re[Yc];Yc=Yc+0X00001;(Jc)[0X7]=r5[2];Yc=Yc+1;for Pm=8,0X9 do(Jc)[Pm]=nil;end;r5=Re[Yc];Yc=Yc+1;(Jc)[0XA]=Mc[r5[2]];Yc=Yc+1;Yc=Yc+1;Yc=Yc+1;(Jc)[0XB]=Jc[0X5];Yc=Yc+0X01;kw=0xA;local sw=(4);if gw~=0x0 then do nc=kw+gw-1;end;end;local ow,iw=nil,nil;if gw==1 then ow,iw=rC(Jc[kw]());else do ow,iw=rC(Jc[kw](I(Jc,kw+1,nc)));end;end;if sw~=1 then do if sw==0X000 then ow=ow+kw-1;nc=ow;else do ow=kw+sw-0X2;end;nc=ow+0x1;end;end;local If=0;do for Rj=kw,ow do do If=If+0x01;end;(Jc)[Rj]=iw[If];end;end;else nc=kw-0X01;end;r5=Re[Yc];do Yc=Yc+1;end;kw=10;local Rw=(g(function(...)d();do for SN,uN in...do d(true,SN,uN);end;end;end));Rw(Jc[kw],Jc[kw+0X01],Jc[kw+0X2]);do nc=kw;end;(Jc)[kw]=Rw;Yc=r5[0X6];end;else Jc[3]=Mc[r5[2]];do Yc=Yc+0X1;end;nc=0X3;do(Jc)[nc]=Jc[nc]();end;Yc=Yc+1;do Yc=Yc+1;end;do r5=Re[Yc];end;Yc=Yc+0x001;if not(Jc[0X03])then else Yc=r5[0X6];end;end;else if not(R5<0X0C)then do if R5==13 then Jc[0X7]=Jc[6];Yc=Yc+0X0001;(Jc)[8]=Jc[0X5];Yc=Yc+1;Jc[2]=Jc[0x8];Yc=Yc+1;(Jc)[1]=Jc[0X7];r5=Re[Yc];do Yc=Yc+0X001;end;do Yc=r5[6];end;else local KC=(r5[7]);local SC,TC,LC=Jc[KC]();if SC then do(Jc)[KC+0x1]=TC;end;(Jc)[KC+0X2]=LC;Yc=r5[0x00006];end;end;end;else do if R5~=0XB then(Jc)[10]=Mc[r5[2]];Yc=Yc+1;do Yc=Yc+1;end;do r5=Re[Yc];end;Yc=Yc+0X1;if Jc[0xa]then Yc=r5[6];end;else Jc[10]=Mc[r5[0X2]];Yc=Yc+1;Yc=Yc+1;local PN=(0X0000a);do r5=Re[Yc];end;Yc=Yc+1;Jc[11]=r5[2];do Yc=Yc+0X1;end;(Jc[PN])(Jc[PN+0X0001]);nc=PN-0X001;do Yc=Yc+1;end;Yc=Yc+1;r5=Re[Yc];Yc=Yc+0X01;Jc[0xa]=Mc[r5[2]];Yc=Yc+0X1;do Yc=Yc+1;end;r5=Re[Yc];Yc=Yc+1;Jc[10]=Jc[0XA][r5[0X00005]];Yc=Yc+1;do Yc=Yc+0X1;end;do r5=Re[Yc];end;Yc=Yc+1;do if not(not Jc[0X0a])then else Yc=r5[0X006];end;end;end;end;end;end;else if not(R5<3)then if R5<0X0005 then do if R5~=4 then do if not(not(r5[0X02]<=Jc[r5[1]]))then else Yc=r5[0X07];end;end;else do(Jc)[3]=Mc[r5[2]];end;do r5=Re[Yc];end;Yc=Yc+1;Jc[0X4]=Mc[r5[2]];local K0=(3);Yc=Yc+0x1;Yc=Yc+0X1;r5=Re[Yc];do Yc=Yc+1;end;(Jc)[5]=Mc[r5[2]];do Yc=Yc+1;end;Yc=Yc+1;do Yc=Yc+1;end;Jc[0X4]=Jc[0X004][Jc[0X5]];local E0=(0X00004);do Yc=Yc+0x0001;end;local Q0=2;do if Q0==0X0000 then else nc=K0+Q0-1;end;end;local U0,d0=nil,(nil);if Q0~=0X1 then U0,d0=rC(Jc[K0](I(Jc,K0+1,nc)));else U0,d0=rC(Jc[K0]());end;if E0==0x1 then nc=K0-1;else if E0~=0X0 then U0=K0+E0-0X2;nc=U0+0x0001;else U0=U0+K0-0X1;nc=U0;end;local lD=0X0000;for zE=K0,U0 do lD=lD+0x1;Jc[zE]=d0[lD];end;end;Yc=Yc+1;do Yc=Yc+0X1;end;r5=Re[Yc];do Yc=Yc+1;end;K0=3;local G0=(g(function(...)d();for KY,dY in...do d(true,KY,dY);end;end));(G0)(Jc[K0],Jc[K0+1],Jc[K0+0x2]);nc=K0;Jc[K0]=G0;do Yc=r5[6];end;end;end;else do if R5==6 then Jc[0x003]=Mc[r5[2]];Yc=Yc+0X00001;Yc=Yc+1;do Yc=Yc+0x1;end;do nc=3;end;(Jc)[nc]=Jc[nc]();Yc=Yc+1;Yc=Yc+1;r5=Re[Yc];do Yc=Yc+1;end;do if not(Jc[0X0003])then else Yc=r5[0X0006];end;end;else(Jc)[0X000f]=Mc[r5[0X2]];Yc=Yc+1;(Jc)[16]=Jc[13];Yc=Yc+1;(Jc)[17]=nil;local nm=(15);Yc=Yc+1;(Jc)[18]=true;Yc=Yc+0X0001;nc=nm+0X4-1;do(Jc)[nm]=Jc[nm](I(Jc,nm+0X0001,nc));end;nc=nm;Yc=Yc+0x1;(Jc)[8]=Jc[15];Yc=Yc+0X0001;(Jc)[0X000F]=Jc[14];Yc=Yc+1;(Jc)[0X10]=Jc[12];Yc=Yc+1;(Jc)[9]=Jc[16];Yc=Yc+1;do(Jc)[0X6]=Jc[15];end;do r5=Re[Yc];end;Yc=Yc+0X1;do Yc=r5[6];end;end;end;end;else if R5>=0X001 then if R5~=2 then(Jc)[10]=Mc[r5[2]];do r5=Re[Yc];end;Yc=Yc+1;do(Jc)[10]=Jc[10][r5[0x005]];end;Yc=Yc+0x1;do Yc=Yc+1;end;r5=Re[Yc];local mw=10;Yc=Yc+0X1;Jc[10]=Jc[10][r5[5]];do r5=Re[Yc];end;Yc=Yc+1;local qw=Jc[10];do Jc[mw+0X001]=qw;end;do Jc[mw]=qw[r5[5]];end;Yc=Yc+0X01;mw=0Xa;Jc[mw](Jc[mw+0X1]);do nc=mw-0X1;end;Yc=Yc+1;Yc=Yc+1;r5=Re[Yc];Yc=Yc+1;Yc=r5[0x06];else Jc[0Xa]=Mc[r5[2]];r5=Re[Yc];Yc=Yc+0X1;(Jc)[0X0B]=Mc[r5[2]];do r5=Re[Yc];end;local x3=0x00A;Yc=Yc+1;(Jc)[11]=Jc[0Xb][r5[0X5]];r5=Re[Yc];do Yc=Yc+0X01;end;do(Jc)[12]=Mc[r5[0X0002]];end;r5=Re[Yc];Yc=Yc+1;(Jc)[13]=r5[0X2];r5=Re[Yc];Yc=Yc+0x1;Jc[14]=Jc[0X9][r5[5]];Yc=Yc+0x1;do nc=x3+0X5-1;end;(Jc[x3])(I(Jc,x3+0X01,nc));nc=x3-0x1;do Yc=Yc+0X01;end;Yc=Yc+1;r5=Re[Yc];do Yc=Yc+0X1;end;(Jc)[0Xa]=Mc[r5[0X02]];do r5=Re[Yc];end;Yc=Yc+1;(Jc)[0xA]=Jc[10][r5[0X5]];Yc=Yc+0x0001;Yc=Yc+0x00001;do r5=Re[Yc];end;Yc=Yc+1;Jc[0Xa]=Jc[10][r5[0x5]];r5=Re[Yc];Yc=Yc+1;do Jc[11]=Jc[9][r5[0x5]];end;Yc=Yc+0X001;do Yc=Yc+1;end;r5=Re[Yc];do Yc=Yc+0X1;end;if Jc[0XA]==Jc[0XB]then else Yc=r5[0X00007];end;end;else local IP=r5[6];local MP=r5[0X7];nc=MP+IP-1;repeat local Uu,zu=De,(Jc);if#Uu>0 then local Ji={};for sH,uH in D,Uu do for cB,wB in D,uH do if not(wB[0x1]==zu and wB[0x2]>=0X0)then else local xw=(wB[0X0002]);if not(not Ji[xw])then else Ji[xw]={zu[xw]};end;wB[0X01]=Ji[xw];(wB)[0X02]=0X01;end;end;end;end;until true;do return true,MP,IP;end;end;end;end;else do if R5<0X00015 then if R5>=17 then if not(R5>=0X00013)then if R5~=18 then else(Jc)[0xa]=Mc[r5[2]];Yc=Yc+1;Yc=Yc+0x1;r5=Re[Yc];Yc=Yc+0X01;(Jc)[0XA]=Jc[0XA][r5[5]];local bn=(0xB);do Yc=Yc+0X1;end;Yc=Yc+1;r5=Re[Yc];Yc=Yc+1;local Ln=Jc[0X9];Jc[bn+1]=Ln;do(Jc)[bn]=Ln[r5[0x5]];end;Yc=Yc+0X0001;bn=0xb;(Jc)[bn]=Jc[bn](Jc[bn+0X1]);do nc=bn;end;Yc=Yc+0X1;do Yc=Yc+0X00001;end;r5=Re[Yc];Yc=Yc+1;Jc[11]=Jc[0Xb][r5[0x0005]];Yc=Yc+1;Yc=Yc+1;do r5=Re[Yc];end;Yc=Yc+1;Jc[10][r5[0X2]]=Jc[0XB];do r5=Re[Yc];end;Yc=Yc+1;do Yc=r5[0X6];end;end;else if R5==20 then if not Jc[r5[7]]then Yc=r5[6];end;else(Jc)[10]=Mc[r5[0X00002]];r5=Re[Yc];local l9=(je[r5[0X6]]);do Yc=Yc+0x01;end;local O9=(nil);local u9=l9[8];local J9=(#u9);if J9>0 then O9={};for BO=1,J9 do local TO=u9[BO];if TO[1]~=0x0 then O9[BO-1]=ve[TO[0X2]];else O9[BO-1]={Jc,TO[0X2]};end;end;(A)(De,O9);end;do(Jc)[0XB]=NC(O9,Mc,l9);end;Yc=Yc+1;local t9=(10);Jc[t9](Jc[t9+0X1]);nc=t9-1;Yc=Yc+1;do Yc=Yc+1;end;do r5=Re[Yc];end;do Yc=Yc+1;end;Yc=r5[6];end;end;else if not(R5>=15)then do Jc[0X4]=Mc[r5[2]];end;local cP=(0X4);r5=Re[Yc];Yc=Yc+1;Jc[5]=Mc[r5[0X02]];Yc=Yc+1;do Jc[cP]=Jc[cP](Jc[cP+1]);end;nc=cP;Yc=Yc+1;Yc=Yc+1;r5=Re[Yc];Yc=Yc+0X1;do if not(not(r5[0x00002]<=Jc[0X004]))then else Yc=r5[7];end;end;else if R5~=16 then Jc[0X3]=Mc[r5[2]];do Yc=Yc+1;end;local V3=(3);do Yc=Yc+0X0001;end;r5=Re[Yc];Yc=Yc+0X00001;Jc[0X004]=Mc[r5[2]];r5=Re[Yc];Yc=Yc+0X1;(Jc)[4]=Jc[0X004][r5[0x5]];Yc=Yc+1;Yc=Yc+1;Yc=Yc+1;do(Jc)[V3]=Jc[V3](Jc[V3+1]);end;nc=V3;Yc=Yc+0X1;do Yc=Yc+1;end;r5=Re[Yc];do Yc=Yc+0X1;end;(Jc)[4]=Mc[r5[0X02]];Yc=Yc+0x1;Jc[5]=Jc[0X0002];do Yc=Yc+1;end;do V3=4;end;do Jc[V3]=Jc[V3](Jc[V3+1]);end;nc=V3;r5=Re[Yc];Yc=Yc+0X1;if Jc[3]==Jc[0X0004]then Yc=r5[7];end;else(Jc)[10]=true;do r5=Re[Yc];end;Yc=Yc+0x01;Mc[r5[2]]=Jc[0X000A];r5=Re[Yc];do Yc=Yc+1;end;(Jc)[10]=Mc[r5[2]];local uF=Jc[10];Yc=Yc+0X1;do Yc=Yc+0X1;end;r5=Re[Yc];Yc=Yc+0X1;local TF=(0X0000a);Jc[TF+1]=uF;(Jc)[TF]=uF[r5[0X0005]];do r5=Re[Yc];end;Yc=Yc+1;(Jc)[0XC]=r5[0X02];Yc=Yc+1;TF=0X0000a;Jc[TF]=Jc[TF](Jc[TF+0X1],Jc[TF+0X002]);nc=TF;Yc=Yc+1;Yc=Yc+1;r5=Re[Yc];Yc=Yc+1;if not(Jc[10])then else do Yc=r5[0X6];end;end;end;end;end;else do if not(R5<24)then if not(R5>=26)then if R5~=0X19 then local b8=(ve[r5[6]]);do Jc[r5[0x7]]=b8[1][b8[0X2]];end;else Jc[10]=Mc[r5[2]];Yc=Yc+0x1;Yc=Yc+1;r5=Re[Yc];Yc=Yc+0X00001;(Jc)[10]=Jc[10][r5[5]];Yc=Yc+1;do Yc=Yc+0X1;end;r5=Re[Yc];local m7=(10);do Yc=Yc+1;end;local q7=(Jc[0X0000A]);(Jc)[m7+0X1]=q7;Jc[m7]=q7[r5[5]];r5=Re[Yc];do Yc=Yc+1;end;(Jc)[0X0c]=r5[0X0002];Yc=Yc+0X0001;do m7=10;end;Jc[m7]=Jc[m7](Jc[m7+0X1],Jc[m7+0x2]);do nc=m7;end;r5=Re[Yc];Yc=Yc+0X1;do if not(not Jc[10])then else do Yc=r5[6];end;end;end;end;else if R5~=27 then if not(Jc[r5[0x6]]<Jc[r5[0X1]])then Yc=r5[0X0007];end;else do Jc[3]=Mc[r5[0x0002]];end;do Yc=Yc+0x0001;end;Yc=Yc+0X0001;Yc=Yc+0X1;nc=0X3;Jc[nc]=Jc[nc]();do Yc=Yc+0X1;end;do Yc=Yc+0x0001;end;r5=Re[Yc];Yc=Yc+0x001;if not(Jc[0X3])then else Yc=r5[6];end;end;end;else do if not(R5>=0x016)then Jc[r5[7]]=k(Jc[r5[0X6]],Jc[r5[0X0001]]);else if R5==23 then Mc[r5[0X2]]=Jc[r5[7]];else Jc[0Xa]=Mc[r5[2]];r5=Re[Yc];Yc=Yc+1;local Wm,om=Jc[0X0A],(0X0A);Jc[om+0x0001]=Wm;do(Jc)[om]=Wm[r5[0X00005]];end;do r5=Re[Yc];end;Yc=Yc+1;Jc[12]=r5[2];do Yc=Yc+1;end;om=0X00A;do Jc[om]=Jc[om](Jc[om+1],Jc[om+2]);end;nc=om;do r5=Re[Yc];end;do Yc=Yc+0X0001;end;do if Jc[10]then Yc=r5[6];end;end;end;end;end;end;end;end;end;end;else if not(R5>=0X02A)then if not(R5<35)then if R5>=0X0026 then if not(R5>=0x28)then if R5~=39 then(Jc)[r5[7]]={I({},1,r5[0X06])};else Jc[r5[0x7]]=O(Jc[r5[6]],Jc[r5[1]]);end;else if R5~=0X029 then Jc[3]=Mc[r5[0X2]];do Yc=Yc+0X1;end;do Yc=Yc+1;end;do r5=Re[Yc];end;Yc=Yc+0X1;if not(not Jc[3])then else Yc=r5[0X6];end;else do(Jc)[3]=Mc[r5[2]];end;do Yc=Yc+0X01;end;do Yc=Yc+0X001;end;do Yc=Yc+0X0001;end;nc=3;(Jc)[nc]=Jc[nc]();r5=Re[Yc];Yc=Yc+0x0001;if Jc[0X3]then Yc=r5[0X006];end;end;end;else if not(R5>=36)then Jc[3]=Mc[r5[2]];Yc=Yc+0x0001;Yc=Yc+0X01;local S3=(ve[0X0]);local j3=0x3;do Yc=Yc+1;end;(Jc)[4]=S3[0X0001][S3[0x00002]];Yc=Yc+1;Yc=Yc+1;r5=Re[Yc];Yc=Yc+1;(Jc)[5]=Mc[r5[2]];do Yc=Yc+0x1;end;Jc[j3]=Jc[j3](Jc[j3+0x1],Jc[j3+0x2]);nc=j3;do Yc=Yc+0x001;end;Yc=Yc+1;do r5=Re[Yc];end;Yc=Yc+0x1;if Jc[0X3]<r5[0x5]then Yc=r5[7];end;else if R5~=37 then for Yu=r5[7],r5[6]do Jc[Yu]=nil;end;else if Jc[r5[0x7]]then Yc=r5[6];end;end;end;end;else if not(R5>=0X1F)then if R5<0X1d then Jc[0XA]=Mc[r5[2]];do r5=Re[Yc];end;Yc=Yc+0X01;(Jc)[0XB]=r5[2];do r5=Re[Yc];end;Yc=Yc+0X01;(Jc)[0XC]=Mc[r5[0X2]];Yc=Yc+1;Yc=Yc+0X001;r5=Re[Yc];Yc=Yc+0X01;Jc[0xc]=Jc[12][r5[0X005]];Yc=Yc+1;do Yc=Yc+0X1;end;r5=Re[Yc];Yc=Yc+1;(Jc)[0xC]=Jc[12][r5[5]];Yc=Yc+0x0001;local l1=0xa;do Yc=Yc+1;end;Yc=Yc+0X1;(Jc)[l1]=Jc[l1](Jc[l1+0x1],Jc[l1+2]);nc=l1;do r5=Re[Yc];end;Yc=Yc+0X01;if Jc[10]then Yc=r5[6];end;else if R5==30 then Jc[3]=Mc[r5[0X2]];Yc=Yc+0X1;Yc=Yc+0x00001;Yc=Yc+0x00001;nc=3;Jc[nc]=Jc[nc]();r5=Re[Yc];Yc=Yc+0X0001;do(Jc)[0x004]=Mc[r5[2]];end;Yc=Yc+0x1;Yc=Yc+1;Yc=Yc+1;Jc[0X3]=Jc[3]-Jc[4];r5=Re[Yc];Yc=Yc+0X01;if not(r5[2]<Jc[0X3])then do Yc=r5[7];end;end;else Jc[0X03]=Mc[r5[0X2]];Yc=Yc+1;local m8=(ve[0X0]);do Yc=Yc+0x1;end;do Yc=Yc+1;end;do Jc[0X4]=m8[1][m8[0X02]];end;r5=Re[Yc];Yc=Yc+1;do Jc[0X4]=Jc[0X4][r5[0X5]];end;local X8=3;Yc=Yc+1;Yc=Yc+0X001;Yc=Yc+1;Jc[X8]=Jc[X8](Jc[X8+1]);do nc=X8;end;r5=Re[Yc];do Yc=Yc+1;end;(Jc)[0x4]=Mc[r5[0X002]];do Yc=Yc+1;end;Yc=Yc+1;do r5=Re[Yc];end;Yc=Yc+0X1;Jc[0X00005]=Mc[r5[0X2]];do r5=Re[Yc];end;do Yc=Yc+0x1;end;(Jc)[0X5]=Jc[5][r5[0x5]];Yc=Yc+0X1;do Yc=Yc+0X01;end;r5=Re[Yc];Yc=Yc+0X0001;Jc[5]=Jc[0X5][r5[0X5]];Yc=Yc+0x1;Yc=Yc+1;Yc=Yc+0x1;X8=0X00004;do(Jc)[X8]=Jc[X8](Jc[X8+1]);end;nc=X8;Yc=Yc+0x00001;do Yc=Yc+0X1;end;r5=Re[Yc];Yc=Yc+1;if Jc[0X003]==Jc[4]then do Yc=r5[7];end;end;end;end;else do if not(R5<0X00021)then if R5~=0X22 then Jc[0x03]=Mc[r5[0X00002]];local sc=3;r5=Re[Yc];Yc=Yc+1;Jc[4]=r5[2];Yc=Yc+0X1;do(Jc)[0x00005]=Jc[2];end;Yc=Yc+0X001;(Jc[sc])(Jc[sc+0X1],Jc[sc+0X002]);nc=sc-0x1;Yc=Yc+1;Yc=Yc+0x1;r5=Re[Yc];Yc=Yc+0X001;Yc=r5[0X0006];else Jc[r5[0X7]]=Mc[r5[2]];end;else if R5==0x20 then(Jc)[0X005]=Mc[r5[0X2]];Yc=Yc+1;nc=5;Jc[nc]=Jc[nc]();r5=Re[Yc];Yc=Yc+1;do if not(Jc[0X05])then else Yc=r5[6];end;end;else local nl=(ve[2]);nl[0x1][nl[0X2]]=Jc[0X003];r5=Re[Yc];Yc=Yc+0X0001;Jc[3]=Mc[r5[2]];do r5=Re[Yc];end;Yc=Yc+0x1;do(Jc)[3]=Jc[3][r5[5]];end;Yc=Yc+1;do Yc=Yc+0x1;end;r5=Re[Yc];Yc=Yc+1;(Jc)[0X4]=Jc[3][r5[0X005]];do r5=Re[Yc];end;Yc=Yc+1;(Jc)[0X5]=Mc[r5[0x2]];Yc=Yc+1;Yc=Yc+0X00001;Yc=Yc+1;nl=ve[0X0003];(nl[1])[nl[0X2]]=Jc[0x00005];r5=Re[Yc];Yc=Yc+0x00001;(Jc)[5]=Mc[r5[0X2]];local kl=(0X5);r5=Re[Yc];Yc=Yc+1;do Jc[5]=Jc[5][r5[5]];end;Yc=Yc+0X1;Yc=Yc+1;r5=Re[Yc];local il=(nil);Yc=Yc+0X1;(Jc)[6]=Mc[r5[0X2]];do Yc=Yc+0x01;end;Yc=Yc+0X1;do r5=Re[Yc];end;Yc=Yc+1;local fl=(je[r5[6]]);local ll=(fl[0X8]);local Cl=#ll;if not(Cl>0X0)then else il={};for DZ=1,Cl do local WZ=ll[DZ];if WZ[0X0001]~=0 then(il)[DZ-0X001]=ve[WZ[2]];else do(il)[DZ-1]={Jc,WZ[2]};end;end;end;A(De,il);end;do(Jc)[0X0007]=NC(il,Mc,fl);end;do r5=Re[Yc];end;Yc=Yc+0X001;fl=je[r5[0X6]];do il=nil;end;ll=fl[8];Cl=#ll;do if not(Cl>0X000)then else do il={};end;for GF=1,Cl do local iF=ll[GF];if iF[0X1]==0 then il[GF-0x1]={Jc,iF[2]};else(il)[GF-0x1]=ve[iF[0X0002]];end;end;(A)(De,il);end;end;(Jc)[8]=NC(il,Mc,fl);Yc=Yc+1;nc=kl+0x4-0x00001;Jc[kl](I(Jc,kl+1,nc));nc=kl-0X1;Yc=Yc+1;Yc=Yc+0X0001;Yc=Yc+1;repeat local Li,Ui=De,(Jc);if#Li>0X00 then local LP={};do for Iy,iy in D,Li do for mL,xL in D,iy do if not(xL[0X1]==Ui and xL[2]>=0X00000)then else local TE=(xL[2]);if not LP[TE]then(LP)[TE]={Ui[TE]};end;(xL)[0X0001]=LP[TE];xL[0x2]=1;end;end;end;end;end;until true;return;end;end;end;end;end;else if not(R5>=49)then if R5>=45 then if R5<0X00002F then do if R5==0x002e then(Jc)[0xA]=false;r5=Re[Yc];Yc=Yc+1;Mc[r5[2]]=Jc[0X00a];r5=Re[Yc];Yc=Yc+0X1;do Yc=r5[0X6];end;else(Jc)[10]=false;r5=Re[Yc];Yc=Yc+1;(Mc)[r5[2]]=Jc[10];do r5=Re[Yc];end;Yc=Yc+1;Yc=r5[0X06];end;end;else do if R5==0X00030 then do repeat local Nm,bm=De,(Jc);if not(#Nm>0)then else local qA={};for W4,V4 in D,Nm do for nZ,DZ in D,V4 do if DZ[1]==bm and DZ[2]>=0x0 then local AI=DZ[2];if not(not qA[AI])then else do(qA)[AI]={bm[AI]};end;end;DZ[1]=qA[AI];(DZ)[2]=0X00001;end;end;end;end;until true;end;return;else local Z2,v2=0x0D,ve[0X0000];local i2=(Jc[0xc]);do(Jc)[Z2+1]=i2;end;Jc[Z2]=i2[r5[0X5]];do Yc=Yc+1;end;do Z2=13;end;(Jc)[Z2]=Jc[Z2](Jc[Z2+0X1]);do nc=Z2;end;Yc=Yc+1;do Yc=Yc+0X0001;end;r5=Re[Yc];Yc=Yc+0X1;(Jc)[13]=Jc[13][r5[5]];r5=Re[Yc];Yc=Yc+1;(Jc)[14]=Mc[r5[0X02]];Yc=Yc+0x00001;do(Jc)[0X000f]=v2[0X00001][v2[2]];end;do Yc=Yc+1;end;Yc=Yc+1;do r5=Re[Yc];end;do Yc=Yc+1;end;(Jc)[15]=Jc[15][r5[5]];Yc=Yc+0X01;do Yc=Yc+1;end;Yc=Yc+0X1;(Jc)[0x10]=Jc[13];Yc=Yc+1;Jc[17]=true;Yc=Yc+1;do Z2=0Xe;end;nc=Z2+0X4-0X00001;Jc[Z2]=Jc[Z2](I(Jc,Z2+1,nc));do nc=Z2;end;Yc=Yc+0X00001;Yc=Yc+0X0001;r5=Re[Yc];do Yc=Yc+0x0001;end;if not(not(Jc[14]<=Jc[6]))then else Yc=r5[7];end;end;end;end;else if not(R5<43)then if R5~=0X2c then(Jc)[0x003]=Mc[r5[2]];do Yc=Yc+1;end;Yc=Yc+1;do r5=Re[Yc];end;Yc=Yc+0X1;do Jc[3]=Jc[0x3][r5[5]];end;Yc=Yc+0X1;Yc=Yc+1;r5=Re[Yc];do Yc=Yc+1;end;if not Jc[0x3]then Yc=r5[6];end;else local gU=je[r5[0x6]];local BU=(nil);local aU=(gU[0X08]);local bU=(#aU);if not(bU>0)then else BU={};do for el=0X001,bU do local Zl=(aU[el]);if Zl[1]==0X0 then do(BU)[el-1]={Jc,Zl[2]};end;else(BU)[el-0x1]=ve[Zl[2]];end;end;end;A(De,BU);end;(Jc)[r5[7]]=NC(BU,Mc,gU);end;else(Jc)[0x00]=Mc[r5[2]];do Yc=Yc+1;end;local of=ve[0X000];Jc[0X00001]=of[0X1][of[0X02]];do Yc=Yc+1;end;do Yc=Yc+1;end;do Yc=Yc+0X1;end;Jc[2]=nil;Yc=Yc+1;(Jc)[0X3]=true;local Vf=0X0000;Yc=Yc+0X00001;nc=Vf+0x4-1;(Jc)[Vf]=Jc[Vf](I(Jc,Vf+1,nc));do nc=Vf;end;r5=Re[Yc];Yc=Yc+0X1;do(Jc)[1]=r5[0x002]/r5[5];end;Yc=Yc+0X1;Jc[2]=nil;do r5=Re[Yc];end;do Yc=Yc+0X0001;end;(Jc)[3]=Mc[r5[2]];Yc=Yc+0X1;do Yc=Yc+1;end;r5=Re[Yc];do Yc=Yc+0x1;end;if not(not Jc[3])then else Yc=r5[6];end;end;end;else if not(R5<0x34)then if R5>=0X36 then if R5==55 then do(Jc)[0X3]=Mc[r5[0X02]];end;do Yc=Yc+1;end;do Yc=Yc+0X1;end;r5=Re[Yc];Yc=Yc+1;if not(not Jc[3])then else Yc=r5[6];end;else do if not(Jc[r5[6]]<=r5[0X5])then Yc=r5[7];end;end;end;else if R5==53 then Jc[3]=Mc[r5[2]];Yc=Yc+0X1;Yc=Yc+1;Yc=Yc+0X1;nc=0x03;Jc[nc]=Jc[nc]();r5=Re[Yc];Yc=Yc+1;if not(Jc[3])then else Yc=r5[6];end;else do Jc[10]=Mc[r5[2]];end;Yc=Yc+1;Yc=Yc+1;r5=Re[Yc];Yc=Yc+1;Jc[10]=Jc[10][r5[0X5]];Yc=Yc+1;nc=0xa;Jc[nc]();nc=nc-0X00001;Yc=Yc+0X1;Yc=Yc+0X1;r5=Re[Yc];Yc=Yc+0X1;do if not(r5[2]<Jc[8])then Yc=r5[0X7];end;end;end;end;else if R5>=50 then if R5==0X33 then(Jc)[0X6]=Mc[r5[2]];local Ab=(ve[0X0]);Yc=Yc+1;Yc=Yc+0x1;Yc=Yc+1;(Jc)[0X7]=Jc[0X5];Yc=Yc+1;Jc[8]=Ab[0X001][Ab[2]];do Yc=Yc+1;end;do(Jc)[9]=true;end;local ub=(6);do Yc=Yc+1;end;nc=ub+4-0X01;Jc[ub]=Jc[ub](I(Jc,ub+1,nc));nc=ub;Yc=Yc+1;Yc=Yc+1;r5=Re[Yc];Yc=Yc+1;do Jc[0X7]=Mc[r5[2]];end;Yc=Yc+0X1;do Ab=ve[0X0];end;(Jc)[0X8]=Ab[1][Ab[0x02]];Yc=Yc+1;do Yc=Yc+0X0001;end;Yc=Yc+1;Jc[0x9]=nil;do Yc=Yc+0x1;end;(Jc)[0Xa]=true;Yc=Yc+0X1;ub=7;nc=ub+0X4-1;(Jc)[ub]=Jc[ub](I(Jc,ub+0x1,nc));nc=ub;r5=Re[Yc];do Yc=Yc+1;end;if not(Jc[6]<Jc[0X007])then do Yc=r5[0X7];end;end;else do(Jc)[0X3]=Jc[3]+r5[5];end;r5=Re[Yc];Yc=Yc+1;(Mc)[r5[2]]=Jc[3];Yc=Yc+0X0001;local fU=(ve[0X0]);(Jc)[0X3]=fU[0x001][fU[2]];r5=Re[Yc];do Yc=Yc+0X1;end;do Mc[r5[0X0002]]=Jc[3];end;Yc=Yc+1;fU=ve[0X2];do Jc[3]=fU[1][fU[0X0002]];end;do r5=Re[Yc];end;Yc=Yc+0x1;if not(Jc[0x3])then else do Yc=r5[6];end;end;end;else Yc=r5[0X6];end;end;end;end;end;end;end;end);if not(dc)then if f(Wc)=="string"then do if not(e(Wc,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;do if e(Wc,'\^.-:\%\100\+: ')then(b)("Luraph Script:"..(Ae[Yc-0X001]or"(\105\110\116\e\114\110al)")..": "..r(Wc),0X0);else(b)(Wc,0);end;end;else(b)(Wc,0x000);end;else if Wc then if Bc==1 then do return Jc[gc]();end;else return Jc[gc](I(Jc,gc+0X1,nc));end;elseif not(gc)then else return I(Jc,gc,Bc);end;end;end;end;else fe=function(...)local If=({});local Vf=(1);local Mf=(m());local Bf,Xf=rC(...);local Lf,df={[0X2]=If,[1]=ce},((Mf==F and Le or Mf));do Bf=Bf-0X0001;end;for ik=0X00,Bf do if he>ik then If[ik]=Xf[ik+0x1];else break;end;end;local Uf=(0);if not ge then Xf=nil;elseif xe then(If)[he]={n=Bf>=he and Bf-he+1 or 0x00000,I(Xf,he+1,Bf+1)};end;do if df==Mf then else(i)(fe,df);end;end;local hf,Wf,bf,Of=j(function()do while true do local ax=Re[Vf];local Rx=ax[0X4];Vf=Vf+1;if Rx<14 then do if Rx>=0X00007 then do if not(Rx>=0X000A)then if Rx<8 then else if Rx~=0X9 then(If)[4]=df[ax[0X2]];Vf=Vf+0X1;Vf=Vf+1;Vf=Vf+1;local j0=4;If[5]=If[0];do Vf=Vf+1;end;local m0,h0=0X2,(0x4);if m0==0 then else Uf=j0+m0-0X0001;end;local L0,t0=nil,nil;if m0==0X1 then L0,t0=rC(If[j0]());else L0,t0=rC(If[j0](I(If,j0+0X1,Uf)));end;if h0~=1 then if h0~=0 then L0=j0+h0-0X2;Uf=L0+1;else L0=L0+j0-0x00001;Uf=L0;end;local eA=0;do for Jw=j0,L0 do eA=eA+0X1;If[Jw]=t0[eA];end;end;else do Uf=j0-0X00001;end;end;do Vf=Vf+1;end;do Vf=Vf+0X1;end;do ax=Re[Vf];end;Vf=Vf+1;j0=0X4;local C0=(g(function(...)d();for rQ,YQ in...do(d)(true,rQ,YQ);end;end));C0(If[j0],If[j0+1],If[j0+2]);Uf=j0;If[j0]=C0;do Vf=ax[6];end;else local zL=je[ax[6]];local CL=nil;local PL=(zL[8]);local WL=#PL;do if not(WL>0)then else CL={};for Gf=1,WL do local Rf=PL[Gf];if Rf[0X0001]~=0X0 then(CL)[Gf-1]=ve[Rf[2]];else do(CL)[Gf-0X1]={If,Rf[0X2]};end;end;end;A(De,CL);end;end;If[ax[0X7]]=NC(CL,df,zL);end;end;else if Rx<12 then if Rx~=0Xb then local GX=0X1;local MX=(2);local qX=(4);if MX~=0x0 then do Uf=GX+MX-1;end;end;local vX,xX=nil,nil;if MX==0X1 then vX,xX=rC(If[GX]());else vX,xX=rC(If[GX](I(If,GX+1,Uf)));end;if qX==1 then Uf=GX-1;else if qX~=0x0000 then do vX=GX+qX-0x2;end;do Uf=vX+1;end;else do vX=vX+GX-1;end;do Uf=vX;end;end;local K_=(0);for yM=GX,vX do K_=K_+0x1;(If)[yM]=xX[K_];end;end;do Vf=Vf+0X1;end;Vf=Vf+0x1;ax=Re[Vf];Vf=Vf+1;do GX=1;end;local cX=g(function(...)(d)();for oh,Sh in...do(d)(true,oh,Sh);end;end);(cX)(If[GX],If[GX+0X1],If[GX+0X2]);Uf=GX;If[GX]=cX;Vf=ax[6];else(If)[ax[0X7]]={};end;else if Rx~=13 then If[0X0]=df[ax[0X2]];do ax=Re[Vf];end;local ie=0;Vf=Vf+1;(If)[0X1]=ax[0X2];Vf=Vf+1;(If)[ie]=If[ie](If[ie+0X1]);do Uf=ie;end;do Vf=Vf+1;end;Vf=Vf+0x1;ax=Re[Vf];do Vf=Vf+0X1;end;If[1]=df[ax[2]];ax=Re[Vf];do Vf=Vf+1;end;do(If)[2]=df[ax[2]];end;ax=Re[Vf];Vf=Vf+1;(If)[0X2]=If[0X02][ax[5]];Vf=Vf+0x1;Vf=Vf+1;ax=Re[Vf];Vf=Vf+0x01;do if not(If[0x2])then else do Vf=ax[6];end;end;end;else(If)[ax[0x7]]=u(If[ax[6]],If[ax[0X1]]);end;end;end;end;else if Rx<0X3 then if Rx>=1 then if Rx==0x2 then If[0X7]=df[ax[2]];Vf=Vf+1;Vf=Vf+0x01;ax=Re[Vf];Vf=Vf+1;do(If)[0X0008]=ax[2];end;ax=Re[Vf];Vf=Vf+1;do(If)[0X9]=If[0X6][ax[5]];end;do Vf=Vf+0X001;end;local Z9=7;(If)[10]=false;Vf=Vf+1;Uf=Z9+4-1;If[Z9](I(If,Z9+0x01,Uf));Uf=Z9-0X001;Vf=Vf+1;Vf=Vf+0x00001;ax=Re[Vf];do Vf=Vf+0X0001;end;Vf=ax[0x0006];else local h0=ax[0x7];local W0=If[h0];local v0=(ax[1]-1)*50;do for N5=1,ax[0X006]do W0[v0+N5]=If[h0+N5];end;end;end;else local Ck=(ax[0X7]);local gk,Kk,Ok=If[Ck]();if not(gk)then else do If[Ck+1]=Kk;end;do(If)[Ck+2]=Ok;end;do Vf=ax[6];end;end;end;else if Rx<5 then if Rx==0X4 then do If[ax[0X07]]=If[ax[6]]>=If[ax[1]];end;else repeat local qe,Ve=De,If;if#qe>0x0000 then local Uk={};do for fq,bq in D,qe do for Gd,Sd in D,bq do do if not(Sd[0X1]==Ve and Sd[2]>=0)then else local Y9=(Sd[2]);if not Uk[Y9]then(Uk)[Y9]={Ve[Y9]};end;(Sd)[1]=Uk[Y9];do(Sd)[0X002]=1;end;end;end;end;end;end;end;until true;return;end;else if Rx==6 then If[ax[0X0007]]=If[ax[0X6]][ax[5]];else If[7]=df[ax[2]];do ax=Re[Vf];end;Vf=Vf+1;If[7]=If[0x0007][ax[5]];do ax=Re[Vf];end;Vf=Vf+0X0001;If[7]=If[7][ax[0X005]];do ax=Re[Vf];end;do Vf=Vf+1;end;(If)[0X008]=If[0x6][ax[0X00005]];ax=Re[Vf];Vf=Vf+1;do if not(If[0X8]<=If[0x7])then Vf=ax[0X0007];end;end;end;end;end;end;end;else if not(Rx>=0X15)then if Rx<17 then if not(Rx<0X00f)then if Rx~=16 then(If)[ax[0X0007]]={I({},0X00001,ax[6])};else If[7]=If[6][ax[5]];local Cz=If[7];ax=Re[Vf];do Vf=Vf+1;end;local rz=0X7;If[rz+1]=Cz;If[rz]=Cz[ax[5]];Vf=Vf+0x1;do rz=7;end;(If)[rz]=If[rz](If[rz+1]);do Uf=rz;end;Vf=Vf+0X0001;Vf=Vf+0X1;do ax=Re[Vf];end;Vf=Vf+1;If[0X08]=df[ax[2]];do Vf=Vf+0X1;end;If[0X9]=If[0X2];Vf=Vf+1;do rz=0X008;end;(If)[rz]=If[rz](If[rz+1]);Uf=rz;ax=Re[Vf];Vf=Vf+0x1;do rz=0X8;end;Cz=If[0X00008];do If[rz+0x1]=Cz;end;(If)[rz]=Cz[ax[5]];Vf=Vf+1;rz=0X8;If[rz]=If[rz](If[rz+1]);Uf=rz;Vf=Vf+1;Vf=Vf+0X1;ax=Re[Vf];Vf=Vf+0x1;if If[0X7]==If[8]then else Vf=ax[0X7];end;end;else(If)[ax[7]]=ax[0X02];end;else if Rx<19 then if Rx==18 then if If[ax[0x6]]~=If[ax[1]]then else do Vf=ax[7];end;end;else If[ax[7]]=df[ax[2]];end;else do if Rx==20 then(If)[ax[0X7]]=ax[2];else do if not(not If[ax[0X7]])then else Vf=ax[0x00006];end;end;end;end;end;end;else if not(Rx>=24)then do if not(Rx>=0X016)then do If[0x0000]=df[ax[0X2]];end;local U7=(0);ax=Re[Vf];Vf=Vf+1;If[1]=ax[2];Vf=Vf+1;(If)[U7]=If[U7](If[U7+0X1]);Uf=U7;Vf=Vf+1;Vf=Vf+1;ax=Re[Vf];do Vf=Vf+0X1;end;if not If[0X0]then do Vf=ax[0X6];end;end;else if Rx~=23 then Vf=ax[0X00006];else(If)[ax[0X7]]=Lf[ax[0X00006]];end;end;end;else if not(Rx<0X001a)then do if Rx==0X0001B then do if not(If[ax[6]]<=If[ax[1]])then else Vf=ax[0X00007];end;end;else(If)[0]=df[ax[0x2]];do ax=Re[Vf];end;do Vf=Vf+1;end;If[0X0]=If[0X000][ax[0X5]];ax=Re[Vf];do Vf=Vf+0x1;end;(If)[0]=If[0][ax[0x5]];do Vf=Vf+0x1;end;do Vf=Vf+1;end;ax=Re[Vf];Vf=Vf+1;if If[0]~=ax[0X5]then Vf=ax[0X007];end;end;end;else do if Rx==0X19 then for rl=ax[0x7],ax[6]do do If[rl]=nil;end;end;else(If)[0]=df[ax[2]];ax=Re[Vf];Vf=Vf+0X1;If[0X00000]=If[0x0][ax[5]];Vf=Vf+1;Vf=Vf+0X1;ax=Re[Vf];Vf=Vf+0X1;if not If[0]then Vf=ax[0X6];end;end;end;end;end;end;end;end;end;end);do if not(hf)then do if f(Wf)=='\s\116rin\103'then if not(e(Wf,"atte\m\pt\ t\o\032\121\ie\108\100\ a\cr\o\115s\ \109\101\116\097m\101t\ho\d\/\C\%\-\ca\l\l\ \098\oun\dary"))then else do return coroutine.yield();end;end;if e(Wf,'^.-:\%d\043:\032')then(b)("Luraph Script:"..(Ae[Vf-1]or"\(\i\110te\114\110a\108\)")..": "..r(Wf),0X0);else(b)(Wf,0X0);end;else(b)(Wf,0);end;end;else if Wf then if Of~=0X1 then return If[bf](I(If,bf+1,Uf));else return If[bf]();end;elseif not(bf)then else return I(If,bf,Of);end;end;end;end;end;end;end;end;else if me<0X6C then if not(me<0X6A)then do if me~=107 then fe=function(...)local QN,oN=0X1,({});local nN=(0X0);local AN=({[1]=ce,[0X2]=oN});local eN=(m());local SN=((eN==F and Le or eN));local zN,wN=rC(...);do zN=zN-0X1;end;do for eu=0,zN do if he>eu then(oN)[eu]=wN[eu+0x01];else break;end;end;end;if not ge then do wN=nil;end;elseif xe then oN[he]={n=zN>=he and zN-he+1 or 0,I(wN,he+0X1,zN+0X0001)};end;do if SN~=eN then(i)(fe,SN);end;end;local mN,pN,gN,tN=j(function()while true do local vh=Re[QN];local Zh=(vh[0X04]);QN=QN+0X1;if not(Zh>=0X18)then if not(Zh<0Xc)then if not(Zh>=18)then do if not(Zh>=15)then do if not(Zh>=0Xd)then else do if Zh==14 then do oN[0X003]=SN[vh[0X2]];end;QN=QN+0x001;QN=QN+0x0001;local yJ=(0X00003);do vh=Re[QN];end;do QN=QN+0x1;end;(oN)[4]=vh[2];do vh=Re[QN];end;local OJ=(je[vh[0X0006]]);local mJ=(OJ[0X8]);QN=QN+0X1;local GJ=(nil);local HJ=#mJ;if not(HJ>0X0)then else GJ={};for qH=1,HJ do local AH=mJ[qH];if AH[1]==0 then GJ[qH-1]={oN,AH[2]};else GJ[qH-0X1]=ve[AH[2]];end;end;A(De,GJ);end;do(oN)[5]=NC(GJ,SN,OJ);end;QN=QN+0X0001;oN[yJ]=oN[yJ](oN[yJ+0X1],oN[yJ+0X2]);nN=yJ;vh=Re[QN];QN=QN+0x1;(oN)[0X3]=oN[3][vh[5]];vh=Re[QN];QN=QN+1;oN[4]=oN[0x00003][vh[5]];do QN=QN+0X1;end;do(oN)[0X2]=oN[0x4];end;vh=Re[QN];do QN=QN+1;end;if not(oN[2])then else QN=vh[0x6];end;else do oN[0]=SN[vh[0x2]];end;QN=QN+1;QN=QN+1;vh=Re[QN];QN=QN+0X01;oN[0X1]=vh[0X2];QN=QN+0X001;local uq=(0);do(oN)[uq]=oN[uq](oN[uq+0X001]);end;nN=uq;QN=QN+1;QN=QN+1;vh=Re[QN];QN=QN+0X0001;(oN)[0x00001]=oN[0x000][vh[5]];vh=Re[QN];QN=QN+1;if not(oN[0x1])then else QN=vh[0X6];end;end;end;end;end;else if Zh>=16 then if Zh~=0x11 then local ZC=(ve[1]);oN[3]=ZC[1][ZC[2]];QN=QN+0X1;QN=QN+1;vh=Re[QN];do QN=QN+0X1;end;(oN)[0X0003]=oN[3][vh[5]];QN=QN+0X1;do QN=QN+0X1;end;do QN=QN+1;end;do oN[4]=oN[0X02];end;do QN=QN+1;end;ZC=ve[0x000];(oN)[5]=ZC[0X1][ZC[0X2]];do QN=QN+1;end;QN=QN+0x0001;local KC=(0X0003);do vh=Re[QN];end;do QN=QN+0X1;end;local TC,kC=je[vh[0X6]],(nil);local SC=(TC[8]);local OC=(#SC);if not(OC>0)then else kC={};for YC=1,OC do local LC=SC[YC];if LC[1]~=0X00 then do(kC)[YC-0X1]=ve[LC[0X02]];end;else kC[YC-0X1]={oN,LC[0X0002]};end;end;(A)(De,kC);end;oN[0X6]=NC(kC,SN,TC);QN=QN+1;do nN=KC+0x0004-0x1;end;(oN[KC])(I(oN,KC+1,nN));nN=KC-1;vh=Re[QN];QN=QN+0X00001;oN[0X003]=oN[1][vh[0X5]];do QN=QN+0X001;end;QN=QN+1;do vh=Re[QN];end;QN=QN+1;if not(oN[0X03])then else QN=vh[6];end;else if oN[vh[0x6]]~=vh[0x00005]then do QN=vh[0X007];end;end;end;else oN[1]=SN[vh[0X2]];QN=QN+0X00001;do nN=1;end;(oN)[nN]=oN[nN]();do vh=Re[QN];end;QN=QN+0X001;if not(oN[0X1]<vh[0X5])then else QN=vh[7];end;end;end;end;else if Zh>=21 then do if Zh>=22 then do if Zh~=23 then(oN)[vh[0X00007]]=SN[vh[0X2]];else if not oN[vh[0X07]]then QN=vh[6];end;end;end;else if not(oN[vh[7]])then else QN=vh[6];end;end;end;else if not(Zh>=19)then oN[vh[7]]={I({},1,vh[0x6])};else if Zh~=20 then do oN[vh[0X007]]=not oN[vh[0X6]];end;else do oN[1]=SN[vh[2]];end;vh=Re[QN];QN=QN+1;oN[1]=oN[0x01][vh[5]];do vh=Re[QN];end;QN=QN+0X01;if not(not oN[1])then else QN=vh[0X0006];end;end;end;end;end;else if not(Zh<6)then do if not(Zh>=0x0009)then if not(Zh>=0x00007)then(oN)[vh[0X7]]=O(oN[vh[6]],oN[vh[1]]);else if Zh==8 then oN[2]=oN[1][vh[5]];QN=QN+1;do QN=QN+1;end;vh=Re[QN];QN=QN+0X1;if not(not oN[0X0002])then else QN=vh[6];end;else do oN[0X2]=SN[vh[0X2]];end;QN=QN+1;QN=QN+1;vh=Re[QN];QN=QN+1;(oN)[0X3]=vh[0x002];do QN=QN+0x1;end;local dt=(0X2);oN[dt]=oN[dt](oN[dt+0X1]);nN=dt;QN=QN+0x1;QN=QN+0X1;vh=Re[QN];QN=QN+1;if oN[0x2]then QN=vh[0X00006];end;end;end;else do if not(Zh<10)then if Zh==0Xb then local Wj=(ve[0X0000]);(oN)[0X00002]=Wj[0x1][Wj[2]];local xj=(0X2);QN=QN+0x01;QN=QN+0X001;do vh=Re[QN];end;QN=QN+0x1;local Aj=oN[2];do(oN)[xj+0x1]=Aj;end;oN[xj]=Aj[vh[0X5]];QN=QN+0X1;do xj=2;end;(oN)[xj]=oN[xj](oN[xj+1]);nN=xj;QN=QN+0X1;QN=QN+0X1;vh=Re[QN];QN=QN+0X1;if not(oN[2])then else do QN=vh[0X00006];end;end;else local EG=(ve[0]);oN[2]=EG[0X1][EG[0x2]];local WG=0X2;QN=QN+0X0001;QN=QN+0x1;do vh=Re[QN];end;QN=QN+1;local xG=(oN[0X00002]);(oN)[WG+0x1]=xG;oN[WG]=xG[vh[5]];QN=QN+1;WG=2;oN[WG](oN[WG+0X1]);do nN=WG-0X1;end;do QN=QN+0X00001;end;QN=QN+1;vh=Re[QN];do QN=QN+0x1;end;do oN[2]=SN[vh[2]];end;vh=Re[QN];QN=QN+0X00001;do if not oN[0X2]then QN=vh[6];end;end;end;else oN[0X0002]=SN[vh[0X2]];do vh=Re[QN];end;do QN=QN+1;end;local RE=oN[2];local fE=2;oN[fE+0x1]=RE;oN[fE]=RE[vh[5]];do vh=Re[QN];end;do QN=QN+0X1;end;oN[0x04]=vh[2];QN=QN+1;do fE=2;end;(oN)[fE]=oN[fE](oN[fE+1],oN[fE+0x2]);nN=fE;do vh=Re[QN];end;do QN=QN+1;end;do if oN[0X2]then QN=vh[0X00006];end;end;end;end;end;end;else if Zh<0X3 then if Zh<0X1 then do(oN)[2]=SN[vh[0X2]];end;vh=Re[QN];local L_=0X2;QN=QN+0X1;oN[3]=vh[2];QN=QN+1;local d_=ve[1];oN[L_]=oN[L_](oN[L_+1]);nN=L_;QN=QN+1;do QN=QN+0X1;end;QN=QN+0x0001;oN[3]=d_[1][d_[2]];QN=QN+1;do QN=QN+1;end;vh=Re[QN];QN=QN+1;do(oN)[3]=oN[3][vh[5]];end;QN=QN+0X01;QN=QN+1;QN=QN+0x1;oN[4]=oN[0X2];do QN=QN+1;end;do L_=3;end;do oN[L_]=oN[L_](oN[L_+0X1]);end;nN=L_;vh=Re[QN];QN=QN+0X1;if not(not oN[3])then else QN=vh[6];end;else if Zh==0X002 then local HI=vh[7];local YI=(g(function(...)(d)();for bD,FD,hD,GD,ZD,vD,xD,iD,WD,BD in...do(d)(true,{bD,FD,hD,GD,ZD,vD,xD,iD,WD,BD});end;end));(YI)(oN[HI],oN[HI+0X1],oN[HI+0X02]);nN=HI;oN[HI]=YI;QN=vh[6];else do oN[0X2]=SN[vh[2]];end;do QN=QN+0X1;end;QN=QN+0X0001;do vh=Re[QN];end;QN=QN+1;oN[3]=vh[0X2];do vh=Re[QN];end;do QN=QN+0x1;end;oN[4]=vh[2];vh=Re[QN];QN=QN+1;oN[5]=vh[0X00002];QN=QN+1;local i4=(2);do nN=i4+4-1;end;oN[i4](I(oN,i4+1,nN));nN=i4-0X001;do vh=Re[QN];end;QN=QN+1;QN=vh[0X06];end;end;else if not(Zh>=0X4)then(oN)[vh[0x0007]]=oN[vh[0X6]][oN[vh[1]]];else if Zh~=0X5 then local w0=(ve[0X00]);(oN)[4]=w0[1][w0[2]];vh=Re[QN];QN=QN+0X01;local o0=(oN[4]);local u0=(4);oN[u0+1]=o0;(oN)[u0]=o0[vh[5]];QN=QN+0X00001;do u0=4;end;do(oN)[u0]=oN[u0](oN[u0+1]);end;nN=u0;QN=QN+0X1;QN=QN+1;vh=Re[QN];QN=QN+0X0001;if not oN[4]then QN=vh[0x6];end;else oN[vh[0X7]]=AN[vh[0X6]];end;end;end;end;end;else if not(Zh<0X24)then if not(Zh<0X2A)then if Zh<0x02D then do if not(Zh<43)then if Zh~=44 then oN[1]=SN[vh[0X2]];do QN=QN+0X1;end;QN=QN+0x1;vh=Re[QN];QN=QN+1;oN[0X00001]=oN[1][vh[5]];vh=Re[QN];QN=QN+1;if not oN[0X1]then QN=vh[0x6];end;else(oN)[0X1]=SN[vh[0X00002]];vh=Re[QN];QN=QN+0x1;do(oN)[1]=oN[0X1][vh[5]];end;QN=QN+1;local O4=(0X0001);QN=QN+1;vh=Re[QN];QN=QN+0x1;oN[0x2]=vh[0X00002];QN=QN+1;(oN)[O4]=oN[O4](oN[O4+1]);nN=O4;do vh=Re[QN];end;do QN=QN+1;end;do if not oN[1]then QN=vh[6];end;end;end;else QN=vh[0X6];end;end;else if Zh<46 then(oN)[2]=oN[1][vh[0X00005]];do QN=QN+1;end;QN=QN+0x1;vh=Re[QN];QN=QN+1;do if oN[0x2]then QN=vh[0X6];end;end;else if Zh~=47 then(oN)[0X0003]=SN[vh[2]];QN=QN+1;QN=QN+0X00001;vh=Re[QN];QN=QN+0X001;do oN[0X3]=oN[3][vh[0x5]];end;do QN=QN+0X1;end;QN=QN+1;vh=Re[QN];QN=QN+0x1;if oN[0x03]then QN=vh[0X6];end;else do oN[vh[7]]=oN[vh[6]][vh[5]];end;end;end;end;else do if not(Zh>=0x27)then if Zh<37 then local ev=(ve[1]);oN[0X0003]=ev[0x001][ev[2]];QN=QN+0X001;do QN=QN+1;end;do vh=Re[QN];end;local uv=(3);QN=QN+1;(oN)[0X3]=oN[0X3][vh[5]];QN=QN+1;QN=QN+0X00001;QN=QN+0x00001;(oN)[4]=oN[0x2];QN=QN+0X1;ev=ve[0X0];(oN)[0x00005]=ev[1][ev[0X2]];QN=QN+0X1;do QN=QN+1;end;QN=QN+1;oN[uv](oN[uv+1],oN[uv+2]);do nN=uv-0X1;end;do QN=QN+0X00001;end;do ev=ve[0X00000];end;oN[3]=ev[1][ev[0X00002]];QN=QN+1;QN=QN+1;do vh=Re[QN];end;QN=QN+0X1;local Wv=(oN[0X3]);uv=3;(oN)[uv+0X1]=Wv;do oN[uv]=Wv[vh[0X00005]];end;QN=QN+1;uv=3;(oN[uv])(oN[uv+0X0001]);do nN=uv-1;end;do QN=QN+0X1;end;QN=QN+1;vh=Re[QN];do QN=QN+0X1;end;QN=vh[6];else if Zh==0X26 then local hr=ve[1];oN[0X3]=hr[1][hr[0X2]];QN=QN+1;do QN=QN+0x1;end;do vh=Re[QN];end;QN=QN+0X1;local tr=(0X3);oN[0X03]=oN[0x3][vh[5]];QN=QN+1;oN[4]=oN[2];QN=QN+1;oN[tr]=oN[tr](oN[tr+0X00001]);nN=tr;vh=Re[QN];QN=QN+0X1;if not oN[3]then QN=vh[6];end;else(oN)[vh[0X7]]=vh[0X02];end;end;else if not(Zh<40)then do if Zh==41 then do(oN)[0x2]=true;end;vh=Re[QN];do QN=QN+0X1;end;do SN[vh[0X00002]]=oN[2];end;vh=Re[QN];QN=QN+0X1;do QN=vh[6];end;else(oN)[0X1]=SN[vh[0x2]];QN=QN+0X1;do QN=QN+0X1;end;vh=Re[QN];QN=QN+0x1;do if oN[0x001]then do QN=vh[6];end;end;end;end;end;else(oN)[1]=true;do vh=Re[QN];end;do QN=QN+0X1;end;SN[vh[2]]=oN[1];QN=QN+1;repeat local BP,xP=De,oN;if#BP>0X0 then local b6={};do for Nq,Rq in D,BP do for C_,y_ in D,Rq do if y_[0X1]==xP and y_[2]>=0X000 then local Qy=(y_[2]);do if not b6[Qy]then b6[Qy]={xP[Qy]};end;end;y_[1]=b6[Qy];do y_[2]=0X1;end;end;end;end;end;end;until true;return;end;end;end;end;else if Zh>=30 then if not(Zh>=33)then if Zh>=0X1f then if Zh~=0X20 then oN[0X3]=SN[vh[0X2]];vh=Re[QN];QN=QN+0X1;local lB=0X3;do oN[0X4]=vh[2];end;do QN=QN+1;end;(oN[lB])(oN[lB+1]);nN=lB-1;vh=Re[QN];do QN=QN+0X1;end;QN=vh[0X00006];else local ON=(je[vh[6]]);local RN=(ON[0x00008]);local yN=(nil);local VN=(#RN);if VN>0x0 then yN={};for e1=1,VN do local x1=(RN[e1]);if x1[1]~=0x0 then(yN)[e1-1]=ve[x1[2]];else(yN)[e1-1]={oN,x1[0x002]};end;end;A(De,yN);end;do(oN)[vh[0X7]]=NC(yN,SN,ON);end;end;else oN[2]=SN[vh[0X2]];vh=Re[QN];local TC=0X00002;QN=QN+0x1;do oN[3]=vh[2];end;vh=Re[QN];QN=QN+1;(oN)[4]=vh[0X00002];QN=QN+0X1;(oN[TC])(oN[TC+1],oN[TC+2]);nN=TC-1;QN=QN+1;QN=QN+0X1;vh=Re[QN];do QN=QN+0X0001;end;do QN=vh[0X6];end;end;else do if Zh<0X0022 then local Ac=ve[0];oN[3]=Ac[1][Ac[0x2]];local Wc=(oN[3]);QN=QN+0X01;QN=QN+1;vh=Re[QN];QN=QN+1;local Qc=(0x00003);(oN)[Qc+0x01]=Wc;oN[Qc]=Wc[vh[0X5]];QN=QN+1;Qc=0x03;oN[Qc](oN[Qc+0x1]);nN=Qc-0X1;do vh=Re[QN];end;QN=QN+0X001;(oN)[3]=SN[vh[0X00002]];vh=Re[QN];QN=QN+0X00001;oN[0X00003]=oN[0X3][vh[5]];vh=Re[QN];QN=QN+1;(oN)[0X4]=vh[2];QN=QN+1;Qc=0X3;oN[Qc](oN[Qc+1]);nN=Qc-0x0001;do vh=Re[QN];end;QN=QN+1;oN[3]=SN[vh[2]];QN=QN+0X1;QN=QN+0X1;do vh=Re[QN];end;QN=QN+1;if not oN[3]then QN=vh[6];end;else do if Zh~=35 then repeat local HD,FD=De,(oN);do if not(#HD>0)then else local eI=({});do for rj,wj in D,HD do for lw,nw in D,wj do do if not(nw[1]==FD and nw[2]>=0)then else local tQ=nw[2];if not eI[tQ]then eI[tQ]={FD[tQ]};end;nw[1]=eI[tQ];do nw[0X00002]=0X1;end;end;end;end;end;end;end;end;until true;return;else local gs=(ve[0X0]);(oN)[0x0004]=gs[0X1][gs[2]];local Ms=0x00004;do QN=QN+0X1;end;do QN=QN+0X1;end;vh=Re[QN];QN=QN+1;local ys=(oN[4]);do oN[Ms+1]=ys;end;(oN)[Ms]=ys[vh[0X5]];QN=QN+0X0001;do Ms=0x0004;end;(oN[Ms])(oN[Ms+0X001]);nN=Ms-1;QN=QN+0X001;QN=QN+1;vh=Re[QN];QN=QN+1;(oN)[4]=oN[0X03][vh[5]];QN=QN+1;do nN=0X004;end;(oN[nN])();do nN=nN-1;end;vh=Re[QN];QN=QN+0X1;QN=vh[0X06];end;end;end;end;end;else if Zh>=27 then if not(Zh<28)then do if Zh~=29 then do(oN)[4]=SN[vh[0X2]];end;QN=QN+0x1;do nN=4;end;(oN)[nN]=oN[nN]();vh=Re[QN];QN=QN+0X0001;if not(not oN[4])then else QN=vh[0x00006];end;else(oN)[vh[0X7]]=u(oN[vh[6]],oN[vh[1]]);end;end;else(oN)[1]=SN[vh[2]];do QN=QN+0X1;end;QN=QN+1;vh=Re[QN];local cr=(0X001);QN=QN+0X1;(oN)[0X2]=vh[0x2];QN=QN+1;oN[cr]=oN[cr](oN[cr+1]);nN=cr;vh=Re[QN];QN=QN+0X1;oN[2]=oN[1][vh[0X5]];QN=QN+1;do QN=QN+0x0001;end;do vh=Re[QN];end;QN=QN+1;if not(not oN[0X2])then else QN=vh[0X6];end;end;else do if Zh>=25 then if Zh==26 then for Fw=vh[7],vh[6]do do oN[Fw]=nil;end;end;else local qH=(ve[0X0]);(oN)[3]=qH[0X1][qH[0X2]];local bH=oN[3];vh=Re[QN];QN=QN+1;local vH=0x03;do(oN)[vH+0x001]=bH;end;do oN[vH]=bH[vh[5]];end;do QN=QN+1;end;vH=3;oN[vH](oN[vH+0x01]);nN=vH-0X1;vh=Re[QN];do QN=QN+0X1;end;do QN=vh[0X6];end;end;else oN[vh[7]]=oN[vh[6]]~=oN[vh[0X1]];end;end;end;end;end;end;end;end);do if not(mN)then if f(pN)=="s\116\114\i\110\g"then do if e(pN,"\097\116\116\101\109\112\116\032\116o \yi\e\l\d\ \097\c\114os\s\ \m\101\116a\m\e\116\hod\/C\%\045\ca\108\l b\o\117\110\d\097\114\121")then return coroutine.yield();end;end;do if e(pN,'^\.\-\058\%\100\+\058 ')then(b)("Luraph Script:"..(Ae[QN-1]or"(internal)")..": "..r(pN),0);else b(pN,0);end;end;else(b)(pN,0);end;else if pN then if tN==0X1 then do return oN[gN]();end;else do return oN[gN](I(oN,gN+0x001,nN));end;end;elseif not(gN)then else do return I(oN,gN,tN);end;end;end;end;end;else fe=function(...)local uB,NB=1,({});local bB=({[0X2]=NB,[1]=ce});local RB=(m());local nB,IB=0x0,(RB==F and Le or RB);local vB,lB=rC(...);vB=vB-0X0001;for Xx=0,vB do if he>Xx then(NB)[Xx]=lB[Xx+1];else do break;end;end;end;if not ge then lB=nil;elseif xe then(NB)[he]={n=vB>=he and vB-he+1 or 0,I(lB,he+0X001,vB+1)};end;if IB~=RB then(i)(fe,IB);end;local hB,dB,PB,MB=j(function()while true do local hr=(Re[uB]);local er=hr[0X004];uB=uB+1;do if not(er>=0X7)then if er<0X3 then if er<0X0001 then do for vY=hr[0x7],hr[6]do(NB)[vY]=nil;end;end;else do if er==0x2 then(NB)[0]=IB[hr[2]];hr=Re[uB];uB=uB+0x01;NB[0X000]=NB[0][hr[0x5]];hr=Re[uB];local rd=je[hr[6]];uB=uB+1;local bd=nil;local Gd=rd[8];local Wd,pd=#Gd,(0X0);if not(Wd>0)then else bd={};for xa=0X1,Wd do local va=(Gd[xa]);if va[0X1]~=0X00 then(bd)[xa-1]=ve[va[2]];else(bd)[xa-1]={NB,va[2]};end;end;(A)(De,bd);end;NB[1]=NC(bd,IB,rd);uB=uB+0x01;NB[pd](NB[pd+1]);nB=pd-0x1;uB=uB+0X00001;uB=uB+1;do uB=uB+1;end;repeat local Mq,Dq=De,NB;if#Mq>0 then local Ov={};for ls,Is in D,Mq do for I2,j2 in D,Is do if not(j2[1]==Dq and j2[0X2]>=0X0)then else local xB=(j2[0X0002]);do if not(not Ov[xB])then else Ov[xB]={Dq[xB]};end;end;j2[1]=Ov[xB];do j2[2]=0X1;end;end;end;end;end;until true;return;else uB=hr[0X006];end;end;end;else if er<0x00005 then if er==4 then local mt=(NB[hr[6]]/NB[hr[0X1]]);NB[hr[7]]=mt-mt%0X1;else local iW=(hr[0X6]);local XW=(NB[iW]);for X4=iW+0X1,hr[1]do do XW=XW..NB[X4];end;end;NB[hr[7]]=XW;end;else if er~=0x6 then NB[hr[0X7]]=not NB[hr[0X6]];else local Oa=je[hr[0X6]];local qa,aa=Oa[8],nil;local za=(#qa);if za>0x0 then aa={};for S2=0x1,za do local p2=qa[S2];do if p2[1]==0X0 then(aa)[S2-1]={NB,p2[2]};else do(aa)[S2-1]=ve[p2[0x2]];end;end;end;end;A(De,aa);end;(NB)[hr[0X7]]=NC(aa,IB,Oa);end;end;end;else if not(er<10)then if er>=0X0c then if er==13 then NB[hr[0X0007]]=IB[hr[2]];else NB[hr[0x7]]=hr[2];end;else if er==0XB then else local KC=(hr[0X7]);local OC,SC=NB[KC]();do if not(OC)then else uB=hr[0x6];NB[KC+3]=SC;end;end;end;end;else if not(er<0X8)then if er==9 then NB[hr[7]]={I({},1,hr[6])};else do(NB)[hr[0X0007]]=NB[hr[6]][NB[hr[1]]];end;end;else do if NB[hr[0X006]]<=NB[hr[0X1]]then uB=hr[0X7];end;end;end;end;end;end;end;end);if not(hB)then if f(dB)~="string"then b(dB,0);else do if not(e(dB,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(e(dB,"^.-:%d+: "))then b(dB,0);else(b)("Luraph Script:"..(Ae[uB-0X01]or"(internal)")..'\:\ '..r(dB),0);end;end;else do if dB then if MB~=1 then return NB[PB](I(NB,PB+0X1,nB));else return NB[PB]();end;elseif not(PB)then else return I(NB,PB,MB);end;end;end;end;end;end;else fe=function(...)local KQ,SQ=1,({});local tQ=(m());local qQ,eQ=rC(...);local PQ=({[1]=ce,[0X2]=SQ});qQ=qQ-0X1;local jQ=((tQ==F and Le or tQ));for ha=0,qQ do if not(he>ha)then break;else SQ[ha]=eQ[ha+0X00001];end;end;local DQ=0;if not ge then eQ=nil;elseif xe then SQ[he]={n=qQ>=he and qQ-he+1 or 0x0,I(eQ,he+0x1,qQ+1)};end;if jQ~=tQ then i(fe,jQ);end;while true do local VZ=Re[KQ];KQ=KQ+0X1;local FZ=(VZ[4]);do return(function(W,b,...)if not Client.Character:FindFirstChild("HasBuso")then task.spawn(_C,"Buso");end;end)(SQ,ve,...);end;end;end;end;else do if me>=109 then if me==110 then fe=function(...)local NR,VR={},(0);local eR=1;local ZR=({[0X2]=NR,[1]=ce});local aR=(m());local wR,pR=rC(...);local BR=(aR==F and Le or aR);do wR=wR-1;end;for DG=0,wR do do if not(he>DG)then break;else(NR)[DG]=pR[DG+1];end;end;end;do if not ge then pR=nil;elseif not(xe)then else do NR[he]={n=wR>=he and wR-he+1 or 0,I(pR,he+1,wR+1)};end;end;end;do if BR==aR then else(i)(fe,BR);end;end;do while true do local Yj=(Re[eR]);local Fj=Yj[0X4];do eR=eR+1;end;do return(function(a,r,...)local D,Y,m=a[0],a[1],a[2];if m~=nil then if m then for l,R in pairs(game.Players.LocalPlayer.Backpack:GetChildren())do if R:IsA("Tool")and(R.ToolTip==D or Y and R.Name==D)then return R;end;end;else local c=game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool");do if c and c:IsA("Tool")and(c.ToolTip==D or Y and c.Name==D)then return c;end;end;end;else for y,J in pairs(game.Players.LocalPlayer.Backpack:GetChildren())do if J:IsA("Tool")and(J.ToolTip==D or Y and J.Name==D)then return J;end;end;local E=game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool");do if E and E:IsA("Tool")and(E.ToolTip==D or Y and E.Name==D)then return E;end;end;end;end)(NR,ve,...);end;end;end;end;else do fe=function(...)local LI,TI={},0;local RI=0X01;local hI={[0X2]=LI,[1]=ce};local aI=(m());local yI,EI=rC(...);yI=yI-0x1;local II=(aI==F and Le or aI);for Bv=0X00000,yI do do if not(he>Bv)then break;else do LI[Bv]=EI[Bv+0x0001];end;end;end;end;if not ge then EI=nil;elseif not(xe)then else(LI)[he]={n=yI>=he and yI-he+1 or 0X000,I(EI,he+0X1,yI+1)};end;if II==aI then else(i)(fe,II);end;local CI,wI,iI,sI=j(function()while true do local vf=Re[RI];local Lf=(vf[0x4]);RI=RI+0X1;do if not(Lf>=0X6)then if not(Lf<0X3)then if not(Lf<0X04)then if Lf==0x5 then(LI)[vf[0X7]]=LI[vf[0X6]]==LI[vf[1]];else repeat local dG,BG=De,LI;if#dG>0x0 then local I5=({});for kz,Dz in D,dG do for tS,ZS in D,Dz do do if not(ZS[0X1]==BG and ZS[0X2]>=0X0)then else local iz=(ZS[2]);if not I5[iz]then I5[iz]={BG[iz]};end;ZS[1]=I5[iz];(ZS)[0X2]=1;end;end;end;end;end;until true;local Vs=vf[0X007];return false,Vs,Vs+vf[0x00006]-0X2;end;else end;else if not(Lf>=1)then LI[vf[7]]=LI[vf[0X6]]+LI[vf[1]];else do if Lf~=2 then LI[vf[0x7]]=II[vf[0X2]];else do(LI)[0X00001]=false;end;do vf=Re[RI];end;RI=RI+1;(II)[vf[0X2]]=LI[0X1];vf=Re[RI];RI=RI+0x00001;local xv=(0X001);do(LI)[1]=II[vf[2]];end;vf=Re[RI];RI=RI+1;do LI[2]=vf[2];end;RI=RI+1;do LI[0X003]=LI[0X000];end;do RI=RI+1;end;(LI[xv])(LI[xv+0X001],LI[xv+2]);TI=xv-1;RI=RI+0X1;repeat local Y5,K5=De,LI;if not(#Y5>0x0)then else local EY=({});for Zo,bo in D,Y5 do do for ch,jh in D,bo do if not(jh[1]==K5 and jh[2]>=0)then else local x9=(jh[0X00002]);if not EY[x9]then EY[x9]={K5[x9]};end;jh[1]=EY[x9];(jh)[2]=1;end;end;end;end;end;until true;return;end;end;end;end;else if Lf>=0x9 then do if Lf<11 then do if Lf==0XA then LI[vf[0X0007]]={I({},0X1,vf[0X6])};else do RI=vf[6];end;end;end;else if Lf==12 then if LI[vf[6]]<=LI[vf[0X00001]]then RI=vf[7];end;else LI[vf[0X007]]=vf[0x2];end;end;end;else if Lf<0X00007 then if LI[vf[0X06]]~=LI[vf[1]]then do RI=vf[7];end;end;else if Lf==8 then do(LI)[vf[7]]=LI[vf[0X6]]^LI[vf[0X01]];end;else local M0,m0=je[vf[0x006]],nil;local O0=M0[8];local k0=#O0;if k0>0 then m0={};for BR=0X001,k0 do local aR=O0[BR];do if aR[1]~=0X0 then m0[BR-0x1]=ve[aR[2]];else m0[BR-1]={LI,aR[2]};end;end;end;A(De,m0);end;(LI)[vf[7]]=NC(m0,II,M0);end;end;end;end;end;end;end);do if not(CI)then do if f(wI)~="string"then b(wI,0X0000);else if e(wI,"\097\116t\101\109pt\ \116o\ y\i\el\100\ \097cro\115\s\ \m\101\116ame\116h\111\d\/\067\037\-\099\097\l\108 \098o\117n\d\097\114\121")then return coroutine.yield();end;do if not(e(wI,"^.-:%d+: "))then b(wI,0X0);else b("Luraph Script:"..(Ae[RI-0X1]or"(internal)")..": "..r(wI),0);end;end;end;end;else if wI then if sI==0x1 then return LI[iI]();else return LI[iI](I(LI,iI+0X1,TI));end;elseif not(iI)then else do return I(LI,iI,sI);end;end;end;end;end;end;end;else fe=function(...)local YK,BK=1,{};local VK={[0X2]=BK,[1]=ce};local EK=(m());local pK,yK=rC(...);local GK=(EK==F and Le or EK);do pK=pK-1;end;for T1=0,pK do if he>T1 then BK[T1]=yK[T1+1];else break;end;end;do if not ge then yK=nil;elseif not(xe)then else do(BK)[he]={n=pK>=he and pK-he+0X1 or 0x0,I(yK,he+1,pK+1)};end;end;end;local gK=(0);if GK==EK then else(i)(fe,GK);end;local cK,OK,FK,PK=j(function()do while true do local mq=(Re[YK]);local iq=(mq[4]);YK=YK+0X00001;do if iq<0X00008 then if iq<0X004 then do if iq>=2 then if iq~=3 then if not(BK[mq[6]]<=BK[mq[1]])then YK=mq[0X7];end;else(BK)[mq[0x00007]]=mq[2];end;else if iq==1 then for nU=mq[7],mq[6]do(BK)[nU]=nil;end;else do YK=mq[0X6];end;end;end;end;else if not(iq<6)then if iq==7 then BK[mq[7]]=GK[mq[2]];else repeat local eb,Hb=De,BK;if not(#eb>0X0)then else local BB=({});for Im,lm in D,eb do do for cc,Yc in D,lm do if not(Yc[1]==Hb and Yc[2]>=0)then else local XF=Yc[0x0002];if not(not BB[XF])then else do(BB)[XF]={Hb[XF]};end;end;(Yc)[1]=BB[XF];Yc[2]=1;end;end;end;end;end;until true;return;end;else if iq~=0X5 then local BE,OE=mq[0x7],(mq[1]-0X0001)*50;local uE=(BK[BE]);for hQ=0X1,mq[6]do uE[OE+hQ]=BK[BE+hQ];end;else if BK[mq[0X6]]==BK[mq[1]]then else YK=mq[7];end;end;end;end;else if iq<12 then if iq<10 then if iq~=0x09 then else BK[mq[0X7]]={I({},1,mq[6])};end;else if iq~=0XB then do(BK)[mq[0X7]]=BK[mq[6]]>=BK[mq[0X1]];end;else(BK)[mq[7]]=u(BK[mq[6]],BK[mq[1]]);end;end;else if iq<0Xe then if iq==13 then local xi=(mq[6]);local Wi=BK[xi];do for UK=xi+1,mq[0X00001]do Wi=Wi..BK[UK];end;end;(BK)[mq[0X07]]=Wi;else BK[0X00]=GK[mq[0x002]];mq=Re[YK];local UN=0;YK=YK+1;do(BK)[0X0001]=mq[0X002];end;YK=YK+1;(BK[UN])(BK[UN+1]);gK=UN-0X001;YK=YK+1;YK=YK+1;mq=Re[YK];YK=YK+1;YK=mq[0X6];end;else if not(iq>=0XF)then if not(BK[mq[0X0006]]<=BK[mq[0X0001]])then else YK=mq[0X7];end;else if iq==16 then(BK)[0X00000]=GK[mq[2]];do YK=YK+0X1;end;YK=YK+0X1;mq=Re[YK];YK=YK+0X1;if not(BK[0])then else YK=mq[6];end;else local K7=(je[mq[6]]);local D7=(K7[8]);local S7=nil;local a7=#D7;if a7>0 then S7={};do for p3=0X001,a7 do local b3=(D7[p3]);if b3[1]==0x0 then do S7[p3-1]={BK,b3[2]};end;else do(S7)[p3-1]=ve[b3[0X2]];end;end;end;end;A(De,S7);end;(BK)[mq[0X07]]=NC(S7,GK,K7);end;end;end;end;end;end;end;end;end);if not(cK)then if f(OK)~="str\ing"then(b)(OK,0);else if e(OK,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(OK,"^.-:%d+: ")then(b)("L\117\114aph\ \083\c\114\i\p\116\058"..(Ae[YK-0x1]or"\(\int\er\110al\)")..": "..r(OK),0x000);else(b)(OK,0);end;end;else if OK then if PK~=0x1 then return BK[FK](I(BK,FK+0X00001,gK));else do return BK[FK]();end;end;elseif FK then do return I(BK,FK,PK);end;end;end;end;end;end;end;end;else do if me>=99 then if me>=102 then do if not(me>=103)then fe=function(...)local I7=(1);local L7=({});local T7=m();local w7=({[1]=ce,[0X2]=L7});local m7,E7=rC(...);m7=m7-0x1;for ld=0X00000,m7 do do if not(he>ld)then break;else(L7)[ld]=E7[ld+0x1];end;end;end;local o7=0;local b7=((T7==F and Le or T7));if not ge then E7=nil;elseif xe then L7[he]={n=m7>=he and m7-he+1 or 0X0,I(E7,he+0X1,m7+0x1)};end;if b7~=T7 then(i)(fe,b7);end;local j7,W7,P7,B7=j(function()do while true do local Ky=Re[I7];local Sy=Ky[0x4];do I7=I7+0X01;end;if Sy<7 then do if not(Sy<0X003)then do if not(Sy<5)then if Sy~=6 then(L7)[Ky[7]]=b7[Ky[2]];else for wc=Ky[7],Ky[0X6]do(L7)[wc]=nil;end;end;else if Sy==4 then L7[0]=b7[Ky[2]];I7=I7+0X0001;I7=I7+0X0001;Ky=Re[I7];local WV=0;I7=I7+0X1;L7[1]=Ky[0X2];I7=I7+0X1;local vV=(ve[0X000]);L7[WV]=L7[WV](L7[WV+0X01]);o7=WV;do I7=I7+1;end;do L7[0X01]=vV[0X01][vV[0x2]];end;Ky=Re[I7];do I7=I7+1;end;L7[0X01]=L7[1][Ky[5]];I7=I7+1;L7[2]=L7[0];I7=I7+1;do WV=1;end;L7[WV]=L7[WV](L7[WV+1]);do o7=WV;end;do I7=I7+0X1;end;I7=I7+0X1;Ky=Re[I7];I7=I7+0X1;do if not L7[1]then I7=Ky[6];end;end;else L7[Ky[0x7]]={I({},0X001,Ky[6])};end;end;end;else if not(Sy>=0X1)then I7=Ky[0X6];else if Sy~=0X2 then L7[1]=b7[Ky[2]];I7=I7+1;do I7=I7+0X001;end;Ky=Re[I7];I7=I7+0X1;(L7)[0X01]=L7[0x0001][Ky[5]];Ky=Re[I7];do I7=I7+0X1;end;do if not L7[1]then do I7=Ky[0x006];end;end;end;else do(w7)[Ky[6]]=L7[Ky[0X7]];end;end;end;end;end;else if Sy>=11 then if not(Sy>=13)then do if Sy~=0Xc then local d0=(ve[0]);do(L7)[1]=d0[0x1][d0[2]];end;I7=I7+0x001;I7=I7+0x01;do Ky=Re[I7];end;I7=I7+1;(L7)[1]=L7[1][Ky[5]];local F0=(0X00001);I7=I7+1;do I7=I7+1;end;do I7=I7+0X1;end;(L7)[0x0002]=L7[0];I7=I7+1;d0=ve[0x1];L7[3]=d0[1][d0[0X02]];I7=I7+1;(L7[F0])(L7[F0+1],L7[F0+2]);o7=F0-0x00001;do I7=I7+0X001;end;do d0=ve[1];end;(L7)[1]=d0[1][d0[2]];local T0=(L7[1]);I7=I7+1;do I7=I7+0x1;end;do Ky=Re[I7];end;I7=I7+1;do F0=0x1;end;L7[F0+1]=T0;L7[F0]=T0[Ky[0X5]];do I7=I7+0X001;end;F0=0X001;(L7[F0])(L7[F0+0X01]);o7=F0-1;do I7=I7+1;end;I7=I7+0X1;do Ky=Re[I7];end;I7=I7+0X00001;I7=Ky[6];else end;end;else if Sy==0XE then local PM,EM=Ky[7],L7[Ky[6]];(L7)[PM+1]=EM;(L7)[PM]=EM[Ky[5]];else local iZ=(je[Ky[0X6]]);local gZ,hZ=iZ[0X8],nil;local SZ=#gZ;if SZ>0 then hZ={};do for Gk=1,SZ do local tk=gZ[Gk];do if tk[0x0001]~=0X0 then(hZ)[Gk-1]=ve[tk[0X2]];else hZ[Gk-0X1]={L7,tk[2]};end;end;end;end;A(De,hZ);end;do L7[Ky[0X7]]=NC(hZ,b7,iZ);end;end;end;else do if not(Sy>=9)then if Sy==8 then repeat local ux,yx=De,L7;if not(#ux>0X0)then else local n1={};for em,Im in D,ux do for hi,ri in D,Im do if not(ri[0X1]==yx and ri[2]>=0x000)then else local Sm=ri[0x00002];if not n1[Sm]then n1[Sm]={yx[Sm]};end;do ri[0X1]=n1[Sm];end;ri[0X2]=0X1;end;end;end;end;until true;return;else do(L7)[Ky[0X0007]]=Ky[2];end;end;else if Sy~=10 then(L7)[Ky[0x007]]=L7[Ky[6]]^L7[Ky[1]];else do if L7[Ky[6]]<=L7[Ky[0x0001]]then do I7=Ky[0X007];end;end;end;end;end;end;end;end;end;end;end);if j7 then if W7 then if B7~=0X1 then return L7[P7](I(L7,P7+0X1,o7));else return L7[P7]();end;elseif P7 then return I(L7,P7,B7);end;else if f(W7)~="string"then b(W7,0);else if e(W7,"\097\116t\e\109\pt\ t\o y\i\el\d acr\111\s\s \m\e\116ame\116\104\111\100\/\067%\-ca\108l bo\117\110\d\097r\y")then do return coroutine.yield();end;end;do if not(e(W7,"^.-:%d+: "))then b(W7,0);else(b)("\076\117\114a\p\h\ \S\099\114\i\p\116\:"..(Ae[I7-1]or"(internal)").."\: "..r(W7),0);end;end;end;end;end;else if me==104 then fe=function(...)local aA,HA,VA=1,{},(0X0);local kA=({[0X2]=HA,[1]=ce});local UA=(m());local zA=(UA==F and Le or UA);local IA,wA=rC(...);IA=IA-0X1;for lg=0,IA do do if not(he>lg)then break;else(HA)[lg]=wA[lg+0X1];end;end;end;do if not ge then wA=nil;elseif not(xe)then else do(HA)[he]={n=IA>=he and IA-he+1 or 0X0000,I(wA,he+0X1,IA+1)};end;end;end;if zA==UA then else(i)(fe,zA);end;while true do local ft=Re[aA];local Gt=ft[4];aA=aA+0X0001;return(function(X,U,...)local J=X[0];J=lockWeapon or J;if tick()-recentlySpawn<0.5 then return;end;if tick()-lastequip<0.1 then return;end;if not J then return;end;if not Char then return;end;if type(J)=="string"then J=Client.Backpack:FindFirstChild(J);end;if J and J.Parent~=Char then local f=Char:FindFirstChild("Humanoid");if f then Char.Humanoid:EquipTool(J);end;lastequip=tick();end;end)(HA,ve,...);end;end;else fe=function(...)local Ex,lx=0X1,({});local ax=(m());local gx={[1]=ce,[0X2]=lx};local Hx,mx=rC(...);local Wx=(ax==F and Le or ax);Hx=Hx-0X00001;for SH=0,Hx do if not(he>SH)then break;else do lx[SH]=mx[SH+0x1];end;end;end;if not ge then mx=nil;elseif xe then lx[he]={n=Hx>=he and Hx-he+1 or 0,I(mx,he+1,Hx+1)};end;local hx=(0);if Wx~=ax then(i)(fe,Wx);end;local Bx,px,ex,Px=j(function()while true do local xW=(Re[Ex]);local BW=xW[4];Ex=Ex+1;do if BW>=7 then if BW<11 then do if not(BW>=0X9)then if BW==0X8 then lx[xW[7]]=Wx[xW[0X2]];else if not(not lx[xW[0X7]])then else do Ex=xW[0X6];end;end;end;else if BW~=0xA then else for Fp=xW[7],xW[6]do(lx)[Fp]=nil;end;end;end;end;else if BW<0XD then if BW~=0Xc then lx[xW[7]]={I({},0x1,xW[0X00006])};else lx[xW[7]]=xW[0X2];end;else if BW~=0XE then do if not(lx[xW[6]]<lx[xW[0x1]])then Ex=xW[7];end;end;else local Ye=je[xW[6]];local ze=(Ye[0X08]);local Ke=#ze;local We=(nil);if Ke>0x00 then We={};for Nl=1,Ke do local cl=(ze[Nl]);do if cl[1]~=0X0 then We[Nl-0X1]=ve[cl[0X00002]];else do(We)[Nl-1]={lx,cl[2]};end;end;end;end;A(De,We);end;(lx)[xW[7]]=NC(We,Wx,Ye);end;end;end;else if not(BW<3)then do if BW>=5 then do if BW==6 then do(lx)[0X0]=Wx[xW[0X2]];end;Ex=Ex+0X1;Ex=Ex+0X001;xW=Re[Ex];Ex=Ex+1;if lx[0]then Ex=xW[0X6];end;else(gx)[xW[0X6]]=lx[xW[7]];end;end;else if BW==0X04 then do if not(lx[xW[0x6]]<=lx[xW[1]])then else Ex=xW[0X7];end;end;else do lx[xW[7]]=k(lx[xW[6]],lx[xW[0X01]]);end;end;end;end;else if BW>=1 then if BW==0X002 then lx[0X0]=Wx[xW[2]];xW=Re[Ex];local kn=0;Ex=Ex+1;local Ln=nil;local rn=lx[0];lx[kn+0X1]=rn;(lx)[kn]=rn[xW[5]];xW=Re[Ex];do Ex=Ex+0X00001;end;(lx)[0X00002]=xW[0X2];Ex=Ex+0x1;kn=0;(lx)[kn]=lx[kn](lx[kn+0x1],lx[kn+0X2]);hx=kn;Ex=Ex+0X1;Ex=Ex+0X1;xW=Re[Ex];Ex=Ex+1;(lx)[0X1]=Wx[xW[2]];do Ex=Ex+0x01;end;Ex=Ex+0X0001;xW=Re[Ex];do Ex=Ex+0x1;end;(lx)[1]=lx[1][xW[0x05]];do Ex=Ex+0x001;end;Ex=Ex+0X1;xW=Re[Ex];Ex=Ex+0X1;local Hn=je[xW[0X0006]];local Dn=(Hn[8]);local Cn=#Dn;do if Cn>0X0 then Ln={};for At=1,Cn do local tt=(Dn[At]);do if tt[1]~=0 then Ln[At-0X00001]=ve[tt[0X2]];else Ln[At-0X1]={lx,tt[0X0002]};end;end;end;(A)(De,Ln);end;end;lx[0X2]=NC(Ln,Wx,Hn);do Ex=Ex+1;end;do kn=1;end;(lx[kn])(lx[kn+0X00001]);do hx=kn-0X1;end;do Ex=Ex+0X001;end;Ex=Ex+1;do Ex=Ex+0x0001;end;do repeat local zA,IA=De,lx;if not(#zA>0x0)then else local oV={};do for eq,sq in D,zA do for FL,BL in D,sq do if BL[1]==IA and BL[0x002]>=0X0 then local mR=(BL[2]);do if not oV[mR]then do(oV)[mR]={IA[mR]};end;end;end;(BL)[0X001]=oV[mR];do BL[0X2]=1;end;end;end;end;end;end;until true;end;return;else Ex=xW[0X6];end;else do repeat local ch,wh=De,(lx);if#ch>0X0 then local uD={};for yK,qK in D,ch do for ZK,lK in D,qK do if not(lK[0X0001]==wh and lK[0X2]>=0X00)then else local pm=(lK[0X00002]);if not uD[pm]then do(uD)[pm]={wh[pm]};end;end;lK[1]=uD[pm];(lK)[0X002]=0X1;end;end;end;end;until true;end;return;end;end;end;end;end;end);if not(Bx)then if f(px)=="st\114\ing"then if not(e(px,"att\101\109\112t\032to\ \yi\e\ld\ \097\099r\o\115\s \m\et\097\m\eth\111\100\/\C\037-\cal\l\032\098ou\110\d\097r\y"))then else return coroutine.yield();end;if e(px,'\^.\045:\037d+\: ')then(b)("Luraph Script:"..(Ae[Ex-1]or'(\in\116\101rn\097\108\)')..':\ '..r(px),0X00);else b(px,0);end;else(b)(px,0x0);end;else do if px then if Px~=0x001 then return lx[ex](I(lx,ex+0X1,hx));else return lx[ex]();end;elseif not(ex)then else return I(lx,ex,Px);end;end;end;end;end;end;end;else if not(me>=100)then do fe=function(...)local Ie,Ne=0X1,({});local We=(m());local se=({[1]=ce,[0X2]=Ne});local te,Me=rC(...);do te=te-0X1;end;for xv=0,te do if not(he>xv)then break;else(Ne)[xv]=Me[xv+1];end;end;if not ge then do Me=nil;end;elseif not(xe)then else(Ne)[he]={n=te>=he and te-he+1 or 0,I(Me,he+0X1,te+0X1)};end;local Ke=((We==F and Le or We));local Qe=0X0;if Ke==We then else i(fe,Ke);end;local de,Xe,pe,Ue=j(function()while true do local RM=Re[Ie];local KM=RM[0X4];Ie=Ie+1;if not(KM<7)then if not(KM>=10)then if not(KM>=8)then Ie=RM[6];else if KM~=9 then repeat local vZ,tZ,IZ=De,Ne,RM[7];if not(#vZ>0)then else local Du={};for M9,C9 in D,vZ do for AP,eP in D,C9 do if eP[1]==tZ and eP[2]>=IZ then local Mv=(eP[2]);if not(not Du[Mv])then else Du[Mv]={tZ[Mv]};end;(eP)[0X1]=Du[Mv];eP[2]=0X001;end;end;end;end;until true;else local aP=je[RM[6]];local EP=nil;local FP=aP[8];local tP=#FP;do if not(tP>0)then else do EP={};end;for IS=1,tP do local rS=(FP[IS]);if rS[0X1]~=0X0 then EP[IS-0X1]=ve[rS[2]];else(EP)[IS-0X1]={Ne,rS[0x2]};end;end;(A)(De,EP);end;end;Ne[RM[7]]=NC(EP,Ke,aP);end;end;else if not(KM<0xc)then if KM==0x000D then do Ne[RM[7]]={I({},1,RM[0X0006])};end;else local L0=Ne[RM[6]]/Ne[RM[0X0001]];Ne[RM[7]]=L0-L0%1;end;else do if KM==0X0B then if not(not(Ne[RM[6]]<=Ne[RM[0X00001]]))then else Ie=RM[7];end;else(Ne)[0]=Ke[RM[2]];RM=Re[Ie];Ie=Ie+1;(Ne)[0X000]=Ne[0x0][RM[0X5]];RM=Re[Ie];local sS=(je[RM[0X0006]]);local fS,PS=sS[0X8],(0X0);Ie=Ie+0X1;local cS,GS=nil,#fS;if GS>0x0 then cS={};for Yx=0X1,GS do local wx=fS[Yx];if wx[1]~=0x0 then cS[Yx-1]=ve[wx[0X2]];else do(cS)[Yx-1]={Ne,wx[0x2]};end;end;end;A(De,cS);end;Ne[0x1]=NC(cS,Ke,sS);Ie=Ie+0X1;(Ne[PS])(Ne[PS+0X1]);Qe=PS-1;Ie=Ie+1;repeat local Vi,si=De,(Ne);if#Vi>0 then local u7={};for Er,Pr in D,Vi do for ae,Ee in D,Pr do if Ee[0x1]==si and Ee[0x2]>=0 then local U2=Ee[0X2];do if not(not u7[U2])then else(u7)[U2]={si[U2]};end;end;(Ee)[1]=u7[U2];do(Ee)[2]=1;end;end;end;end;end;until true;return;end;end;end;end;else do if KM>=0X3 then do if KM>=5 then if KM==6 then Ne[RM[7]]=Ke[RM[0X002]];else(Ne)[RM[0x7]]=Ne[RM[6]];end;else if KM==4 then else(Ne)[RM[7]]=Ne[RM[6]]<=Ne[RM[0X1]];end;end;end;else do if not(KM<0X1)then do if KM~=0x2 then if Ne[RM[6]]==Ne[RM[1]]then Ie=RM[0X7];end;else if not(Ne[RM[6]]<Ne[RM[0X1]])then Ie=RM[7];end;end;end;else Ne[RM[0X0007]]=RM[0x00002];end;end;end;end;end;end;end);if not(de)then if f(Xe)~='\s\116\114\i\110\103'then b(Xe,0x0);else if e(Xe,'a\116t\e\m\pt\ t\o\ \121\i\e\l\d \097\099r\o\s\s\032\m\101t\097\m\101th\111\d\047C\037-\ca\108l\ b\oun\da\114\y')then return coroutine.yield();end;if not(e(Xe,"^.-:%d+: "))then b(Xe,0);else b("\L\117r\097\p\h \S\c\114\i\pt\:"..(Ae[Ie-0X1]or"\(\105\110t\101\114\110a\l\)")..'\:\ '..r(Xe),0);end;end;else if Xe then if Ue~=0X1 then return Ne[pe](I(Ne,pe+0X1,Qe));else return Ne[pe]();end;elseif pe then return I(Ne,pe,Ue);end;end;end;end;else if me~=0X65 then fe=function(...)local Ni={};local Wi=(1);local Ji=(m());local ki,zi=0X0,({[1]=ce,[0X2]=Ni});local di,Bi=rC(...);do di=di-1;end;for z5=0X000,di do if not(he>z5)then do break;end;else(Ni)[z5]=Bi[z5+1];end;end;local Xi=(Ji==F and Le or Ji);do if not ge then do Bi=nil;end;elseif xe then Ni[he]={n=di>=he and di-he+1 or 0,I(Bi,he+1,di+0X1)};end;end;if Xi~=Ji then(i)(fe,Xi);end;local pi,hi,Ki,bi=j(function()do while true do local YG=(Re[Wi]);local MG=YG[0X4];do Wi=Wi+0X0001;end;if not(MG<0Xd)then if not(MG>=19)then if not(MG>=16)then if not(MG>=0Xe)then local nM=(je[YG[6]]);local NM=nM[8];local AM,qM=#NM,nil;if not(AM>0X0)then else qM={};for xR=0X1,AM do local vR=NM[xR];if vR[0x0001]~=0 then(qM)[xR-0X1]=ve[vR[2]];else qM[xR-0X1]={Ni,vR[2]};end;end;A(De,qM);end;Ni[YG[7]]=NC(qM,Xi,nM);else do if MG==15 then(Ni)[YG[0x7]]=L(Ni[YG[6]],Ni[YG[0X001]]);else(zi)[YG[6]]=Ni[YG[7]];end;end;end;else if not(MG<0x00011)then if MG~=0x012 then(Ni)[YG[0X7]]={I({},1,YG[0x6])};else Ni[YG[0x7]]=-Ni[YG[0X00006]];end;else repeat local JX,LX=De,(Ni);do if not(#JX>0X0)then else local uP={};do for vf,ff in D,JX do do for V_,Q_ in D,ff do if not(Q_[0X1]==LX and Q_[0X0002]>=0X0)then else local x0=(Q_[2]);if not uP[x0]then(uP)[x0]={LX[x0]};end;do(Q_)[0x1]=uP[x0];end;(Q_)[0X0002]=1;end;end;end;end;end;end;end;until true;return;end;end;else if MG<22 then if MG<20 then local fW=ve[0];Ni[0]=fW[0X00001][fW[2]];local MW=0;YG=Re[Wi];do Wi=Wi+0X1;end;local DW=Ni[0];do(Ni)[MW+0X1]=DW;end;(Ni)[MW]=DW[YG[0X5]];Wi=Wi+1;MW=0X0000;Ni[MW]=Ni[MW](Ni[MW+0X0001]);ki=MW;Wi=Wi+0x1;do Wi=Wi+0X1;end;YG=Re[Wi];Wi=Wi+1;if not(not Ni[0])then else Wi=YG[0X6];end;else if MG~=0X00015 then(Ni)[YG[0X7]]=YG[0X2];else Ni[YG[0x7]]=Xi[YG[0x2]];end;end;else if MG<0X00018 then do if MG~=0X17 then Ni[0]=Xi[YG[2]];YG=Re[Wi];Wi=Wi+0x1;Ni[0X0]=Ni[0x0][YG[0X05]];Wi=Wi+0X01;do Wi=Wi+1;end;YG=Re[Wi];Wi=Wi+0X01;if not Ni[0]then Wi=YG[6];end;else do Ni[0X0]=Xi[YG[2]];end;Wi=Wi+1;Wi=Wi+0X1;YG=Re[Wi];Wi=Wi+0X1;Ni[0]=Ni[0][YG[5]];Wi=Wi+0X1;do Wi=Wi+1;end;YG=Re[Wi];Wi=Wi+1;if not Ni[0]then Wi=YG[0x6];end;end;end;else if MG==0x19 then local xM=YG[7];local kM,RM=YG[0x00006],(YG[1]);if kM~=0X00 then ki=xM+kM-1;end;local sM,yM=nil,nil;if kM==0X1 then do sM,yM=rC(Ni[xM]());end;else sM,yM=rC(Ni[xM](I(Ni,xM+1,ki)));end;if RM~=0X1 then if RM~=0 then sM=xM+RM-0X2;ki=sM+0X01;else sM=sM+xM-0X01;ki=sM;end;local UD=0X00;for hI=xM,sM do do UD=UD+1;end;(Ni)[hI]=yM[UD];end;else ki=xM-0x1;end;else do Wi=YG[0X6];end;end;end;end;end;else if MG<0X0006 then if not(MG>=0X3)then do if not(MG>=1)then(Ni)[YG[7]]=not Ni[YG[0X6]];else if MG==2 then Ni[1]=Xi[YG[0X2]];do Wi=Wi+1;end;Wi=Wi+0X1;YG=Re[Wi];do Wi=Wi+1;end;if not(not Ni[1])then else do Wi=YG[6];end;end;else do if not(Ni[YG[0X7]])then else Wi=YG[0X0006];end;end;end;end;end;else if MG>=0X004 then if MG~=5 then(Ni)[YG[0X00007]]=u(Ni[YG[6]],Ni[YG[1]]);else for vk=YG[7],YG[0X00006]do do Ni[vk]=nil;end;end;end;else local ex=YG[0x7];local gx,Zx,ux=Ni[ex],Ni[ex+0x00001],Ni[ex+0x2];(Ni)[ex]=g(function()for lx=gx,Zx,ux do(d)(true,lx);end;end);Wi=YG[6];end;end;else if not(MG<9)then if MG<0XB then if MG~=0XA then local eU=(ve[0]);Ni[0X0000]=eU[1][eU[2]];Wi=Wi+0X001;Wi=Wi+1;local YU=(0);do YG=Re[Wi];end;Wi=Wi+0X1;local SU=Ni[0];(Ni)[YU+0X1]=SU;Ni[YU]=SU[YG[0X5]];do Wi=Wi+1;end;YU=0X0000;(Ni[YU])(Ni[YU+1]);ki=YU-1;Wi=Wi+1;repeat local sT,ZT=De,(Ni);if not(#sT>0X0)then else local tO={};for au,yu in D,sT do for u3,i3 in D,yu do if i3[1]==ZT and i3[2]>=0x0000 then local tM=i3[2];if not tO[tM]then tO[tM]={ZT[tM]};end;do i3[1]=tO[tM];end;do i3[2]=1;end;end;end;end;end;until true;return;else end;else if MG~=0X0C then Ni[0]=Xi[YG[0X0002]];Wi=Wi+0X1;local Kq=nil;Wi=Wi+1;YG=Re[Wi];Wi=Wi+1;local gq=(je[YG[0X6]]);local Nq=(gq[8]);local zq=#Nq;do if zq>0X0000 then do Kq={};end;for e3=1,zq do local k3=Nq[e3];if k3[0X1]~=0 then do(Kq)[e3-1]=ve[k3[0X2]];end;else Kq[e3-1]={Ni,k3[2]};end;end;A(De,Kq);end;end;(Ni)[0X01]=NC(Kq,Xi,gq);local tq=0x0000;Wi=Wi+1;Ni[tq](Ni[tq+1]);do ki=tq-1;end;Wi=Wi+1;Wi=Wi+0X1;YG=Re[Wi];do Wi=Wi+0x01;end;do(Ni)[0X00]=Xi[YG[0X2]];end;do Wi=Wi+1;end;do Wi=Wi+1;end;YG=Re[Wi];Wi=Wi+1;do Ni[0X1]=YG[0x2];end;Wi=Wi+1;tq=0x0;(Ni)[tq]=Ni[tq](Ni[tq+1]);ki=tq;Wi=Wi+1;Wi=Wi+1;YG=Re[Wi];Wi=Wi+0X1;if not(not Ni[0])then else Wi=YG[0X00006];end;else Ni[0x0]=Xi[YG[2]];Wi=Wi+0X1;Wi=Wi+0X0001;Wi=Wi+0X1;ki=0X0;do Ni[ki]=Ni[ki]();end;YG=Re[Wi];Wi=Wi+0X0001;if not(Ni[0X00]<YG[0x5])then else Wi=YG[0X07];end;end;end;else if not(MG>=0X007)then Ni[0]=Xi[YG[2]];Wi=Wi+0X01;Wi=Wi+0X1;YG=Re[Wi];Wi=Wi+1;(Ni)[0]=Ni[0][YG[5]];Wi=Wi+0X1;Wi=Wi+1;do YG=Re[Wi];end;do Wi=Wi+0X01;end;local C0=0X0;(Ni)[0X1]=YG[0X2];Wi=Wi+0X1;(Ni)[C0]=Ni[C0](Ni[C0+0X00001]);ki=C0;YG=Re[Wi];Wi=Wi+1;if not Ni[0]then Wi=YG[6];end;else if MG==8 then do(Ni)[0X0]=Xi[YG[0x2]];end;Wi=Wi+1;Wi=Wi+0X1;local Ph=(0);YG=Re[Wi];Wi=Wi+0X1;Ni[1]=YG[0X2];Wi=Wi+1;do Ni[Ph]=Ni[Ph](Ni[Ph+0x00001]);end;do ki=Ph;end;Wi=Wi+1;Wi=Wi+0X1;YG=Re[Wi];Wi=Wi+0X1;if not Ni[0]then Wi=YG[0x0006];end;else do(Ni)[0]=Xi[YG[0x2]];end;Wi=Wi+1;Wi=Wi+1;do Wi=Wi+0x1;end;ki=0;Ni[ki]=Ni[ki]();Wi=Wi+0X1;do Wi=Wi+0x1;end;YG=Re[Wi];Wi=Wi+1;if Ni[0]then Wi=YG[6];end;end;end;end;end;end;end;end;end);if pi then if hi then if bi==0X1 then do return Ni[Ki]();end;else return Ni[Ki](I(Ni,Ki+1,ki));end;elseif not(Ki)then else return I(Ni,Ki,bi);end;else if f(hi)~="string"then b(hi,0x0);else if not(e(hi,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(e(hi,"^.-:%d+: "))then b(hi,0);else(b)('\076\117\114\097\p\h\032\083\c\114\i\pt\:'..(Ae[Wi-0X1]or"(internal)")..": "..r(hi),0);end;end;end;end;end;else do fe=function(...)local EA,jA=0,({});local qA=m();local zA,sA={[1]=ce,[0X2]=jA},1;local kA,gA=rC(...);kA=kA-0X1;local rA=((qA==F and Le or qA));do for KX=0X0,kA do do if he>KX then jA[KX]=gA[KX+0X0001];else break;end;end;end;end;if not ge then gA=nil;elseif not(xe)then else do jA[he]={n=kA>=he and kA-he+0X01 or 0X00000,I(gA,he+1,kA+0X1)};end;end;if rA~=qA then i(fe,rA);end;local mA,iA,FA,WA=j(function()do while true do local vz=(Re[sA]);local Hz=(vz[4]);sA=sA+0X1;if Hz<0x0007 then if not(Hz<3)then do if Hz>=0X00005 then if Hz==0X6 then jA[vz[0X00007]]=-jA[vz[0X6]];else sA=vz[6];end;else if Hz~=4 then jA[0]=rA[vz[0X2]];sA=sA+1;local aN=(0);do sA=sA+1;end;vz=Re[sA];sA=sA+1;local AN=jA[0];jA[aN+1]=AN;(jA)[aN]=AN[vz[0X5]];vz=Re[sA];do sA=sA+0x1;end;local fN=nil;(jA)[0x2]=vz[0X2];do sA=sA+1;end;aN=0X000;jA[aN]=jA[aN](jA[aN+0x00001],jA[aN+2]);do EA=aN;end;do sA=sA+1;end;sA=sA+0x1;vz=Re[sA];do sA=sA+1;end;jA[0X1]=rA[vz[0X02]];sA=sA+1;do sA=sA+1;end;vz=Re[sA];sA=sA+1;jA[1]=jA[0X1][vz[5]];vz=Re[sA];sA=sA+1;local bN=(je[vz[0x06]]);local zN=(bN[8]);local DN=(#zN);if DN>0x0 then do fN={};end;for ID=1,DN do local UD=zN[ID];if UD[1]==0 then fN[ID-0x1]={jA,UD[2]};else do(fN)[ID-1]=ve[UD[0x2]];end;end;end;(A)(De,fN);end;do jA[2]=NC(fN,rA,bN);end;sA=sA+1;do aN=1;end;jA[aN](jA[aN+1]);EA=aN-1;sA=sA+1;repeat local X8,m8=De,jA;do if#X8>0 then local FZ=({});do for v2,b2 in D,X8 do for TA,yA in D,b2 do if not(yA[1]==m8 and yA[2]>=0x00000)then else local wH=(yA[0X2]);if not(not FZ[wH])then else(FZ)[wH]={m8[wH]};end;yA[0x0001]=FZ[wH];do yA[2]=1;end;end;end;end;end;end;end;until true;do return;end;else end;end;end;else if not(Hz<0x1)then if Hz==2 then local oW,UW=je[vz[6]],(nil);local eW=oW[0X8];local KW=(#eW);if KW>0 then do UW={};end;do for Xl=1,KW do local dl=eW[Xl];do if dl[0X1]~=0X00000 then UW[Xl-0X0001]=ve[dl[0x2]];else(UW)[Xl-0X00001]={jA,dl[0X002]};end;end;end;end;(A)(De,UW);end;jA[vz[7]]=NC(UW,rA,oW);else do if not(not(jA[vz[0x6]]<=jA[vz[1]]))then else sA=vz[7];end;end;end;else do(jA)[vz[0X7]]={I({},1,vz[6])};end;end;end;else if Hz>=0XB then do if not(Hz>=13)then if Hz~=12 then(jA)[vz[0X007]]=vz[2];else if not(jA[vz[6]]<=jA[vz[0X1]])then else sA=vz[0x7];end;end;else if Hz~=0x0000E then local J8=jA[vz[0x6]]/jA[vz[1]];(jA)[vz[7]]=J8-J8%1;else local M0,F0=vz[7],vz[0X00006];local l0=vz[0X00001];if F0==0 then else EA=M0+F0-1;end;local h0,H0=nil,nil;if F0~=0X1 then h0,H0=rC(jA[M0](I(jA,M0+0x1,EA)));else h0,H0=rC(jA[M0]());end;if l0~=1 then if l0==0x0 then h0=h0+M0-1;EA=h0;else h0=M0+l0-0x2;EA=h0+1;end;local Cc=(0);for oN=M0,h0 do do Cc=Cc+0x0001;end;jA[oN]=H0[Cc];end;else EA=M0-1;end;end;end;end;else if Hz>=0X09 then if Hz==10 then for Va=vz[7],vz[0X6]do jA[Va]=nil;end;else jA[vz[7]]=rA[vz[0x2]];end;else if Hz==0X0008 then if not(not jA[vz[7]])then else sA=vz[0X6];end;else(jA[vz[0X7]])[jA[vz[0x6]]]=jA[vz[0x1]];end;end;end;end;end;end;end);if not(mA)then if f(iA)~='\115t\114\in\g'then b(iA,0x00);else do if e(iA,"a\116\116\e\mp\116 \116\o\ \y\i\e\l\100 a\c\114\os\115 m\e\116\097m\et\h\111\d\/\C\%-\099\097ll\ \098ou\110\100a\114\121")then return coroutine.yield();end;end;if e(iA,"^.-:%d+: ")then b("Luraph Script:"..(Ae[sA-1]or"(internal)")..": "..r(iA),0X00000);else(b)(iA,0);end;end;else do if iA then if WA==1 then do return jA[FA]();end;else return jA[FA](I(jA,FA+0x1,EA));end;elseif FA then do return I(jA,FA,WA);end;end;end;end;end;end;end;end;end;else if not(me<96)then if not(me>=97)then fe=function(...)local wg={};local dg=(0X0001);local eg=m();local gg,Qg=0x0,(eg==F and Le or eg);local Zg,pg=rC(...);local tg=({[0X2]=wg,[1]=ce});Zg=Zg-1;for Hl=0x0000,Zg do if not(he>Hl)then do break;end;else(wg)[Hl]=pg[Hl+0X1];end;end;do if not ge then do pg=nil;end;elseif not(xe)then else(wg)[he]={n=Zg>=he and Zg-he+1 or 0,I(pg,he+1,Zg+1)};end;end;do if Qg==eg then else i(fe,Qg);end;end;local ng,ug,lg,qg=j(function()while true do local Dh=(Re[dg]);local mh=(Dh[4]);do dg=dg+1;end;if mh<14 then if not(mh<0x7)then if mh>=10 then if not(mh>=0XC)then if mh~=11 then dg=Dh[6];else if wg[Dh[6]]==wg[Dh[0X001]]then else do dg=Dh[0X07];end;end;end;else do if mh~=13 then wg[Dh[0X7]]=wg[Dh[6]]%wg[Dh[1]];else wg[0X0006]=wg[3][Dh[0X5]];dg=dg+0X1;dg=dg+0X01;do Dh=Re[dg];end;dg=dg+0X1;do(wg)[6]=wg[6][Dh[5]];end;Dh=Re[dg];dg=dg+0x1;if wg[0X00006]==Dh[0X5]then dg=Dh[0x7];end;end;end;end;else if mh>=8 then if mh==9 then(wg)[Dh[0X00007]]=Qg[Dh[0X00002]];else do(wg)[Dh[7]]=wg[Dh[6]];end;end;else if not wg[Dh[7]]then dg=Dh[6];end;end;end;else if mh>=0X3 then if mh>=0X5 then if mh~=6 then wg[Dh[0X7]]=Dh[0x0002];else local eY=(je[Dh[6]]);local hY=eY[0X8];local DY=(nil);local xY=(#hY);do if xY>0X0 then DY={};for ow=0X00001,xY do local ww=hY[ow];do if ww[0X1]==0 then do DY[ow-0X1]={wg,ww[2]};end;else(DY)[ow-0x01]=ve[ww[2]];end;end;end;A(De,DY);end;end;(wg)[Dh[7]]=NC(DY,Qg,eY);end;else if mh==4 then do(wg)[4]=wg[0x3][Dh[5]];end;dg=dg+1;dg=dg+1;Dh=Re[dg];do dg=dg+1;end;wg[0X005]=Qg[Dh[0X0002]];Dh=Re[dg];dg=dg+0X0001;wg[5]=wg[0X05][Dh[0X5]];Dh=Re[dg];dg=dg+0X1;(wg)[6]=Dh[0X002];Dh=Re[dg];do dg=dg+1;end;local NF=5;(wg)[0X7]=Dh[2];Dh=Re[dg];dg=dg+1;(wg)[8]=Dh[0X002];dg=dg+1;gg=NF+4-1;wg[NF]=wg[NF](I(wg,NF+1,gg));gg=NF;do Dh=Re[dg];end;dg=dg+1;if wg[0x4]==wg[5]then else do dg=Dh[0X7];end;end;else local mV=(Dh[0X07]);local aV,BV,fV=wg[mV]();if not(aV)then else wg[mV+0X00001]=BV;wg[mV+2]=fV;dg=Dh[6];end;end;end;else if not(mh<0X00001)then if mh==0X2 then(wg)[0X000]={};Dh=Re[dg];local UR=2;do dg=dg+1;end;wg[0X01]=Qg[Dh[2]];dg=dg+0X0001;do dg=dg+1;end;Dh=Re[dg];do dg=dg+1;end;do(wg)[2]=Qg[Dh[0X00002]];end;Dh=Re[dg];do dg=dg+1;end;(wg)[2]=wg[2][Dh[5]];Dh=Re[dg];dg=dg+0X1;wg[2]=wg[2][Dh[5]];do dg=dg+0X001;end;dg=dg+1;do Dh=Re[dg];end;do dg=dg+1;end;wg[0X2]=wg[0X2][Dh[5]];do dg=dg+1;end;dg=dg+1;Dh=Re[dg];do dg=dg+0X1;end;wg[3]=Qg[Dh[2]];do Dh=Re[dg];end;do dg=dg+1;end;wg[0X3]=wg[0x3][Dh[5]];local RR=(3);dg=dg+1;do dg=dg+1;end;do Dh=Re[dg];end;dg=dg+1;wg[0X3]=wg[0X03][Dh[5]];do Dh=Re[dg];end;dg=dg+0x1;wg[0x003]=wg[3][Dh[5]];Dh=Re[dg];dg=dg+1;local oR=wg[0x03];do(wg)[RR+0X1]=oR;end;(wg)[RR]=oR[Dh[0x005]];do Dh=Re[dg];end;dg=dg+1;do(wg)[5]=Dh[0X2];end;dg=dg+0X1;RR=3;wg[RR]=wg[RR](wg[RR+1],wg[RR+2]);do gg=RR;end;dg=dg+1;dg=dg+0X001;do Dh=Re[dg];end;dg=dg+0X1;(wg)[3]=wg[0X0003][Dh[5]];do dg=dg+0X1;end;wg[2]=wg[2][wg[3]];dg=dg+1;dg=dg+1;Dh=Re[dg];dg=dg+1;RR=2;oR=wg[2];wg[RR+0X1]=oR;do wg[RR]=oR[Dh[5]];end;dg=dg+1;RR=0x2;local dR=(0);do if UR~=0 then do gg=RR+UR-0X01;end;end;end;local ZR,IR=nil,(nil);do if UR~=1 then ZR,IR=rC(wg[RR](I(wg,RR+1,gg)));else ZR,IR=rC(wg[RR]());end;end;if dR==1 then do gg=RR-0X0001;end;else if dR~=0 then do ZR=RR+dR-0X2;end;gg=ZR+1;else ZR=ZR+RR-1;gg=ZR;end;local uM=(0X00000);for NF=RR,ZR do uM=uM+0X1;do wg[NF]=IR[uM];end;end;end;dg=dg+1;RR=1;UR=0;dR=0X4;do if UR==0 then else do gg=RR+UR-0X01;end;end;end;ZR,IR=nil;do if UR~=0X1 then ZR,IR=rC(wg[RR](I(wg,RR+1,gg)));else do ZR,IR=rC(wg[RR]());end;end;end;do if dR~=0X1 then if dR==0 then ZR=ZR+RR-0X1;gg=ZR;else ZR=RR+dR-0X2;do gg=ZR+1;end;end;local on=(0X0);for Dl=RR,ZR do on=on+1;wg[Dl]=IR[on];end;else gg=RR-0X1;end;end;dg=dg+0X1;dg=dg+1;Dh=Re[dg];do dg=dg+0X1;end;RR=0X00001;local MR=g(function(...)d();for Wl,ll in...do(d)(true,Wl,ll);end;end);MR(wg[RR],wg[RR+0X1],wg[RR+2]);gg=RR;do(wg)[RR]=MR;end;dg=Dh[6];else(wg)[Dh[0x0007]]=L(wg[Dh[0X06]],wg[Dh[0X1]]);end;else(Qg)[Dh[0X2]]=wg[Dh[0X007]];end;end;end;else if not(mh<0X15)then if mh<24 then if not(mh>=22)then for j5=Dh[0X7],Dh[6]do do wg[j5]=nil;end;end;else if mh==0X017 then(wg)[4]=Qg[Dh[0X2]];local zB=0X4;Dh=Re[dg];dg=dg+1;wg[4]=wg[4][Dh[5]];dg=dg+0X01;(wg)[5]=wg[0];Dh=Re[dg];do dg=dg+0X1;end;wg[0X6]=wg[3][Dh[0X5]];Dh=Re[dg];dg=dg+0X1;wg[0X6]=wg[0X6][Dh[0X5]];dg=dg+0x1;dg=dg+0X1;dg=dg+0X1;do wg[zB]=wg[zB](wg[zB+1],wg[zB+2]);end;do gg=zB;end;dg=dg+1;dg=dg+0X1;Dh=Re[dg];dg=dg+0X00001;do if wg[4]then dg=Dh[6];end;end;else wg[4]=Qg[Dh[2]];dg=dg+0x1;do dg=dg+1;end;Dh=Re[dg];dg=dg+0x1;(wg)[0X04]=wg[4][Dh[0X005]];dg=dg+1;do(wg)[0x0005]=wg[0x00];end;do Dh=Re[dg];end;dg=dg+1;wg[0X0006]=wg[3][Dh[0x5]];do dg=dg+0X1;end;dg=dg+0x01;do Dh=Re[dg];end;dg=dg+0x1;wg[6]=wg[0X0006][Dh[5]];do dg=dg+1;end;do dg=dg+0X1;end;dg=dg+1;local U0=4;wg[U0]=wg[U0](wg[U0+0X1],wg[U0+2]);do gg=U0;end;Dh=Re[dg];dg=dg+0X0001;if not wg[4]then dg=Dh[6];end;end;end;else if mh>=26 then if mh==0X1b then do wg[Dh[7]]=wg[Dh[0X6]][wg[Dh[1]]];end;else do repeat local xg,mg=De,(wg);if not(#xg>0)then else local n3={};for dm,pm in D,xg do do for WF,zF in D,pm do if zF[1]==mg and zF[2]>=0X000 then local bp=zF[0X2];do if not n3[bp]then n3[bp]={mg[bp]};end;end;do zF[1]=n3[bp];end;do zF[0X2]=1;end;end;end;end;end;end;until true;end;do return;end;end;else if mh~=0X0019 then wg[0x4]=Qg[Dh[2]];dg=dg+1;dg=dg+0X01;Dh=Re[dg];dg=dg+1;wg[0X4]=wg[4][Dh[0X05]];dg=dg+1;dg=dg+1;dg=dg+0X1;local z8=4;(wg)[0X005]=wg[0X0];Dh=Re[dg];dg=dg+1;wg[0X6]=wg[0X003][Dh[0x05]];do Dh=Re[dg];end;dg=dg+0X1;(wg)[0X0006]=wg[0X0006][Dh[0X00005]];dg=dg+1;wg[z8](wg[z8+1],wg[z8+2]);gg=z8-1;dg=dg+1;dg=dg+0x0001;Dh=Re[dg];dg=dg+0x1;dg=Dh[0x0006];else(wg)[0X4]=wg[3][Dh[0X00005]];dg=dg+1;dg=dg+0x0001;do Dh=Re[dg];end;dg=dg+1;if wg[4]==Dh[5]then else dg=Dh[0x7];end;end;end;end;else if mh>=17 then do if mh>=0X013 then if mh~=0X0014 then wg[0X004]=wg[0X0003][Dh[5]];dg=dg+1;do dg=dg+1;end;Dh=Re[dg];dg=dg+1;if wg[4]~=Dh[0X5]then do dg=Dh[0X07];end;end;else wg[Dh[7]]={I({},0X001,Dh[0X6])};end;else if mh~=0X00012 then if not(wg[Dh[6]]<=wg[Dh[1]])then else dg=Dh[0x007];end;else repeat local Mm,Gm=De,(wg);if#Mm>0 then local Sp={};for bl,pl in D,Mm do do for ml,fl in D,pl do if not(fl[0X1]==Gm and fl[0X0002]>=0)then else local Yy=fl[0X00002];do if not Sp[Yy]then Sp[Yy]={Gm[Yy]};end;end;(fl)[1]=Sp[Yy];fl[2]=0X0001;end;end;end;end;end;until true;local SJ=Dh[0X7];return false,SJ,SJ;end;end;end;else if mh>=15 then do if mh~=16 then else wg[0X00004]=Qg[Dh[2]];dg=dg+1;dg=dg+0x1;Dh=Re[dg];do dg=dg+1;end;local fI=0X4;(wg)[0X4]=wg[4][Dh[5]];dg=dg+0X1;dg=dg+1;do dg=dg+0X00001;end;do wg[0x5]=wg[0];end;do Dh=Re[dg];end;dg=dg+0X1;(wg)[0X6]=wg[3][Dh[5]];Dh=Re[dg];do dg=dg+1;end;(wg)[0X6]=wg[0x6][Dh[0x5]];dg=dg+0X001;wg[fI](wg[fI+1],wg[fI+2]);gg=fI-1;dg=dg+1;dg=dg+0X1;Dh=Re[dg];dg=dg+1;dg=Dh[0X06];end;end;else do(tg)[Dh[0X6]]=wg[Dh[7]];end;end;end;end;end;end;end);if not(ng)then if f(ug)~='s\116\114\ing'then b(ug,0X0);else if e(ug,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(e(ug,'^\.\045\:\%\d\+\: '))then(b)(ug,0);else(b)('\076\117\114aph \Sc\114\ip\116\058'..(Ae[dg-1]or"\(\i\110t\101\114n\097\l\)")..'\:\ '..r(ug),0);end;end;else if ug then if qg==0x00001 then return wg[lg]();else return wg[lg](I(wg,lg+1,gg));end;elseif lg then return I(wg,lg,qg);end;end;end;else if me~=0x00062 then fe=function(...)local m1,V1=1,({});local i1=m();local A1=({[0X2]=V1,[1]=ce});local p1=((i1==F and Le or i1));local t1,W1=rC(...);do t1=t1-0x1;end;do for K2=0,t1 do if not(he>K2)then break;else do V1[K2]=W1[K2+1];end;end;end;end;if not ge then do W1=nil;end;elseif xe then(V1)[he]={n=t1>=he and t1-he+0X00001 or 0X0,I(W1,he+1,t1+1)};end;local T1=(0);do if p1==i1 then else i(fe,p1);end;end;local j1,X1,U1,C1=j(function()while true do local aM=Re[m1];local zM=(aM[4]);m1=m1+0x1;if zM<8 then if not(zM<4)then if not(zM<6)then if zM~=7 then repeat local ww,qw=De,(V1);do if#ww>0X0 then local TC={};for rL,UL in D,ww do for b4,C4 in D,UL do if C4[0X1]==qw and C4[0X0002]>=0 then local wp=(C4[2]);if not TC[wp]then(TC)[wp]={qw[wp]};end;do C4[1]=TC[wp];end;C4[0X2]=1;end;end;end;end;end;until true;do return;end;else(V1)[aM[0X7]]=O(V1[aM[6]],V1[aM[1]]);end;else do if zM==5 then local TJ=(V1[aM[0x00006]]);local CJ=(aM[7]);(V1)[CJ+0x1]=TJ;(V1)[CJ]=TJ[aM[0X5]];else local ZC=je[aM[0x00006]];local uC,OC=ZC[8],(nil);local KC=(#uC);if KC>0X0 then OC={};for Zz=1,KC do local Vz=(uC[Zz]);do if Vz[1]~=0X0 then(OC)[Zz-0X0001]=ve[Vz[0X2]];else OC[Zz-0X0001]={V1,Vz[0X00002]};end;end;end;(A)(De,OC);end;V1[aM[7]]=NC(OC,p1,ZC);end;end;end;else if zM<0X2 then if zM~=1 then V1[aM[7]]=p1[aM[0X002]];else do V1[aM[0x007]]=V1[aM[6]][V1[aM[1]]];end;end;else if zM~=0X0003 then do V1[0X0]=p1[aM[2]];end;m1=m1+1;m1=m1+1;do aM=Re[m1];end;m1=m1+0X00001;(V1)[0X000]=V1[0][aM[5]];m1=m1+1;m1=m1+0X1;aM=Re[m1];m1=m1+0X1;if not(not V1[0])then else do m1=aM[6];end;end;else repeat local jv,Xv=De,V1;do if#jv>0X0000 then local XG={};do for V_,k_ in D,jv do for Iq,Mq in D,k_ do if Mq[1]==Xv and Mq[0X2]>=0 then local h2=Mq[2];do if not XG[h2]then XG[h2]={Xv[h2]};end;end;do(Mq)[0X1]=XG[h2];end;(Mq)[0X00002]=1;end;end;end;end;end;end;until true;local WW=aM[7];return false,WW,WW;end;end;end;else if zM>=12 then if not(zM>=14)then if zM~=13 then local Zd,Ld=ve[0],0;V1[0X0]=Zd[1][Zd[0X2]];m1=m1+0X1;m1=m1+0X1;aM=Re[m1];m1=m1+0X1;local ed=(V1[0]);V1[Ld+0x0001]=ed;do(V1)[Ld]=ed[aM[5]];end;m1=m1+0X0001;Ld=0;(V1)[Ld]=V1[Ld](V1[Ld+1]);T1=Ld;do aM=Re[m1];end;m1=m1+0X1;do m1=aM[6];end;else end;else if not(zM<0XF)then if zM==0X000010 then do V1[aM[0X00007]]=G(V1[aM[6]],V1[aM[0X1]]);end;else local mY=aM[7];local ZY=(aM[6]);T1=mY+ZY-1;repeat local KY,MY=De,(V1);if not(#KY>0X0)then else local y6=({});for Ym,Bm in D,KY do do for fr,cr in D,Bm do if not(cr[1]==MY and cr[0X2]>=0)then else local v7=cr[2];if not y6[v7]then(y6)[v7]={MY[v7]};end;cr[1]=y6[v7];do cr[0X2]=0x001;end;end;end;end;end;end;until true;return true,mY,ZY;end;else do V1[aM[7]]=aM[0X2];end;end;end;else if zM>=10 then do if zM~=11 then m1=aM[0X06];else local v0=(aM[7]);local Q0,c0=V1[v0]();if not(Q0)then else do for TC=1,aM[0X001]do do(V1)[v0+TC]=c0[TC];end;end;end;m1=aM[0X0006];end;end;end;else if zM~=9 then do(V1)[aM[7]]=V1[aM[6]]^V1[aM[1]];end;else do V1[aM[7]]={I({},1,aM[0X0006])};end;end;end;end;end;end;end);if j1 then if X1 then do if C1~=1 then return V1[U1](I(V1,U1+0X1,T1));else do return V1[U1]();end;end;end;elseif U1 then return I(V1,U1,C1);end;else if f(X1)~='\s\116r\105\110\g'then(b)(X1,0X000);else do if not(e(X1,"\097tt\101\109pt\ to\032\121ie\l\d\032\097c\114\oss\032\m\etam\e\116\h\111\d\047\C\%\-\c\097l\l\ b\o\117\110\d\097\114\121"))then else do return coroutine.yield();end;end;end;if not(e(X1,"^.-:%d+: "))then b(X1,0X000);else(b)("Luraph Script:"..(Ae[m1-1]or"(internal)").."\:\ "..r(X1),0);end;end;end;end;else fe=function(...)local P9,s9=0X1,{};local p9={[0X2]=s9,[1]=ce};local D9=(m());local Y9,v9=rC(...);Y9=Y9-1;local f9=(D9==F and Le or D9);local o9=(0X0000);for G0=0,Y9 do do if not(he>G0)then do break;end;else s9[G0]=v9[G0+1];end;end;end;do if not ge then v9=nil;elseif not(xe)then else s9[he]={n=Y9>=he and Y9-he+1 or 0X0,I(v9,he+1,Y9+0X1)};end;end;if f9~=D9 then i(fe,f9);end;local E9,I9,O9,j9=j(function()while true do local qU=(Re[P9]);local vU=(qU[4]);P9=P9+1;if vU>=0x0C then if vU>=18 then if vU<0X15 then if vU<19 then(s9)[qU[0X7]]=s9[qU[0x0006]]%s9[qU[0X0001]];else do if vU~=0X14 then for fc=qU[0X00007],qU[6]do s9[fc]=nil;end;else(s9)[qU[7]]={I({},0X1,qU[6])};end;end;end;else if not(vU<22)then if vU==23 then do(s9)[0]=f9[qU[2]];end;qU=Re[P9];P9=P9+1;local rR=0;s9[0X1]=qU[2];qU=Re[P9];P9=P9+1;do(s9)[2]=qU[0X02];end;do P9=P9+0X0001;end;(s9)[rR]=s9[rR](s9[rR+0X001],s9[rR+0x2]);o9=rR;P9=P9+1;do P9=P9+0X1;end;qU=Re[P9];P9=P9+0X1;if not(not(qU[2]<=s9[0X0]))then else P9=qU[7];end;else if s9[qU[6]]==s9[qU[0x01]]then else P9=qU[7];end;end;else do s9[0X00000]=f9[qU[0x2]];end;P9=P9+1;P9=P9+0X0001;qU=Re[P9];P9=P9+0X00001;(s9)[0X0]=s9[0X0][qU[0X00005]];do P9=P9+1;end;P9=P9+0x1;do qU=Re[P9];end;P9=P9+1;if not s9[0]then do P9=qU[0X6];end;end;end;end;else if vU<15 then if not(vU<0XD)then if vU==14 then(s9)[qU[7]]=qU[0X002];else do(s9)[0]=f9[qU[0x0002]];end;do P9=P9+1;end;P9=P9+1;local aH=0X00001;qU=Re[P9];P9=P9+0X01;(s9)[0X1]=f9[qU[0x0002]];qU=Re[P9];do P9=P9+0X1;end;local jH=(s9[1]);s9[aH+0X1]=jH;(s9)[aH]=jH[qU[5]];do qU=Re[P9];end;P9=P9+0X001;do s9[0x03]=qU[0X002];end;do P9=P9+0x0001;end;(s9)[4]=true;P9=P9+0x01;aH=0X1;o9=aH+0X004-0X1;(s9)[aH]=s9[aH](I(s9,aH+1,o9));o9=aH;P9=P9+0X00001;do P9=P9+0X00001;end;qU=Re[P9];do P9=P9+1;end;s9[1]=s9[1][qU[5]];qU=Re[P9];P9=P9+0X01;s9[1]=s9[0X001][qU[0X5]];P9=P9+0X1;aH=0;(s9[aH])(s9[aH+0X1]);o9=aH-0X1;qU=Re[P9];P9=P9+0X1;s9[0]=f9[qU[2]];P9=P9+1;P9=P9+0X01;qU=Re[P9];P9=P9+1;s9[1]=qU[2];P9=P9+1;aH=0;s9[aH](s9[aH+0x1]);o9=aH-0X1;qU=Re[P9];P9=P9+1;s9[0X0]=f9[qU[0X2]];P9=P9+0X00001;P9=P9+1;qU=Re[P9];P9=P9+0X1;(s9)[0x00000]=s9[0][qU[0X0005]];do qU=Re[P9];end;P9=P9+0x0001;if not(not s9[0])then else P9=qU[6];end;end;else if not s9[qU[7]]then P9=qU[6];end;end;else do if vU>=16 then if vU~=17 then local jT,JT=je[qU[6]],nil;local wT=jT[0X8];local rT=(#wT);if not(rT>0X0)then else JT={};for fa=0X1,rT do local Ua=(wT[fa]);if Ua[1]~=0x00000 then(JT)[fa-0X1]=ve[Ua[2]];else(JT)[fa-0X0001]={s9,Ua[0X002]};end;end;A(De,JT);end;do(s9)[qU[0X7]]=NC(JT,f9,jT);end;else do(s9)[qU[0X00007]]=p9[qU[6]];end;end;else if s9[qU[0x7]]then do P9=qU[0X00006];end;end;end;end;end;end;else if vU>=6 then if vU>=0X0009 then if not(vU>=10)then(s9)[0]=f9[qU[2]];qU=Re[P9];P9=P9+1;s9[0x0]=s9[0X0][qU[0x5]];P9=P9+0X00001;local qV=(0X0);P9=P9+0x0001;do qU=Re[P9];end;do P9=P9+0X1;end;(s9)[1]=qU[0x2];P9=P9+1;s9[qV]=s9[qV](s9[qV+1]);o9=qV;qU=Re[P9];P9=P9+1;if not s9[0]then do P9=qU[6];end;end;else do if vU==11 then local qY=qU[7];do for XL=qY,qY+(qU[6]-0X01)do(s9)[XL]=v9[he+(XL-qY)+1];end;end;else(s9)[qU[0X07]]=f9[qU[2]];end;end;end;else if vU>=0X7 then if vU~=8 then do s9[0x0]=f9[qU[2]];end;do qU=Re[P9];end;do P9=P9+1;end;s9[0X0000]=s9[0X000][qU[0X05]];qU=Re[P9];local HQ=(0);P9=P9+0x1;local gQ=(s9[0X0]);(s9)[HQ+1]=gQ;(s9)[HQ]=gQ[qU[5]];qU=Re[P9];do P9=P9+0X1;end;(s9)[0X2]=qU[0X2];P9=P9+0X1;HQ=0X0000;do s9[HQ]=s9[HQ](s9[HQ+1],s9[HQ+0X2]);end;o9=HQ;P9=P9+0x1;P9=P9+1;do qU=Re[P9];end;P9=P9+1;do if not(not s9[0X0])then else P9=qU[6];end;end;else if not(s9[qU[6]]<s9[qU[1]])then else P9=qU[0x7];end;end;else end;end;else do if vU<0X3 then if not(vU>=1)then do P9=qU[0X6];end;else if vU~=0X002 then do(s9)[0x0]=f9[qU[2]];end;qU=Re[P9];local ot=(0);P9=P9+0X1;do(s9)[1]=qU[2];end;P9=P9+0X1;s9[ot]=s9[ot](s9[ot+0X01]);do o9=ot;end;qU=Re[P9];P9=P9+1;if not s9[0X000]then P9=qU[6];end;else s9[0]=f9[qU[2]];P9=P9+1;do P9=P9+0X01;end;qU=Re[P9];do P9=P9+1;end;do s9[0X0]=s9[0X000][qU[0X5]];end;P9=P9+1;local EZ=(0X0);do P9=P9+1;end;qU=Re[P9];do P9=P9+0X00001;end;local nZ=(s9[0x0000]);do s9[EZ+1]=nZ;end;s9[EZ]=nZ[qU[0X00005]];qU=Re[P9];P9=P9+1;(s9)[0X2]=qU[0X02];P9=P9+1;EZ=0;s9[EZ]=s9[EZ](s9[EZ+0X1],s9[EZ+0X00002]);o9=EZ;P9=P9+1;P9=P9+1;do qU=Re[P9];end;P9=P9+1;do if not(not s9[0])then else P9=qU[6];end;end;end;end;else if vU<0X4 then do repeat local gT,WT=De,(s9);if not(#gT>0)then else local Q5={};for y4,f4 in D,gT do for nz,fz in D,f4 do do if fz[1]==WT and fz[2]>=0 then local uH=fz[0X02];do if not(not Q5[uH])then else Q5[uH]={WT[uH]};end;end;(fz)[1]=Q5[uH];fz[0x00002]=0X001;end;end;end;end;end;until true;end;local Me=(qU[0x7]);do return false,Me,Me+qU[6]-0X002;end;else if vU==5 then s9[0x0]=f9[qU[2]];qU=Re[P9];P9=P9+0X1;do(s9)[0X0]=s9[0][qU[0X005]];end;P9=P9+0X1;P9=P9+1;qU=Re[P9];P9=P9+0x1;if not s9[0]then P9=qU[6];end;else do repeat local Mz,bz=De,s9;if not(#Mz>0X0)then else local R_=({});for Q8,c8 in D,Mz do for L_,X_ in D,c8 do do if not(X_[0X001]==bz and X_[0x2]>=0)then else local fS=X_[0X00002];if not R_[fS]then(R_)[fS]={bz[fS]};end;X_[0X1]=R_[fS];X_[2]=1;end;end;end;end;end;until true;end;do return;end;end;end;end;end;end;end;end;end);do if E9 then do if I9 then if j9~=1 then return s9[O9](I(s9,O9+1,o9));else return s9[O9]();end;elseif O9 then return I(s9,O9,j9);end;end;else if f(I9)=='s\116r\105\110\g'then if e(I9,'at\116\e\m\p\116\032\116o\032\y\i\e\ld\ a\cr\o\s\s\ \109\e\116\097\m\101th\od\/\C\%\045c\097\ll b\oun\d\097\114\y')then return coroutine.yield();end;if e(I9,"^.-:%d+: ")then(b)("\076\117\114\097\112\h\ Scri\112\116\:"..(Ae[P9-1]or"(internal)")..':\ '..r(I9),0);else(b)(I9,0X00000);end;else(b)(I9,0X00000);end;end;end;end;end;end;else if me~=0X00005F then do fe=function(...)local qk=1;local mk,Sk={},(0X00000);local nk=({[0X2]=mk,[1]=ce});local ok=(m());local Kk=((ok==F and Le or ok));local Zk,ek=rC(...);do Zk=Zk-1;end;for o9=0,Zk do do if he>o9 then mk[o9]=ek[o9+1];else break;end;end;end;if not ge then ek=nil;elseif xe then(mk)[he]={n=Zk>=he and Zk-he+0X0001 or 0X000,I(ek,he+1,Zk+0x1)};end;if Kk==ok then else i(fe,Kk);end;local Fk,pk,sk,ik=j(function()while true do local lk=(Re[qk]);local Rk=lk[0X0004];qk=qk+0X1;do if not(Rk>=9)then if not(Rk<0x4)then if not(Rk>=6)then if Rk~=0X5 then repeat local wa,fa=De,mk;if not(#wa>0)then else local TT={};for a3,f3 in D,wa do do for Hp,Tp in D,f3 do do if Tp[1]==fa and Tp[2]>=0 then local ke=Tp[0x02];if not(not TT[ke])then else do(TT)[ke]={fa[ke]};end;end;(Tp)[0X1]=TT[ke];Tp[2]=1;end;end;end;end;end;end;until true;return;else(mk)[lk[7]]=T(mk[lk[0X6]]);end;else if Rk<0X7 then mk[lk[0X7]]=mk[lk[0X006]]-mk[lk[1]];else if Rk==0X08 then local DA=lk[0X7];local tA,WA=mk[DA]();if tA then qk=lk[6];(mk)[DA+3]=WA;end;else do mk[lk[7]]=lk[2];end;end;end;end;else do if Rk>=2 then do if Rk==3 then do mk[lk[0X07]]=nk[lk[6]];end;else if not(not(mk[lk[6]]<mk[lk[1]]))then else do qk=lk[0X7];end;end;end;end;else if Rk~=0X00001 then mk[lk[7]]=-mk[lk[6]];else end;end;end;end;else do if Rk<0Xd then if not(Rk<11)then do if Rk==0X00C then local Mo=lk[0x00007];local to=lk[6];Sk=Mo+to-0X001;repeat local c_,H_=De,(mk);if#c_>0 then local Qc={};for B3,U3 in D,c_ do do for DR,bR in D,U3 do do if bR[1]==H_ and bR[2]>=0X0 then local NP=(bR[0X2]);do if not(not Qc[NP])then else(Qc)[NP]={H_[NP]};end;end;(bR)[0x1]=Qc[NP];bR[0X2]=1;end;end;end;end;end;end;until true;return true,Mo,to;else do mk[lk[0X7]]=Kk[lk[2]];end;end;end;else if Rk~=0X0000A then(mk)[lk[0X0007]]={I({},0X1,lk[0X006])};else local XP=(je[lk[6]]);local fP=XP[8];local aP=nil;local AP=(#fP);do if not(AP>0)then else aP={};for rS=0x1,AP do local aS=fP[rS];if aS[0x1]==0X0 then do(aP)[rS-1]={mk,aS[2]};end;else(aP)[rS-1]=ve[aS[2]];end;end;A(De,aP);end;end;mk[lk[7]]=NC(aP,Kk,XP);end;end;else do if not(Rk<15)then if not(Rk>=0X10)then if mk[lk[0x6]]<mk[lk[0X1]]then do qk=lk[7];end;end;else if Rk==17 then local MK=mk[lk[0X6]]/mk[lk[0X00001]];mk[lk[7]]=MK-MK%0X1;else local RH=(lk[0X7]);local qH=(g(function(...)d();for Bn,an,Qn,Fn,xn,In,cn,mn,tn,jn in...do(d)(true,{Bn,an,Qn,Fn,xn,In,cn,mn,tn,jn});end;end));(qH)(mk[RH],mk[RH+0x1],mk[RH+0X0002]);Sk=RH;mk[RH]=qH;do qk=lk[6];end;end;end;else do if Rk==14 then(mk)[0X0]=Kk[lk[2]];qk=qk+0X1;local hA=0;qk=qk+0x001;qk=qk+1;(mk)[0]=not mk[0X00000];do qk=qk+1;end;repeat local wb,Wb=De,mk;if#wb>0 then local P9={};for Lc,Zc in D,wb do for hl,Ll in D,Zc do if not(Ll[1]==Wb and Ll[0x2]>=0X0000)then else local di=Ll[0X2];if not(not P9[di])then else P9[di]={Wb[di]};end;(Ll)[1]=P9[di];(Ll)[0x00002]=0X0001;end;end;end;end;until true;return false,hA,hA;else qk=lk[6];end;end;end;end;end;end;end;end;end;end);if Fk then if pk then if ik==1 then return mk[sk]();else return mk[sk](I(mk,sk+0X001,Sk));end;elseif not(sk)then else return I(mk,sk,ik);end;else if f(pk)~='\str\105\110\g'then b(pk,0X0);else do if e(pk,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if e(pk,'^\046\-:\037d\+:\ ')then b("Luraph Script:"..(Ae[qk-1]or"(internal)").."\058\ "..r(pk),0X0000);else b(pk,0);end;end;end;end;end;else fe=function(...)local ZE,HE=1,({});local IE=m();local XE=(0);local sE,zE=rC(...);local eE,YE=(IE==F and Le or IE),({[0X2]=HE,[1]=ce});sE=sE-0X0001;for Fw=0X0000,sE do if not(he>Fw)then break;else HE[Fw]=zE[Fw+1];end;end;if not ge then zE=nil;elseif xe then do(HE)[he]={n=sE>=he and sE-he+1 or 0,I(zE,he+1,sE+1)};end;end;do if eE==IE then else i(fe,eE);end;end;local AE,QE,PE,GE=j(function()while true do local cZ=Re[ZE];local YZ=(cZ[0X4]);ZE=ZE+1;if not(YZ<0X1c)then if not(YZ<42)then do if not(YZ<0X0031)then if YZ>=0X35 then if not(YZ<0X37)then if YZ~=56 then local d0=(je[cZ[0X6]]);local O0=d0[0x8];local h0=(nil);local T0=(#O0);do if not(T0>0)then else h0={};for tf=0x1,T0 do local nf=(O0[tf]);if nf[0X1]==0 then do h0[tf-0X01]={HE,nf[2]};end;else(h0)[tf-1]=ve[nf[0X2]];end;end;A(De,h0);end;end;do HE[cZ[0X0007]]=NC(h0,eE,d0);end;else local MP=ve[0X0];HE[0X00]=MP[0X1][MP[2]];do cZ=Re[ZE];end;local EP=(0);ZE=ZE+1;local lP=(HE[0x000]);do HE[EP+0x0001]=lP;end;(HE)[EP]=lP[cZ[5]];ZE=ZE+1;EP=0;(HE[EP])(HE[EP+1]);XE=EP-1;ZE=ZE+0X1;ZE=ZE+1;ZE=ZE+1;repeat local EY,XY=De,(HE);if#EY>0X0 then local JW=({});for nh,Fh in D,EY do for Gk,qk in D,Fh do do if qk[1]==XY and qk[0X00002]>=0X0000 then local Z3=qk[0X02];do if not JW[Z3]then(JW)[Z3]={XY[Z3]};end;end;(qk)[0X0001]=JW[Z3];(qk)[2]=0X00001;end;end;end;end;end;until true;return;end;else do if YZ==0x000036 then(HE)[1]=true;local jz=(1);cZ=Re[ZE];ZE=ZE+0X1;eE[cZ[2]]=HE[0X1];ZE=ZE+0x1;local vz=(ve[0]);(HE)[1]=vz[0X1][vz[2]];cZ=Re[ZE];do ZE=ZE+1;end;local az=(HE[0X1]);HE[jz+0X01]=az;HE[jz]=az[cZ[5]];do ZE=ZE+1;end;jz=1;(HE[jz])(HE[jz+1]);XE=jz-1;do ZE=ZE+0X1;end;ZE=ZE+0X1;cZ=Re[ZE];ZE=ZE+0X1;if HE[0]then ZE=cZ[6];end;else local Bv,Pv=cZ[0X7],HE[cZ[6]];do HE[Bv+0X001]=Pv;end;HE[Bv]=Pv[cZ[0x5]];end;end;end;else if YZ<51 then if YZ==0X32 then HE[cZ[7]]=HE[cZ[0X6]]>HE[cZ[0x1]];else HE[0X1]=cZ[2];cZ=Re[ZE];ZE=ZE+0x1;do HE[2]=cZ[0X2];end;local GL=0X1;cZ=Re[ZE];ZE=ZE+0X1;(HE)[3]=cZ[2];do cZ=Re[ZE];end;ZE=ZE+1;local vL,eL=HE[GL],(HE[GL+0X1]);local BL=HE[GL+2];(HE)[GL]=g(function()for vT=vL,eL,BL do(d)(true,vT);end;end);ZE=cZ[0X006];end;else if YZ==52 then(HE)[1]=eE[cZ[2]];do ZE=ZE+0x0001;end;ZE=ZE+0X1;ZE=ZE+1;XE=0x1;do HE[XE]=HE[XE]();end;do ZE=ZE+1;end;ZE=ZE+1;cZ=Re[ZE];do ZE=ZE+1;end;do HE[2]=eE[cZ[0X00002]];end;ZE=ZE+1;HE[0X1]=HE[1]-HE[2];cZ=Re[ZE];ZE=ZE+1;do if not(not(cZ[2]<HE[0X0001]))then else ZE=cZ[0X7];end;end;else local Av=cZ[7];do(HE)[Av]=HE[Av](HE[Av+1]);end;XE=Av;end;end;end;else if YZ>=45 then if not(YZ>=0X00002f)then if YZ~=46 then do HE[5]=eE[cZ[2]];end;cZ=Re[ZE];local it=(0X0005);ZE=ZE+1;do(HE)[0X006]=cZ[2];end;ZE=ZE+1;(HE[it])(HE[it+1]);XE=it-0X1;ZE=ZE+1;ZE=ZE+0X1;cZ=Re[ZE];ZE=ZE+0X1;HE[5]=eE[cZ[2]];cZ=Re[ZE];ZE=ZE+1;local gt=(HE[5]);it=0X5;HE[it+1]=gt;HE[it]=gt[cZ[0X05]];cZ=Re[ZE];ZE=ZE+0X1;do HE[0X7]=cZ[0X2];end;ZE=ZE+0x1;it=0X05;HE[it]=HE[it](HE[it+1],HE[it+2]);XE=it;ZE=ZE+1;(HE)[0x00000]=HE[0X0005];do cZ=Re[ZE];end;ZE=ZE+0X1;if not(HE[0X0])then else ZE=cZ[6];end;else HE[0X01]=eE[cZ[0x2]];ZE=ZE+1;ZE=ZE+1;cZ=Re[ZE];ZE=ZE+1;do HE[2]=cZ[2];end;do cZ=Re[ZE];end;ZE=ZE+0X01;HE[3]=eE[cZ[0x2]];ZE=ZE+0X1;ZE=ZE+1;cZ=Re[ZE];ZE=ZE+0X1;HE[3]=HE[0X0003][cZ[5]];local OC=0X2;cZ=Re[ZE];local kC=0X3;do ZE=ZE+1;end;local LC=(HE[0X3]);(HE)[kC+1]=LC;do HE[kC]=LC[cZ[5]];end;ZE=ZE+0X00001;kC=0X003;local ZC=0;if OC==0 then else XE=kC+OC-1;end;local KC,TC=nil,(nil);if OC~=1 then KC,TC=rC(HE[kC](I(HE,kC+0x001,XE)));else do KC,TC=rC(HE[kC]());end;end;if ZC==1 then XE=kC-0X1;else if ZC~=0 then do KC=kC+ZC-2;end;do XE=KC+1;end;else KC=KC+kC-0X001;do XE=KC;end;end;local Hc=0;for Qu=kC,KC do Hc=Hc+0X1;(HE)[Qu]=TC[Hc];end;end;ZE=ZE+1;do ZE=ZE+1;end;do ZE=ZE+0X1;end;kC=1;do(HE)[kC]=HE[kC](I(HE,kC+1,XE));end;XE=kC;ZE=ZE+0X001;do ZE=ZE+1;end;do cZ=Re[ZE];end;ZE=ZE+1;if HE[1]then ZE=cZ[6];end;end;else if YZ~=48 then(HE)[0x0000]=eE[cZ[2]];ZE=ZE+1;ZE=ZE+1;ZE=ZE+0x1;do XE=0;end;do HE[XE]=HE[XE]();end;cZ=Re[ZE];ZE=ZE+1;eE[cZ[0X00002]]=HE[0X0];do cZ=Re[ZE];end;ZE=ZE+0X00001;(HE)[0]=eE[cZ[2]];ZE=ZE+1;do XE=0x0000;end;do(HE)[XE]=HE[XE]();end;cZ=Re[ZE];ZE=ZE+0X001;(HE)[0X1]=eE[cZ[2]];ZE=ZE+1;ZE=ZE+0x1;cZ=Re[ZE];ZE=ZE+1;HE[2]=eE[cZ[0X00002]];do ZE=ZE+0X001;end;do ZE=ZE+0X1;end;cZ=Re[ZE];ZE=ZE+1;(HE)[0X2]=HE[0X00002][cZ[5]];cZ=Re[ZE];do ZE=ZE+0X00001;end;if HE[2]then ZE=cZ[0X6];end;else(HE)[0X001]=eE[cZ[0X00002]];ZE=ZE+0x00001;ZE=ZE+0X1;cZ=Re[ZE];ZE=ZE+1;(HE)[2]=cZ[2];cZ=Re[ZE];ZE=ZE+1;(HE)[0X00003]=eE[cZ[2]];do cZ=Re[ZE];end;ZE=ZE+1;(HE)[0X3]=HE[3][cZ[5]];cZ=Re[ZE];local Oh=0X3;local Nh=0X2;ZE=ZE+1;local th=HE[3];HE[Oh+1]=th;(HE)[Oh]=th[cZ[0X00005]];do ZE=ZE+0X1;end;do Oh=3;end;local Kh=(0);if Nh~=0X000 then XE=Oh+Nh-0x1;end;local Hh,dh=nil,(nil);do if Nh~=0X1 then Hh,dh=rC(HE[Oh](I(HE,Oh+1,XE)));else Hh,dh=rC(HE[Oh]());end;end;do if Kh~=0x001 then if Kh~=0X0 then Hh=Oh+Kh-2;XE=Hh+1;else Hh=Hh+Oh-0x01;do XE=Hh;end;end;local Cp=(0x0);do for Mr=Oh,Hh do Cp=Cp+0x0001;(HE)[Mr]=dh[Cp];end;end;else XE=Oh-1;end;end;ZE=ZE+1;ZE=ZE+0X00001;ZE=ZE+0X1;Oh=1;HE[Oh]=HE[Oh](I(HE,Oh+0X1,XE));XE=Oh;cZ=Re[ZE];do ZE=ZE+0X001;end;ZE=cZ[0X6];end;end;else do if YZ>=43 then if YZ==0X2c then do HE[0X000]=eE[cZ[2]];end;do cZ=Re[ZE];end;do ZE=ZE+1;end;(HE)[0X0]=HE[0x0][cZ[0X5]];cZ=Re[ZE];ZE=ZE+0X1;if HE[0X0]then ZE=cZ[0x6];end;else(HE)[0X1]=eE[cZ[2]];ZE=ZE+0X01;ZE=ZE+1;ZE=ZE+0X1;do XE=1;end;do HE[XE]=HE[XE]();end;do ZE=ZE+0X0001;end;ZE=ZE+1;do cZ=Re[ZE];end;do ZE=ZE+0x1;end;if not(HE[1])then else do ZE=cZ[6];end;end;end;else do HE[cZ[0x7]]=HE[cZ[0X6]]<HE[cZ[1]];end;end;end;end;end;end;else if YZ>=0X00023 then if YZ<0X026 then if not(YZ>=0X00024)then else if YZ==37 then if not(HE[cZ[7]])then else ZE=cZ[6];end;else(HE)[cZ[7]]={I({},1,cZ[6])};end;end;else if YZ>=40 then if YZ==0X29 then if not(not HE[cZ[7]])then else ZE=cZ[6];end;else if not(HE[cZ[0X0006]]<=HE[cZ[1]])then ZE=cZ[7];end;end;else do if YZ~=39 then do(HE)[0X5]=eE[cZ[2]];end;ZE=ZE+1;ZE=ZE+0x001;cZ=Re[ZE];ZE=ZE+1;HE[0X00006]=cZ[0X0002];ZE=ZE+1;local mg=0x5;(HE[mg])(HE[mg+1]);XE=mg-1;cZ=Re[ZE];do ZE=ZE+0X0001;end;ZE=cZ[0X6];else local ga=(ve[0X001]);(HE)[2]=ga[0x001][ga[0X2]];do ZE=ZE+0X1;end;ZE=ZE+1;cZ=Re[ZE];local Ya=2;ZE=ZE+1;do HE[2]=HE[2][cZ[5]];end;ZE=ZE+1;do ZE=ZE+0X1;end;ZE=ZE+1;do(HE)[3]=HE[1];end;ZE=ZE+1;do(HE)[Ya]=HE[Ya](HE[Ya+0X00001]);end;XE=Ya;cZ=Re[ZE];ZE=ZE+1;if not(not HE[0X002])then else ZE=cZ[6];end;end;end;end;end;else if YZ>=0X1F then if not(YZ<0X21)then if YZ~=0x022 then HE[0]=eE[cZ[0X2]];ZE=ZE+1;local zU=(0X0000);ZE=ZE+1;do cZ=Re[ZE];end;ZE=ZE+0X1;do HE[0x00001]=cZ[0X02];end;ZE=ZE+1;do(HE)[zU]=HE[zU](HE[zU+0x1]);end;XE=zU;do cZ=Re[ZE];end;ZE=ZE+1;do if not(not HE[0X000])then else do ZE=cZ[0X00006];end;end;end;else HE[0X1]=eE[cZ[2]];local nI=1;cZ=Re[ZE];ZE=ZE+0X1;HE[0X0002]=cZ[2];ZE=ZE+1;HE[nI](HE[nI+0X0001]);XE=nI-0x001;cZ=Re[ZE];do ZE=ZE+0x1;end;ZE=cZ[6];end;else if YZ~=0x0020 then HE[0]=eE[cZ[2]];ZE=ZE+1;do ZE=ZE+0x0001;end;local GS=0;cZ=Re[ZE];ZE=ZE+0X1;local MS=(HE[0]);(HE)[GS+0X0001]=MS;(HE)[GS]=MS[cZ[0X5]];cZ=Re[ZE];ZE=ZE+1;(HE)[0X2]=cZ[2];ZE=ZE+1;GS=0x0;(HE)[GS]=HE[GS](HE[GS+1],HE[GS+0x2]);XE=GS;do ZE=ZE+0X0001;end;ZE=ZE+0X1;cZ=Re[ZE];ZE=ZE+0X1;if not(HE[0])then else ZE=cZ[6];end;else do HE[0x00002]=eE[cZ[2]];end;ZE=ZE+0X1;ZE=ZE+0x1;ZE=ZE+1;XE=2;(HE)[XE]=HE[XE]();ZE=ZE+1;ZE=ZE+1;do cZ=Re[ZE];end;ZE=ZE+0x1;do if HE[2]then ZE=cZ[0X6];end;end;end;end;else if YZ>=0x1d then do if YZ~=30 then(HE)[cZ[7]]=-HE[cZ[0X006]];else local uZ=(ve[0x1]);do(HE)[0X002]=uZ[1][uZ[2]];end;do ZE=ZE+0X01;end;ZE=ZE+0X1;cZ=Re[ZE];ZE=ZE+1;(HE)[0X00002]=HE[0X2][cZ[0X5]];ZE=ZE+0X1;local MZ=nil;do HE[0X3]=HE[1];end;ZE=ZE+1;uZ=ve[0X0];HE[0X4]=uZ[0X00001][uZ[0X2]];ZE=ZE+1;local lZ=0x0002;do(HE)[5]=nil;end;do ZE=ZE+1;end;(HE)[0X6]={};cZ=Re[ZE];ZE=ZE+0X01;local jZ=(je[cZ[6]]);local fZ=jZ[0X8];local AZ=#fZ;if not(AZ>0)then else MZ={};do for wY=0X1,AZ do local zY=fZ[wY];if zY[0x0001]==0 then do MZ[wY-0x0001]={HE,zY[2]};end;else(MZ)[wY-0x1]=ve[zY[2]];end;end;end;(A)(De,MZ);end;do HE[7]=NC(MZ,eE,jZ);end;cZ=Re[ZE];ZE=ZE+1;(HE[0X00006])[cZ[0X2]]=HE[0x7];ZE=ZE+0X1;XE=lZ+0X5-0X1;HE[lZ](I(HE,lZ+1,XE));XE=lZ-1;ZE=ZE+0x1;ZE=ZE+0x00001;cZ=Re[ZE];ZE=ZE+1;ZE=cZ[0X6];end;end;else do HE[0X6]=HE[5][cZ[0X00005]];end;do ZE=ZE+0X1;end;do ZE=ZE+1;end;ZE=ZE+1;XE=6;(HE[XE])();XE=XE-0X1;ZE=ZE+0X1;do ZE=ZE+0X01;end;cZ=Re[ZE];ZE=ZE+0X001;do ZE=cZ[0X6];end;end;end;end;end;else do if not(YZ>=14)then do if YZ<7 then if not(YZ>=0X3)then if YZ>=1 then if YZ==0X2 then if not(HE[cZ[6]]<=HE[cZ[1]])then else ZE=cZ[7];end;else(HE)[0X5]=eE[cZ[2]];ZE=ZE+0x1;ZE=ZE+0X0001;cZ=Re[ZE];ZE=ZE+0X1;do(HE)[0X005]=HE[0X0005][cZ[5]];end;ZE=ZE+1;ZE=ZE+1;do cZ=Re[ZE];end;ZE=ZE+0X0001;if not(HE[0X0005])then else ZE=cZ[0X6];end;end;else repeat local Uf,cf=De,HE;do if not(#Uf>0X00000)then else local xa={};for CH,vH in D,Uf do do for l_,g_ in D,vH do do if g_[1]==cf and g_[2]>=0 then local Dq=g_[0X2];do if not xa[Dq]then(xa)[Dq]={cf[Dq]};end;end;do(g_)[0x1]=xa[Dq];end;g_[2]=0X1;end;end;end;end;end;end;end;until true;return;end;else if not(YZ<5)then if YZ==0x006 then(HE)[0x1]=eE[cZ[2]];ZE=ZE+0X001;do XE=1;end;do(HE)[XE]=HE[XE]();end;do cZ=Re[ZE];end;ZE=ZE+0X1;if not(HE[0x1])then else ZE=cZ[6];end;else HE[0X1]=eE[cZ[0X2]];do ZE=ZE+1;end;do ZE=ZE+1;end;ZE=ZE+1;do HE[2]={I({},1,0X04)};end;cZ=Re[ZE];ZE=ZE+1;HE[3]=cZ[0x2];cZ=Re[ZE];ZE=ZE+0X001;local JI=2;(HE)[4]=cZ[2];cZ=Re[ZE];ZE=ZE+0X1;(HE)[5]=cZ[2];cZ=Re[ZE];do ZE=ZE+0X1;end;(HE)[6]=cZ[2];local wI=(HE[JI]);ZE=ZE+0X001;local YI=((0X1-0X001)*50);for pr=1,4 do wI[YI+pr]=HE[JI+pr];end;cZ=Re[ZE];local FI=(je[cZ[6]]);ZE=ZE+0X1;local rI=(3);local EI,VI=FI[0x8],nil;local nI=#EI;if not(nI>0X0)then else VI={};for ei=1,nI do local Pi=(EI[ei]);do if Pi[0X0001]==0 then(VI)[ei-0X001]={HE,Pi[0X0002]};else VI[ei-0X1]=ve[Pi[2]];end;end;end;A(De,VI);end;(HE)[3]=NC(VI,eE,FI);ZE=ZE+1;JI=0X001;local sI=(3);do if rI==0X00000 then else XE=JI+rI-1;end;end;local zI,mI=nil,nil;if rI==0X1 then do zI,mI=rC(HE[JI]());end;else do zI,mI=rC(HE[JI](I(HE,JI+1,XE)));end;end;if sI==0X1 then XE=JI-0x1;else if sI==0 then zI=zI+JI-0X001;XE=zI;else do zI=JI+sI-0x2;end;XE=zI+1;end;local af=0X0;for Vw=JI,zI do af=af+0X01;(HE)[Vw]=mI[af];end;end;do ZE=ZE+1;end;ZE=ZE+1;local yI=(ve[0X000]);ZE=ZE+1;do(HE)[0X3]=yI[1][yI[0X2]];end;cZ=Re[ZE];ZE=ZE+1;JI=0X03;local RI=HE[0X3];HE[JI+0X0001]=RI;do HE[JI]=RI[cZ[5]];end;ZE=ZE+1;JI=0X3;(HE[JI])(HE[JI+0x1]);XE=JI-1;do ZE=ZE+1;end;ZE=ZE+0X1;cZ=Re[ZE];ZE=ZE+1;(HE)[3]=eE[cZ[0X2]];do ZE=ZE+0X01;end;do ZE=ZE+0X1;end;do ZE=ZE+1;end;do(HE)[0x04]=HE[1];end;ZE=ZE+0X1;JI=0x3;rI=0X00002;sI=0X00004;if rI==0 then else do XE=JI+rI-0X01;end;end;zI,mI=nil;if rI==0X01 then zI,mI=rC(HE[JI]());else zI,mI=rC(HE[JI](I(HE,JI+1,XE)));end;if sI==1 then XE=JI-0x0001;else if sI~=0x00000 then zI=JI+sI-2;XE=zI+0x1;else zI=zI+JI-1;do XE=zI;end;end;local OC=0X0;for zc=JI,zI do OC=OC+0X1;(HE)[zc]=mI[OC];end;end;cZ=Re[ZE];do ZE=ZE+0X1;end;JI=0x03;local OI=(g(function(...)d();do for e0,m0 in...do d(true,e0,m0);end;end;end));OI(HE[JI],HE[JI+1],HE[JI+2]);XE=JI;do(HE)[JI]=OI;end;ZE=cZ[0X6];end;else if YZ==4 then for g3=cZ[7],cZ[0X6]do HE[g3]=nil;end;else(HE)[cZ[0X7]]=eE[cZ[2]];end;end;end;else if not(YZ<10)then if not(YZ<12)then if YZ~=13 then local d3=ve[0];(HE)[0X00002]=d3[0X1][d3[2]];do ZE=ZE+0x1;end;ZE=ZE+1;cZ=Re[ZE];ZE=ZE+0X1;local V3,u3=2,HE[2];do HE[V3+1]=u3;end;do(HE)[V3]=u3[cZ[0X05]];end;ZE=ZE+1;V3=2;HE[V3]=HE[V3](HE[V3+0X1]);XE=V3;cZ=Re[ZE];ZE=ZE+1;do if not(not HE[2])then else ZE=cZ[6];end;end;else do(HE)[0X2]=eE[cZ[2]];end;cZ=Re[ZE];do ZE=ZE+0x0001;end;HE[2]=HE[0X2][cZ[0X5]];do ZE=ZE+0X1;end;ZE=ZE+1;cZ=Re[ZE];ZE=ZE+0X0001;if not(HE[0X00002])then else ZE=cZ[0X06];end;end;else if YZ==11 then do(HE)[0X02]=eE[cZ[0X0002]];end;cZ=Re[ZE];do ZE=ZE+1;end;HE[3]=eE[cZ[0x00002]];ZE=ZE+1;ZE=ZE+0X1;do cZ=Re[ZE];end;ZE=ZE+0X01;(HE)[3]=HE[3][cZ[0X0005]];ZE=ZE+1;ZE=ZE+1;do cZ=Re[ZE];end;local KV=0x0002;ZE=ZE+0X1;(HE)[0X3]=HE[0X3][cZ[5]];ZE=ZE+1;ZE=ZE+0X1;cZ=Re[ZE];ZE=ZE+1;(HE)[4]=eE[cZ[0x2]];do cZ=Re[ZE];end;ZE=ZE+0X1;HE[0X4]=HE[0X0004][cZ[0X5]];cZ=Re[ZE];ZE=ZE+0X1;HE[0x4]=HE[0x4][cZ[5]];cZ=Re[ZE];ZE=ZE+1;do(HE)[0X0004]=HE[4][cZ[5]];end;ZE=ZE+0x1;do ZE=ZE+1;end;cZ=Re[ZE];ZE=ZE+0X1;do HE[4]=HE[0X4][cZ[5]];end;do cZ=Re[ZE];end;ZE=ZE+0X1;HE[0X00005]=cZ[2];ZE=ZE+1;XE=KV+4-0X1;HE[KV](I(HE,KV+1,XE));do XE=KV-0x001;end;do cZ=Re[ZE];end;do ZE=ZE+0X1;end;(HE)[0x2]=eE[cZ[2]];do ZE=ZE+1;end;ZE=ZE+1;cZ=Re[ZE];ZE=ZE+0X1;HE[0x3]=eE[cZ[2]];ZE=ZE+1;ZE=ZE+0X1;cZ=Re[ZE];ZE=ZE+0X1;HE[0X0003]=HE[0X3][cZ[5]];cZ=Re[ZE];do ZE=ZE+1;end;(HE)[3]=HE[3][cZ[5]];do ZE=ZE+1;end;do ZE=ZE+1;end;do cZ=Re[ZE];end;ZE=ZE+0x001;do(HE)[0x00004]=eE[cZ[2]];end;ZE=ZE+0X1;ZE=ZE+0X1;cZ=Re[ZE];ZE=ZE+0X1;do HE[0x004]=HE[0X4][cZ[0X5]];end;ZE=ZE+0X1;ZE=ZE+1;cZ=Re[ZE];do ZE=ZE+0X01;end;HE[4]=HE[4][cZ[0X005]];cZ=Re[ZE];do ZE=ZE+1;end;HE[4]=HE[0X004][cZ[0X5]];cZ=Re[ZE];ZE=ZE+0x1;do HE[0X00004]=HE[4][cZ[0X05]];end;ZE=ZE+0x001;ZE=ZE+1;cZ=Re[ZE];ZE=ZE+1;(HE)[0X0005]=cZ[2];ZE=ZE+1;KV=2;XE=KV+0X4-0X1;(HE[KV])(I(HE,KV+1,XE));XE=KV-1;do cZ=Re[ZE];end;ZE=ZE+0X01;ZE=cZ[0X6];else HE[2]=false;cZ=Re[ZE];ZE=ZE+1;eE[cZ[0X2]]=HE[2];cZ=Re[ZE];ZE=ZE+1;ZE=cZ[6];end;end;else do if YZ<8 then local W4=cZ[0X7];local V4,D4,c4=HE[W4],HE[W4+0X1],(HE[W4+0x2]);(HE)[W4]=g(function()do for Y7=V4,D4,c4 do(d)(true,Y7);end;end;end);ZE=cZ[6];else if YZ~=0X9 then ZE=cZ[6];else local hP=cZ[0x007];local EP,nP,VP=HE[hP]();if EP then HE[hP+1]=nP;HE[hP+0X2]=VP;do ZE=cZ[0X006];end;end;end;end;end;end;end;end;else do if not(YZ>=21)then if not(YZ>=0X11)then if YZ<15 then HE[0X02]=eE[cZ[0X2]];cZ=Re[ZE];do ZE=ZE+1;end;do(HE)[2]=HE[0X00002][cZ[5]];end;cZ=Re[ZE];ZE=ZE+0x1;do if not(not HE[0X2])then else ZE=cZ[0x06];end;end;else if YZ==16 then local xN=ve[1];(HE)[3]=xN[0x1][xN[2]];ZE=ZE+0X1;ZE=ZE+1;cZ=Re[ZE];ZE=ZE+0X1;HE[3]=HE[0X003][cZ[0X5]];do ZE=ZE+0x001;end;(HE)[4]=HE[2];ZE=ZE+0x1;xN=ve[0X0];(HE)[5]=xN[0X1][xN[2]];ZE=ZE+0X01;local rN=(3);ZE=ZE+0X1;cZ=Re[ZE];ZE=ZE+0X00001;local iN=je[cZ[0x00006]];local KN=iN[8];local XN,tN=#KN,nil;if not(XN>0X0)then else tN={};for tO=0X1,XN do local qO=(KN[tO]);if qO[0X1]==0 then(tN)[tO-1]={HE,qO[0X2]};else(tN)[tO-0X1]=ve[qO[0X02]];end;end;(A)(De,tN);end;(HE)[0x00006]=NC(tN,eE,iN);ZE=ZE+1;HE[7]={};cZ=Re[ZE];do ZE=ZE+1;end;iN=je[cZ[6]];tN=nil;do KN=iN[0X8];end;do XN=#KN;end;if not(XN>0x0)then else do tN={};end;for dE=1,XN do local CE=(KN[dE]);if CE[0x001]==0x000 then(tN)[dE-1]={HE,CE[0x2]};else(tN)[dE-1]=ve[CE[0X2]];end;end;(A)(De,tN);end;(HE)[8]=NC(tN,eE,iN);cZ=Re[ZE];ZE=ZE+1;HE[7][cZ[0x2]]=HE[8];ZE=ZE+1;XE=rN+0X5-0X1;HE[rN](I(HE,rN+0X1,XE));XE=rN-1;cZ=Re[ZE];ZE=ZE+0X00001;do ZE=cZ[0X6];end;else local zO=ve[0X0];HE[2]=zO[0X00001][zO[2]];do ZE=ZE+0X001;end;local sO=(0X00002);do ZE=ZE+1;end;cZ=Re[ZE];ZE=ZE+0X1;local PO=(HE[0X2]);(HE)[sO+0x1]=PO;(HE)[sO]=PO[cZ[5]];ZE=ZE+0x01;do sO=0X02;end;(HE[sO])(HE[sO+0x0001]);do XE=sO-1;end;ZE=ZE+1;ZE=ZE+1;cZ=Re[ZE];ZE=ZE+1;ZE=cZ[6];end;end;else do if not(YZ>=0X13)then do if YZ==0X0012 then(HE)[6]=HE[5][cZ[0X5]];do ZE=ZE+1;end;ZE=ZE+1;ZE=ZE+0X0001;(HE)[0X002]=HE[0X6];do cZ=Re[ZE];end;ZE=ZE+1;if not HE[0x00002]then do ZE=cZ[0X6];end;end;else HE[0]=eE[cZ[2]];do cZ=Re[ZE];end;do ZE=ZE+1;end;HE[0]=HE[0x00000][cZ[5]];ZE=ZE+1;ZE=ZE+0x01;cZ=Re[ZE];ZE=ZE+1;if not HE[0]then ZE=cZ[6];end;end;end;else if YZ~=0X14 then do(HE)[cZ[7]]=true;end;else HE[cZ[0x7]]=cZ[2];end;end;end;end;else do if not(YZ<24)then if YZ>=0X1a then if YZ==0X1b then HE[0x0002]=eE[cZ[0X2]];do cZ=Re[ZE];end;local y8=(2);ZE=ZE+0X1;local p8=(HE[0x2]);(HE)[y8+0X1]=p8;HE[y8]=p8[cZ[5]];do cZ=Re[ZE];end;do ZE=ZE+1;end;(HE)[4]=cZ[0X2];ZE=ZE+0X1;y8=0x2;HE[y8]=HE[y8](HE[y8+0x1],HE[y8+2]);XE=y8;cZ=Re[ZE];ZE=ZE+1;if not HE[0X2]then ZE=cZ[0x6];end;else(HE)[cZ[0X07]]=HE[cZ[0x6]][cZ[5]];end;else if YZ==0X19 then(HE)[0]=eE[cZ[0x2]];ZE=ZE+1;local id=0X0;do ZE=ZE+0X1;end;do cZ=Re[ZE];end;ZE=ZE+1;HE[1]=cZ[2];ZE=ZE+0X1;do HE[id]=HE[id](HE[id+1]);end;XE=id;ZE=ZE+1;ZE=ZE+1;cZ=Re[ZE];ZE=ZE+1;if not HE[0]then ZE=cZ[0X06];end;else local tP=cZ[7];local XP,kP=HE[tP]();if XP then ZE=cZ[0X6];(HE)[tP+3]=kP;end;end;end;else if not(YZ>=22)then do HE[1]=eE[cZ[0X0002]];end;ZE=ZE+1;ZE=ZE+1;cZ=Re[ZE];ZE=ZE+0X0001;if not HE[1]then ZE=cZ[0X6];end;else if YZ==23 then local mB=(ve[1]);HE[3]=mB[1][mB[2]];cZ=Re[ZE];ZE=ZE+0X001;(HE)[3]=HE[0X3][cZ[5]];do ZE=ZE+1;end;(HE)[4]=HE[2];local bB=(3);ZE=ZE+0x0001;(HE)[bB]=HE[bB](HE[bB+0X1]);XE=bB;ZE=ZE+0x0001;ZE=ZE+1;cZ=Re[ZE];ZE=ZE+1;do if not HE[0X03]then ZE=cZ[6];end;end;else HE[0]=eE[cZ[0X02]];cZ=Re[ZE];do ZE=ZE+1;end;(HE)[0X0]=HE[0x000][cZ[0X5]];ZE=ZE+0X00001;do ZE=ZE+1;end;cZ=Re[ZE];do ZE=ZE+0x001;end;if not(not HE[0])then else ZE=cZ[0x6];end;end;end;end;end;end;end;end;end;end;end;end);if AE then if QE then if GE==1 then return HE[PE]();else do return HE[PE](I(HE,PE+0X001,XE));end;end;elseif PE then return I(HE,PE,GE);end;else if f(QE)=='\str\105\110\g'then do if e(QE,"\097\116te\m\p\116\032t\o\ y\ie\ld \097\c\114\111s\s\032\m\eta\m\eth\od\047\067\%-\c\097ll\ \098o\117\110\d\097\114\y")then return coroutine.yield();end;end;if not(e(QE,"^\.\-\:\037d\043\: "))then(b)(QE,0);else(b)("Luraph Script:"..(Ae[ZE-1]or"\(\int\e\114\110\097\l\041").."\:\ "..r(QE),0);end;else b(QE,0);end;end;end;end;end;end;end;end;else if me>=129 then if not(me<135)then if me>=138 then if me>=0X08b then if me==0x8c then fe=function(...)local TL,EL,LL=0x1,{},(0);local GL={[0X2]=EL,[1]=ce};local UL=(m());local gL=((UL==F and Le or UL));local KL,SL=rC(...);KL=KL-0x001;for kE=0,KL do if he>kE then EL[kE]=SL[kE+1];else break;end;end;do if not ge then SL=nil;elseif xe then do(EL)[he]={n=KL>=he and KL-he+1 or 0X0,I(SL,he+0X0001,KL+1)};end;end;end;if gL~=UL then(i)(fe,gL);end;local HL,FL,CL,yL=j(function()while true do local DJ=(Re[TL]);local uJ=DJ[4];TL=TL+0X001;if not(uJ>=0xd)then if uJ<0x6 then do if not(uJ<0X00003)then if not(uJ>=4)then for U2=DJ[0X7],DJ[6]do do(EL)[U2]=nil;end;end;else if uJ==5 then local UE=ve[0X00];(EL)[1]=UE[1][UE[2]];local AE=0X1;DJ=Re[TL];TL=TL+1;local VE=(EL[1]);EL[AE+1]=VE;(EL)[AE]=VE[DJ[5]];do TL=TL+0x00001;end;AE=1;(EL[AE])(EL[AE+0X1]);LL=AE-1;DJ=Re[TL];TL=TL+0X1;do(EL)[0X1]=gL[DJ[2]];end;do DJ=Re[TL];end;TL=TL+0X01;(EL)[2]=EL[0X0][DJ[0X005]];TL=TL+0X1;TL=TL+1;DJ=Re[TL];local qE=(je[DJ[6]]);local lE=qE[0x8];TL=TL+0X001;local sE,XE=nil,#lE;if not(XE>0x0)then else do sE={};end;for aW=1,XE do local zW=(lE[aW]);if zW[1]==0 then do sE[aW-1]={EL,zW[0X00002]};end;else sE[aW-0X1]=ve[zW[2]];end;end;(A)(De,sE);end;(EL)[0X0003]=NC(sE,gL,qE);do TL=TL+0X1;end;(EL)[4]=true;TL=TL+1;do AE=1;end;LL=AE+4-1;(EL[AE])(I(EL,AE+1,LL));LL=AE-0x1;DJ=Re[TL];TL=TL+1;EL[1]=gL[DJ[2]];DJ=Re[TL];TL=TL+0X1;(EL)[0X2]=EL[0X0][DJ[0x5]];TL=TL+1;AE=0X01;EL[AE]=EL[AE](EL[AE+0X1]);do LL=AE;end;TL=TL+0X0001;TL=TL+0x1;DJ=Re[TL];TL=TL+0X1;if not(not(EL[0X1]<DJ[5]))then else TL=DJ[7];end;else local tB=DJ[0X7];local fB=DJ[0x0006];LL=tB+fB-0x1;repeat local Bu,ru=De,EL;if not(#Bu>0X0000)then else local fQ=({});for DN,HN in D,Bu do for Zx,ex in D,HN do if ex[1]==ru and ex[0X00002]>=0x0 then local Oz=(ex[0X2]);do if not(not fQ[Oz])then else fQ[Oz]={ru[Oz]};end;end;ex[0x00001]=fQ[Oz];do(ex)[2]=0X01;end;end;end;end;end;until true;do return true,tB,fB;end;end;end;else if not(uJ<1)then if uJ~=2 then EL[0]=gL[DJ[2]];do DJ=Re[TL];end;do TL=TL+0X1;end;EL[0]=EL[0x00000][DJ[5]];DJ=Re[TL];do TL=TL+0X00001;end;EL[0x1]=DJ[2];local X3=(0X0);TL=TL+0X1;do EL[X3]=EL[X3](EL[X3+1]);end;LL=X3;TL=TL+1;TL=TL+1;DJ=Re[TL];TL=TL+1;if not(not EL[0X0])then else do TL=DJ[0x6];end;end;else local U5=(ve[0x0]);(EL)[0]=U5[0X01][U5[0X2]];DJ=Re[TL];TL=TL+1;local a5,x5=EL[0],(0);do(EL)[x5+0x1]=a5;end;EL[x5]=a5[DJ[5]];TL=TL+0X01;do x5=0;end;(EL[x5])(EL[x5+1]);LL=x5-0X1;TL=TL+0X01;do TL=TL+1;end;do TL=TL+0X00001;end;repeat local OL,bL=De,EL;if#OL>0 then local H1={};for K8,u8 in D,OL do for Tf,Yf in D,u8 do if Yf[0X1]==bL and Yf[2]>=0 then local Hq=(Yf[2]);if not(not H1[Hq])then else H1[Hq]={bL[Hq]};end;Yf[0X001]=H1[Hq];Yf[0x2]=1;end;end;end;end;until true;return;end;else TL=DJ[6];end;end;end;else if uJ<0X9 then do if not(uJ<7)then do if uJ~=0X8 then do(EL)[0X00000]=gL[DJ[0X00002]];end;do TL=TL+1;end;TL=TL+1;DJ=Re[TL];do TL=TL+0x1;end;EL[0]=EL[0][DJ[0X05]];DJ=Re[TL];TL=TL+1;local Pa=0;do(EL)[0X1]=gL[DJ[2]];end;DJ=Re[TL];local qa=je[DJ[6]];do TL=TL+1;end;local Ha,Ra=qa[8],nil;local Oa=#Ha;if not(Oa>0)then else Ra={};for aW=1,Oa do local IW=Ha[aW];if IW[1]~=0 then Ra[aW-1]=ve[IW[0X0002]];else Ra[aW-1]={EL,IW[2]};end;end;(A)(De,Ra);end;EL[0x2]=NC(Ra,gL,qa);TL=TL+1;(EL[Pa])(EL[Pa+1],EL[Pa+0X00002]);LL=Pa-1;TL=TL+0x1;do TL=TL+0X1;end;DJ=Re[TL];TL=TL+1;EL[0X00]=gL[DJ[2]];do DJ=Re[TL];end;do TL=TL+1;end;do(EL)[0]=EL[0][DJ[0X5]];end;TL=TL+0x0001;do TL=TL+0X01;end;do DJ=Re[TL];end;TL=TL+1;(EL)[1]=EL[0][DJ[0x5]];DJ=Re[TL];TL=TL+1;if not(not EL[1])then else TL=DJ[0X006];end;else if not(not EL[DJ[0X7]])then else TL=DJ[0X6];end;end;end;else EL[1]=gL[DJ[0X2]];DJ=Re[TL];TL=TL+0X1;(EL)[2]=gL[DJ[2]];do TL=TL+1;end;TL=TL+1;do TL=TL+1;end;EL[3]=EL[0X00];local HP=1;do DJ=Re[TL];end;TL=TL+1;(EL)[4]=DJ[2];TL=TL+1;do LL=HP+0x00004-0X1;end;EL[HP](I(EL,HP+0X1,LL));LL=HP-0X1;DJ=Re[TL];do TL=TL+0X01;end;do EL[1]=gL[DJ[0x2]];end;TL=TL+0X1;TL=TL+0X0001;TL=TL+1;LL=1;EL[LL]();LL=LL-0X1;do TL=TL+0X1;end;do TL=TL+1;end;do DJ=Re[TL];end;TL=TL+0X001;EL[0X1]=gL[DJ[2]];TL=TL+0X01;do TL=TL+1;end;DJ=Re[TL];do TL=TL+0X1;end;(EL)[0X2]=gL[DJ[0X00002]];TL=TL+1;TL=TL+0X1;TL=TL+0X1;EL[0X3]=EL[0X0];DJ=Re[TL];TL=TL+0X0001;do EL[4]=DJ[2];end;TL=TL+1;do HP=1;end;LL=HP+0X4-0X1;EL[HP](I(EL,HP+1,LL));LL=HP-1;TL=TL+1;do TL=TL+0x1;end;do DJ=Re[TL];end;TL=TL+0x1;TL=DJ[6];end;end;else do if not(uJ<11)then if uJ==0xc then EL[0]=gL[DJ[2]];do TL=TL+0X1;end;TL=TL+1;DJ=Re[TL];do TL=TL+0x1;end;(EL)[0x0]=EL[0x0][DJ[0x05]];DJ=Re[TL];TL=TL+1;do if not(not EL[0X0])then else TL=DJ[0X6];end;end;else EL[DJ[7]]=DJ[2];end;else if uJ~=0Xa then EL[DJ[7]]={I({},1,DJ[0X06])};else do(EL)[0X0]=gL[DJ[2]];end;TL=TL+0X01;do TL=TL+0X1;end;local ZN=0;DJ=Re[TL];TL=TL+1;local QN=(EL[0X0]);do(EL)[ZN+0X00001]=QN;end;(EL)[ZN]=QN[DJ[0X05]];DJ=Re[TL];do TL=TL+0X1;end;(EL)[0X2]=DJ[0X2];do TL=TL+0X1;end;do ZN=0;end;(EL)[ZN]=EL[ZN](EL[ZN+1],EL[ZN+0x00002]);do LL=ZN;end;DJ=Re[TL];TL=TL+0X1;if not(not EL[0])then else TL=DJ[6];end;end;end;end;end;end;else if not(uJ<0X014)then if uJ<0X17 then if not(uJ<0X00015)then if uJ==0X16 then(EL)[1]=gL[DJ[2]];TL=TL+1;TL=TL+0X1;do DJ=Re[TL];end;do TL=TL+1;end;(EL)[1]=EL[1][DJ[5]];DJ=Re[TL];TL=TL+1;(EL)[0X2]=gL[DJ[2]];do TL=TL+0X1;end;TL=TL+0x1;local Nt=(1);DJ=Re[TL];TL=TL+0X01;EL[3]=DJ[2];TL=TL+1;EL[Nt](EL[Nt+0X0001],EL[Nt+2]);LL=Nt-0X1;do DJ=Re[TL];end;do TL=TL+1;end;TL=DJ[6];else do(EL)[0]=gL[DJ[2]];end;TL=TL+1;TL=TL+0x1;do TL=TL+0X001;end;EL[0]=#EL[0];DJ=Re[TL];TL=TL+0X1;if not(DJ[2]<EL[0])then TL=DJ[7];end;end;else local rq=(ve[0]);do EL[0]=rq[1][rq[0X2]];end;do TL=TL+1;end;local Eq=EL[0];do TL=TL+1;end;DJ=Re[TL];TL=TL+1;local Fq=0;EL[Fq+1]=Eq;do(EL)[Fq]=Eq[DJ[5]];end;do TL=TL+0X001;end;do Fq=0;end;(EL)[Fq]=EL[Fq](EL[Fq+1]);LL=Fq;do DJ=Re[TL];end;TL=TL+1;do if not(not EL[0])then else TL=DJ[6];end;end;end;else if not(uJ>=0X19)then do if uJ~=24 then local AX=(je[DJ[6]]);local fX=(AX[0X0008]);local TX=(#fX);local UX=(nil);if TX>0X0 then UX={};for vX=0X1,TX do local lX=(fX[vX]);do if lX[0x001]~=0X0 then do UX[vX-1]=ve[lX[0X2]];end;else UX[vX-0X1]={EL,lX[2]};end;end;end;(A)(De,UX);end;do EL[DJ[0x0007]]=NC(UX,gL,AX);end;else end;end;else do if uJ==26 then EL[DJ[0X007]]=gL[DJ[0X00002]];else local ew,Cw=ve[0],0x0;EL[0X00000]=ew[0X1][ew[0X02]];TL=TL+0x01;do TL=TL+0x1;end;DJ=Re[TL];TL=TL+0x1;local cw=EL[0X00];do EL[Cw+0X1]=cw;end;(EL)[Cw]=cw[DJ[5]];TL=TL+0X0001;Cw=0;EL[Cw](EL[Cw+1]);LL=Cw-1;DJ=Re[TL];TL=TL+1;TL=DJ[6];end;end;end;end;else if uJ>=0X10 then do if not(uJ>=18)then if uJ==0x11 then EL[0X0]=gL[DJ[0X2]];do DJ=Re[TL];end;TL=TL+0X1;(EL)[0]=EL[0][DJ[0X005]];TL=TL+0X1;TL=TL+1;DJ=Re[TL];TL=TL+0X1;do if not EL[0]then TL=DJ[0X6];end;end;else local C3,J3=DJ[7],(EL[DJ[6]]);EL[C3+0X001]=J3;(EL)[C3]=J3[DJ[5]];end;else if uJ==0X13 then local d5=(DJ[7]);local u5=g(function(...)(d)();for oU,qU,BU,VU,PU,iU,LU,gU,FU,DU in...do d(true,{oU,qU,BU,VU,PU,iU,LU,gU,FU,DU});end;end);u5(EL[d5],EL[d5+1],EL[d5+2]);LL=d5;do(EL)[d5]=u5;end;TL=DJ[6];else EL[DJ[7]]=true;end;end;end;else if not(uJ>=0Xe)then local Yr,jr=DJ[0X06],(DJ[1]);local qr=DJ[0x7];do if Yr==0 then else LL=qr+Yr-1;end;end;local Br,er=nil,nil;if Yr~=0X01 then Br,er=rC(EL[qr](I(EL,qr+0X1,LL)));else Br,er=rC(EL[qr]());end;do if jr==0x1 then LL=qr-0X1;else do if jr==0X0 then do Br=Br+qr-1;end;LL=Br;else Br=qr+jr-0X00002;LL=Br+0X1;end;end;local uZ=0;for hD=qr,Br do uZ=uZ+0x1;EL[hD]=er[uZ];end;end;end;else do if uJ~=0xF then EL[DJ[0X0007]]=O(EL[DJ[0X6]],EL[DJ[1]]);else local Bi=DJ[7];local Li=(EL[Bi]);local ii,Ki=EL[Bi+1],EL[Bi+2];do(EL)[Bi]=g(function()do for M2=Li,ii,Ki do d(true,M2);end;end;end);end;TL=DJ[6];end;end;end;end;end;end;end;end);if not(HL)then do if f(FL)~="string"then(b)(FL,0x000);else do if not(e(FL,'\097\116te\m\p\116\032to y\i\101\l\100\ \097\cr\111\s\s\ \m\et\097m\101t\h\od\/\067\%\-\099al\l\ bou\110d\097ry'))then else return coroutine.yield();end;end;if not(e(FL,'\^.\-\:%d\043\058 '))then b(FL,0);else b("Luraph Script:"..(Ae[TL-1]or"(internal)")..": "..r(FL),0X0);end;end;end;else if FL then if yL~=0X1 then do return EL[CL](I(EL,CL+0x1,LL));end;else return EL[CL]();end;elseif not(CL)then else return I(EL,CL,yL);end;end;end;else fe=function(...)local jj={};local Yj=1;local vj=(m());local Cj,Tj=rC(...);local wj,Ij={[1]=ce,[0X2]=jj},(vj==F and Le or vj);Cj=Cj-0X001;do for Na=0X0,Cj do if not(he>Na)then break;else(jj)[Na]=Tj[Na+1];end;end;end;if not ge then Tj=nil;elseif not(xe)then else do(jj)[he]={n=Cj>=he and Cj-he+0x1 or 0,I(Tj,he+0X1,Cj+0X1)};end;end;local dj=(0);if Ij~=vj then(i)(fe,Ij);end;local lj,Kj,hj,tj=j(function()while true do local dY=(Re[Yj]);local iY=(dY[0X4]);Yj=Yj+1;if iY>=0X13 then do if iY>=28 then if not(iY<0X21)then do if iY>=35 then do if not(iY<0X24)then if iY==37 then(jj)[dY[7]]=not jj[dY[0X6]];else(jj)[4]=false;do dY=Re[Yj];end;local Aq=ve[3];Yj=Yj+1;do(Ij)[dY[2]]=jj[4];end;Yj=Yj+1;jj[0x00004]=Aq[1][Aq[2]];dY=Re[Yj];Yj=Yj+1;do jj[4]=jj[4][dY[5]];end;do Yj=Yj+0X01;end;Yj=Yj+1;do dY=Re[Yj];end;local rq=(0X4);Yj=Yj+1;local Dq=jj[0x4];(jj)[rq+0x1]=Dq;jj[rq]=Dq[dY[0x5]];dY=Re[Yj];Yj=Yj+1;jj[0X6]=dY[2];Yj=Yj+0X1;jj[0x07]=true;do Yj=Yj+0X0001;end;rq=0X0004;do dj=rq+0x4-0x1;end;(jj[rq])(I(jj,rq+0X0001,dj));do dj=rq-1;end;Yj=Yj+0x00001;Yj=Yj+0X001;Yj=Yj+1;(jj)[4]=false;do dY=Re[Yj];end;Yj=Yj+0x001;(Ij)[dY[0X00002]]=jj[4];dY=Re[Yj];do Yj=Yj+0X1;end;rq=0X4;Dq=jj[0x3];(jj)[rq+1]=Dq;(jj)[rq]=Dq[dY[5]];Yj=Yj+0X0001;rq=4;jj[rq](jj[rq+0x0001]);do dj=rq-0X01;end;dY=Re[Yj];do Yj=Yj+0X1;end;if not(not(jj[1]<=dY[0X5]))then else Yj=dY[7];end;end;else jj[dY[0X7]]=Ij[dY[0X2]];end;end;else if iY~=0X22 then Yj=dY[0X6];else(jj)[0X0000]={I({},1,2)};dY=Re[Yj];do Yj=Yj+0X01;end;jj[0X00001]=Ij[dY[0X002]];local Uv=0;do Yj=Yj+0X1;end;dj=0X0001;jj[dj]=jj[dj]();do Yj=Yj+1;end;Yj=Yj+1;local Sv=ve[0x00000];Yj=Yj+0X1;jj[2]=Sv[1][Sv[2]];local dv=jj[Uv];do Yj=Yj+0X0001;end;local fv=((0X001-1)*0x32);for eP=0X1,2 do(dv)[fv+eP]=jj[Uv+eP];end;dY=Re[Yj];Yj=Yj+1;(Ij)[dY[2]]=jj[0X0];Yj=Yj+0X1;Sv=ve[0X001];jj[0x0]=Sv[1][Sv[2]];Yj=Yj+0X1;do Yj=Yj+1;end;Yj=Yj+1;dj=0x0;(jj)[dj]=jj[dj]();dY=Re[Yj];Yj=Yj+0X0001;jj[1]=Ij[dY[0X2]];Yj=Yj+1;Yj=Yj+1;Yj=Yj+0X1;Sv=ve[0X00];do jj[2]=Sv[0X1][Sv[0x2]];end;Yj=Yj+0x1;jj[0X00003]=true;do Yj=Yj+1;end;Uv=0x00001;(jj)[Uv]=jj[Uv](jj[Uv+1],jj[Uv+0X2]);do dj=Uv;end;do Yj=Yj+0X1;end;(jj)[2]=jj[0X0001];Yj=Yj+0x001;Sv=ve[2];(jj)[3]=Sv[1][Sv[2]];Yj=Yj+1;do Yj=Yj+1;end;dY=Re[Yj];Yj=Yj+0X1;jj[0x04]=jj[0x0003][dY[5]];dY=Re[Yj];do Yj=Yj+1;end;jj[5]=Ij[dY[2]];do Yj=Yj+1;end;Yj=Yj+1;do dY=Re[Yj];end;Yj=Yj+0X1;(jj)[0X5]=jj[5][dY[0X5]];do dY=Re[Yj];end;do Yj=Yj+0X0001;end;(jj)[0x6]=dY[2];Yj=Yj+0X00001;do Sv=ve[0X0];end;do(jj)[0X7]=Sv[0X1][Sv[2]];end;Yj=Yj+1;Yj=Yj+1;dY=Re[Yj];Yj=Yj+1;jj[0X00007]=jj[7][dY[0x0005]];Yj=Yj+1;Yj=Yj+1;do Yj=Yj+0X1;end;Sv=ve[0x002];do jj[0X8]=Sv[1][Sv[0X2]];end;Yj=Yj+1;Yj=Yj+0x1;dY=Re[Yj];Yj=Yj+1;(jj)[0X00008]=jj[0x8][dY[0X5]];do Yj=Yj+0X1;end;Yj=Yj+1;do dY=Re[Yj];end;Yj=Yj+0x1;jj[0X8]=jj[0X0008][dY[0x5]];Yj=Yj+0X1;Yj=Yj+0x00001;Yj=Yj+0X1;jj[7]=jj[7]-jj[0X0008];dY=Re[Yj];do Yj=Yj+1;end;do jj[0X8]=dY[2];end;Yj=Yj+0X001;do Uv=0X5;end;dj=Uv+0X4-0x1;(jj)[Uv]=jj[Uv](I(jj,Uv+1,dj));dj=Uv;do Yj=Yj+0X1;end;Yj=Yj+1;Yj=Yj+0X0001;jj[0X0004]=jj[0X4]*jj[0X5];dY=Re[Yj];Yj=Yj+0x001;jj[3][dY[2]]=jj[0x00004];dY=Re[Yj];Yj=Yj+1;jj[0X00003]=Ij[dY[2]];Yj=Yj+1;Yj=Yj+0X1;do dY=Re[Yj];end;Yj=Yj+1;if not jj[3]then Yj=dY[0X6];end;end;end;end;else do if iY<0x001E then if iY==29 then jj[3]=Ij[dY[0X2]];do dY=Re[Yj];end;Yj=Yj+0X1;jj[3]=jj[0X3][dY[0X5]];dY=Re[Yj];Yj=Yj+1;jj[4]=Ij[dY[0x00002]];do Yj=Yj+0x1;end;Yj=Yj+1;dY=Re[Yj];do Yj=Yj+1;end;do(jj)[0X4]=jj[4][dY[0X0005]];end;dY=Re[Yj];Yj=Yj+0x1;(jj)[4]=jj[0X00004][dY[0X5]];do Yj=Yj+0x1;end;Yj=Yj+1;dY=Re[Yj];Yj=Yj+1;if jj[0X3]==jj[4]then else Yj=dY[7];end;else(jj)[dY[0X7]]=dY[2];end;else if iY<0X1F then if not jj[dY[0X007]]then Yj=dY[0x00006];end;else if iY~=32 then(jj)[3]=Ij[dY[0X2]];local OI=jj[3];dY=Re[Yj];do Yj=Yj+0X001;end;local WI=(0x003);jj[WI+1]=OI;(jj)[WI]=OI[dY[0X5]];do Yj=Yj+1;end;WI=3;jj[WI](jj[WI+0x001]);dj=WI-1;dY=Re[Yj];do Yj=Yj+1;end;do Yj=dY[6];end;else do jj[0X7][dY[2]]=jj[8];end;local Oo,Qo=0X3,(ve[0X3]);Yj=Yj+1;do dj=Oo+5-0X00001;end;(jj)[Oo]=jj[Oo](I(jj,Oo+1,dj));dj=Oo;do Yj=Yj+1;end;Yj=Yj+0X1;Yj=Yj+1;(jj)[0X4]=jj[0x3];dY=Re[Yj];Yj=Yj+0x1;(Ij)[dY[2]]=jj[0X4];Yj=Yj+0X00001;(jj)[4]=Qo[0X1][Qo[0x0002]];dY=Re[Yj];Yj=Yj+0x1;(jj)[4]=jj[0X004][dY[5]];dY=Re[Yj];Yj=Yj+0X001;Oo=0x004;local so=(jj[0X4]);(jj)[Oo+0x1]=so;(jj)[Oo]=so[dY[5]];dY=Re[Yj];Yj=Yj+0x1;jj[0X006]=dY[0X2];do Yj=Yj+0X01;end;jj[7]=false;do Yj=Yj+1;end;Oo=4;dj=Oo+4-0X0001;jj[Oo](I(jj,Oo+0X0001,dj));dj=Oo-1;dY=Re[Yj];do Yj=Yj+1;end;Oo=0X0004;so=jj[0X0003];jj[Oo+0X1]=so;(jj)[Oo]=so[dY[5]];Yj=Yj+1;Oo=0X4;jj[Oo](jj[Oo+0X00001]);dj=Oo-0X1;Yj=Yj+0x0001;Yj=Yj+0X0001;do dY=Re[Yj];end;Yj=Yj+1;do Yj=dY[6];end;end;end;end;end;end;else if not(iY>=0X0017)then do if not(iY<0X15)then if iY==0X00016 then jj[0X4]=Ij[dY[0x2]];local Ot=(ve[0X5]);do Yj=Yj+0X1;end;(jj)[5]=Ot[1][Ot[2]];dY=Re[Yj];Yj=Yj+0X1;(jj)[0X6]=dY[2];Yj=Yj+0X1;do Ot=ve[2];end;jj[0x07]=Ot[0x00001][Ot[0x2]];dY=Re[Yj];Yj=Yj+1;jj[0X08]=jj[1]>dY[0X5];Yj=Yj+0x1;jj[0x9]=jj[0];Yj=Yj+0X00001;Ot=ve[0X0004];do(jj)[0X0000A]=Ot[0X00001][Ot[0X02]];end;do Yj=Yj+1;end;Yj=Yj+0x001;dY=Re[Yj];do Yj=Yj+0X1;end;do(jj)[11]=Ij[dY[0X2]];end;do Yj=Yj+0X001;end;jj[0XA]=jj[0X0000a]==jj[11];Yj=Yj+0X1;Ot=ve[3];(jj)[0XB]=Ot[1][Ot[2]];do dY=Re[Yj];end;Yj=Yj+1;(jj)[0X000B]=jj[0X0b][dY[5]];Yj=Yj+1;Yj=Yj+0X1;dY=Re[Yj];do Yj=Yj+0X1;end;local Ut=0X4;(jj)[0X00B]=jj[0Xb][dY[5]];do dY=Re[Yj];end;Yj=Yj+0X00001;(jj)[0XB]=jj[11]>dY[0X00005];do dY=Re[Yj];end;Yj=Yj+1;do(jj)[0X000c]=Ij[dY[0x02]];end;Yj=Yj+1;Yj=Yj+1;Yj=Yj+0X1;jj[0Xc]=not jj[0xc];Yj=Yj+1;do dj=Ut+0x00009-0x1;end;(jj[Ut])(I(jj,Ut+0X001,dj));dj=Ut-0x1;dY=Re[Yj];Yj=Yj+0X1;Yj=dY[0x6];else local ud=dY[7];local md,kd=jj[ud]();do if not(md)then else for MR=0x001,dY[0x1]do(jj)[ud+MR]=kd[MR];end;do Yj=dY[6];end;end;end;end;else if iY~=0X14 then local CS=(ve[0X03]);(jj)[6]=CS[1][CS[0X0002]];dY=Re[Yj];Yj=Yj+1;jj[6]=jj[6][dY[5]];Yj=Yj+0X1;Yj=Yj+1;dY=Re[Yj];Yj=Yj+0X1;(jj)[0x6]=jj[6][dY[0X5]];dY=Re[Yj];Yj=Yj+1;if not(dY[2]<jj[0X0006])then Yj=dY[0X7];end;else(jj)[4]=Ij[dY[0X2]];do Yj=Yj+0X1;end;Yj=Yj+1;dY=Re[Yj];Yj=Yj+0X1;(jj)[0X005]=dY[0x2];do Yj=Yj+0X1;end;local Ti=(4);(jj)[0X6]=jj[1];dY=Re[Yj];Yj=Yj+0X001;jj[0X7]=jj[0X2]+dY[5];Yj=Yj+0X1;dj=Ti+4-1;jj[Ti](I(jj,Ti+1,dj));dj=Ti-0X1;dY=Re[Yj];do Yj=Yj+1;end;Yj=dY[6];end;end;end;else if not(iY<0X19)then if not(iY>=26)then local Ki=(ve[dY[6]]);jj[dY[7]]=Ki[1][Ki[2]];else if iY==27 then(jj)[dY[7]]=jj[dY[6]]*jj[dY[0X001]];else(jj)[4]=Ij[dY[0X2]];do dY=Re[Yj];end;Yj=Yj+1;jj[4]=jj[4][dY[0X00005]];dY=Re[Yj];do Yj=Yj+0x1;end;if not jj[4]then Yj=dY[0x06];end;end;end;else if iY==24 then repeat local ZU,TU=De,(jj);if not(#ZU>0X0)then else local Cf=({});for Jm,Zm in D,ZU do for l7,E7 in D,Zm do if E7[1]==TU and E7[0X2]>=0X0 then local c1=(E7[0x2]);if not Cf[c1]then(Cf)[c1]={TU[c1]};end;E7[1]=Cf[c1];(E7)[2]=1;end;end;end;end;until true;do return;end;else local yX=(ve[2]);do(jj)[4]=yX[0X1][yX[0x2]];end;Yj=Yj+1;do Yj=Yj+0X1;end;Yj=Yj+1;yX=ve[0X0];do jj[0x5]=yX[0X1][yX[0x2]];end;do dY=Re[Yj];end;do Yj=Yj+0X1;end;(jj[0X4])[dY[2]]=jj[0X0005];dY=Re[Yj];Yj=Yj+1;Yj=dY[0x6];end;end;end;end;end;else if iY>=0X9 then if iY<0xe then do if iY>=11 then if iY<12 then jj[0X008]=Ij[dY[0X2]];dY=Re[Yj];Yj=Yj+0x001;jj[8]=jj[0X8][dY[0x5]];Yj=Yj+0X1;Yj=Yj+1;dY=Re[Yj];Yj=Yj+1;(jj)[8]=jj[8][dY[5]];Yj=Yj+0X1;do Yj=Yj+0X001;end;dY=Re[Yj];Yj=Yj+1;Yj=dY[6];else if iY==13 then for Wo=dY[0X00007],dY[6]do jj[Wo]=nil;end;else end;end;else if iY~=10 then jj[0X8]=Ij[dY[2]];local hU=ve[0];dY=Re[Yj];Yj=Yj+0X1;do(jj)[8]=jj[0x00008][dY[0X5]];end;Yj=Yj+0X1;(jj)[9]=hU[0x0001][hU[0X02]];Yj=Yj+1;local qU=0X8;Yj=Yj+0X1;Yj=Yj+1;(jj)[qU]=jj[qU](jj[qU+1]);do dj=qU;end;do dY=Re[Yj];end;Yj=Yj+0X01;Yj=dY[0X00006];else do jj[4]=jj[1];end;do Yj=Yj+0X1;end;jj[0X2]=jj[0X0004];dY=Re[Yj];do Yj=Yj+0X00001;end;do jj[0X00004]=Ij[dY[0X02]];end;Yj=Yj+1;Yj=Yj+1;dY=Re[Yj];Yj=Yj+0X01;do(jj)[0x4]=jj[0X0004][dY[0X5]];end;do Yj=Yj+1;end;Yj=Yj+0x1;dY=Re[Yj];local In=4;local Wn=je[dY[0X6]];local gn=(Wn[8]);Yj=Yj+0X1;local tn=nil;local Sn=#gn;if not(Sn>0)then else tn={};for n3=0X1,Sn do local P3=(gn[n3]);if P3[0X0001]==0X0000 then(tn)[n3-0X00001]={jj,P3[0X2]};else do(tn)[n3-0x001]=ve[P3[0X2]];end;end;end;A(De,tn);end;do jj[5]=NC(tn,Ij,Wn);end;Yj=Yj+1;jj[In](jj[In+1]);dj=In-0X01;do dY=Re[Yj];end;Yj=Yj+1;(jj)[4]=jj[3][dY[5]];Yj=Yj+1;Yj=Yj+1;dY=Re[Yj];Yj=Yj+1;do jj[5]=Ij[dY[2]];end;Yj=Yj+1;Yj=Yj+0x1;dY=Re[Yj];Yj=Yj+0x1;jj[0X5]=jj[0X5][dY[5]];do Yj=Yj+0X0001;end;Yj=Yj+0x1;dY=Re[Yj];Yj=Yj+0X1;jj[0X5]=jj[5][dY[0X5]];dY=Re[Yj];Yj=Yj+1;do if jj[0X4]==jj[5]then do Yj=dY[7];end;end;end;end;end;end;else do if not(iY<0x10)then do if not(iY>=0X11)then local ca=(ve[4]);jj[0X4]=ca[1][ca[0X0002]];dY=Re[Yj];Yj=Yj+0x01;jj[0X5]=Ij[dY[0X00002]];Yj=Yj+1;do Yj=Yj+0X001;end;dY=Re[Yj];Yj=Yj+0X0001;if jj[0X4]~=jj[5]then do Yj=dY[7];end;end;else if iY==18 then(jj)[8]=Ij[dY[0X2]];Yj=Yj+0X00001;Yj=Yj+0x00001;dY=Re[Yj];do Yj=Yj+0x1;end;do(jj)[8]=jj[0X0008][dY[0x05]];end;dY=Re[Yj];Yj=Yj+1;do jj[0X08]=jj[0x00008][dY[5]];end;do Yj=Yj+0X01;end;Yj=Yj+1;dY=Re[Yj];Yj=Yj+1;Yj=dY[6];else jj[4]=dY[2];dY=Re[Yj];Yj=Yj+1;Ij[dY[0X00002]]=jj[4];Yj=Yj+1;(jj)[0X04]=true;do dY=Re[Yj];end;local vk=(ve[0X2]);do Yj=Yj+0X1;end;Ij[dY[2]]=jj[4];local Ok=0X4;Yj=Yj+1;jj[4]=vk[1][vk[2]];Yj=Yj+1;Yj=Yj+1;dY=Re[Yj];Yj=Yj+1;do jj[0X4][dY[0x02]]=dY[5];end;dY=Re[Yj];Yj=Yj+1;local pk=(jj[3]);(jj)[Ok+0x0001]=pk;do jj[Ok]=pk[dY[0X5]];end;Yj=Yj+1;Ok=4;(jj[Ok])(jj[Ok+1]);dj=Ok-1;Yj=Yj+1;Yj=Yj+0X01;do dY=Re[Yj];end;do Yj=Yj+1;end;do jj[4]=Ij[dY[2]];end;Yj=Yj+1;Yj=Yj+1;do dY=Re[Yj];end;do Yj=Yj+0X1;end;jj[0x5]=dY[0X2];Yj=Yj+0x1;Ok=4;(jj[Ok])(jj[Ok+0X1]);dj=Ok-1;Yj=Yj+1;(jj)[0X4]=false;dY=Re[Yj];do Yj=Yj+1;end;do Ij[dY[0X0002]]=jj[4];end;Yj=Yj+0X1;do vk=ve[0X2];end;(jj)[0X04]=vk[1][vk[2]];Yj=Yj+1;Yj=Yj+0x1;dY=Re[Yj];Yj=Yj+0X0001;do(jj[0X4])[dY[0X00002]]=dY[0X5];end;dY=Re[Yj];Yj=Yj+1;do Yj=dY[6];end;end;end;end;else if iY~=15 then if not(not(dY[2]<jj[dY[1]]))then else Yj=dY[7];end;else do(jj)[0X4]=Ij[dY[0x2]];end;Yj=Yj+0x01;Yj=Yj+0X1;dY=Re[Yj];do Yj=Yj+1;end;jj[0X004]=jj[4][dY[0X005]];do Yj=Yj+0x001;end;Yj=Yj+1;dY=Re[Yj];Yj=Yj+1;if not jj[0X4]then Yj=dY[0X00006];end;end;end;end;end;else do if not(iY<0X4)then do if not(iY>=0X06)then if iY~=5 then local W8=ve[3];do jj[4]=W8[0X1][W8[2]];end;Yj=Yj+0X1;do Yj=Yj+1;end;dY=Re[Yj];Yj=Yj+1;jj[0x4]=jj[4][dY[0x0005]];dY=Re[Yj];local E8=0x4;do Yj=Yj+1;end;local h8=(jj[0X4]);do jj[E8+0X00001]=h8;end;(jj)[E8]=h8[dY[5]];do dY=Re[Yj];end;do Yj=Yj+1;end;(jj)[0x006]=dY[2];Yj=Yj+0X1;E8=4;jj[E8](jj[E8+1],jj[E8+0X00002]);dj=E8-1;Yj=Yj+0X1;jj[4]=true;dY=Re[Yj];do Yj=Yj+0X1;end;(Ij)[dY[0X2]]=jj[0x4];do dY=Re[Yj];end;Yj=Yj+0X001;(jj)[0x4]=Ij[dY[2]];do Yj=Yj+0X1;end;Yj=Yj+1;do dY=Re[Yj];end;do Yj=Yj+0X001;end;(jj)[4]=jj[0X4][dY[0X5]];Yj=Yj+0X1;Yj=Yj+0X00001;Yj=Yj+1;dj=0x4;(jj[dj])();dj=dj-1;Yj=Yj+1;do Yj=Yj+1;end;dY=Re[Yj];Yj=Yj+0X01;Yj=dY[6];else do(jj)[dY[0X7]]={I({},1,dY[6])};end;end;else if iY<0X7 then jj[0x9]=Ij[dY[2]];do Yj=Yj+1;end;do Yj=Yj+0X1;end;do dY=Re[Yj];end;do Yj=Yj+0X1;end;(jj)[0X09]=jj[9][dY[5]];dY=Re[Yj];do Yj=Yj+0X1;end;jj[9]=jj[9][dY[5]];Yj=Yj+1;Yj=Yj+1;local NN=6;Yj=Yj+0x1;local kN=ve[0X0];dj=NN+4-1;jj[NN]=jj[NN](I(jj,NN+0X1,dj));dj=NN;do Yj=Yj+0x1;end;Yj=Yj+0X1;Yj=Yj+1;(jj)[7]={};do dY=Re[Yj];end;do Yj=Yj+1;end;jj[0x8]=Ij[dY[2]];Yj=Yj+0X1;Yj=Yj+0X001;Yj=Yj+1;jj[9]=kN[1][kN[2]];do Yj=Yj+0X1;end;Yj=Yj+0X1;do Yj=Yj+0X01;end;NN=8;jj[NN]=jj[NN](jj[NN+1]);do dj=NN;end;do Yj=Yj+1;end;Yj=Yj+1;dY=Re[Yj];Yj=Yj+1;(jj)[8]=jj[8]==dY[5];dY=Re[Yj];Yj=Yj+1;if not jj[8]then Yj=dY[6];end;else if iY~=8 then if jj[dY[7]]then Yj=dY[6];end;else do(jj)[0X0003]=Ij[dY[0X02]];end;local G5=3;dY=Re[Yj];Yj=Yj+1;local Q5=(jj[3]);jj[G5+1]=Q5;jj[G5]=Q5[dY[5]];dY=Re[Yj];local Y5=ve[0X2];Yj=Yj+1;jj[5]=dY[2];Yj=Yj+1;do G5=0X003;end;jj[G5]=jj[G5](jj[G5+0X01],jj[G5+2]);dj=G5;Yj=Yj+0X1;Yj=Yj+1;do dY=Re[Yj];end;Yj=Yj+1;G5=3;Q5=jj[0x3];do jj[G5+1]=Q5;end;do jj[G5]=Q5[dY[0X5]];end;Yj=Yj+1;do jj[5]=Y5[1][Y5[0x002]];end;Yj=Yj+1;do Yj=Yj+1;end;dY=Re[Yj];do Yj=Yj+1;end;(jj)[6]=Ij[dY[0x0002]];do dY=Re[Yj];end;Yj=Yj+1;jj[6]=jj[6][dY[5]];Yj=Yj+0X00001;Yj=Yj+0X1;do dY=Re[Yj];end;Yj=Yj+0X1;(jj)[7]=jj[1]/dY[5];dY=Re[Yj];do Yj=Yj+1;end;do jj[0X08]=jj[0X0001]>dY[0X0005];end;do dY=Re[Yj];end;Yj=Yj+0X001;if not jj[0x8]then Yj=dY[0X6];end;end;end;end;end;else do if iY>=2 then do if iY==3 then(jj)[4]=true;dY=Re[Yj];Yj=Yj+0X00001;local Yi=ve[0X00];do(Ij)[dY[2]]=jj[4];end;dY=Re[Yj];Yj=Yj+0X00001;local si=(4);jj[4]=Ij[dY[2]];Yj=Yj+1;(jj)[5]=Yi[1][Yi[0X002]];Yj=Yj+0x00001;do jj[6]=true;end;Yj=Yj+0x00001;jj[si]=jj[si](jj[si+0X1],jj[si+0x0002]);dj=si;Yj=Yj+0X1;jj[1]=jj[0x4];do dY=Re[Yj];end;Yj=Yj+0X01;(jj)[4]=jj[2]+dY[5];do dY=Re[Yj];end;Yj=Yj+0X01;if not(jj[0X4]<jj[0X1])then Yj=dY[7];end;else local TC=ve[0X00004];jj[0X4]=TC[1][TC[2]];do dY=Re[Yj];end;Yj=Yj+0X1;(jj)[5]=Ij[dY[2]];dY=Re[Yj];Yj=Yj+1;if jj[4]==jj[0X5]then else do Yj=dY[7];end;end;end;end;else do if iY~=1 then(jj)[dY[0x007]]=jj[dY[0X6]]==jj[dY[1]];else local Ud=(je[dY[0x006]]);local sd,Ed=Ud[0X8],(nil);local Wd=#sd;if not(Wd>0)then else do Ed={};end;for pJ=1,Wd do local RJ=sd[pJ];if RJ[0X001]==0X0 then(Ed)[pJ-1]={jj,RJ[2]};else(Ed)[pJ-0X1]=ve[RJ[0X2]];end;end;A(De,Ed);end;(jj)[dY[0x7]]=NC(Ed,Ij,Ud);end;end;end;end;end;end;end;end;end;end);if not(lj)then do if f(Kj)=="string"then if e(Kj,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if e(Kj,"\^\.\045\:\%d\+\058\ ")then(b)("\076u\114a\p\104\ \S\c\114\105\112t\:"..(Ae[Yj-1]or'\(\in\116\er\110\097\l\041')..": "..r(Kj),0);else(b)(Kj,0X00);end;end;else b(Kj,0);end;end;else if Kj then if tj==0X1 then return jj[hj]();else return jj[hj](I(jj,hj+1,dj));end;elseif hj then do return I(jj,hj,tj);end;end;end;end;end;else do fe=function(...)local Rq=(0X1);local xq=({});local Pq=m();local kq=({[1]=ce,[0X2]=xq});local oq=(Pq==F and Le or Pq);local rq,Aq=rC(...);do rq=rq-0X1;end;local cq=0;for Fo=0,rq do if not(he>Fo)then do break;end;else do xq[Fo]=Aq[Fo+0x1];end;end;end;if not ge then do Aq=nil;end;elseif not(xe)then else do xq[he]={n=rq>=he and rq-he+1 or 0,I(Aq,he+1,rq+0X1)};end;end;if oq~=Pq then i(fe,oq);end;local Dq,zq,Uq,eq=j(function()while true do local iG=Re[Rq];local AG=iG[4];Rq=Rq+1;if AG<0XB then do if not(AG<5)then if AG>=8 then if AG<0X009 then Rq=iG[6];else do if AG==10 then xq[1]=oq[iG[2]];Rq=Rq+1;Rq=Rq+0X01;iG=Re[Rq];do Rq=Rq+1;end;do xq[0X2]=oq[iG[2]];end;Rq=Rq+0X1;Rq=Rq+1;iG=Re[Rq];Rq=Rq+0x1;do xq[2]=xq[2][iG[0x00005]];end;Rq=Rq+1;do Rq=Rq+1;end;do iG=Re[Rq];end;Rq=Rq+1;xq[2]=xq[0X02][iG[0X5]];local na=0X01;Rq=Rq+1;Rq=Rq+0x1;iG=Re[Rq];do Rq=Rq+0X1;end;(xq)[2]=xq[0X00002][iG[5]];iG=Re[Rq];Rq=Rq+1;(xq)[0X2]=xq[0X00002][iG[0x00005]];Rq=Rq+1;Rq=Rq+1;iG=Re[Rq];do Rq=Rq+1;end;(xq)[2]=xq[0X00002][iG[5]];Rq=Rq+0X0001;Rq=Rq+0X1;Rq=Rq+0X1;xq[na]=xq[na](xq[na+1]);cq=na;do Rq=Rq+1;end;Rq=Rq+0X00001;do iG=Re[Rq];end;Rq=Rq+0X001;do if not(xq[0x00001]<=iG[5])then do Rq=iG[0X07];end;end;end;else do if not(xq[iG[0X0006]]<=xq[iG[1]])then else Rq=iG[0x007];end;end;end;end;end;else do if not(AG<0X00006)then if AG==7 then do xq[iG[7]]=kq[iG[0x6]];end;else local xM=je[iG[6]];local aM=xM[0X8];local hM,QM=#aM,nil;if not(hM>0)then else QM={};for ry=0X1,hM do local fy=aM[ry];if fy[1]~=0 then do QM[ry-1]=ve[fy[2]];end;else(QM)[ry-1]={xq,fy[0X2]};end;end;(A)(De,QM);end;xq[iG[7]]=NC(QM,oq,xM);end;else(xq)[iG[7]]=oq[iG[2]];end;end;end;else if AG>=2 then if AG<3 then xq[1]=oq[iG[2]];local Ro=(0X00001);do iG=Re[Rq];end;Rq=Rq+1;(xq)[0X02]=oq[iG[0X2]];Rq=Rq+1;Rq=Rq+0X1;do iG=Re[Rq];end;Rq=Rq+1;xq[0X2]=xq[0X2][iG[0X5]];iG=Re[Rq];Rq=Rq+0X1;(xq)[2]=xq[2][iG[0X5]];iG=Re[Rq];Rq=Rq+1;do(xq)[2]=xq[2][iG[5]];end;Rq=Rq+1;Rq=Rq+1;iG=Re[Rq];do Rq=Rq+0X0001;end;do xq[0X2]=xq[2][iG[5]];end;Rq=Rq+1;(xq)[Ro]=xq[Ro](xq[Ro+0X1]);do cq=Ro;end;Rq=Rq+0X1;Rq=Rq+1;iG=Re[Rq];Rq=Rq+1;if not(not(xq[1]<=iG[5]))then else do Rq=iG[7];end;end;else if AG==4 then repeat local jw,cw=De,(xq);if#jw>0 then local cz=({});do for gf,bf in D,jw do for s8,d8 in D,bf do if d8[0X1]==cw and d8[0X02]>=0 then local Gd=d8[2];if not cz[Gd]then cz[Gd]={cw[Gd]};end;do(d8)[1]=cz[Gd];end;do(d8)[2]=1;end;end;end;end;end;end;until true;return;else if not(not xq[iG[0X7]])then else Rq=iG[0X6];end;end;end;else if AG~=0x1 then if xq[iG[6]]~=xq[iG[0X1]]then Rq=iG[0X7];end;else if xq[iG[0X0006]]~=iG[0X5]then do Rq=iG[7];end;end;end;end;end;end;else if AG>=0X0010 then if not(AG<0X13)then if AG<20 then xq[iG[7]]={I({},1,iG[6])};else if AG==0X015 then local ws=iG[0X007];local Xs,Js=xq[ws]();if not(Xs)then else for RI=1,iG[1]do(xq)[ws+RI]=Js[RI];end;Rq=iG[6];end;else(xq)[0X1]=oq[iG[0X2]];do iG=Re[Rq];end;Rq=Rq+1;(xq)[2]=oq[iG[0X2]];Rq=Rq+0X01;Rq=Rq+0X0001;do iG=Re[Rq];end;Rq=Rq+0X1;xq[2]=xq[0X2][iG[5]];do iG=Re[Rq];end;Rq=Rq+0x01;(xq)[2]=xq[0X2][iG[5]];iG=Re[Rq];Rq=Rq+1;(xq)[2]=xq[2][iG[0X5]];Rq=Rq+1;Rq=Rq+1;do iG=Re[Rq];end;local M4=(0X0001);Rq=Rq+1;xq[0X0002]=xq[0X0002][iG[0X0005]];Rq=Rq+0X1;do Rq=Rq+1;end;Rq=Rq+1;xq[M4]=xq[M4](xq[M4+0X1]);cq=M4;iG=Re[Rq];do Rq=Rq+0X01;end;if not(xq[0X00001]<=iG[0x5])then do Rq=iG[7];end;end;end;end;else do if not(AG<17)then if AG~=18 then(xq)[1]=oq[iG[2]];iG=Re[Rq];Rq=Rq+1;xq[0X2]=iG[2];do iG=Re[Rq];end;local d5=(0x0);Rq=Rq+1;do xq[0X3]=oq[iG[2]];end;iG=Re[Rq];Rq=Rq+1;xq[3]=xq[3][iG[5]];iG=Re[Rq];Rq=Rq+0X0001;xq[0X4]=iG[2];iG=Re[Rq];do Rq=Rq+0x1;end;(xq)[5]=iG[2];do iG=Re[Rq];end;Rq=Rq+1;local c5=(3);do xq[0X6]=iG[0X2];end;Rq=Rq+0x1;local P5=(0x04);do if P5==0 then else cq=c5+P5-0x00001;end;end;local t5,I5=nil,(nil);if P5~=0x1 then t5,I5=rC(xq[c5](I(xq,c5+1,cq)));else do t5,I5=rC(xq[c5]());end;end;if d5~=0x1 then if d5==0 then t5=t5+c5-0X1;cq=t5;else do t5=c5+d5-2;end;cq=t5+0x001;end;local Hg=(0);for iA=c5,t5 do do Hg=Hg+1;end;(xq)[iA]=I5[Hg];end;else cq=c5-0X00001;end;Rq=Rq+0x1;c5=1;(xq[c5])(I(xq,c5+1,cq));do cq=c5-1;end;Rq=Rq+1;do Rq=Rq+1;end;iG=Re[Rq];Rq=Rq+0X001;Rq=iG[0X6];else(xq)[1]=oq[iG[0X0002]];iG=Re[Rq];local ep=0x1;Rq=Rq+1;(xq)[0X02]=iG[2];iG=Re[Rq];do Rq=Rq+0x1;end;(xq)[3]=oq[iG[2]];iG=Re[Rq];Rq=Rq+0X1;do(xq)[3]=xq[0X3][iG[0x5]];end;iG=Re[Rq];Rq=Rq+1;xq[3]=xq[3][iG[0x005]];Rq=Rq+0X1;Rq=Rq+0x00001;do iG=Re[Rq];end;Rq=Rq+0X1;xq[0X0003]=xq[3][iG[5]];do iG=Re[Rq];end;Rq=Rq+1;(xq)[3]=xq[0x3][iG[5]];iG=Re[Rq];Rq=Rq+1;xq[3]=xq[0X3][iG[5]];Rq=Rq+0X1;do Rq=Rq+0X1;end;Rq=Rq+0x001;xq[ep](xq[ep+1],xq[ep+0X2]);cq=ep-1;iG=Re[Rq];Rq=Rq+1;do Rq=iG[0X00006];end;end;else xq[iG[0X0007]]=iG[2];end;end;end;else if AG>=0x0d then if not(AG>=14)then else if AG==0xF then do(xq)[iG[0X7]]=xq[iG[6]]+xq[iG[1]];end;else for Vj=iG[0x7],iG[0X6]do xq[Vj]=nil;end;end;end;else if AG~=0XC then xq[iG[0X7]]=u(xq[iG[0X06]],xq[iG[1]]);else do(xq)[1]=oq[iG[0X2]];end;local zN=(3);do Rq=Rq+1;end;Rq=Rq+1;do iG=Re[Rq];end;Rq=Rq+1;local MN=0X0;(xq)[0x2]=iG[0X00002];iG=Re[Rq];Rq=Rq+0X01;(xq)[0X3]=oq[iG[0X2]];Rq=Rq+0X0001;do Rq=Rq+1;end;iG=Re[Rq];do Rq=Rq+1;end;(xq)[3]=xq[0x3][iG[0X005]];do iG=Re[Rq];end;Rq=Rq+1;(xq)[4]=iG[2];iG=Re[Rq];Rq=Rq+0X1;(xq)[5]=iG[2];iG=Re[Rq];Rq=Rq+0x00001;(xq)[6]=iG[0X00002];Rq=Rq+1;local fN=4;if fN~=0X0 then cq=zN+fN-0X1;end;local nN,QN=nil,(nil);do if fN==0X1 then nN,QN=rC(xq[zN]());else nN,QN=rC(xq[zN](I(xq,zN+0X1,cq)));end;end;if MN==0X01 then cq=zN-1;else if MN~=0X0 then nN=zN+MN-2;cq=nN+0X1;else nN=nN+zN-1;cq=nN;end;local Sr=(0X00000);for Rt=zN,nN do do Sr=Sr+0X01;end;xq[Rt]=QN[Sr];end;end;Rq=Rq+1;Rq=Rq+0X1;Rq=Rq+0X1;zN=1;xq[zN](I(xq,zN+1,cq));cq=zN-1;Rq=Rq+1;do Rq=Rq+0x00001;end;iG=Re[Rq];do Rq=Rq+1;end;Rq=iG[6];end;end;end;end;end;end);if Dq then if zq then if eq~=0X01 then return xq[Uq](I(xq,Uq+1,cq));else return xq[Uq]();end;elseif Uq then return I(xq,Uq,eq);end;else if f(zq)=="string"then if e(zq,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if e(zq,'\^\.\-\:%\d\+\058\ ')then b('\Lu\114\097\112\104\032\S\cr\i\112t\:'..(Ae[Rq-0X001]or"(internal)").."\: "..r(zq),0X0);else(b)(zq,0x0);end;else(b)(zq,0x00000);end;end;end;end;end;else if not(me<136)then if me~=137 then fe=function(...)local Ts,vs=1,{};local ds,Fs={[0X2]=vs,[1]=ce},(0);local Vs=m();local ss=((Vs==F and Le or Vs));local Ms,Rs=rC(...);Ms=Ms-1;do for N2=0,Ms do do if he>N2 then(vs)[N2]=Rs[N2+0X00001];else break;end;end;end;end;if not ge then Rs=nil;elseif xe then vs[he]={n=Ms>=he and Ms-he+1 or 0x0,I(Rs,he+0X0001,Ms+0X0001)};end;do if ss~=Vs then i(fe,ss);end;end;local is,cs,Is,Ds=j(function()while true do local VX=Re[Ts];local YX=(VX[4]);Ts=Ts+1;if not(YX<9)then if YX<0XE then do if YX<11 then if YX==10 then(vs)[0X0]=ss[VX[2]];Ts=Ts+0X01;Ts=Ts+0x1;VX=Re[Ts];local bJ=(0X0);Ts=Ts+1;local wJ=vs[0X0];vs[bJ+0X1]=wJ;do(vs)[bJ]=wJ[VX[5]];end;do VX=Re[Ts];end;do Ts=Ts+0X1;end;do(vs)[0X02]=VX[0X2];end;Ts=Ts+1;bJ=0X00000;vs[bJ]=vs[bJ](vs[bJ+0X1],vs[bJ+2]);Fs=bJ;Ts=Ts+1;do Ts=Ts+1;end;VX=Re[Ts];Ts=Ts+1;do vs[0X0]=vs[0x00][VX[0X0005]];end;do VX=Re[Ts];end;Ts=Ts+1;bJ=0X0000;wJ=vs[0];do(vs)[bJ+1]=wJ;end;do(vs)[bJ]=wJ[VX[0X5]];end;Ts=Ts+0X1;do bJ=0;end;(vs)[bJ]=vs[bJ](vs[bJ+0X1]);Fs=bJ;VX=Re[Ts];Ts=Ts+0X00001;if not(not vs[0X0])then else do Ts=VX[0X006];end;end;else repeat local vK,hK=De,(vs);if#vK>0x0 then local dl={};for TC,SC in D,vK do for tj,Kj in D,SC do if Kj[0X01]==hK and Kj[2]>=0X0 then local v7=(Kj[0X2]);if not dl[v7]then do dl[v7]={hK[v7]};end;end;Kj[0x1]=dl[v7];do Kj[0X2]=1;end;end;end;end;end;until true;return;end;else if not(YX>=0X000C)then for wh=VX[7],VX[0x6]do vs[wh]=nil;end;else if YX==13 then vs[VX[0X00007]]=not vs[VX[6]];else do if not(vs[VX[0X006]]<=vs[VX[0x001]])then else Ts=VX[0X7];end;end;end;end;end;end;else if not(YX>=0x10)then do if YX~=15 then else do vs[0X0]=ss[VX[0X0002]];end;Ts=Ts+1;do Ts=Ts+0X1;end;VX=Re[Ts];do Ts=Ts+1;end;do if not(not vs[0])then else Ts=VX[0X6];end;end;end;end;else if not(YX<17)then do if YX~=0x000012 then ss[VX[2]]=vs[VX[7]];else(vs)[VX[7]]={I({},0X1,VX[6])};end;end;else local eH=(je[VX[0x6]]);local CH=eH[8];local QH=(nil);local FH=(#CH);do if FH>0 then do QH={};end;for WP=1,FH do local OP=(CH[WP]);if OP[1]==0x0 then do(QH)[WP-1]={vs,OP[2]};end;else(QH)[WP-1]=ve[OP[0X02]];end;end;A(De,QH);end;end;do(vs)[VX[7]]=NC(QH,ss,eH);end;end;end;end;else if YX<0X0004 then do if not(YX<0X2)then if YX~=0X03 then vs[0x0]=ss[VX[0X2]];do Ts=Ts+0X00001;end;Ts=Ts+1;VX=Re[Ts];Ts=Ts+1;vs[0X1]=ss[VX[0X0002]];do Ts=Ts+0X1;end;do Ts=Ts+1;end;do VX=Re[Ts];end;local FA=0;do Ts=Ts+0X1;end;(vs)[0X2]=VX[2];VX=Re[Ts];Ts=Ts+0x1;vs[3]=VX[2];Ts=Ts+1;do Fs=FA+0x4-0x1;end;vs[FA](I(vs,FA+0x001,Fs));Fs=FA-1;VX=Re[Ts];Ts=Ts+0X1;do Ts=VX[0X6];end;else do(vs)[VX[7]]=vs[VX[0x6]]-vs[VX[0X001]];end;end;else if YX==1 then do(vs)[VX[0X7]]=-vs[VX[0X00006]];end;else do(vs)[VX[7]]=O(vs[VX[0x006]],vs[VX[0x01]]);end;end;end;end;else if not(YX<6)then if not(YX>=7)then(vs)[VX[7]]=VX[2];else if YX==0x8 then Ts=VX[6];else vs[0X000]=ss[VX[2]];do Ts=Ts+1;end;Ts=Ts+1;VX=Re[Ts];Ts=Ts+0X1;do vs[0X00000][VX[2]]=VX[5];end;VX=Re[Ts];Ts=Ts+0X00001;do Ts=VX[0X6];end;end;end;else do if YX~=0X5 then do if not(vs[VX[6]]<vs[VX[1]])then else Ts=VX[7];end;end;else(vs)[VX[7]]=ss[VX[0x2]];end;end;end;end;end;end;end);if not(is)then do if f(cs)=='s\116\114\105n\103'then if not(e(cs,'at\116\101m\p\116\032t\111\032\yi\101\108\100 \097\099r\111\s\s \109\et\097\m\101th\111\d/\C\%-\ca\108\108\ b\oundar\121'))then else return coroutine.yield();end;do if not(e(cs,"^.-:%d+: "))then(b)(cs,0X00000);else b('\L\117rap\h\032\S\c\114\i\112\116:'..(Ae[Ts-1]or"(internal)")..": "..r(cs),0);end;end;else(b)(cs,0x0);end;end;else if cs then if Ds==1 then return vs[Is]();else return vs[Is](I(vs,Is+1,Fs));end;elseif Is then return I(vs,Is,Ds);end;end;end;else do fe=function(...)local Dk,tk,vk=1,0X0,({});local Mk=(m());local Fk,Ik=(Mk==F and Le or Mk),({[1]=ce,[0X2]=vk});local qk,sk=rC(...);qk=qk-1;for yp=0X0,qk do do if not(he>yp)then break;else(vk)[yp]=sk[yp+1];end;end;end;if not ge then sk=nil;elseif not(xe)then else vk[he]={n=qk>=he and qk-he+1 or 0,I(sk,he+0X00001,qk+0X01)};end;if Fk~=Mk then i(fe,Fk);end;local hk,Sk,pk,Gk=j(function()while true do local cs=Re[Dk];local Us=cs[0X04];do Dk=Dk+1;end;if Us>=8 then if not(Us>=0Xc)then do if not(Us<0Xa)then if Us~=11 then Ik[cs[0X6]]=vk[cs[0X7]];else(vk)[cs[0x7]]=cs[2];end;else do if Us==9 then(vk)[cs[7]]=vk[cs[0X6]]>vk[cs[0X1]];else vk[cs[0X0007]]=cs[2];end;end;end;end;else do if not(Us<14)then if Us~=15 then do vk[0X00]=Fk[cs[2]];end;do Dk=Dk+0X1;end;Dk=Dk+0x00001;cs=Re[Dk];do Dk=Dk+1;end;(vk)[0]=vk[0X0][cs[5]];do Dk=Dk+1;end;Dk=Dk+0X0001;do cs=Re[Dk];end;local hX=(0X0);local uX=(je[cs[0X00006]]);Dk=Dk+1;local NX,XX=uX[8],nil;local vX=(#NX);if not(vX>0)then else do XX={};end;for bq=1,vX do local Aq=(NX[bq]);if Aq[0X1]~=0x0 then do XX[bq-0X0001]=ve[Aq[2]];end;else do XX[bq-0X1]={vk,Aq[2]};end;end;end;A(De,XX);end;vk[0X1]=NC(XX,Fk,uX);Dk=Dk+0X00001;vk[hX](vk[hX+1]);tk=hX-0x0001;Dk=Dk+0X1;Dk=Dk+1;Dk=Dk+0X001;repeat local lr,Vr=De,(vk);if not(#lr>0x00000)then else local fk=({});do for ot,gt in D,lr do do for ar,Tr in D,gt do if Tr[0X00001]==Vr and Tr[2]>=0X0 then local oQ=Tr[2];do if not(not fk[oQ])then else(fk)[oQ]={Vr[oQ]};end;end;(Tr)[0x1]=fk[oQ];(Tr)[0x2]=1;end;end;end;end;end;end;until true;return;else(vk)[cs[0X7]]=Fk[cs[0X02]];end;else if Us~=0X0d then Dk=cs[0X00006];else(vk)[cs[0x7]]={I({},0X1,cs[6])};end;end;end;end;else if not(Us>=0X04)then if not(Us>=0X002)then do if Us==0x001 then else if not(vk[cs[0X6]]<vk[cs[0X1]])then else do Dk=cs[7];end;end;end;end;else if Us==0X0003 then vk[cs[0X00007]]=vk[cs[6]]*vk[cs[0x1]];else if vk[cs[0X7]]then Dk=cs[6];end;end;end;else if not(Us>=6)then if Us~=0X5 then(vk)[cs[0x00007]]=vk[cs[0X6]]/vk[cs[1]];else for LX=cs[0X7],cs[6]do(vk)[LX]=nil;end;end;else if Us~=0X7 then do(vk)[cs[0X007]]=T(vk[cs[6]]);end;else local ep=je[cs[6]];local Ap=ep[8];local Zp=nil;local Lp=(#Ap);do if Lp>0X0 then Zp={};for VE=1,Lp do local LE=Ap[VE];if LE[1]==0 then Zp[VE-1]={vk,LE[2]};else(Zp)[VE-1]=ve[LE[0X2]];end;end;A(De,Zp);end;end;do(vk)[cs[0X7]]=NC(Zp,Fk,ep);end;end;end;end;end;end;end);if hk then do if Sk then if Gk~=0x0001 then return vk[pk](I(vk,pk+1,tk));else do return vk[pk]();end;end;elseif not(pk)then else return I(vk,pk,Gk);end;end;else if f(Sk)=="string"then if e(Sk,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(Sk,"^.-:%d+: ")then(b)("Luraph Script:"..(Ae[Dk-0X1]or"(internal)")..": "..r(Sk),0X00000);else(b)(Sk,0X0);end;else b(Sk,0X0000);end;end;end;end;end;else fe=function(...)local Wi,Ci=0x0,({});local Bi=1;local ki=({[0X2]=Ci,[1]=ce});local vi=(m());local ni=(vi==F and Le or vi);local ci,mi=rC(...);ci=ci-0X0001;for oO=0,ci do if he>oO then do(Ci)[oO]=mi[oO+1];end;else break;end;end;if not ge then do mi=nil;end;elseif xe then do Ci[he]={n=ci>=he and ci-he+0X0001 or 0,I(mi,he+0X1,ci+0X001)};end;end;if ni==vi then else i(fe,ni);end;local ji,Vi,Oi,hi=j(function()while true do local yp=Re[Bi];local ep=yp[0X4];Bi=Bi+1;do if not(ep<14)then do if not(ep<0X15)then if ep>=25 then if ep>=0X0001b then if ep==0X00001c then do repeat local bB,JB=De,(Ci);do if not(#bB>0)then else local lx={};for U0,n0 in D,bB do do for iP,pP in D,n0 do do if pP[1]==JB and pP[0X2]>=0X00000 then local rM=pP[2];if not lx[rM]then lx[rM]={JB[rM]};end;pP[0X01]=lx[rM];do pP[2]=0X1;end;end;end;end;end;end;end;end;until true;end;local q_=(yp[0X00007]);do return false,q_,q_;end;else do Ci[0]=ni[yp[0x2]];end;do yp=Re[Bi];end;Bi=Bi+1;(Ci)[0X0000]=Ci[0x0][yp[5]];Bi=Bi+0X1;Bi=Bi+0X1;do yp=Re[Bi];end;do Bi=Bi+0X001;end;do(Ci)[0x00000]=Ci[0][yp[5]];end;do yp=Re[Bi];end;Bi=Bi+0X1;Ci[0X000]=Ci[0][yp[5]];Bi=Bi+1;Bi=Bi+1;yp=Re[Bi];Bi=Bi+1;do(Ci)[0]=Ci[0X00000][yp[0x5]];end;do yp=Re[Bi];end;do Bi=Bi+1;end;(Ci)[0X0]=Ci[0X00][yp[0x5]];Bi=Bi+0X1;Bi=Bi+1;yp=Re[Bi];Bi=Bi+1;(Ci)[0X0]=Ci[0][yp[5]];do Bi=Bi+0X1;end;Bi=Bi+1;yp=Re[Bi];Bi=Bi+1;do(Ci)[0X00000]=Ci[0][yp[0X5]];end;do Bi=Bi+1;end;Bi=Bi+1;yp=Re[Bi];do Bi=Bi+1;end;(Ci)[0]=Ci[0X0][yp[0X05]];Bi=Bi+1;Bi=Bi+0x0001;yp=Re[Bi];Bi=Bi+0X001;Ci[0X0]=Ci[0][yp[5]];Bi=Bi+0X01;do Bi=Bi+0X00001;end;local Ru=(0);yp=Re[Bi];Bi=Bi+1;local Ou=Ci[0];do Ci[Ru+0X0001]=Ou;end;Ci[Ru]=Ou[yp[0X00005]];yp=Re[Bi];Bi=Bi+1;(Ci)[2]=yp[2];Bi=Bi+0X1;do Ru=0;end;(Ci)[Ru]=Ci[Ru](Ci[Ru+1],Ci[Ru+2]);Wi=Ru;do Bi=Bi+1;end;Bi=Bi+0x1;yp=Re[Bi];Bi=Bi+0X1;do(Ci)[0x1]=yp[2];end;Bi=Bi+0X1;Ci[2]=#Ci[0];do Bi=Bi+1;end;(Ci)[0X03]=true;do Bi=Bi+0X1;end;do(Ci)[0X004]=Ci[0X0][Ci[2]];end;do Bi=Bi+0X1;end;Bi=Bi+0X1;do yp=Re[Bi];end;Bi=Bi+0x01;Ru=4;Ou=Ci[0x00004];(Ci)[Ru+0X00001]=Ou;Ci[Ru]=Ou[yp[0X0005]];yp=Re[Bi];Bi=Bi+1;Ci[0X06]=yp[2];Bi=Bi+1;Ru=4;do(Ci)[Ru]=Ci[Ru](Ci[Ru+1],Ci[Ru+2]);end;Wi=Ru;do Bi=Bi+0x1;end;Bi=Bi+1;yp=Re[Bi];Bi=Bi+0X001;if not Ci[0X4]then Bi=yp[6];end;end;else if ep~=26 then Ci[0X9]=Ci[1];local ph=(9);yp=Re[Bi];Bi=Bi+0X0001;(Ci)[10]=yp[2];Bi=Bi+0X0001;Ci[0X09]=Ci[ph]..Ci[ph+0X01];Bi=Bi+0X1;Ci[0X1]=Ci[9];do yp=Re[Bi];end;Bi=Bi+1;Bi=yp[6];else Bi=yp[0x6];end;end;else if ep<23 then if ep~=0X000016 then else Ci[yp[7]]=Ci[yp[0X06]]/Ci[yp[1]];end;else if ep~=24 then(ni)[yp[2]]=Ci[yp[7]];else(Ci)[yp[0X07]]=ni[yp[0X2]];end;end;end;else do if ep>=0X011 then if not(ep<0X13)then if ep==20 then local Me,Je=4,(Ci[1]);do(Ci)[Me+1]=Je;end;(Ci)[Me]=Je[yp[0X5]];yp=Re[Bi];do Bi=Bi+0X00001;end;do(Ci)[6]=yp[2];end;Bi=Bi+0X01;do Ci[0X7]=#Ci[0X01];end;yp=Re[Bi];do Bi=Bi+1;end;(Ci)[0x007]=Ci[7]-yp[5];Bi=Bi+0X1;Me=0X00004;do Wi=Me+4-1;end;(Ci)[Me]=Ci[Me](I(Ci,Me+0X1,Wi));do Wi=Me;end;Bi=Bi+0X00001;Ci[0X1]=Ci[4];yp=Re[Bi];Bi=Bi+0X0001;Bi=yp[6];else do Ci[yp[0X7]]=Ci[yp[6]]<Ci[yp[1]];end;end;else if ep==0x0012 then if not(not Ci[yp[7]])then else Bi=yp[0X6];end;else(Ci)[0X04]=ni[yp[0X002]];Bi=Bi+0X00001;do Bi=Bi+0X1;end;do yp=Re[Bi];end;Bi=Bi+0X0001;Ci[0x4]=Ci[4][yp[0X00005]];do Bi=Bi+0X1;end;local Yj=(4);(Ci)[0X5]=Ci[0x0];yp=Re[Bi];Bi=Bi+1;(Ci)[0X06]=yp[2];Bi=Bi+0X01;(Ci[Yj])(Ci[Yj+0X01],Ci[Yj+0X2]);Wi=Yj-0x01;do yp=Re[Bi];end;Bi=Bi+1;do Ci[0x4]=ni[yp[0X2]];end;Bi=Bi+0x001;do Bi=Bi+1;end;yp=Re[Bi];do Bi=Bi+0X1;end;do(Ci)[0X5]=Ci[0X0][yp[0X0005]];end;Bi=Bi+0x001;do Bi=Bi+0X01;end;Bi=Bi+1;Yj=0x4;Ci[Yj]=Ci[Yj](Ci[Yj+0X1]);Wi=Yj;do yp=Re[Bi];end;do Bi=Bi+0x1;end;if not(not Ci[0x4])then else do Bi=yp[0x06];end;end;end;end;else do if not(ep>=15)then do Ci[yp[7]]={I({},0X1,yp[0X6])};end;else do if ep~=16 then Ci[0X00004]=false;Bi=Bi+1;(Ci)[0X0003]=Ci[0x4];do yp=Re[Bi];end;Bi=Bi+0x1;Bi=yp[6];else local gp=(Ci[yp[0x6]]/Ci[yp[1]]);Ci[yp[7]]=gp-gp%1;end;end;end;end;end;end;end;end;else if ep<7 then if not(ep>=3)then if not(ep>=1)then Ci[0x4]=ni[yp[2]];yp=Re[Bi];Bi=Bi+1;(Ci)[4]=Ci[0X0004][yp[0x5]];Bi=Bi+0X1;Bi=Bi+1;local r0=4;do Bi=Bi+1;end;Ci[0x5]=Ci[0x0000];Bi=Bi+0X1;(Ci)[6]=#Ci[0x0];local F0=(0X4);Bi=Bi+0X1;(Ci[F0])(Ci[F0+1],Ci[F0+2]);do Wi=F0-0X001;end;Bi=Bi+1;do Bi=Bi+1;end;yp=Re[Bi];Bi=Bi+1;do Ci[0X004]=yp[0x2];end;Bi=Bi+0X1;Ci[5]=#Ci[0X000];yp=Re[Bi];Bi=Bi+1;do Ci[0x6]=yp[0X2];end;do yp=Re[Bi];end;Bi=Bi+1;F0=Ci[r0];local d0=(Ci[r0+1]);local H0=Ci[r0+0X2];Ci[r0]=g(function()for Yi=F0,d0,H0 do d(true,Yi);end;end);do Bi=yp[6];end;else if ep==2 then Ci[4]=ni[yp[2]];Bi=Bi+0X0001;do Bi=Bi+1;end;yp=Re[Bi];Bi=Bi+0X1;(Ci)[0X0004]=Ci[4][yp[5]];Bi=Bi+1;Bi=Bi+1;local QO=(4);Bi=Bi+0X00001;(Ci)[5]=Ci[0];yp=Re[Bi];Bi=Bi+1;Ci[6]=yp[2];Bi=Bi+0X1;(Ci[QO])(Ci[QO+0X01],Ci[QO+0X2]);Wi=QO-0X1;do yp=Re[Bi];end;Bi=Bi+0X1;do Bi=yp[0X6];end;else(Ci)[yp[7]]=#Ci[yp[6]];end;end;else if not(ep>=0x5)then if ep==4 then Ci[0x8]=Ci[0X0][Ci[7]];Bi=Bi+1;Ci[0x0009]=Ci[0x0001];Bi=Bi+0X00001;do Ci[0Xa]=Ci[8];end;Bi=Bi+1;local oq=0X9;(Ci)[0X9]=Ci[oq]..Ci[oq+0X01];do Bi=Bi+0X1;end;Ci[1]=Ci[9];Bi=Bi+1;do(Ci)[0X00009]=#Ci[0];end;yp=Re[Bi];Bi=Bi+0X1;if Ci[9]~=Ci[7]then else Bi=yp[0X7];end;else do for W0=yp[7],yp[0X6]do(Ci)[W0]=nil;end;end;end;else if ep==6 then if not(Ci[yp[6]]<=Ci[yp[0x0001]])then else do Bi=yp[0x00007];end;end;else local LS=(je[yp[6]]);local pS=(LS[0x8]);local ZS=nil;local PS=#pS;do if not(PS>0)then else ZS={};for PQ=0X00001,PS do local uQ=(pS[PQ]);if uQ[1]==0 then ZS[PQ-0X001]={Ci,uQ[0X2]};else ZS[PQ-1]=ve[uQ[0x2]];end;end;(A)(De,ZS);end;end;do(Ci)[yp[7]]=NC(ZS,ni,LS);end;end;end;end;else if not(ep>=0Xa)then if not(ep<8)then if ep==9 then local yY=yp[0X7];local hY,VY=Ci[yY]();if hY then Bi=yp[0X6];(Ci)[yY+0X03]=VY;end;else repeat local r1,H1=De,Ci;if#r1>0x000 then local CH=({});for JH,QH in D,r1 do for AD,cD in D,QH do do if not(cD[0X1]==H1 and cD[2]>=0X000)then else local Mv=cD[2];do if not(not CH[Mv])then else do(CH)[Mv]={H1[Mv]};end;end;end;cD[1]=CH[Mv];cD[2]=0X1;end;end;end;end;end;until true;do return;end;end;else Ci[yp[7]]=Ci[yp[0X006]];end;else if not(ep<12)then do if ep==13 then do if not(Ci[yp[7]])then else Bi=yp[0x06];end;end;else do(Ci)[yp[0X7]]=yp[0X2];end;end;end;else if ep~=0xB then Ci[0]=ni[yp[0X0002]];do yp=Re[Bi];end;do Bi=Bi+0X1;end;do(Ci)[0]=Ci[0X000][yp[5]];end;do yp=Re[Bi];end;do Bi=Bi+1;end;do Ci[0X0]=Ci[0][yp[0X5]];end;do Bi=Bi+0X001;end;Bi=Bi+0x0001;yp=Re[Bi];do Bi=Bi+1;end;(Ci)[0x0]=Ci[0X0][yp[5]];yp=Re[Bi];do Bi=Bi+1;end;Ci[0]=Ci[0][yp[5]];yp=Re[Bi];Bi=Bi+0X1;Ci[0x0]=Ci[0x0000][yp[5]];yp=Re[Bi];Bi=Bi+0X1;Ci[0X00000]=Ci[0x0000][yp[5]];Bi=Bi+0X001;Bi=Bi+0x1;do yp=Re[Bi];end;Bi=Bi+0X1;if not Ci[0]then do Bi=yp[6];end;end;else(Ci)[yp[7]]=Ci[yp[0X6]]%Ci[yp[0X1]];end;end;end;end;end;end;end;end);if ji then if Vi then if hi~=1 then do return Ci[Oi](I(Ci,Oi+1,Wi));end;else return Ci[Oi]();end;elseif not(Oi)then else return I(Ci,Oi,hi);end;else do if f(Vi)~="string"then(b)(Vi,0);else if e(Vi,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if not(e(Vi,"\^\.\-\:\%\d+\:\ "))then b(Vi,0);else b("Luraph Script:"..(Ae[Bi-1]or"(internal)")..": "..r(Vi),0);end;end;end;end;end;end;end;end;else if not(me>=132)then if not(me>=0X0082)then fe=function(...)local vQ=({});local DQ=0X01;local nQ=(m());local jQ=({[1]=ce,[0X2]=vQ});local LQ,PQ=rC(...);local EQ=(0X0);local tQ=((nQ==F and Le or nQ));LQ=LQ-1;for bP=0X0,LQ do do if not(he>bP)then break;else vQ[bP]=PQ[bP+1];end;end;end;do if not ge then PQ=nil;elseif xe then vQ[he]={n=LQ>=he and LQ-he+1 or 0,I(PQ,he+0X01,LQ+1)};end;end;if tQ==nQ then else(i)(fe,tQ);end;local cQ,wQ,xQ,dQ=j(function()while true do local eD=Re[DQ];local sD=eD[4];DQ=DQ+1;do if not(sD>=0X7)then if sD<3 then if not(sD>=1)then vQ[eD[7]]=vQ[eD[6]][vQ[eD[0X01]]];else do if sD~=0x2 then vQ[eD[0x07]]={I({},1,eD[6])};else vQ[0]=tQ[eD[0X2]];eD=Re[DQ];DQ=DQ+0X001;vQ[0X0]=vQ[0][eD[0X005]];DQ=DQ+0X1;DQ=DQ+1;eD=Re[DQ];do DQ=DQ+0X1;end;do(vQ)[0]=vQ[0x0000][eD[5]];end;local LN=(0);eD=Re[DQ];DQ=DQ+1;local FN=(vQ[0X00]);(vQ)[LN+0X001]=FN;vQ[LN]=FN[eD[5]];do eD=Re[DQ];end;local QN=je[eD[6]];DQ=DQ+0X01;local lN=nil;local ZN=QN[0X008];local xN=(#ZN);if xN>0 then lN={};do for Eg=0X1,xN do local Vg=(ZN[Eg]);if Vg[1]~=0X000 then(lN)[Eg-0X1]=ve[Vg[0x2]];else lN[Eg-0X1]={vQ,Vg[2]};end;end;end;A(De,lN);end;(vQ)[2]=NC(lN,tQ,QN);DQ=DQ+1;LN=0X0000;vQ[LN](vQ[LN+1],vQ[LN+2]);EQ=LN-0x01;DQ=DQ+1;do DQ=DQ+0X001;end;eD=Re[DQ];DQ=DQ+0X1;(vQ)[0]=tQ[eD[0X2]];DQ=DQ+0x1;DQ=DQ+0X001;eD=Re[DQ];do DQ=DQ+1;end;QN=je[eD[6]];do lN=nil;end;ZN=QN[8];do xN=#ZN;end;if not(xN>0)then else lN={};do for Hy=0x1,xN do local oy=ZN[Hy];if oy[1]~=0X0 then(lN)[Hy-0x1]=ve[oy[0X2]];else lN[Hy-0X1]={vQ,oy[0X2]};end;end;end;(A)(De,lN);end;vQ[0X1]=NC(lN,tQ,QN);do eD=Re[DQ];end;DQ=DQ+1;do vQ[0][eD[0X002]]=vQ[1];end;eD=Re[DQ];DQ=DQ+1;vQ[0]=tQ[eD[0X02]];DQ=DQ+1;do DQ=DQ+1;end;eD=Re[DQ];DQ=DQ+0x01;QN=je[eD[0X0006]];lN=nil;ZN=QN[0X8];do xN=#ZN;end;if not(xN>0)then else do lN={};end;do for ZZ=1,xN do local NZ=(ZN[ZZ]);do if NZ[1]~=0X000 then lN[ZZ-1]=ve[NZ[0x2]];else do(lN)[ZZ-0X001]={vQ,NZ[0x02]};end;end;end;end;end;(A)(De,lN);end;vQ[1]=NC(lN,tQ,QN);do eD=Re[DQ];end;DQ=DQ+0X1;do vQ[0][eD[2]]=vQ[0X0001];end;eD=Re[DQ];DQ=DQ+0x00001;do vQ[0x000]=tQ[eD[2]];end;DQ=DQ+0X001;DQ=DQ+0X0001;eD=Re[DQ];DQ=DQ+0X1;QN=je[eD[6]];do lN=nil;end;do ZN=QN[8];end;xN=#ZN;if xN>0X0 then lN={};for bx=0X01,xN do local Zx=ZN[bx];if Zx[1]~=0X0 then lN[bx-1]=ve[Zx[2]];else do lN[bx-0X0001]={vQ,Zx[2]};end;end;end;(A)(De,lN);end;(vQ)[1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+0X1;(vQ[0X0000])[eD[2]]=vQ[1];eD=Re[DQ];DQ=DQ+1;do(vQ)[0x0]=tQ[eD[2]];end;DQ=DQ+0x1;DQ=DQ+1;eD=Re[DQ];DQ=DQ+1;do QN=je[eD[6]];end;lN=nil;ZN=QN[0X8];xN=#ZN;if not(xN>0x000)then else do lN={};end;for we=0X1,xN do local be=(ZN[we]);if be[1]==0X00 then lN[we-0X0001]={vQ,be[0X02]};else lN[we-1]=ve[be[0X2]];end;end;(A)(De,lN);end;vQ[1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+0X1;(vQ[0])[eD[0X02]]=vQ[0X1];eD=Re[DQ];do DQ=DQ+0X0001;end;(vQ)[0]=tQ[eD[0X2]];DQ=DQ+0X001;DQ=DQ+1;eD=Re[DQ];do DQ=DQ+1;end;QN=je[eD[6]];lN=nil;ZN=QN[8];xN=#ZN;do if not(xN>0)then else do lN={};end;do for QX=0X1,xN do local GX=(ZN[QX]);do if GX[1]==0 then do(lN)[QX-1]={vQ,GX[2]};end;else lN[QX-0x1]=ve[GX[0x02]];end;end;end;end;(A)(De,lN);end;end;vQ[0X01]=NC(lN,tQ,QN);do eD=Re[DQ];end;DQ=DQ+0X1;(vQ[0])[eD[0X2]]=vQ[1];eD=Re[DQ];DQ=DQ+0x00001;(vQ)[0X000]=tQ[eD[0X2]];DQ=DQ+0x1;DQ=DQ+1;eD=Re[DQ];do DQ=DQ+1;end;QN=je[eD[6]];do lN=nil;end;ZN=QN[0x8];xN=#ZN;if not(xN>0)then else lN={};do for uY=0X0001,xN do local aY=ZN[uY];if aY[0X1]==0 then(lN)[uY-0x001]={vQ,aY[2]};else lN[uY-1]=ve[aY[2]];end;end;end;(A)(De,lN);end;vQ[0X1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+0X001;(vQ[0x0])[eD[0X2]]=vQ[1];eD=Re[DQ];DQ=DQ+1;vQ[0]=tQ[eD[2]];do DQ=DQ+0X1;end;do DQ=DQ+0X1;end;eD=Re[DQ];do DQ=DQ+1;end;QN=je[eD[0X006]];lN=nil;do ZN=QN[8];end;xN=#ZN;if xN>0X00 then lN={};for qI=1,xN do local VI=ZN[qI];if VI[0X01]==0 then lN[qI-0X00001]={vQ,VI[2]};else(lN)[qI-0X1]=ve[VI[0X2]];end;end;(A)(De,lN);end;(vQ)[0X1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+1;vQ[0][eD[2]]=vQ[0X1];eD=Re[DQ];do DQ=DQ+0X1;end;do(vQ)[0]=tQ[eD[2]];end;eD=Re[DQ];DQ=DQ+0X1;QN=je[eD[0X6]];do lN=nil;end;ZN=QN[8];do xN=#ZN;end;do if xN>0X0 then do lN={};end;for p4=1,xN do local x4=ZN[p4];if x4[0X00001]==0 then lN[p4-0x1]={vQ,x4[0X2]};else lN[p4-1]=ve[x4[0X2]];end;end;A(De,lN);end;end;(vQ)[1]=NC(lN,tQ,QN);eD=Re[DQ];do DQ=DQ+0X001;end;(vQ[0X00])[eD[2]]=vQ[0x0001];eD=Re[DQ];DQ=DQ+1;do(vQ)[0X0]=tQ[eD[2]];end;DQ=DQ+1;do DQ=DQ+0X0001;end;do eD=Re[DQ];end;DQ=DQ+0X1;do QN=je[eD[6]];end;do lN=nil;end;ZN=QN[0X08];do xN=#ZN;end;do if xN>0 then do lN={};end;for g3=0X1,xN do local W3=(ZN[g3]);do if W3[1]~=0X00000 then do(lN)[g3-0X1]=ve[W3[2]];end;else lN[g3-0X1]={vQ,W3[2]};end;end;end;A(De,lN);end;end;vQ[0X1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+0X1;vQ[0][eD[0x2]]=vQ[0X001];eD=Re[DQ];DQ=DQ+1;do vQ[0x0000]=tQ[eD[2]];end;eD=Re[DQ];DQ=DQ+0X1;QN=je[eD[6]];lN=nil;do ZN=QN[0X8];end;xN=#ZN;do if xN>0 then lN={};do for fh=1,xN do local lh=ZN[fh];if lh[1]~=0X0 then do lN[fh-1]=ve[lh[2]];end;else do lN[fh-1]={vQ,lh[2]};end;end;end;end;(A)(De,lN);end;end;vQ[0X1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+0X1;(vQ[0])[eD[0X0002]]=vQ[0X1];eD=Re[DQ];DQ=DQ+0X1;vQ[0x0]=tQ[eD[2]];eD=Re[DQ];DQ=DQ+1;QN=je[eD[6]];lN=nil;do ZN=QN[8];end;do xN=#ZN;end;do if not(xN>0X00000)then else lN={};for YC=0X1,xN do local OC=(ZN[YC]);if OC[0x1]==0X0000 then do lN[YC-1]={vQ,OC[0X2]};end;else(lN)[YC-1]=ve[OC[2]];end;end;(A)(De,lN);end;end;vQ[1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+1;vQ[0][eD[2]]=vQ[1];eD=Re[DQ];do DQ=DQ+0X001;end;do(vQ)[0X000]=tQ[eD[0X2]];end;do eD=Re[DQ];end;DQ=DQ+0X1;QN=je[eD[0X6]];lN=nil;ZN=QN[0X8];xN=#ZN;if not(xN>0X0)then else lN={};for SB=1,xN do local RB=(ZN[SB]);if RB[0X00001]~=0 then lN[SB-0x1]=ve[RB[0X2]];else(lN)[SB-1]={vQ,RB[0X2]};end;end;A(De,lN);end;(vQ)[1]=NC(lN,tQ,QN);do eD=Re[DQ];end;DQ=DQ+1;vQ[0][eD[2]]=vQ[0X01];eD=Re[DQ];do DQ=DQ+0X1;end;(vQ)[0x0]=tQ[eD[0X2]];do DQ=DQ+0X1;end;DQ=DQ+0X00001;do eD=Re[DQ];end;DQ=DQ+1;QN=je[eD[0X6]];lN=nil;ZN=QN[0X08];xN=#ZN;if xN>0X00000 then lN={};for NN=0x0001,xN do local sN=ZN[NN];if sN[0X1]~=0 then(lN)[NN-1]=ve[sN[2]];else(lN)[NN-1]={vQ,sN[0X2]};end;end;A(De,lN);end;vQ[1]=NC(lN,tQ,QN);eD=Re[DQ];do DQ=DQ+1;end;vQ[0][eD[0X2]]=vQ[0X01];eD=Re[DQ];DQ=DQ+1;do(vQ)[0X0]=tQ[eD[2]];end;eD=Re[DQ];DQ=DQ+1;do QN=je[eD[6]];end;lN=nil;ZN=QN[8];xN=#ZN;do if not(xN>0X00)then else lN={};for o8=0X1,xN do local K8=(ZN[o8]);if K8[1]~=0 then(lN)[o8-1]=ve[K8[2]];else(lN)[o8-0X001]={vQ,K8[2]};end;end;(A)(De,lN);end;end;(vQ)[1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+0X00001;(vQ[0X00000])[eD[0x2]]=vQ[1];eD=Re[DQ];DQ=DQ+0X01;vQ[0]=tQ[eD[0X2]];DQ=DQ+1;do DQ=DQ+1;end;do eD=Re[DQ];end;DQ=DQ+1;QN=je[eD[6]];lN=nil;do ZN=QN[0x8];end;do xN=#ZN;end;do if not(xN>0)then else do lN={};end;for HG=0X1,xN do local dG=ZN[HG];do if dG[0x1]==0 then(lN)[HG-1]={vQ,dG[0X00002]};else(lN)[HG-1]=ve[dG[0X2]];end;end;end;A(De,lN);end;end;vQ[1]=NC(lN,tQ,QN);eD=Re[DQ];do DQ=DQ+1;end;(vQ[0X0000])[eD[0X02]]=vQ[1];do eD=Re[DQ];end;DQ=DQ+1;vQ[0X000]=tQ[eD[0X0002]];do DQ=DQ+0X001;end;do DQ=DQ+0x00001;end;eD=Re[DQ];DQ=DQ+1;QN=je[eD[6]];lN=nil;ZN=QN[0X8];xN=#ZN;do if xN>0X00 then lN={};for W8=1,xN do local N8=(ZN[W8]);if N8[0x1]~=0X0 then(lN)[W8-1]=ve[N8[2]];else(lN)[W8-0x1]={vQ,N8[2]};end;end;(A)(De,lN);end;end;(vQ)[1]=NC(lN,tQ,QN);do eD=Re[DQ];end;DQ=DQ+1;vQ[0X0][eD[0X00002]]=vQ[1];eD=Re[DQ];DQ=DQ+1;do(vQ)[0]=tQ[eD[2]];end;do eD=Re[DQ];end;do DQ=DQ+1;end;QN=je[eD[0X06]];lN=nil;ZN=QN[8];xN=#ZN;if xN>0X00 then lN={};for DT=1,xN do local rT=ZN[DT];if rT[0X00001]==0X0 then do lN[DT-0X0001]={vQ,rT[2]};end;else lN[DT-1]=ve[rT[0x2]];end;end;A(De,lN);end;do(vQ)[1]=NC(lN,tQ,QN);end;eD=Re[DQ];DQ=DQ+0X1;do(vQ[0X000])[eD[0X0002]]=vQ[0X1];end;do eD=Re[DQ];end;DQ=DQ+0X01;(vQ)[0X0]=tQ[eD[2]];eD=Re[DQ];do DQ=DQ+1;end;QN=je[eD[6]];lN=nil;do ZN=QN[0x0008];end;do xN=#ZN;end;if not(xN>0)then else do lN={};end;for kF=1,xN do local wF=(ZN[kF]);if wF[0x0001]==0x000 then(lN)[kF-1]={vQ,wF[0X2]};else(lN)[kF-0X00001]=ve[wF[2]];end;end;A(De,lN);end;(vQ)[1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+1;(vQ[0X0])[eD[0x2]]=vQ[0X1];eD=Re[DQ];DQ=DQ+1;(vQ)[0X0]=tQ[eD[2]];eD=Re[DQ];DQ=DQ+1;QN=je[eD[6]];lN=nil;ZN=QN[8];xN=#ZN;if not(xN>0)then else do lN={};end;for eq=1,xN do local Oq=(ZN[eq]);if Oq[0X01]==0X00 then do(lN)[eq-1]={vQ,Oq[0X2]};end;else(lN)[eq-1]=ve[Oq[2]];end;end;(A)(De,lN);end;(vQ)[0x1]=NC(lN,tQ,QN);do eD=Re[DQ];end;DQ=DQ+1;do vQ[0][eD[2]]=vQ[1];end;eD=Re[DQ];DQ=DQ+0x1;(vQ)[0X0]=tQ[eD[2]];DQ=DQ+1;do DQ=DQ+0X001;end;do eD=Re[DQ];end;DQ=DQ+1;QN=je[eD[0X0006]];lN=nil;ZN=QN[8];xN=#ZN;if xN>0 then lN={};do for uw=0X00001,xN do local tw=ZN[uw];if tw[0X1]~=0x0 then(lN)[uw-1]=ve[tw[2]];else(lN)[uw-1]={vQ,tw[2]};end;end;end;A(De,lN);end;(vQ)[0X1]=NC(lN,tQ,QN);do eD=Re[DQ];end;DQ=DQ+0X01;(vQ[0X00])[eD[0X2]]=vQ[0x1];do eD=Re[DQ];end;DQ=DQ+1;vQ[0]=tQ[eD[0X2]];DQ=DQ+1;do DQ=DQ+0x1;end;eD=Re[DQ];DQ=DQ+1;do QN=je[eD[6]];end;lN=nil;ZN=QN[8];xN=#ZN;if not(xN>0X0)then else do lN={};end;do for si=1,xN do local di=(ZN[si]);do if di[1]~=0 then do lN[si-0x0001]=ve[di[2]];end;else lN[si-0X1]={vQ,di[0X2]};end;end;end;end;(A)(De,lN);end;(vQ)[1]=NC(lN,tQ,QN);eD=Re[DQ];do DQ=DQ+0x1;end;(vQ[0])[eD[0X2]]=vQ[1];do eD=Re[DQ];end;do DQ=DQ+0X1;end;vQ[0X0]=tQ[eD[2]];do DQ=DQ+1;end;do DQ=DQ+0X1;end;eD=Re[DQ];do DQ=DQ+1;end;QN=je[eD[6]];lN=nil;ZN=QN[8];xN=#ZN;if not(xN>0)then else lN={};do for k5=0X01,xN do local J5=(ZN[k5]);if J5[1]~=0X00 then(lN)[k5-0X00001]=ve[J5[0X2]];else do lN[k5-1]={vQ,J5[2]};end;end;end;end;(A)(De,lN);end;(vQ)[0X1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+0X1;(vQ[0])[eD[2]]=vQ[0X001];eD=Re[DQ];DQ=DQ+1;vQ[0x0000]=tQ[eD[2]];eD=Re[DQ];DQ=DQ+0X1;QN=je[eD[0X6]];lN=nil;ZN=QN[0X8];xN=#ZN;if not(xN>0X0)then else lN={};do for Y4=1,xN do local p4=(ZN[Y4]);if p4[1]~=0 then(lN)[Y4-1]=ve[p4[2]];else(lN)[Y4-1]={vQ,p4[2]};end;end;end;(A)(De,lN);end;do(vQ)[1]=NC(lN,tQ,QN);end;eD=Re[DQ];DQ=DQ+0X0001;vQ[0][eD[0x2]]=vQ[0X1];do eD=Re[DQ];end;DQ=DQ+0X1;vQ[0]=tQ[eD[2]];eD=Re[DQ];DQ=DQ+0X01;QN=je[eD[0x6]];lN=nil;ZN=QN[0X08];xN=#ZN;if xN>0X0 then do lN={};end;for XZ=0X1,xN do local wZ=ZN[XZ];if wZ[0X1]==0 then(lN)[XZ-0X1]={vQ,wZ[0X002]};else do(lN)[XZ-0X1]=ve[wZ[2]];end;end;end;A(De,lN);end;vQ[1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+0X1;vQ[0X00][eD[2]]=vQ[0x001];eD=Re[DQ];do DQ=DQ+0x00001;end;vQ[0X0]=tQ[eD[2]];DQ=DQ+1;DQ=DQ+0X001;do eD=Re[DQ];end;DQ=DQ+0x1;do QN=je[eD[0X6]];end;lN=nil;ZN=QN[0x00008];do xN=#ZN;end;if not(xN>0)then else lN={};for XF=1,xN do local UF=ZN[XF];if UF[0X00001]~=0 then do lN[XF-0X1]=ve[UF[2]];end;else(lN)[XF-0X0001]={vQ,UF[0X02]};end;end;(A)(De,lN);end;vQ[0x1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+1;(vQ[0X0])[eD[0X2]]=vQ[0X1];eD=Re[DQ];do DQ=DQ+0X001;end;(vQ)[0]=tQ[eD[2]];eD=Re[DQ];DQ=DQ+1;do QN=je[eD[0X6]];end;lN=nil;do ZN=QN[8];end;xN=#ZN;if not(xN>0)then else lN={};for Mi=0X1,xN do local xi=ZN[Mi];do if xi[1]~=0 then do(lN)[Mi-0x1]=ve[xi[2]];end;else lN[Mi-0x0001]={vQ,xi[2]};end;end;end;(A)(De,lN);end;vQ[1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+0X01;(vQ[0])[eD[2]]=vQ[0X1];do eD=Re[DQ];end;DQ=DQ+1;vQ[0X0]=tQ[eD[0x2]];DQ=DQ+1;DQ=DQ+0X1;eD=Re[DQ];DQ=DQ+1;QN=je[eD[6]];do lN=nil;end;do ZN=QN[8];end;xN=#ZN;do if not(xN>0)then else lN={};do for UI=0X1,xN do local bI=(ZN[UI]);do if bI[0X00001]==0X0000 then(lN)[UI-0X0001]={vQ,bI[0X2]};else(lN)[UI-1]=ve[bI[2]];end;end;end;end;(A)(De,lN);end;end;(vQ)[1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+0X1;(vQ[0X0])[eD[0X2]]=vQ[1];do eD=Re[DQ];end;DQ=DQ+1;do(vQ)[0]=tQ[eD[0X2]];end;do eD=Re[DQ];end;DQ=DQ+0X1;do QN=je[eD[0X6]];end;lN=nil;ZN=QN[0X08];xN=#ZN;if xN>0 then lN={};for TK=0X1,xN do local AK=(ZN[TK]);if AK[1]==0X0 then lN[TK-1]={vQ,AK[2]};else do lN[TK-0X1]=ve[AK[2]];end;end;end;A(De,lN);end;(vQ)[0X1]=NC(lN,tQ,QN);eD=Re[DQ];do DQ=DQ+1;end;(vQ[0])[eD[2]]=vQ[0X1];eD=Re[DQ];DQ=DQ+1;(vQ)[0X0]=tQ[eD[2]];do DQ=DQ+0X1;end;DQ=DQ+1;do eD=Re[DQ];end;DQ=DQ+1;do QN=je[eD[6]];end;lN=nil;do ZN=QN[8];end;xN=#ZN;if not(xN>0X0)then else lN={};for gZ=0X00001,xN do local LZ=ZN[gZ];if LZ[0x1]==0X0 then do lN[gZ-0X001]={vQ,LZ[0X00002]};end;else lN[gZ-0X1]=ve[LZ[0X2]];end;end;A(De,lN);end;(vQ)[1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+1;do vQ[0x0][eD[2]]=vQ[0x1];end;eD=Re[DQ];DQ=DQ+0X1;(vQ)[0X0]=tQ[eD[2]];eD=Re[DQ];do DQ=DQ+1;end;do QN=je[eD[0X6]];end;lN=nil;do ZN=QN[0x00008];end;xN=#ZN;if not(xN>0X0)then else lN={};for qy=0X001,xN do local By=(ZN[qy]);if By[0x1]~=0 then lN[qy-0X1]=ve[By[0X2]];else(lN)[qy-0X00001]={vQ,By[0X2]};end;end;(A)(De,lN);end;(vQ)[1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+1;vQ[0X0][eD[2]]=vQ[0X1];do eD=Re[DQ];end;do DQ=DQ+1;end;(vQ)[0x0]=tQ[eD[2]];eD=Re[DQ];DQ=DQ+1;do QN=je[eD[0X0006]];end;do lN=nil;end;ZN=QN[0x8];xN=#ZN;if not(xN>0x00000)then else do lN={};end;do for e7=0X1,xN do local Z7=ZN[e7];if Z7[1]==0x000 then(lN)[e7-0X1]={vQ,Z7[0X02]};else do lN[e7-1]=ve[Z7[0x2]];end;end;end;end;A(De,lN);end;do vQ[0X0001]=NC(lN,tQ,QN);end;eD=Re[DQ];DQ=DQ+1;vQ[0][eD[2]]=vQ[0x1];eD=Re[DQ];do DQ=DQ+1;end;(vQ)[0]=tQ[eD[0x02]];DQ=DQ+0X1;DQ=DQ+1;eD=Re[DQ];do DQ=DQ+1;end;QN=je[eD[0X006]];lN=nil;ZN=QN[8];do xN=#ZN;end;if xN>0X00000 then lN={};for st=1,xN do local Gt=(ZN[st]);if Gt[0X00001]==0 then lN[st-0X001]={vQ,Gt[0X0002]};else do lN[st-1]=ve[Gt[0X2]];end;end;end;(A)(De,lN);end;(vQ)[0x1]=NC(lN,tQ,QN);do eD=Re[DQ];end;DQ=DQ+0x0001;do(vQ[0X0])[eD[0X2]]=vQ[0X1];end;eD=Re[DQ];DQ=DQ+1;(vQ)[0]=tQ[eD[0X2]];DQ=DQ+1;DQ=DQ+0x1;eD=Re[DQ];DQ=DQ+0x1;QN=je[eD[6]];lN=nil;do ZN=QN[0X8];end;do xN=#ZN;end;do if not(xN>0X0)then else lN={};do for l9=0x1,xN do local w9=(ZN[l9]);do if w9[1]~=0 then do(lN)[l9-0X1]=ve[w9[0X2]];end;else(lN)[l9-0X0001]={vQ,w9[2]};end;end;end;end;(A)(De,lN);end;end;vQ[1]=NC(lN,tQ,QN);eD=Re[DQ];DQ=DQ+1;(vQ[0])[eD[2]]=vQ[0X01];eD=Re[DQ];DQ=DQ+0x1;do vQ[0X000]=tQ[eD[0X2]];end;eD=Re[DQ];DQ=DQ+1;QN=je[eD[0x6]];lN=nil;do ZN=QN[0X8];end;xN=#ZN;if xN>0 then lN={};do for Cg=0x1,xN do local ag=ZN[Cg];if ag[0X1]==0 then lN[Cg-0X1]={vQ,ag[0X2]};else do(lN)[Cg-0X001]=ve[ag[0X00002]];end;end;end;end;(A)(De,lN);end;do(vQ)[0X1]=NC(lN,tQ,QN);end;eD=Re[DQ];DQ=DQ+0x0001;(vQ[0X0])[eD[2]]=vQ[1];eD=Re[DQ];DQ=DQ+0X01;(vQ)[0]=tQ[eD[2]];eD=Re[DQ];DQ=DQ+1;QN=je[eD[6]];lN=nil;ZN=QN[8];xN=#ZN;if not(xN>0X00000)then else lN={};do for Iq=1,xN do local Hq=ZN[Iq];do if Hq[1]~=0 then(lN)[Iq-0X01]=ve[Hq[0X2]];else do(lN)[Iq-1]={vQ,Hq[2]};end;end;end;end;end;(A)(De,lN);end;do(vQ)[0X1]=NC(lN,tQ,QN);end;do eD=Re[DQ];end;DQ=DQ+1;vQ[0x0][eD[0X2]]=vQ[1];do DQ=DQ+1;end;repeat local bb,sb=De,(vQ);if not(#bb>0X00)then else local H9=({});for Hn,Yn in D,bb do for kC,ZC in D,Yn do if not(ZC[0x00001]==sb and ZC[0X2]>=0)then else local c_=(ZC[2]);if not(not H9[c_])then else H9[c_]={sb[c_]};end;(ZC)[0x1]=H9[c_];(ZC)[0x0002]=1;end;end;end;end;until true;return;end;end;end;else do if not(sD>=0x5)then do if sD~=4 then do repeat local Sg,Qg,Zg=De,vQ,eD[0x007];if#Sg>0X00 then local mx=({});for UQ,HQ in D,Sg do do for vi,Pi in D,HQ do if not(Pi[1]==Qg and Pi[0x0002]>=Zg)then else local X_=Pi[2];if not mx[X_]then(mx)[X_]={Qg[X_]};end;(Pi)[1]=mx[X_];do Pi[2]=0X01;end;end;end;end;end;end;until true;end;else jQ[eD[0x6]]=vQ[eD[7]];end;end;else do if sD==0X6 then(vQ)[eD[0X7]]=true;else do(vQ)[eD[7]]=tQ[eD[0X2]];end;end;end;end;end;end;else if sD>=0X000B then if not(sD<13)then do if sD==14 then(vQ)[eD[0X0007]]=eD[2];else if not(not vQ[eD[0X00007]])then else DQ=eD[0X6];end;end;end;else do if sD==12 then do(vQ)[eD[0X7]]=vQ[eD[0X006]]~=vQ[eD[0X1]];end;else local oo=eD[6];local Vo=vQ[oo];do for W7=oo+1,eD[0X00001]do Vo=Vo..vQ[W7];end;end;do(vQ)[eD[0X00007]]=Vo;end;end;end;end;else if not(sD<0x00009)then if sD==0Xa then for WL=eD[7],eD[6]do(vQ)[WL]=nil;end;else end;else if sD==8 then DQ=eD[0X00006];else local VV=(je[eD[0X0006]]);local PV=(VV[0x8]);local HV=(#PV);local nV=(nil);do if HV>0X000 then nV={};for wH=0X1,HV do local dH=PV[wH];if dH[0X1]==0X0000 then(nV)[wH-0x00001]={vQ,dH[0X02]};else do(nV)[wH-0X1]=ve[dH[2]];end;end;end;A(De,nV);end;end;vQ[eD[7]]=NC(nV,tQ,VV);end;end;end;end;end;end;end);if not(cQ)then if f(wQ)~="s\116r\in\g"then(b)(wQ,0X00);else do if not(e(wQ,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;if e(wQ,"^.-:%d+: ")then(b)("Lu\114\097\112\104\ \083\cr\105\pt:"..(Ae[DQ-1]or'(i\110t\e\114n\097\l)')..": "..r(wQ),0);else(b)(wQ,0);end;end;else if wQ then do if dQ==1 then do return vQ[xQ]();end;else return vQ[xQ](I(vQ,xQ+0X1,EQ));end;end;elseif xQ then do return I(vQ,xQ,dQ);end;end;end;end;else if me==0X0083 then do fe=function(...)local Yb=({});local vb=(1);local rb=(m());local Sb,yb=rC(...);local Mb={[1]=ce,[0X2]=Yb};Sb=Sb-0X1;local cb=((rb==F and Le or rb));local Gb=0;for eY=0X0,Sb do if he>eY then(Yb)[eY]=yb[eY+1];else break;end;end;do if not ge then yb=nil;elseif xe then Yb[he]={n=Sb>=he and Sb-he+1 or 0,I(yb,he+1,Sb+1)};end;end;if cb==rb then else(i)(fe,cb);end;local bb,Nb,Lb,Fb=j(function()do while true do local Dc=(Re[vb]);local Gc=Dc[4];vb=vb+1;if Gc<51 then do if not(Gc>=25)then do if not(Gc>=0xC)then if not(Gc>=6)then if Gc>=0X3 then if Gc>=4 then if Gc==5 then Yb[0X4]=cb[Dc[2]];do vb=vb+0x1;end;(Yb)[5]={I({},1,0X3)};Dc=Re[vb];local L7=(5);vb=vb+1;Yb[6]=Dc[2];Dc=Re[vb];vb=vb+0X01;Yb[7]=Dc[2];Dc=Re[vb];vb=vb+1;do Yb[8]=Dc[2];end;vb=vb+0X001;local D7,o7=Yb[L7],((1-1)*0x032);for KQ=0X1,3 do(D7)[o7+KQ]=Yb[L7+KQ];end;vb=vb+1;do(Yb)[0X6]=Yb[0];end;local F7=(0X3);vb=vb+1;L7=4;local n7=(3);do if F7~=0 then Gb=L7+F7-1;end;end;local w7,x7=nil,nil;if F7~=1 then w7,x7=rC(Yb[L7](I(Yb,L7+1,Gb)));else w7,x7=rC(Yb[L7]());end;if n7==1 then do Gb=L7-1;end;else if n7~=0 then w7=L7+n7-2;Gb=w7+1;else w7=w7+L7-0x01;Gb=w7;end;local DH=0;do for y_=L7,w7 do do DH=DH+0X1;end;(Yb)[y_]=x7[DH];end;end;end;vb=vb+0X0001;vb=vb+1;Dc=Re[vb];vb=vb+1;do Yb[0X006]=cb[Dc[2]];end;vb=vb+1;do Yb[7]=Yb[0X0004];end;vb=vb+1;L7=6;F7=2;n7=4;if F7==0 then else Gb=L7+F7-0X1;end;w7,x7=nil;do if F7~=1 then do w7,x7=rC(Yb[L7](I(Yb,L7+1,Gb)));end;else w7,x7=rC(Yb[L7]());end;end;if n7~=1 then do if n7~=0 then w7=L7+n7-0x002;Gb=w7+1;else w7=w7+L7-1;Gb=w7;end;end;local Py=(0);for ks=L7,w7 do Py=Py+0X01;Yb[ks]=x7[Py];end;else Gb=L7-0X01;end;Dc=Re[vb];vb=vb+1;L7=0X00006;local V7=g(function(...)d();for uT,hT in...do d(true,uT,hT);end;end);(V7)(Yb[L7],Yb[L7+0X00001],Yb[L7+0x2]);Gb=L7;(Yb)[L7]=V7;vb=Dc[0X6];else Yb[Dc[0X0007]]={I({},1,Dc[0x6])};end;else do Yb[0x4]=cb[Dc[2]];end;do vb=vb+1;end;do vb=vb+0X00001;end;do Dc=Re[vb];end;vb=vb+1;local Nl=0x4;Yb[5]=cb[Dc[0X002]];do vb=vb+1;end;Yb[Nl]=Yb[Nl](Yb[Nl+0X00001]);Gb=Nl;Dc=Re[vb];do vb=vb+0x1;end;if Yb[0X4]then do vb=Dc[0X6];end;end;end;else if Gc<1 then repeat local pp,Ep,Sp=De,Yb,Dc[0x7];if#pp>0 then local T8=({});for Fz,Cz in D,pp do for pn,Vn in D,Cz do if not(Vn[0x1]==Ep and Vn[0X0002]>=Sp)then else local Rr=(Vn[2]);if not T8[Rr]then T8[Rr]={Ep[Rr]};end;do(Vn)[1]=T8[Rr];end;(Vn)[0x2]=1;end;end;end;end;until true;else do if Gc~=0X002 then repeat local qR,eR=De,(Yb);if not(#qR>0x000)then else local Ht={};do for PK,yK in D,qR do for JU,zU in D,yK do if zU[1]==eR and zU[0x02]>=0 then local a8=zU[0X002];if not(not Ht[a8])then else do(Ht)[a8]={eR[a8]};end;end;do(zU)[1]=Ht[a8];end;(zU)[0X002]=1;end;end;end;end;end;until true;do return;end;else do Yb[0XC]=cb[Dc[2]];end;Dc=Re[vb];vb=vb+1;Yb[13]=Yb[10][Dc[5]];local WB=(0X0000C);vb=vb+1;(Yb)[WB]=Yb[WB](Yb[WB+0X1]);Gb=WB;vb=vb+0x1;Yb[0X0000c]=#Yb[12];do Dc=Re[vb];end;vb=vb+0X1;(Yb)[13]=cb[Dc[0x02]];vb=vb+0x1;vb=vb+0X1;Dc=Re[vb];vb=vb+1;Yb[14]=Yb[0XB][Dc[5]];vb=vb+1;vb=vb+1;do vb=vb+1;end;WB=0XD;(Yb)[WB]=Yb[WB](Yb[WB+1]);Gb=WB;do vb=vb+1;end;do vb=vb+1;end;do vb=vb+1;end;(Yb)[13]=#Yb[0X0D];Dc=Re[vb];vb=vb+1;(Yb)[0X000e]=cb[Dc[2]];do Dc=Re[vb];end;vb=vb+0X001;(Yb)[15]=cb[Dc[0X02]];Dc=Re[vb];vb=vb+0X1;Yb[15]=Yb[0X000F][Dc[0X5]];do vb=vb+1;end;do vb=vb+1;end;Dc=Re[vb];do vb=vb+1;end;Yb[0X10]=Yb[10][Dc[0X5]];do vb=vb+1;end;(Yb)[15]=Yb[0X0F][Yb[16]];vb=vb+1;vb=vb+0X1;vb=vb+1;do WB=0Xe;end;(Yb)[WB]=Yb[WB](Yb[WB+0X1]);Gb=WB;do Dc=Re[vb];end;vb=vb+1;Yb[15]=cb[Dc[0X2]];vb=vb+0X1;vb=vb+0x01;Dc=Re[vb];vb=vb+0X1;Yb[0x10]=cb[Dc[2]];Dc=Re[vb];vb=vb+0X0001;(Yb)[0X10]=Yb[16][Dc[5]];do vb=vb+0X1;end;do vb=vb+0x1;end;Dc=Re[vb];do vb=vb+0x1;end;Yb[0X0011]=Yb[0X0b][Dc[5]];vb=vb+0X1;(Yb)[0x0010]=Yb[16][Yb[0x0011]];vb=vb+0X01;vb=vb+1;do vb=vb+1;end;WB=0xf;Yb[WB]=Yb[WB](Yb[WB+1]);Gb=WB;do vb=vb+1;end;do vb=vb+1;end;vb=vb+0X00001;(Yb)[16]=not Yb[14];Dc=Re[vb];vb=vb+0x01;if not(not Yb[0X00010])then else vb=Dc[6];end;end;end;end;end;else do if not(Gc<9)then do if not(Gc>=0X0000a)then(Yb)[0X3]=cb[Dc[2]];do vb=vb+0x1;end;do vb=vb+0X01;end;Dc=Re[vb];vb=vb+1;if not(not Yb[3])then else vb=Dc[6];end;else if Gc==11 then Yb[9]=cb[Dc[0x0002]];vb=vb+1;vb=vb+1;Dc=Re[vb];vb=vb+1;if not Yb[0x9]then vb=Dc[0X6];end;else(Yb)[4]=cb[Dc[0x00002]];do vb=vb+0X1;end;Gb=0x0004;do Yb[Gb]=Yb[Gb]();end;local GE=(0X4);do vb=vb+1;end;do(Yb)[0X001]=Yb[0x4];end;Dc=Re[vb];vb=vb+1;Yb[0X4]=cb[Dc[2]];do vb=vb+1;end;vb=vb+0X1;Dc=Re[vb];vb=vb+0X1;(Yb)[5]=Dc[2];vb=vb+0X1;Yb[GE]=Yb[GE](Yb[GE+0X1]);Gb=GE;vb=vb+0X1;vb=vb+1;Dc=Re[vb];vb=vb+1;if not(Yb[0X4])then else vb=Dc[6];end;end;end;end;else if not(Gc<7)then if Gc~=8 then do if not(not(Yb[Dc[0x06]]<Yb[Dc[1]]))then else vb=Dc[0X7];end;end;else do Yb[0X9]=cb[Dc[2]];end;Dc=Re[vb];vb=vb+0x1;Yb[9]=Yb[9][Dc[5]];do vb=vb+1;end;Gb=9;(Yb[Gb])();do Gb=Gb-1;end;Dc=Re[vb];vb=vb+0X1;do vb=Dc[0X006];end;end;else do Yb[0X00004]=cb[Dc[0x02]];end;vb=vb+1;vb=vb+0X0001;do Dc=Re[vb];end;vb=vb+0X1;do(Yb)[5]=cb[Dc[0X2]];end;vb=vb+0X1;Yb[4]=Yb[0x0004][Yb[0X0005]];do Dc=Re[vb];end;vb=vb+1;if not Yb[4]then vb=Dc[6];end;end;end;end;end;else if not(Gc>=18)then do if not(Gc<15)then if not(Gc>=16)then(Yb)[4]=cb[Dc[2]];vb=vb+1;do Gb=0x4;end;(Yb[Gb])();do Gb=Gb-0X001;end;vb=vb+1;vb=vb+0X00001;Dc=Re[vb];vb=vb+0X00001;vb=Dc[0X6];else if Gc~=17 then do(Yb)[3]=cb[Dc[2]];end;Dc=Re[vb];vb=vb+1;Yb[0X0003]=Yb[0X3][Dc[0X00005]];Dc=Re[vb];vb=vb+0x1;if not Yb[0x003]then vb=Dc[0X0006];end;else local Rh=ve[0x0000];do Yb[5]=Rh[0X1][Rh[2]];end;Dc=Re[vb];vb=vb+1;(Yb)[5]=Yb[0X5][Dc[0X5]];vb=vb+0X01;Yb[0X6]=Yb[0X04];vb=vb+1;Yb[0x0007]=nil;vb=vb+0X001;(Yb)[0X0008]=Yb[0X000];vb=vb+0X01;Yb[9]={};Dc=Re[vb];local Wh=0X0005;vb=vb+0X00001;Yb[0X9][Dc[2]]=Dc[5];vb=vb+0X1;Gb=Wh+0X05-0x1;(Yb[Wh])(I(Yb,Wh+0X1,Gb));Gb=Wh-1;do vb=vb+0X001;end;vb=vb+1;Dc=Re[vb];vb=vb+1;vb=Dc[0X6];end;end;else do if not(Gc>=13)then Yb[3]=cb[Dc[2]];vb=vb+1;vb=vb+1;Dc=Re[vb];vb=vb+0X0001;do(Yb)[0x0003]=Yb[3][Dc[0X5]];end;do vb=vb+0X1;end;(Yb)[3]=not Yb[0X3];Dc=Re[vb];vb=vb+1;do vb=Dc[0x00006];end;else if Gc~=14 then local et=(ve[0X0000]);Yb[5]=et[1][et[2]];Dc=Re[vb];vb=vb+0X1;do Yb[5]=Yb[0X00005][Dc[0X5]];end;local ft=(0x005);do vb=vb+1;end;vb=vb+0X0001;vb=vb+1;Yb[6]=Yb[4];do vb=vb+0x1;end;(Yb)[ft]=Yb[ft](Yb[ft+0X1]);Gb=ft;do vb=vb+0X1;end;vb=vb+1;Dc=Re[vb];do vb=vb+1;end;if not Yb[5]then do vb=Dc[0X6];end;end;else Yb[0x9]=cb[Dc[2]];vb=vb+1;vb=vb+1;Dc=Re[vb];vb=vb+1;(Yb)[9]=Yb[9][Dc[5]];vb=vb+0X1;vb=vb+1;vb=vb+0X1;local l5=9;do(Yb)[0X000A]=true;end;do vb=vb+0X1;end;do Yb[l5]=Yb[l5](Yb[l5+0x1]);end;Gb=l5;vb=vb+1;(Yb)[0X7]=Yb[9];Dc=Re[vb];vb=vb+1;Yb[9]=cb[Dc[0X2]];do vb=vb+0X0001;end;Yb[10]=Yb[7];do Dc=Re[vb];end;vb=vb+1;(Yb)[11]=cb[Dc[0X2]];vb=vb+0X1;do vb=vb+0X1;end;do vb=vb+1;end;do l5=0x9;end;(Yb[l5])(Yb[l5+0X1],Yb[l5+2]);Gb=l5-1;Dc=Re[vb];do vb=vb+1;end;vb=Dc[6];end;end;end;end;end;else if Gc<21 then do if Gc>=19 then if Gc==20 then Yb[0X4]=cb[Dc[0x02]];vb=vb+0X1;do vb=vb+1;end;Dc=Re[vb];vb=vb+1;if not(not Yb[4])then else vb=Dc[0X6];end;else(Yb)[3]=cb[Dc[0X02]];vb=vb+0X1;vb=vb+1;Dc=Re[vb];vb=vb+1;do Yb[3]=Yb[0X3][Dc[5]];end;Dc=Re[vb];local lK=(0X3);do vb=vb+0x1;end;do(Yb)[4]=Dc[2];end;vb=vb+0X1;(Yb)[lK]=Yb[lK](Yb[lK+0X0001]);Gb=lK;do vb=vb+0x1;end;vb=vb+0x1;Dc=Re[vb];vb=vb+1;do if not(not Yb[0x3])then else do vb=Dc[0X06];end;end;end;end;else Yb[0X5]=cb[Dc[0x02]];do vb=vb+0x0001;end;vb=vb+1;Dc=Re[vb];vb=vb+0x1;do(Yb)[0X00005]=Yb[5][Dc[5]];end;vb=vb+0X1;do vb=vb+1;end;Dc=Re[vb];do vb=vb+0x01;end;if not(not Yb[0X005])then else vb=Dc[0X6];end;end;end;else if Gc<0X000017 then if Gc==22 then do Yb[9]=nil;end;local FB=4;Dc=Re[vb];vb=vb+0x1;(Yb)[10]=cb[Dc[2]];do Dc=Re[vb];end;vb=vb+1;local eB=(0Xa);Yb[11]=cb[Dc[0X2]];vb=vb+0x1;vb=vb+0x1;do vb=vb+0x1;end;local xB=2;do if xB==0 then else do Gb=eB+xB-1;end;end;end;local aB,jB=nil,nil;do if xB~=0X0001 then aB,jB=rC(Yb[eB](I(Yb,eB+1,Gb)));else aB,jB=rC(Yb[eB]());end;end;if FB==1 then Gb=eB-0x00001;else if FB==0X0 then aB=aB+eB-0x1;Gb=aB;else aB=eB+FB-0x2;Gb=aB+1;end;local jq=(0);for Sp=eB,aB do jq=jq+1;(Yb)[Sp]=jB[jq];end;end;do Dc=Re[vb];end;do vb=vb+0X1;end;eB=10;local YB=g(function(...)d();do for wa,ua in...do d(true,wa,ua);end;end;end);(YB)(Yb[eB],Yb[eB+1],Yb[eB+2]);Gb=eB;(Yb)[eB]=YB;do vb=Dc[6];end;else Yb[0X8]=cb[Dc[2]];vb=vb+0x001;vb=vb+0X1;local Rk=(8);Dc=Re[vb];vb=vb+0x1;Yb[9]=Dc[2];vb=vb+0X01;Yb[Rk](Yb[Rk+0X01]);Gb=Rk-0x1;vb=vb+1;do vb=vb+0X0001;end;Dc=Re[vb];vb=vb+1;Yb[0X8]=cb[Dc[0X0002]];do vb=vb+1;end;vb=vb+0x0001;Dc=Re[vb];vb=vb+0x001;Yb[0X00008]=Yb[0X8][Dc[5]];Dc=Re[vb];do vb=vb+1;end;Yb[8]=Yb[8][Dc[0x005]];vb=vb+1;vb=vb+0X0001;do Dc=Re[vb];end;do vb=vb+0X1;end;Yb[9]=cb[Dc[0x00002]];do vb=vb+0x1;end;do vb=vb+0x1;end;Dc=Re[vb];vb=vb+0X1;Yb[0x000a]=cb[Dc[0X00002]];Dc=Re[vb];vb=vb+1;do(Yb)[0X0A]=Yb[10][Dc[0x0005]];end;vb=vb+1;do vb=vb+1;end;Dc=Re[vb];vb=vb+1;Yb[10]=Yb[10][Dc[5]];vb=vb+0X1;do vb=vb+0X1;end;vb=vb+0X001;Rk=9;Yb[Rk]=Yb[Rk](Yb[Rk+1]);do Gb=Rk;end;do vb=vb+0X0001;end;Yb[8]=Yb[0X8]-Yb[9];do Dc=Re[vb];end;vb=vb+0X1;if not(Dc[2]<Yb[0x8])then vb=Dc[7];end;end;else if Gc~=24 then do(Yb)[14]=cb[Dc[2]];end;do vb=vb+0X1;end;vb=vb+1;Dc=Re[vb];vb=vb+1;(Yb)[0XF]=Yb[0X0B][Dc[5]];vb=vb+1;vb=vb+0X00001;Dc=Re[vb];vb=vb+0X001;do if Yb[0XE]~=Yb[0x00F]then else do vb=Dc[7];end;end;end;else(Yb)[11]=cb[Dc[2]];vb=vb+1;do vb=vb+0X001;end;Dc=Re[vb];vb=vb+1;if not Yb[0XB]then vb=Dc[0x06];end;end;end;end;end;end;end;else if Gc>=38 then if Gc<0X2c then if Gc>=0X029 then if not(Gc>=42)then(Yb)[3]=cb[Dc[0X2]];vb=vb+0X1;vb=vb+1;Dc=Re[vb];vb=vb+0X001;(Yb)[0X0003]=Yb[3][Dc[5]];Dc=Re[vb];vb=vb+0X1;if Yb[0X3]then vb=Dc[0X6];end;else if Gc~=43 then Yb[0X0b]=cb[Dc[2]];vb=vb+1;vb=vb+0x01;vb=vb+0X1;do Gb=0XB;end;(Yb[Gb])();Gb=Gb-0X1;vb=vb+1;vb=vb+0X001;do Dc=Re[vb];end;vb=vb+0X1;(Yb)[0XB]=cb[Dc[0X2]];Dc=Re[vb];vb=vb+0X0001;Yb[0XB]=Yb[0x0000B][Dc[5]];Dc=Re[vb];vb=vb+0X00001;if not Yb[11]then vb=Dc[6];end;else(Yb)[4]=cb[Dc[2]];do vb=vb+0X1;end;vb=vb+0x01;vb=vb+1;do Gb=0x4;end;do(Yb)[Gb]=Yb[Gb]();end;vb=vb+0X0001;(Yb)[2]=Yb[4];Dc=Re[vb];vb=vb+0X1;vb=Dc[6];end;end;else if Gc>=0x027 then if Gc~=40 then(Yb)[13]=Yb[12];vb=vb+1;do(Yb)[0X9]=Yb[0XD];end;Dc=Re[vb];vb=vb+0X00001;vb=Dc[0x6];else do Yb[13]=cb[Dc[0X0002]];end;local Yh=(13);vb=vb+1;Yb[0x000E]=Yb[0XC];do vb=vb+0X1;end;(Yb)[Yh]=Yb[Yh](Yb[Yh+0x1]);Gb=Yh;do Dc=Re[vb];end;vb=vb+0X1;if Yb[0x0d]==Dc[0x00005]then do vb=Dc[0x7];end;end;end;else(Mb)[Dc[0X6]]=Yb[Dc[0X7]];end;end;else do if Gc>=47 then if not(Gc>=0X0031)then do if Gc==48 then(Yb)[9]=cb[Dc[0X2]];Dc=Re[vb];vb=vb+1;do Yb[0x9]=Yb[0X9][Dc[5]];end;vb=vb+0X01;do vb=vb+1;end;do Dc=Re[vb];end;vb=vb+1;Yb[0X9]=Yb[0x09][Dc[5]];Dc=Re[vb];vb=vb+0X001;if Yb[0X00009]~=Yb[0x6]then vb=Dc[0X0007];end;else(Yb)[0x0000a]=cb[Dc[2]];Dc=Re[vb];do vb=vb+0X1;end;do Yb[0X00a]=Yb[10][Dc[5]];end;do vb=vb+1;end;do vb=vb+0X1;end;do Dc=Re[vb];end;vb=vb+0X1;vb=Dc[6];end;end;else do if Gc~=50 then Yb[0x8]=cb[Dc[2]];do vb=vb+1;end;do vb=vb+1;end;vb=vb+0X1;Gb=0X8;do(Yb)[Gb]=Yb[Gb]();end;vb=vb+0x001;Yb[0X8]=Yb[0x08]-Yb[0X5];Dc=Re[vb];vb=vb+0X0001;Yb[0x8]=Yb[0x008]>Dc[5];do Dc=Re[vb];end;do vb=vb+1;end;if not Yb[8]then vb=Dc[0X006];end;else do(Yb)[12]=cb[Dc[2]];end;vb=vb+0x1;do vb=vb+1;end;vb=vb+1;Gb=0xC;do(Yb)[Gb]=Yb[Gb]();end;do vb=vb+0X1;end;vb=vb+1;do Dc=Re[vb];end;vb=vb+1;if not Yb[0X0C]then do vb=Dc[6];end;end;end;end;end;else if not(Gc>=0X02D)then Yb[14]=cb[Dc[2]];do Dc=Re[vb];end;vb=vb+1;local T2=(0x0E);Yb[0x0000f]=Yb[12][Dc[5]];do vb=vb+0X1;end;vb=vb+0X1;do vb=vb+1;end;for yN=16,17 do Yb[yN]=nil;end;Dc=Re[vb];vb=vb+1;(Yb)[0x00012]=Dc[0X002];vb=vb+0x001;Gb=T2+0x00005-0X1;(Yb)[T2]=Yb[T2](I(Yb,T2+1,Gb));Gb=T2;do vb=vb+0X001;end;do vb=vb+0X1;end;Dc=Re[vb];vb=vb+1;if not(not Yb[0X00E])then else vb=Dc[6];end;else if Gc==0x2e then do if not(not(Yb[Dc[6]]<=Yb[Dc[1]]))then else do vb=Dc[7];end;end;end;else(Yb)[0X8]=cb[Dc[0X2]];local NU=(0X0008);vb=vb+1;do vb=vb+0X1;end;Dc=Re[vb];vb=vb+0X0001;(Yb)[0X0009]=Dc[2];vb=vb+1;local DU=ve[0x00];Yb[NU]=Yb[NU](Yb[NU+0x0001]);Gb=NU;vb=vb+0X1;do(Yb)[9]=DU[1][DU[0X2]];end;vb=vb+1;vb=vb+0x01;do Dc=Re[vb];end;vb=vb+1;(Yb)[0X9]=Yb[9][Dc[5]];vb=vb+1;vb=vb+0X1;vb=vb+0X0001;Yb[0Xa]=Yb[8];vb=vb+1;NU=9;Yb[NU]=Yb[NU](Yb[NU+0X001]);Gb=NU;vb=vb+0X01;do vb=vb+1;end;do Dc=Re[vb];end;vb=vb+1;if not Yb[9]then do vb=Dc[0X00006];end;end;end;end;end;end;end;else do if not(Gc>=0X1F)then do if Gc<28 then do if not(Gc>=26)then if Yb[Dc[0X7]]then do vb=Dc[6];end;end;else if Gc==0X0001B then(Yb)[Dc[0X7]]=O(Yb[Dc[0x6]],Yb[Dc[0X1]]);else local Uk=(je[Dc[0X0006]]);local Gk,kk=Uk[8],(nil);local Jk=(#Gk);if not(Jk>0X0)then else kk={};for bl=1,Jk do local Ul=Gk[bl];if Ul[0x1]~=0 then kk[bl-1]=ve[Ul[2]];else(kk)[bl-1]={Yb,Ul[2]};end;end;(A)(De,kk);end;Yb[Dc[7]]=NC(kk,cb,Uk);end;end;end;else do if not(Gc>=29)then Yb[4]=cb[Dc[0X2]];vb=vb+1;vb=vb+1;Dc=Re[vb];vb=vb+0X00001;if Yb[4]then do vb=Dc[6];end;end;else do if Gc~=30 then(Yb)[11]=cb[Dc[2]];vb=vb+1;vb=vb+0X1;vb=vb+0X001;Gb=11;Yb[Gb]=Yb[Gb]();vb=vb+0X0001;Yb[11]=Yb[11]-Yb[0X02];Dc=Re[vb];vb=vb+1;do if Dc[0X2]<=Yb[0Xb]then vb=Dc[7];end;end;else Yb[4]=cb[Dc[2]];vb=vb+1;Gb=4;(Yb[Gb])();Gb=Gb-0X1;vb=vb+1;do vb=vb+1;end;Dc=Re[vb];do vb=vb+1;end;(Yb)[0x4]=cb[Dc[2]];Dc=Re[vb];vb=vb+1;Yb[0X4]=Yb[4][Dc[5]];vb=vb+0X1;Gb=4;(Yb)[Gb]=Yb[Gb]();do Dc=Re[vb];end;do vb=vb+0X00001;end;Yb[0X0005]=cb[Dc[0X2]];vb=vb+0x0001;vb=vb+0X1;vb=vb+1;Gb=0X5;do Yb[Gb]=Yb[Gb]();end;do Dc=Re[vb];end;vb=vb+1;(Yb)[0X06]=cb[Dc[2]];do vb=vb+1;end;vb=vb+1;Dc=Re[vb];vb=vb+0x0001;do Yb[0x6]=Yb[0x06][Dc[5]];end;vb=vb+1;do vb=vb+0X1;end;do Dc=Re[vb];end;do vb=vb+0X1;end;Yb[0X6]=Yb[6][Dc[0X5]];Dc=Re[vb];vb=vb+1;Yb[0X6]=Yb[6][Dc[5]];do Dc=Re[vb];end;vb=vb+0X1;Yb[7]=cb[Dc[2]];vb=vb+0X1;vb=vb+0X1;Dc=Re[vb];vb=vb+1;do if Yb[0X0007]then vb=Dc[6];end;end;end;end;end;end;end;end;else if not(Gc<0X000022)then do if not(Gc<36)then if Gc~=0X025 then vb=Dc[6];else end;else if Gc==0x0023 then do Yb[11]=cb[Dc[2]];end;do vb=vb+1;end;vb=vb+0x1;Dc=Re[vb];vb=vb+0X00001;do(Yb)[0Xc]=Dc[2];end;Dc=Re[vb];do vb=vb+0x01;end;(Yb)[13]=cb[Dc[0x02]];vb=vb+0X1;vb=vb+1;do Dc=Re[vb];end;do vb=vb+1;end;local jY=(11);(Yb)[0XD]=Yb[13][Dc[0x005]];Dc=Re[vb];vb=vb+0x1;(Yb)[0Xe]=cb[Dc[0X2]];Dc=Re[vb];vb=vb+0X1;Yb[0XE]=Yb[0XE][Dc[0X00005]];vb=vb+0X1;Gb=jY+4-1;(Yb[jY])(I(Yb,jY+1,Gb));do Gb=jY-0X1;end;vb=vb+0x1;vb=vb+0X1;Dc=Re[vb];do vb=vb+0x1;end;vb=Dc[6];else Yb[Dc[0X7]]=cb[Dc[0X0002]];end;end;end;else do if not(Gc<0X20)then if Gc==0X021 then if Yb[Dc[6]]~=Yb[Dc[0x01]]then else do vb=Dc[0X007];end;end;else(Yb)[Dc[0x007]]=Yb[Dc[0X6]];end;else Yb[8]=Yb[0x7][Dc[0X5]];vb=vb+0x1;Gb=8;Yb[Gb]();Gb=Gb-1;vb=vb+1;vb=vb+1;Dc=Re[vb];vb=vb+1;vb=Dc[0X6];end;end;end;end;end;end;end;end;else if not(Gc<0X4c)then if not(Gc<0X59)then if not(Gc<95)then do if Gc<98 then if Gc>=0X0060 then if Gc~=0X000061 then Yb[0X9]=cb[Dc[0x2]];vb=vb+1;(Yb)[0x0000A]=Yb[0X7];Dc=Re[vb];vb=vb+1;local wV=9;(Yb)[11]=cb[Dc[0X2]];vb=vb+1;Yb[wV](Yb[wV+1],Yb[wV+2]);do Gb=wV-1;end;do vb=vb+0X1;end;vb=vb+1;Dc=Re[vb];vb=vb+0X1;Yb[9]=cb[Dc[0X002]];vb=vb+0X1;vb=vb+0x1;vb=vb+1;Gb=9;(Yb[Gb])();Gb=Gb-1;do vb=vb+1;end;vb=vb+0X1;Dc=Re[vb];do vb=vb+0x1;end;vb=Dc[0X6];else(Yb)[8]=Yb[0x7][Dc[0x0005]];do vb=vb+1;end;vb=vb+1;vb=vb+0x1;(Yb)[0X4]=Yb[0x8];Dc=Re[vb];vb=vb+1;if not Yb[0X00004]then do vb=Dc[6];end;end;end;else(Yb)[0X9]=Yb[0X8][Dc[0X0005]];vb=vb+0X001;vb=vb+0X01;Dc=Re[vb];vb=vb+1;if Yb[0X9]then do vb=Dc[6];end;end;end;else if Gc>=0X0064 then if Gc==101 then if not(not(Dc[2]<=Yb[Dc[0X1]]))then else vb=Dc[0x07];end;else(Yb)[Dc[0X00007]]=Yb[Dc[6]]==Dc[0X005];end;else if Gc==99 then Yb[0X000c]=Yb[0X000A][Dc[0X005]];vb=vb+0X00001;vb=vb+0x00001;Dc=Re[vb];vb=vb+0x1;(Yb)[0Xd]=Yb[0x000B][Dc[5]];do Dc=Re[vb];end;do vb=vb+1;end;do if Yb[12]==Yb[13]then else vb=Dc[7];end;end;else do Yb[0X3]=cb[Dc[2]];end;vb=vb+0X0001;do vb=vb+1;end;Dc=Re[vb];do vb=vb+0x1;end;do if not Yb[0X3]then vb=Dc[6];end;end;end;end;end;end;else if not(Gc>=92)then if not(Gc>=0X5a)then(Yb)[10]=cb[Dc[0X2]];do vb=vb+1;end;vb=vb+0X1;Dc=Re[vb];vb=vb+1;do Yb[10]=Yb[0XA][Dc[5]];end;do vb=vb+1;end;vb=vb+0x1;Dc=Re[vb];vb=vb+1;do Yb[11]=cb[Dc[2]];end;vb=vb+1;vb=vb+1;do Dc=Re[vb];end;vb=vb+0X01;do Yb[0X0000B]=Yb[0X0B][Dc[5]];end;vb=vb+0X1;vb=vb+0X1;do Dc=Re[vb];end;do vb=vb+0X0001;end;if not Yb[10]then vb=Dc[6];end;else if Gc==91 then(Yb)[12]=cb[Dc[0x2]];vb=vb+1;vb=vb+0X00001;Dc=Re[vb];vb=vb+1;do if not(not Yb[0xC])then else vb=Dc[6];end;end;else(Yb)[4]=cb[Dc[2]];do vb=vb+0X01;end;vb=vb+0X0001;Dc=Re[vb];vb=vb+1;Yb[5]=cb[Dc[0X2]];vb=vb+0X1;local nj=ve[0];vb=vb+0X1;vb=vb+0X1;(Yb)[0x4]=Yb[0X00004][Yb[5]];vb=vb+1;vb=vb+0X0001;Dc=Re[vb];local xj=(0X5);do vb=vb+1;end;(Yb)[0X04]=Yb[4][Dc[5]];vb=vb+1;(Yb)[0X5]=nj[0x0001][nj[2]];do vb=vb+1;end;vb=vb+1;Dc=Re[vb];vb=vb+0X1;Yb[0x5]=Yb[0X5][Dc[0x005]];vb=vb+0X1;Yb[6]=Yb[4];do vb=vb+0X001;end;(Yb)[xj]=Yb[xj](Yb[xj+1]);Gb=xj;do vb=vb+1;end;vb=vb+1;Dc=Re[vb];do vb=vb+1;end;(Yb)[6]=Dc[2];Dc=Re[vb];vb=vb+0X1;Yb[0X7]=Dc[0X2];Dc=Re[vb];vb=vb+1;do if not(not Yb[5])then else vb=Dc[0x6];end;end;end;end;else if Gc>=93 then do if Gc==0x5e then local od=Dc[0X00007];local xd,Zd,Rd=Yb[od]();if xd then Yb[od+0x01]=Zd;(Yb)[od+0x0002]=Rd;vb=Dc[0X6];end;else do Yb[0X4]=cb[Dc[2]];end;do vb=vb+1;end;vb=vb+0X1;Dc=Re[vb];vb=vb+0X01;do if not Yb[4]then vb=Dc[6];end;end;end;end;else local vI=ve[0X0];(Yb)[0X6]=vI[1][vI[2]];Dc=Re[vb];vb=vb+1;do(Yb)[6]=Yb[0x6][Dc[5]];end;vb=vb+0x1;Yb[7]=Yb[0X0005];vb=vb+0x001;Yb[8]=nil;vb=vb+1;local WI=(6);Yb[9]=Yb[0x0000];vb=vb+1;Gb=WI+0X004-0x00001;Yb[WI](I(Yb,WI+0x1,Gb));Gb=WI-0x1;vb=vb+1;vb=vb+1;Dc=Re[vb];vb=vb+0x0001;vb=Dc[0x6];end;end;end;else if not(Gc<82)then do if not(Gc<0X55)then if Gc>=87 then if Gc==88 then(Yb)[Dc[0x7]]=Yb[Dc[6]]>=Yb[Dc[0x00001]];else(Yb)[0X10]=cb[Dc[0x2]];Dc=Re[vb];do vb=vb+0X1;end;do Yb[17]=Dc[2];end;vb=vb+1;(Yb)[0X0012]=Yb[0XC];vb=vb+0X0001;(Yb)[0X13]=Yb[0x0000D];do vb=vb+0x0001;end;local nq=(0X10);Gb=nq+4-0X1;(Yb[nq])(I(Yb,nq+1,Gb));Gb=nq-0X01;do vb=vb+1;end;vb=vb+0X1;Dc=Re[vb];vb=vb+0X1;vb=Dc[0X006];end;else do if Gc==0x00056 then Yb[Dc[7]]=Dc[0X2];else Yb[3]=cb[Dc[2]];Dc=Re[vb];do vb=vb+1;end;(Yb)[3]=Yb[3][Dc[0X05]];Dc=Re[vb];do vb=vb+0X1;end;if not Yb[3]then vb=Dc[6];end;end;end;end;else if not(Gc<0X53)then if Gc==84 then do Yb[0X3]=cb[Dc[2]];end;vb=vb+1;do vb=vb+0X0001;end;do Dc=Re[vb];end;vb=vb+0X1;if Yb[0X3]then vb=Dc[0X00006];end;else Yb[9]=cb[Dc[0x02]];vb=vb+0X01;vb=vb+1;Dc=Re[vb];vb=vb+1;if Yb[0x09]then vb=Dc[0X6];end;end;else Yb[11]=cb[Dc[0x2]];vb=vb+0x00001;vb=vb+0X00001;do Dc=Re[vb];end;local oM=(11);vb=vb+0x1;Yb[12]=Dc[2];Dc=Re[vb];vb=vb+1;do(Yb)[13]=Yb[9][Dc[0X05]];end;do vb=vb+1;end;vb=vb+1;Dc=Re[vb];vb=vb+1;do(Yb)[0XE]=Yb[0X9][Dc[0X5]];end;do vb=vb+1;end;Gb=oM+4-0X001;Yb[oM](I(Yb,oM+0X1,Gb));Gb=oM-0X01;vb=vb+0X1;vb=vb+0X1;Dc=Re[vb];vb=vb+1;vb=Dc[0X00006];end;end;end;else if not(Gc>=79)then if not(Gc<77)then if Gc==0X4E then local zr=Yb[0X004];local Cr=0X4;(Yb)[Cr+1]=zr;Yb[Cr]=zr[Dc[0x5]];do Dc=Re[vb];end;vb=vb+0X00001;(Yb)[0X6]=Dc[2];vb=vb+0X00001;do Cr=4;end;(Yb)[Cr]=Yb[Cr](Yb[Cr+0X1],Yb[Cr+2]);Gb=Cr;do vb=vb+1;end;vb=vb+1;Dc=Re[vb];vb=vb+0x1;if not Yb[0X4]then do vb=Dc[6];end;end;else do Yb[12]=cb[Dc[0X2]];end;Dc=Re[vb];vb=vb+0X1;do Yb[0Xc]=Yb[12][Dc[5]];end;Dc=Re[vb];do vb=vb+1;end;do if not(Yb[12])then else vb=Dc[0x006];end;end;end;else(Yb)[0Xc]=Yb[16];vb=vb+0X1;(Yb)[0X10]=not Yb[0xf];Dc=Re[vb];vb=vb+0X1;if not(not Yb[16])then else vb=Dc[0x6];end;end;else if not(Gc>=80)then Yb[0X0005]=cb[Dc[2]];do Dc=Re[vb];end;vb=vb+1;(Yb)[6]=cb[Dc[0X002]];Dc=Re[vb];vb=vb+0X001;local GM=(3);(Yb)[7]=cb[Dc[0x00002]];vb=vb+0X1;do vb=vb+0X1;end;vb=vb+1;Yb[8]=Yb[0];vb=vb+0X001;local iM=(6);local DM=(0);do if GM==0x00000 then else do Gb=iM+GM-0X1;end;end;end;local nM,lM=nil,nil;if GM~=1 then nM,lM=rC(Yb[iM](I(Yb,iM+0x01,Gb)));else nM,lM=rC(Yb[iM]());end;if DM==0X1 then do Gb=iM-0x1;end;else if DM==0X000 then nM=nM+iM-0X1;do Gb=nM;end;else nM=iM+DM-2;Gb=nM+0x0001;end;local Kj=0;for iQ=iM,nM do do Kj=Kj+0x1;end;do Yb[iQ]=lM[Kj];end;end;end;vb=vb+1;vb=vb+0X1;vb=vb+1;iM=5;do GM=0;end;DM=4;if GM==0X0 then else Gb=iM+GM-1;end;nM,lM=nil;if GM~=1 then nM,lM=rC(Yb[iM](I(Yb,iM+1,Gb)));else do nM,lM=rC(Yb[iM]());end;end;do if DM~=0X1 then if DM==0 then nM=nM+iM-1;Gb=nM;else nM=iM+DM-2;do Gb=nM+1;end;end;local Js=0;for Y4=iM,nM do Js=Js+0x1;do(Yb)[Y4]=lM[Js];end;end;else do Gb=iM-0X0001;end;end;end;Dc=Re[vb];vb=vb+0x01;iM=5;local TM=(g(function(...)(d)();for zB,RB in...do(d)(true,zB,RB);end;end));TM(Yb[iM],Yb[iM+1],Yb[iM+0X2]);Gb=iM;Yb[iM]=TM;vb=Dc[6];else do if Gc==0X51 then(Yb)[4]=cb[Dc[0X002]];vb=vb+0x01;vb=vb+1;vb=vb+0X1;Gb=4;Yb[Gb]=Yb[Gb]();vb=vb+0X1;vb=vb+1;vb=vb+1;(Yb)[0x04]=Yb[0X4]-Yb[2];Dc=Re[vb];vb=vb+1;do if not(Yb[0x0004]<Dc[0x5])then vb=Dc[7];end;end;else Yb[Dc[0X7]]=nil;end;end;end;end;end;end;else if Gc<63 then do if Gc<57 then if Gc<0X036 then if not(Gc<0X000034)then if Gc~=0X035 then Yb[0Xb]=cb[Dc[0x2]];vb=vb+0X1;do(Yb)[12]=Yb[10];end;do vb=vb+0x00001;end;Yb[0xD]=Yb[0X0];vb=vb+0X1;do for tP=0Xe,0XF do do Yb[tP]=nil;end;end;end;do Dc=Re[vb];end;do vb=vb+0x1;end;Yb[0X0010]=Dc[2];vb=vb+1;local FM=(0X0000b);Gb=FM+0X0006-1;(Yb[FM])(I(Yb,FM+0x1,Gb));Gb=FM-1;do Dc=Re[vb];end;vb=vb+0X001;(Yb)[0Xb]=cb[Dc[0x0002]];do Dc=Re[vb];end;vb=vb+0X00001;do Yb[0XC]=Yb[0X0000A][Dc[5]];end;vb=vb+1;FM=0X0000b;Yb[FM]=Yb[FM](Yb[FM+1]);Gb=FM;vb=vb+0X0001;vb=vb+0x00001;do Dc=Re[vb];end;do vb=vb+1;end;if not(Yb[11]<=Dc[0X5])then vb=Dc[7];end;else do Yb[0X8]=cb[Dc[2]];end;vb=vb+0X1;do vb=vb+0x1;end;Dc=Re[vb];vb=vb+1;local My=(nil);local Py=(je[Dc[6]]);local Ey=8;local cy=(Py[0X8]);local sy=(#cy);if not(sy>0)then else My={};for pW=1,sy do local BW=cy[pW];if BW[1]==0X0 then My[pW-0x1]={Yb,BW[2]};else My[pW-1]=ve[BW[2]];end;end;(A)(De,My);end;Yb[0X9]=NC(My,cb,Py);vb=vb+0X01;(Yb[Ey])(Yb[Ey+1]);do Gb=Ey-0X1;end;vb=vb+0x0001;do vb=vb+1;end;Dc=Re[vb];vb=vb+0X01;vb=Dc[6];end;else(Yb)[10]=cb[Dc[0X2]];do vb=vb+0x1;end;do vb=vb+0X00001;end;do Dc=Re[vb];end;vb=vb+1;if not Yb[0x0a]then vb=Dc[0X6];end;end;else if Gc>=55 then if Gc~=56 then local H0=Dc[0x6];local W0=Yb[H0];for Y6=H0+0X1,Dc[0X1]do do W0=W0..Yb[Y6];end;end;(Yb)[Dc[7]]=W0;else Yb[3]=cb[Dc[0x2]];Dc=Re[vb];vb=vb+1;(Yb)[3]=Yb[3][Dc[5]];Dc=Re[vb];do vb=vb+1;end;Yb[0X003]=Yb[3][Dc[0X5]];vb=vb+0X1;vb=vb+1;Dc=Re[vb];vb=vb+1;(Yb)[0X3]=Yb[0X3]<=Dc[0X5];Dc=Re[vb];vb=vb+0X1;vb=Dc[6];end;else(Yb)[0X0010]=cb[Dc[2]];Dc=Re[vb];vb=vb+1;(Yb)[0X10]=Yb[0x000010][Dc[0X5]];vb=vb+1;do vb=vb+1;end;do Dc=Re[vb];end;vb=vb+1;do if not Yb[0X00010]then vb=Dc[6];end;end;end;end;else if not(Gc>=0X3c)then if Gc<0X3A then Yb[Dc[0X7]]=G(Yb[Dc[6]],Yb[Dc[1]]);else if Gc==59 then do Yb[0x4]=cb[Dc[0X2]];end;vb=vb+0X1;vb=vb+0X1;vb=vb+1;do Gb=4;end;Yb[Gb]=Yb[Gb]();vb=vb+0X01;vb=vb+0X1;do vb=vb+1;end;(Yb)[4]=Yb[4]-Yb[0X1];Dc=Re[vb];vb=vb+1;if not(Dc[0X2]<Yb[0X04])then vb=Dc[7];end;else do Yb[0X10]=Yb[11];end;Dc=Re[vb];do vb=vb+0X1;end;cb[Dc[2]]=Yb[0x00010];Dc=Re[vb];vb=vb+1;do vb=Dc[6];end;end;end;else if not(Gc<0X3D)then do if Gc~=0X3E then local si=ve[0X0];(Yb)[6]=si[0x1][si[2]];vb=vb+0x1;vb=vb+0X1;Dc=Re[vb];vb=vb+1;do Yb[6]=Yb[6][Dc[0x05]];end;do vb=vb+1;end;local ni=6;vb=vb+1;vb=vb+0X1;Yb[0X007]=Yb[5];do vb=vb+0X1;end;Yb[ni]=Yb[ni](Yb[ni+0X001]);Gb=ni;Dc=Re[vb];do vb=vb+1;end;do if not(not Yb[6])then else vb=Dc[0X6];end;end;else Yb[0X3]=cb[Dc[0X0002]];Dc=Re[vb];vb=vb+1;Yb[3]=Yb[3][Dc[5]];do Dc=Re[vb];end;vb=vb+1;do Yb[0x3]=Yb[3][Dc[0X5]];end;vb=vb+1;vb=vb+0X001;Dc=Re[vb];vb=vb+0X1;(Yb)[0x0003]=Yb[3]>Dc[5];Dc=Re[vb];vb=vb+1;do if Yb[0X3]then vb=Dc[6];end;end;end;end;else Yb[0XA]=cb[Dc[2]];vb=vb+1;vb=vb+1;Dc=Re[vb];vb=vb+1;Yb[0x0A]=Yb[0XA][Dc[0x5]];local Rj=(11);vb=vb+0X1;vb=vb+1;Dc=Re[vb];vb=vb+1;Yb[0xA]=Yb[10][Dc[5]];do vb=vb+0X001;end;vb=vb+1;Dc=Re[vb];vb=vb+0X1;do(Yb)[0xB]=cb[Dc[0X2]];end;Dc=Re[vb];vb=vb+0X1;Yb[12]=cb[Dc[0X02]];Dc=Re[vb];vb=vb+0X1;(Yb)[12]=Yb[12][Dc[0X5]];vb=vb+0X00001;vb=vb+1;Dc=Re[vb];vb=vb+0X00001;do Yb[12]=Yb[0X00C][Dc[0X05]];end;vb=vb+1;vb=vb+1;do vb=vb+0x1;end;Yb[Rj]=Yb[Rj](Yb[Rj+0x0001]);Gb=Rj;do Dc=Re[vb];end;vb=vb+1;do if not(not(Yb[11]<=Yb[0x000A]))then else vb=Dc[0X0007];end;end;end;end;end;end;else if Gc<0X45 then if not(Gc>=66)then if Gc<0X040 then(Yb)[4]=cb[Dc[2]];vb=vb+1;do vb=vb+1;end;Dc=Re[vb];vb=vb+0X01;if not(not Yb[0x4])then else vb=Dc[6];end;else do if Gc~=65 then(Yb)[0x0a]=cb[Dc[0X2]];Dc=Re[vb];vb=vb+1;(Yb)[0Xa]=Yb[10][Dc[5]];Dc=Re[vb];vb=vb+1;if not Yb[10]then vb=Dc[0x6];end;else for se=Dc[0X7],Dc[6]do do Yb[se]=nil;end;end;end;end;end;else do if not(Gc>=0X43)then(Yb)[0X9]=Yb[0X8][Dc[5]];vb=vb+0X1;Gb=9;(Yb[Gb])();Gb=Gb-1;vb=vb+1;vb=vb+1;Dc=Re[vb];vb=vb+1;vb=Dc[6];else if Gc~=0X44 then Yb[0x00003]=cb[Dc[2]];vb=vb+0X01;vb=vb+1;vb=vb+1;Gb=0x3;(Yb)[Gb]=Yb[Gb]();vb=vb+1;do vb=vb+0X1;end;do Dc=Re[vb];end;vb=vb+1;if not(Yb[0X3])then else vb=Dc[0X6];end;else if not(not Yb[Dc[7]])then else vb=Dc[0X06];end;end;end;end;end;else do if not(Gc>=0x48)then if not(Gc>=70)then(Yb)[0x9]=Yb[8][Dc[5]];vb=vb+1;vb=vb+0X1;vb=vb+1;do(Yb)[0X0005]=Yb[9];end;Dc=Re[vb];vb=vb+0X001;if not Yb[5]then vb=Dc[6];end;else if Gc~=71 then do(Yb)[0X0005]=cb[Dc[0X2]];end;vb=vb+1;do vb=vb+1;end;vb=vb+1;Gb=5;do Yb[Gb]=Yb[Gb]();end;vb=vb+0X1;Yb[5]=Yb[0X5]-Yb[2];do Dc=Re[vb];end;vb=vb+0X01;do if not(not(Yb[0X5]<Dc[0X005]))then else do vb=Dc[0X7];end;end;end;else(Yb)[Dc[0X0007]]=Yb[Dc[6]][Dc[0x05]];end;end;else if not(Gc>=74)then if Gc==0X49 then Yb[4]=cb[Dc[0x2]];vb=vb+0X1;vb=vb+0x1;do Dc=Re[vb];end;vb=vb+0X1;Yb[4]=Yb[4][Dc[5]];do Dc=Re[vb];end;vb=vb+1;(Yb)[4]=Yb[4][Dc[5]];do vb=vb+1;end;vb=vb+0X1;Dc=Re[vb];vb=vb+1;if not(Dc[2]<=Yb[0X4])then else vb=Dc[0X07];end;else local lo=(je[Dc[0x006]]);local Wo=(nil);local Ho=lo[8];local zo=#Ho;do if zo>0 then do Wo={};end;for fu=1,zo do local Iu=(Ho[fu]);if Iu[1]~=0X000 then(Wo)[fu-1]=ve[Iu[2]];else Wo[fu-0x001]={Yb,Iu[2]};end;end;A(De,Wo);end;end;Yb[0x00000]=NC(Wo,cb,lo);Dc=Re[vb];do vb=vb+1;end;(Yb)[0x0001]=Dc[2];Dc=Re[vb];vb=vb+0X01;(Yb)[2]=Dc[2];Dc=Re[vb];vb=vb+1;do vb=Dc[6];end;end;else if Gc~=75 then local r2=(ve[0X0]);Yb[0X0009]=r2[0X01][r2[2]];vb=vb+1;vb=vb+1;Dc=Re[vb];local T2=(0X9);vb=vb+1;Yb[0X0009]=Yb[9][Dc[0X5]];do vb=vb+1;end;Yb[0XA]=Yb[8];vb=vb+1;(Yb)[0XB]=nil;do vb=vb+0X00001;end;Yb[12]=Yb[0X0];vb=vb+1;Gb=T2+4-1;(Yb[T2])(I(Yb,T2+1,Gb));Gb=T2-0X1;Dc=Re[vb];vb=vb+0x1;vb=Dc[0X00006];else do Yb[0X000A]=Yb[9][Dc[5]];end;do vb=vb+0X1;end;vb=vb+1;Dc=Re[vb];vb=vb+1;vb=Dc[6];end;end;end;end;end;end;end;end;end;end;end);if bb then do if Nb then do if Fb==1 then return Yb[Lb]();else do return Yb[Lb](I(Yb,Lb+1,Gb));end;end;end;elseif Lb then return I(Yb,Lb,Fb);end;end;else if f(Nb)~="string"then b(Nb,0);else if e(Nb,'\097tte\109pt\032to \y\i\e\108\d\ a\099\114\o\s\s\032m\101\116\097\m\et\104\od/\067\037\-ca\108l\032\098\111un\100\097\114\121')then return coroutine.yield();end;if e(Nb,"^.-:%d+: ")then(b)("\076\117\114aph\032\S\cr\105p\116\:"..(Ae[vb-1]or"\040i\110t\101\114\110a\l\)").."\058\032"..r(Nb),0X0);else(b)(Nb,0);end;end;end;end;end;else fe=function(...)local Ka,Ea=0x1,({});local la={[1]=ce,[0X2]=Ea};local ha=(m());local Sa=0X00;local oa,Aa=rC(...);oa=oa-0X1;do for Fd=0,oa do if not(he>Fd)then do break;end;else(Ea)[Fd]=Aa[Fd+1];end;end;end;local qa=(ha==F and Le or ha);if not ge then Aa=nil;elseif xe then Ea[he]={n=oa>=he and oa-he+0X1 or 0x0000,I(Aa,he+0x1,oa+1)};end;if qa~=ha then i(fe,qa);end;local Ba,Ga,Fa,aa=j(function()while true do local XG=Re[Ka];local JG=XG[0X4];Ka=Ka+0X1;if JG>=7 then if JG>=0x00B then if JG<13 then do if JG==0X000C then Ea[XG[7]]=qa[XG[0X2]];else local v6=XG[0X7];local a6,o6,d6=Ea[v6],Ea[v6+1],Ea[v6+2];do(Ea)[v6]=g(function()do for Yu=a6,o6,d6 do d(true,Yu);end;end;end);end;do Ka=XG[0X6];end;end;end;else if JG~=0Xe then Ka=XG[0x006];else repeat local MN,iN=De,Ea;if#MN>0X0 then local oo={};for AK,jK in D,MN do for v_,t_ in D,jK do if not(t_[0X1]==iN and t_[0x002]>=0X0)then else local Dy=(t_[0X2]);if not(not oo[Dy])then else oo[Dy]={iN[Dy]};end;(t_)[1]=oo[Dy];(t_)[0x00002]=0X1;end;end;end;end;until true;return;end;end;else if JG<0X9 then if JG==0X8 then for gR=XG[0X7],XG[6]do(Ea)[gR]=nil;end;else(Ea)[XG[7]]=XG[2];end;else if JG~=0X0a then do(Ea)[XG[7]]=Ea[XG[0X6]]==Ea[XG[1]];end;else Ea[XG[0X7]]=Ea[XG[6]]>Ea[XG[1]];end;end;end;else if not(JG<3)then if JG>=5 then if JG==0X6 then do Ea[XG[7]]=Ea[XG[0X6]]/Ea[XG[1]];end;else(Ea)[0X0]=qa[XG[0X00002]];local Dw=(0);do Ka=Ka+1;end;Ka=Ka+1;XG=Re[Ka];Ka=Ka+1;local kw=Ea[0x00];Ea[Dw+1]=kw;(Ea)[Dw]=kw[XG[5]];XG=Re[Ka];Ka=Ka+1;Ea[0x0002]=XG[2];Ka=Ka+0x1;Dw=0X0;(Ea)[Dw]=Ea[Dw](Ea[Dw+0X00001],Ea[Dw+0X2]);Sa=Dw;XG=Re[Ka];Ka=Ka+1;do Ea[1]=qa[XG[0X00002]];end;XG=Re[Ka];Ka=Ka+0X1;if Ea[1]then Ka=XG[6];end;end;else if JG~=4 then(Ea)[XG[7]]=Ea[XG[0X6]]-Ea[XG[1]];else(Ea)[1]=qa[XG[0X0002]];XG=Re[Ka];Ka=Ka+1;Ea[0X1]=Ea[0X1][XG[5]];XG=Re[Ka];Ka=Ka+1;local Z6,d6,b6=je[XG[0X06]],nil,(0X0001);local Y6=(Z6[8]);local e6=#Y6;if not(e6>0x0)then else do d6={};end;for n1=0X001,e6 do local l1=(Y6[n1]);if l1[1]==0x00 then do(d6)[n1-0X1]={Ea,l1[0x2]};end;else do(d6)[n1-0X1]=ve[l1[0X002]];end;end;end;A(De,d6);end;do(Ea)[2]=NC(d6,qa,Z6);end;Ka=Ka+1;Ea[b6](Ea[b6+1]);Sa=b6-1;Ka=Ka+1;do Ka=Ka+0X1;end;do Ka=Ka+1;end;do repeat local IV,qV=De,Ea;if not(#IV>0X0)then else local Wg=({});for BY,iY in D,IV do for OP,EP in D,iY do if EP[1]==qV and EP[2]>=0x00000 then local lm=(EP[0X00002]);if not(not Wg[lm])then else Wg[lm]={qV[lm]};end;EP[0x01]=Wg[lm];do EP[2]=1;end;end;end;end;end;until true;end;return;end;end;else if JG>=0X1 then if JG~=2 then else local FY=(je[XG[0X0006]]);local xY,eY=FY[8],nil;local dY=#xY;if dY>0 then eY={};for VS=1,dY do local oS=(xY[VS]);do if oS[1]==0X00000 then do(eY)[VS-0X01]={Ea,oS[2]};end;else do(eY)[VS-0x1]=ve[oS[0X2]];end;end;end;end;(A)(De,eY);end;(Ea)[XG[0X07]]=NC(eY,qa,FY);end;else Ea[XG[0X00007]]={I({},1,XG[6])};end;end;end;end;end);if Ba then do if Ga then if aa~=1 then return Ea[Fa](I(Ea,Fa+1,Sa));else return Ea[Fa]();end;elseif not(Fa)then else return I(Ea,Fa,aa);end;end;else do if f(Ga)=="string"then if not(e(Ga,'a\116\116\101\mp\116\ \116\o\ \yie\ld ac\114o\s\115\ \m\101\116am\e\116\h\111\d/\C%-\ca\108\108\ b\ou\110d\097r\y'))then else return coroutine.yield();end;if e(Ga,"\^\.\-\058\%\d\043\:\ ")then(b)("Luraph Script:"..(Ae[Ka-0X1]or"(internal)").."\: "..r(Ga),0x0);else(b)(Ga,0);end;else(b)(Ga,0X00);end;end;end;end;end;end;else if not(me>=0x85)then fe=function(...)local LL,pL=1,{};local KL=({[1]=ce,[0X2]=pL});local cL=(m());local lL,jL=rC(...);local YL=(cL==F and Le or cL);do lL=lL-1;end;local XL=0X0;for ms=0X0,lL do if not(he>ms)then break;else(pL)[ms]=jL[ms+1];end;end;if not ge then jL=nil;elseif xe then do(pL)[he]={n=lL>=he and lL-he+1 or 0,I(jL,he+0X1,lL+0X00001)};end;end;if YL==cL then else i(fe,YL);end;local PL,sL,gL,nL=j(function()while true do local lc=(Re[LL]);local Ac=(lc[0X4]);do LL=LL+0X0001;end;do if not(Ac<0Xa)then if Ac<15 then if not(Ac<0xC)then if not(Ac>=13)then(pL)[lc[0X07]]=pL[lc[0X06]]^pL[lc[0X1]];else do if Ac==0XE then for Pl=lc[7],lc[0X6]do pL[Pl]=nil;end;else do(pL)[lc[0X7]]=lc[2];end;end;end;end;else if Ac==11 then local QN=(lc[0X01]-0x1)*0x32;local lN=(lc[0X07]);local UN=pL[lN];for bf=0X01,lc[0X6]do UN[QN+bf]=pL[lN+bf];end;else(pL)[0]=YL[lc[2]];LL=LL+0x0001;LL=LL+0X00001;do lc=Re[LL];end;LL=LL+0X1;do(pL)[0]=pL[0][lc[5]];end;lc=Re[LL];do LL=LL+0X1;end;do if not pL[0]then LL=lc[0X6];end;end;end;end;else if Ac<17 then do if Ac~=0x010 then pL[lc[7]]=YL[lc[0X2]];else LL=lc[0X6];end;end;else if not(Ac>=18)then repeat local MM,lM,YM=De,pL,(lc[0X00007]);if#MM>0X0 then local mX={};for wj,Zj in D,MM do do for Dc,dc in D,Zj do if not(dc[0X1]==lM and dc[2]>=YM)then else local SN=(dc[0X2]);if not(not mX[SN])then else mX[SN]={lM[SN]};end;dc[0x1]=mX[SN];(dc)[2]=0X0001;end;end;end;end;end;until true;else if Ac~=0X13 then else repeat local v8,R8=De,(pL);if#v8>0 then local hm={};for Qs,ws in D,v8 do for KR,jR in D,ws do if jR[0X1]==R8 and jR[2]>=0X0 then local fk=jR[0x0002];if not hm[fk]then(hm)[fk]={R8[fk]};end;do(jR)[1]=hm[fk];end;(jR)[2]=0X1;end;end;end;end;until true;do return;end;end;end;end;end;else if not(Ac>=0X5)then if not(Ac>=2)then if Ac~=1 then(pL)[0X0]=YL[lc[0X2]];lc=Re[LL];local Sa=0;LL=LL+1;pL[0X01]=lc[2];do LL=LL+0X1;end;(pL)[Sa]=pL[Sa](pL[Sa+1]);XL=Sa;lc=Re[LL];LL=LL+1;if not(not pL[0])then else LL=lc[0X6];end;else local KC=(je[lc[0X6]]);local kC=KC[0X08];local OC=(nil);local YC=(#kC);do if not(YC>0)then else do OC={};end;for O9=1,YC do local H9=(kC[O9]);if H9[0x00001]~=0x0 then do(OC)[O9-1]=ve[H9[2]];end;else do OC[O9-0X001]={pL,H9[0X2]};end;end;end;(A)(De,OC);end;end;do pL[lc[7]]=NC(OC,YL,KC);end;end;else do if not(Ac<3)then if Ac~=0X4 then(pL)[lc[7]]={I({},0X00001,lc[6])};else(pL)[0x00000]=YL[lc[2]];LL=LL+0x00001;XL=0X0;pL[XL]=pL[XL]();do LL=LL+1;end;LL=LL+0X1;lc=Re[LL];LL=LL+0X1;if pL[0]then LL=lc[6];end;end;else(pL)[0]=YL[lc[0X2]];LL=LL+1;LL=LL+1;lc=Re[LL];LL=LL+0X1;(pL)[0]=pL[0][lc[5]];do LL=LL+0X1;end;do LL=LL+1;end;lc=Re[LL];do LL=LL+1;end;if not pL[0X0]then LL=lc[0x06];end;end;end;end;else if Ac>=0X7 then if Ac<8 then do(pL)[0X0]=YL[lc[2]];end;lc=Re[LL];local NM=0x0;LL=LL+1;do pL[1]=YL[lc[0x2]];end;LL=LL+0X1;LL=LL+0X1;lc=Re[LL];do LL=LL+0x1;end;(pL)[1]=pL[1][lc[5]];do LL=LL+0X1;end;LL=LL+0X1;LL=LL+1;(pL[NM])(pL[NM+0X1]);XL=NM-0X001;do lc=Re[LL];end;do LL=LL+1;end;LL=lc[0X6];else if Ac~=9 then pL[lc[7]]=pL[lc[6]]~=pL[lc[1]];else pL[lc[0x7]]=pL[lc[0X06]]+pL[lc[1]];end;end;else if Ac~=6 then pL[lc[0X7]]=pL[lc[6]]>=pL[lc[1]];else pL[0X0]=YL[lc[2]];do LL=LL+1;end;LL=LL+0X0001;lc=Re[LL];LL=LL+0X1;do if pL[0X0]then do LL=lc[6];end;end;end;end;end;end;end;end;end;end);do if PL then if sL then if nL~=0x1 then return pL[gL](I(pL,gL+0X001,XL));else return pL[gL]();end;elseif gL then return I(pL,gL,nL);end;else do if f(sL)=='\s\116r\105n\103'then if not(e(sL,"\097\116t\e\m\pt\ to\032\y\105\101\l\d\ a\cr\111\s\s\ \m\101ta\meth\o\100\047\C\037-\c\097l\l\ \098o\117n\d\097r\y"))then else return coroutine.yield();end;do if not(e(sL,"^.-:%d+: "))then(b)(sL,0);else b("\L\117\114\097\ph\ \S\c\114\105\p\116\:"..(Ae[LL-1]or'\(\i\110\116\101\114\110a\108\)').."\: "..r(sL),0);end;end;else(b)(sL,0);end;end;end;end;end;else if me==134 then fe=function(...)local ix=(0X1);local Tx,Vx={},(0);local tx=m();local zx=({[1]=ce,[0X2]=Tx});local Cx,lx=rC(...);local sx=((tx==F and Le or tx));do Cx=Cx-0x1;end;for az=0X0000,Cx do if he>az then Tx[az]=lx[az+1];else break;end;end;if not ge then do lx=nil;end;elseif not(xe)then else Tx[he]={n=Cx>=he and Cx-he+0X1 or 0X0,I(lx,he+1,Cx+0X1)};end;if sx~=tx then i(fe,sx);end;local ox,Ex,Ix,jx=j(function()while true do local pp=Re[ix];local hp=(pp[0X0004]);ix=ix+0x0001;if hp<0x7 then if not(hp>=0x0003)then if not(hp<0X1)then if hp==0X2 then Tx[0X02]=sx[pp[2]];do ix=ix+1;end;ix=ix+1;pp=Re[ix];ix=ix+1;do(Tx)[3]=Tx[0][pp[0x5]];end;do ix=ix+1;end;ix=ix+1;ix=ix+1;(Tx)[0X4]=true;ix=ix+0X1;local La=(0x2);(Tx)[La]=Tx[La](Tx[La+1],Tx[La+0X00002]);Vx=La;local Ia=0x2;ix=ix+0x1;ix=ix+0X001;pp=Re[ix];ix=ix+1;Tx[0X00003]=sx[pp[0x2]];do pp=Re[ix];end;ix=ix+0X1;do Tx[4]=Tx[0X1][pp[0X5]];end;ix=ix+1;(Tx)[0X5]=true;ix=ix+1;do La=3;end;(Tx)[La]=Tx[La](Tx[La+0X1],Tx[La+0x00002]);Vx=La;do ix=ix+0X01;end;(Tx)[2]=Tx[0X2]<Tx[3];ix=ix+1;repeat local q6,m6=De,(Tx);do if#q6>0X0 then local WZ=({});for D8,q8 in D,q6 do for kM,WM in D,q8 do if WM[0X001]==m6 and WM[2]>=0x0 then local BI=(WM[0X2]);if not WZ[BI]then WZ[BI]={m6[BI]};end;(WM)[0X001]=WZ[BI];do WM[0X2]=0X1;end;end;end;end;end;end;until true;return false,Ia,Ia;else Tx[pp[7]]=Tx[pp[6]]==Tx[pp[1]];end;else local Qz,Gz=pp[0X7],(Tx[pp[6]]);Tx[Qz+1]=Gz;do(Tx)[Qz]=Gz[pp[5]];end;end;else if hp<5 then if hp==4 then(Tx)[pp[0x7]]=Tx[pp[6]]%Tx[pp[1]];else(Tx)[pp[0X7]]=sx[pp[0X2]];end;else do if hp~=6 then Tx[pp[0X00007]]=Tx[pp[6]]<Tx[pp[1]];else Tx[pp[0x07]]=pp[0X0002];end;end;end;end;else if not(hp<0xB)then do if hp<0xD then if hp~=0xc then ix=pp[0X6];else local Px,Zx=je[pp[6]],(nil);local Yx=Px[8];local Gx=#Yx;do if Gx>0X0 then do Zx={};end;for XA=0X1,Gx do local jA=(Yx[XA]);if jA[1]~=0X0 then(Zx)[XA-0x00001]=ve[jA[0x00002]];else Zx[XA-0X1]={Tx,jA[2]};end;end;(A)(De,Zx);end;end;(Tx)[pp[7]]=NC(Zx,sx,Px);end;else do if hp~=0X00E then repeat local sH,NH=De,(Tx);do if#sH>0X0 then local T9={};do for oW,KW in D,sH do do for P1,t1 in D,KW do if not(t1[1]==NH and t1[0X2]>=0)then else local AE=(t1[2]);if not(not T9[AE])then else(T9)[AE]={NH[AE]};end;(t1)[0x1]=T9[AE];t1[2]=1;end;end;end;end;end;end;end;until true;return;else(Tx)[pp[0X7]]=zx[pp[6]];end;end;end;end;else if not(hp<9)then if hp==0X0A then(Tx)[pp[0X7]]={I({},0x01,pp[0X6])};else do for Qe=pp[7],pp[6]do Tx[Qe]=nil;end;end;end;else if hp~=8 then else Tx[pp[7]]=O(Tx[pp[6]],Tx[pp[0X1]]);end;end;end;end;end;end);if ox then if Ex then if jx~=0X00001 then return Tx[Ix](I(Tx,Ix+0X1,Vx));else return Tx[Ix]();end;elseif Ix then return I(Tx,Ix,jx);end;else if f(Ex)~="string"then b(Ex,0);else if e(Ex,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if not(e(Ex,"\^.-\:\%\d\+\:\032"))then b(Ex,0);else b("Luraph Script:"..(Ae[ix-0X1]or"(internal)").."\:\ "..r(Ex),0X000);end;end;end;end;else do fe=function(...)local YC,LC=0X1,({});local uC=(0);local OC=(m());local SC={[1]=ce,[0X2]=LC};local ZC,kC=rC(...);ZC=ZC-0X001;do for Qi=0,ZC do do if not(he>Qi)then break;else LC[Qi]=kC[Qi+0X00001];end;end;end;end;local KC=(OC==F and Le or OC);do if not ge then kC=nil;elseif xe then(LC)[he]={n=ZC>=he and ZC-he+0x1 or 0X0,I(kC,he+1,ZC+1)};end;end;if KC~=OC then(i)(fe,KC);end;local TC,RK,GK,UK=j(function()while true do local Oy=(Re[YC]);local zy=Oy[4];do YC=YC+0X1;end;if zy>=7 then if not(zy<0XA)then if zy<0XC then if zy==0X000B then local Ap=je[Oy[6]];local up,np=Ap[0X8],(nil);local Dp=#up;do if not(Dp>0x00000)then else np={};for GM=1,Dp do local RM=up[GM];do if RM[0X1]~=0 then(np)[GM-0X001]=ve[RM[0X02]];else np[GM-1]={LC,RM[2]};end;end;end;(A)(De,np);end;end;do LC[Oy[0X007]]=NC(np,KC,Ap);end;else end;else if zy==13 then if LC[Oy[0x00006]]<=LC[Oy[1]]then YC=Oy[0X07];end;else do YC=Oy[0X6];end;end;end;else if not(zy>=0X8)then local Tc=(Oy[0X7]);local mc=(g(function(...)(d)();for u7,Z7,b7,U7,o7,h7,X7,Y7,v7,z7 in...do(d)(true,{u7,Z7,b7,U7,o7,h7,X7,Y7,v7,z7});end;end));(mc)(LC[Tc],LC[Tc+0X1],LC[Tc+2]);uC=Tc;do LC[Tc]=mc;end;YC=Oy[6];else if zy==0x9 then do LC[Oy[7]]=KC[Oy[2]];end;else local hA=(Oy[7]);local VA,rA=LC[hA]();if not(VA)then else YC=Oy[6];(LC)[hA+0X3]=rA;end;end;end;end;else if zy<0X3 then if not(zy<1)then do if zy~=0x02 then(LC)[Oy[7]]=-LC[Oy[0X6]];else LC[Oy[7]]=LC[Oy[6]]<LC[Oy[0X1]];end;end;else(LC)[0]=KC[Oy[2]];YC=YC+1;YC=YC+0X1;Oy=Re[YC];local UH=(0X0);YC=YC+0X1;(LC)[0]=LC[0][Oy[5]];Oy=Re[YC];local HH=(je[Oy[0x6]]);YC=YC+1;local eH=HH[0x8];local jH=(nil);local kH=#eH;if kH>0 then jH={};for wp=0X1,kH do local np=eH[wp];if np[0X0001]~=0X00000 then do(jH)[wp-1]=ve[np[2]];end;else(jH)[wp-1]={LC,np[0x2]};end;end;(A)(De,jH);end;(LC)[1]=NC(jH,KC,HH);do YC=YC+0X1;end;LC[UH](LC[UH+1]);uC=UH-0X1;YC=YC+1;repeat local xT,aT=De,LC;if not(#xT>0x0)then else local XR=({});do for j7,N7 in D,xT do for uS,QS in D,N7 do do if QS[1]==aT and QS[2]>=0x0 then local x7=(QS[2]);do if not XR[x7]then XR[x7]={aT[x7]};end;end;do QS[0x1]=XR[x7];end;(QS)[2]=1;end;end;end;end;end;end;until true;return;end;else if zy<5 then if zy~=0X4 then(LC)[Oy[0x7]]=LC[Oy[0X00006]][LC[Oy[0X1]]];else LC[Oy[7]]=Oy[0x2];end;else if zy==6 then local Ef=(LC[Oy[0X6]]/LC[Oy[1]]);(LC)[Oy[7]]=Ef-Ef%1;else do(LC)[Oy[0X7]]={I({},0X1,Oy[6])};end;end;end;end;end;end;end);if TC then if RK then if UK~=1 then return LC[GK](I(LC,GK+1,uC));else return LC[GK]();end;elseif not(GK)then else do return I(LC,GK,UK);end;end;else if f(RK)~="\115\116\114\ing"then b(RK,0X0);else if not(e(RK,"a\116t\e\109p\116 \116\111\032\y\i\e\l\d\ a\c\114\111\s\115\ \me\116\097m\e\116h\111\d/\C\%\-\ca\l\l\032b\111\117\110\dar\y"))then else do return coroutine.yield();end;end;if e(RK,'^\.-\:\%\d\043:\032')then b('\076u\114a\p\h\032\083cri\p\116:'..(Ae[YC-1]or"(internal)")..'\:\032'..r(RK),0X0);else(b)(RK,0X0);end;end;end;end;end;end;end;end;end;else if not(me>=123)then if not(me>=0x00078)then if me>=118 then do if me~=119 then fe=function(...)local VD,YD=1,({});local rD,xD={[1]=ce,[0X2]=YD},0;local UD=m();local mD,AD=rC(...);do mD=mD-1;end;local lD=((UD==F and Le or UD));for TC=0X0,mD do if not(he>TC)then break;else do YD[TC]=AD[TC+0X1];end;end;end;if not ge then AD=nil;elseif not(xe)then else do(YD)[he]={n=mD>=he and mD-he+0X00001 or 0x0,I(AD,he+0X0001,mD+0X00001)};end;end;if lD==UD then else i(fe,lD);end;do while true do local fi=Re[VD];do VD=VD+0X1;end;local ui=fi[4];do return(function(C,S,...)local b=C[0];return FORCE_LEVEL or Settings.CustomLevelFarm and math.clamp(Settings.CustomLevelFarmValue,MinLevelOfSea,b and ClientData.Level.Value or ac_lvl())or b and ClientData.Level.Value or ac_lvl();end)(YD,ve,...);end;end;end;end;else do fe=function(...)local Wg={};local Hg=(0X00001);local Yg=m();local Og,Pg={[0X2]=Wg,[1]=ce},0;local Rg,og=rC(...);local Ng=(Yg==F and Le or Yg);Rg=Rg-0X0001;do for d4=0X0,Rg do if he>d4 then Wg[d4]=og[d4+0X1];else break;end;end;end;if not ge then og=nil;elseif not(xe)then else Wg[he]={n=Rg>=he and Rg-he+0x00001 or 0X0000,I(og,he+0X00001,Rg+1)};end;if Ng==Yg then else i(fe,Ng);end;local Mg,dg,gg,ig=j(function()while true do local jG=Re[Hg];local wG=jG[0X4];Hg=Hg+0x1;do if not(wG<0xD)then if not(wG<0X14)then if not(wG<23)then if not(wG>=0X19)then do if wG~=24 then local LC=(ve[1]);do(Wg)[0X1]=LC[0X001][LC[2]];end;Hg=Hg+0X1;Hg=Hg+1;do jG=Re[Hg];end;do Hg=Hg+1;end;(Wg)[1]=Wg[0X1][jG[0x5]];local KC=(1);Hg=Hg+0X1;(Wg)[0X002]=Wg[0X0];Hg=Hg+1;do LC=ve[0X0002];end;do(Wg)[3]=LC[0x01][LC[2]];end;Hg=Hg+1;Wg[KC](Wg[KC+0x0001],Wg[KC+2]);Pg=KC-1;Hg=Hg+0X1;LC=ve[0X00002];Wg[1]=LC[0X1][LC[2]];Hg=Hg+1;do Hg=Hg+0X1;end;jG=Re[Hg];Hg=Hg+1;local SC=(Wg[0X1]);do KC=0X1;end;Wg[KC+0X00001]=SC;do Wg[KC]=SC[jG[5]];end;Hg=Hg+0X001;KC=0X1;(Wg[KC])(Wg[KC+1]);do Pg=KC-0x1;end;Hg=Hg+1;do Hg=Hg+1;end;jG=Re[Hg];Hg=Hg+0X01;Hg=jG[0X00006];else Og[jG[6]]=Wg[jG[0X7]];end;end;else if wG~=26 then Wg[0x0]=Ng[jG[2]];jG=Re[Hg];Hg=Hg+0X01;do(Wg)[0x0]=Wg[0x000][jG[5]];end;do jG=Re[Hg];end;Hg=Hg+0X1;if not(not Wg[0])then else Hg=jG[0x006];end;else do for yn=jG[7],jG[6]do do Wg[yn]=nil;end;end;end;end;end;else if wG>=21 then if wG~=0X16 then Wg[0X00000]=Ng[jG[2]];local n3=(0);Hg=Hg+1;do Hg=Hg+1;end;jG=Re[Hg];Hg=Hg+0X1;(Wg)[0X00001]=jG[0X0002];Hg=Hg+1;Wg[n3]=Wg[n3](Wg[n3+1]);Pg=n3;do jG=Re[Hg];end;Hg=Hg+0X0001;Wg[0]=Wg[0x0][jG[5]];jG=Re[Hg];do Hg=Hg+0X1;end;if not(not Wg[0X00])then else Hg=jG[6];end;else do Wg[0X0]=Ng[jG[0X2]];end;Hg=Hg+0X1;do Hg=Hg+1;end;jG=Re[Hg];Hg=Hg+0X01;(Wg)[0X1]=jG[2];Hg=Hg+0X1;local Cs=(0X0);(Wg)[Cs]=Wg[Cs](Wg[Cs+0X1]);Pg=Cs;jG=Re[Hg];do Hg=Hg+1;end;(Wg)[0x000]=Wg[0][jG[5]];Hg=Hg+1;Hg=Hg+1;jG=Re[Hg];Hg=Hg+0X1;if Wg[0X0]then do Hg=jG[6];end;end;end;else(Wg)[0]=Ng[jG[2]];do Hg=Hg+0X1;end;do Hg=Hg+0X1;end;jG=Re[Hg];Hg=Hg+0X1;do Wg[0X1]=jG[2];end;jG=Re[Hg];Hg=Hg+0X001;local Hy=(0X00);(Wg)[0X2]=jG[0X00002];do Hg=Hg+1;end;Wg[Hy](Wg[Hy+1],Wg[Hy+2]);do Pg=Hy-1;end;do Hg=Hg+1;end;Hg=Hg+1;do jG=Re[Hg];end;Hg=Hg+1;Wg[0]=Ng[jG[2]];do Hg=Hg+0X01;end;Hg=Hg+1;Hg=Hg+0X0001;Pg=0;Wg[Pg]();Pg=Pg-1;do jG=Re[Hg];end;do Hg=Hg+1;end;Wg[0x0]=Ng[jG[0X2]];jG=Re[Hg];Hg=Hg+1;Wg[0X0]=Wg[0][jG[0x5]];do jG=Re[Hg];end;local vy=(Wg[0X0]);do Hg=Hg+0X001;end;Hy=0;(Wg)[Hy+0X1]=vy;Wg[Hy]=vy[jG[5]];do jG=Re[Hg];end;do Hg=Hg+0X1;end;(Wg)[2]=jG[0X0002];do Hg=Hg+1;end;Hy=0;Wg[Hy]=Wg[Hy](Wg[Hy+1],Wg[Hy+2]);do Pg=Hy;end;jG=Re[Hg];Hg=Hg+1;if not(not Wg[0X0])then else Hg=jG[6];end;end;end;else if wG<0X000010 then do if wG>=0x0000e then do if wG==15 then do Wg[jG[7]]=jG[2];end;else do(Wg)[0]=Ng[jG[2]];end;Hg=Hg+0X01;Hg=Hg+1;jG=Re[Hg];Hg=Hg+1;(Wg)[1]=jG[2];local VQ=(0X0000);jG=Re[Hg];Hg=Hg+0x001;(Wg)[0x2]=jG[0X00002];Hg=Hg+1;(Wg[VQ])(Wg[VQ+1],Wg[VQ+2]);do Pg=VQ-0X1;end;do Hg=Hg+0X1;end;Hg=Hg+1;do jG=Re[Hg];end;do Hg=Hg+1;end;(Wg)[0X00000]=Ng[jG[0X2]];Hg=Hg+0X1;do Hg=Hg+0X1;end;Hg=Hg+1;Pg=0x0000;(Wg[Pg])();Pg=Pg-1;Hg=Hg+0x1;Hg=Hg+1;jG=Re[Hg];Hg=Hg+0X1;(Wg)[0x0]=Ng[jG[2]];jG=Re[Hg];Hg=Hg+0X001;(Wg)[0]=Wg[0][jG[0x00005]];do jG=Re[Hg];end;local NQ=(Wg[0X00]);Hg=Hg+0x00001;VQ=0x00;(Wg)[VQ+1]=NQ;do Wg[VQ]=NQ[jG[0X5]];end;jG=Re[Hg];Hg=Hg+1;Wg[0x2]=jG[0X002];Hg=Hg+1;VQ=0X00000;Wg[VQ]=Wg[VQ](Wg[VQ+1],Wg[VQ+2]);do Pg=VQ;end;jG=Re[Hg];Hg=Hg+0X0001;if not(Wg[0])then else Hg=jG[6];end;end;end;else(Wg)[0]=Ng[jG[2]];local UN=0;jG=Re[Hg];local iN=(ve[1]);do Hg=Hg+0X00001;end;Wg[0X1]=jG[2];do Hg=Hg+1;end;Wg[UN]=Wg[UN](Wg[UN+0X0001]);Pg=UN;do Hg=Hg+0X1;end;(Wg)[0X1]=iN[0X0001][iN[0X2]];Hg=Hg+0X00001;do Hg=Hg+0X1;end;jG=Re[Hg];Hg=Hg+1;do(Wg)[0X00001]=Wg[1][jG[0x005]];end;Hg=Hg+0X0001;do Hg=Hg+0X1;end;Hg=Hg+1;Wg[0X00002]=Wg[0x00];Hg=Hg+1;UN=1;Wg[UN]=Wg[UN](Wg[UN+0X1]);Pg=UN;jG=Re[Hg];Hg=Hg+1;if not Wg[1]then Hg=jG[6];end;end;end;else do if not(wG>=0X12)then do if wG==0X11 then Hg=jG[0X006];else do Wg[jG[0X7]]=Ng[jG[0X0002]];end;end;end;else if wG~=0X000013 then do Wg[0]=Ng[jG[2]];end;Hg=Hg+1;Hg=Hg+0X1;jG=Re[Hg];Hg=Hg+0X1;Wg[0X1]=jG[2];jG=Re[Hg];Hg=Hg+1;(Wg)[0x2]=jG[2];local eM=(0);Hg=Hg+0x001;Wg[eM](Wg[eM+0X1],Wg[eM+2]);Pg=eM-1;jG=Re[Hg];Hg=Hg+0X001;Wg[0]=Ng[jG[2]];do Hg=Hg+1;end;Pg=0;(Wg[Pg])();do Pg=Pg-0X001;end;jG=Re[Hg];do Hg=Hg+1;end;(Wg)[0]=Ng[jG[2]];Hg=Hg+0X1;Hg=Hg+0X1;do jG=Re[Hg];end;Hg=Hg+1;Wg[0]=Wg[0][jG[5]];jG=Re[Hg];Hg=Hg+1;local tM=(Wg[0]);eM=0X0;(Wg)[eM+1]=tM;Wg[eM]=tM[jG[0X5]];do jG=Re[Hg];end;Hg=Hg+1;Wg[2]=jG[2];Hg=Hg+1;eM=0;do(Wg)[eM]=Wg[eM](Wg[eM+0X0001],Wg[eM+2]);end;Pg=eM;Hg=Hg+0X00001;Hg=Hg+1;jG=Re[Hg];do Hg=Hg+1;end;if not Wg[0X0000]then do Hg=jG[0X0006];end;end;else local sF=ve[0X0];Wg[0X00000]=sF[1][sF[2]];jG=Re[Hg];Hg=Hg+0X01;(Wg)[0]=Wg[0][jG[0x05]];jG=Re[Hg];do Hg=Hg+1;end;if Wg[0]then Hg=jG[0X6];end;end;end;end;end;end;else if not(wG>=6)then if wG<0x00003 then if wG<0x001 then(Wg)[jG[7]]={I({},1,jG[6])};else if wG==0X00002 then do(Wg)[jG[0X0007]]=Wg[jG[0X006]]-Wg[jG[1]];end;else Wg[0X0]=Ng[jG[2]];Hg=Hg+1;do Pg=0;end;(Wg[Pg])();do Pg=Pg-0X1;end;Hg=Hg+0X1;Hg=Hg+1;jG=Re[Hg];Hg=Hg+0X00001;Hg=jG[6];end;end;else if wG>=0X004 then if wG~=5 then else Wg[0]=Ng[jG[0X2]];jG=Re[Hg];Hg=Hg+0X0001;local gx=0X0;(Wg)[0X001]=jG[0x0002];Hg=Hg+1;Wg[gx](Wg[gx+1]);Pg=gx-0x1;do Hg=Hg+1;end;Hg=Hg+1;jG=Re[Hg];do Hg=Hg+1;end;Hg=jG[0X006];end;else local Zl=(nil);local kl=je[jG[6]];local Sl=(kl[0X0008]);local el=#Sl;if not(el>0)then else do Zl={};end;for sw=0X00001,el do local Nw=Sl[sw];if Nw[1]~=0x00000 then Zl[sw-1]=ve[Nw[2]];else(Zl)[sw-0X00001]={Wg,Nw[2]};end;end;A(De,Zl);end;(Wg)[jG[7]]=NC(Zl,Ng,kl);end;end;else if not(wG<0X9)then do if not(wG<11)then if wG==12 then local Bi=(ve[0X00]);(Wg)[0]=Bi[0X1][Bi[0X2]];do Hg=Hg+0X1;end;Hg=Hg+0X00001;do jG=Re[Hg];end;Hg=Hg+0X1;Wg[0X0000]=Wg[0x0][jG[5]];jG=Re[Hg];Hg=Hg+1;if not(Wg[0X00000])then else Hg=jG[6];end;else local lp=ve[0];(Wg)[0X0]=lp[1][lp[2]];do jG=Re[Hg];end;do Hg=Hg+1;end;do(Wg)[0X0]=Wg[0][jG[0X05]];end;jG=Re[Hg];Hg=Hg+1;if not Wg[0x0]then Hg=jG[0X06];end;end;else if wG==10 then(Wg)[0X0]=Ng[jG[2]];jG=Re[Hg];Hg=Hg+1;local Rd=(0);Wg[0x1]=jG[0X0002];Hg=Hg+0X0001;(Wg[Rd])(Wg[Rd+1]);Pg=Rd-0X1;jG=Re[Hg];Hg=Hg+1;Hg=jG[6];else local iz=(ve[0x0]);do(Wg)[0X0000]=iz[0x1][iz[2]];end;do Hg=Hg+0X0001;end;do Hg=Hg+0x1;end;jG=Re[Hg];Hg=Hg+1;Wg[0X0]=Wg[0][jG[0x5]];Hg=Hg+0X1;do Hg=Hg+1;end;jG=Re[Hg];Hg=Hg+0X00001;do if not(Wg[0])then else Hg=jG[0x06];end;end;end;end;end;else if not(wG<7)then if wG==8 then Wg[jG[0x007]]=Wg[jG[0X6]];else repeat local iz,Fz=De,Wg;if#iz>0X0 then local tr={};for F9,V9 in D,iz do for Su,eu in D,V9 do if eu[0X00001]==Fz and eu[0x0002]>=0 then local Rd=eu[2];if not tr[Rd]then tr[Rd]={Fz[Rd]};end;(eu)[0x1]=tr[Rd];eu[0X2]=0X01;end;end;end;end;until true;do return;end;end;else Wg[jG[7]]=Og[jG[0x006]];end;end;end;end;end;end;end);if Mg then if dg then if ig~=1 then return Wg[gg](I(Wg,gg+1,Pg));else do return Wg[gg]();end;end;elseif not(gg)then else return I(Wg,gg,ig);end;else if f(dg)=="string"then do if not(e(dg,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(e(dg,"^.-:%d+: "))then b(dg,0);else(b)("Lu\114a\p\h\032\Sc\114\105\p\116\:"..(Ae[Hg-1]or"\040\in\116\erna\l\041")..": "..r(dg),0);end;else b(dg,0);end;end;end;end;end;end;else fe=function(...)local H3,w3,t3=1,{},0X000;local b3=({[1]=ce,[0X2]=w3});local R3=(m());local i3=(R3==F and Le or R3);local r3,D3=rC(...);do r3=r3-0X0001;end;do for Tv=0,r3 do if not(he>Tv)then break;else do(w3)[Tv]=D3[Tv+1];end;end;end;end;if not ge then D3=nil;elseif xe then do w3[he]={n=r3>=he and r3-he+1 or 0,I(D3,he+1,r3+1)};end;end;if i3==R3 then else(i)(fe,i3);end;local u3,M3,K3,F3=j(function()while true do local HX=Re[H3];local QX=(HX[0X4]);H3=H3+0X1;do if not(QX>=11)then if QX>=0X05 then if QX>=8 then do if QX>=0x009 then do if QX==0X0a then(w3)[HX[0x7]]=i3[HX[0X02]];else do w3[HX[0X00007]]=#w3[HX[0X06]];end;end;end;else w3[HX[7]]=HX[0X02];end;end;else if not(QX<0X6)then if QX==0X7 then for vA=HX[7],HX[0X6]do do(w3)[vA]=nil;end;end;else local db=(ve[0X0000]);do(w3)[4]=db[0X001][db[0X2]];end;do H3=H3+1;end;H3=H3+0X1;do HX=Re[H3];end;do H3=H3+1;end;do w3[0x005]=w3[0x3][HX[0X05]];end;HX=Re[H3];H3=H3+1;if not(w3[5]<=w3[0X004])then H3=HX[7];end;end;else local uN=HX[0X7];local TN,IN,vN=w3[uN]();do if TN then w3[uN+0x1]=IN;w3[uN+2]=vN;H3=HX[6];end;end;end;end;else do if QX>=0X2 then if QX<0X3 then(w3)[HX[7]]={I({},0X1,HX[6])};else if QX==0x00004 then repeat local ps,Ds=De,w3;do if#ps>0X00000 then local yv=({});for GH,DH in D,ps do for uL,aL in D,DH do if not(aL[1]==Ds and aL[2]>=0)then else local rt=(aL[2]);do if not(not yv[rt])then else yv[rt]={Ds[rt]};end;end;(aL)[1]=yv[rt];(aL)[0X2]=1;end;end;end;end;end;until true;return;else local B8=je[HX[0X6]];local K8=B8[0x0008];local t8=nil;local f8=#K8;if f8>0 then t8={};do for oT=0x1,f8 do local ST=(K8[oT]);do if ST[0x1]==0x00000 then(t8)[oT-1]={w3,ST[0X2]};else t8[oT-1]=ve[ST[2]];end;end;end;end;A(De,t8);end;do(w3)[HX[0X00007]]=NC(t8,i3,B8);end;end;end;else do if QX~=0X1 then local P2=HX[0X7];local r2,T2=w3[P2]();if r2 then do for yZ=1,HX[1]do w3[P2+yZ]=T2[yZ];end;end;H3=HX[6];end;else do(w3)[HX[7]]=w3[HX[6]][HX[0X5]];end;end;end;end;end;end;else do if QX<0X010 then if QX>=13 then if QX>=14 then if QX==15 then do w3[HX[7]]=not w3[HX[0x00006]];end;else end;else do w3[1]=i3[HX[0X02]];end;local Mx=1;H3=H3+1;H3=H3+1;HX=Re[H3];H3=H3+0X1;w3[2]=i3[HX[2]];H3=H3+1;w3[0X00002]=w3[0x00002][w3[0]];do H3=H3+1;end;do H3=H3+0X0001;end;do H3=H3+1;end;local Xx,Qx=4,(2);if Qx==0X0 then else do t3=Mx+Qx-0x1;end;end;local Dx,hx=nil,nil;if Qx~=0X00001 then Dx,hx=rC(w3[Mx](I(w3,Mx+1,t3)));else Dx,hx=rC(w3[Mx]());end;if Xx~=1 then if Xx==0x0 then do Dx=Dx+Mx-0X00001;end;t3=Dx;else Dx=Mx+Xx-0X2;t3=Dx+0X1;end;local pA=0;do for Kz=Mx,Dx do pA=pA+0X1;(w3)[Kz]=hx[pA];end;end;else t3=Mx-1;end;H3=H3+1;H3=H3+0X0001;HX=Re[H3];H3=H3+0X0001;Mx=0x00001;local dx=(g(function(...)(d)();for Wg,Hg in...do(d)(true,Wg,Hg);end;end));(dx)(w3[Mx],w3[Mx+0X01],w3[Mx+2]);t3=Mx;(w3)[Mx]=dx;H3=HX[6];end;else if QX==12 then do(w3)[HX[0X7]]=w3[HX[6]];end;else(w3)[6]=w3[0X003][HX[5]];H3=H3+0X001;H3=H3+1;HX=Re[H3];do H3=H3+1;end;(w3)[7]=i3[HX[2]];H3=H3+1;local A2=(7);H3=H3+0X1;HX=Re[H3];H3=H3+1;(w3)[7]=w3[0x0007][HX[0X05]];H3=H3+0X00001;H3=H3+0x1;do HX=Re[H3];end;H3=H3+1;w3[0X8]=w3[0x00003][HX[0X00005]];HX=Re[H3];H3=H3+0X1;(w3)[0X09]=i3[HX[2]];H3=H3+0X1;H3=H3+0X1;H3=H3+0X1;do w3[A2]=w3[A2](w3[A2+1],w3[A2+2]);end;t3=A2;H3=H3+1;(w3)[0X6]=w3[0X6][w3[0X00007]];do H3=H3+0X00001;end;H3=H3+1;HX=Re[H3];do H3=H3+0X00001;end;if w3[6]~=HX[0X5]then do H3=HX[7];end;end;end;end;else if QX>=0X000013 then do if QX>=20 then if QX~=0x015 then local ii=HX[0x7];local Li=HX[6];if Li==0x0 then else t3=ii+Li-0X00001;end;local bi,hi=nil,nil;local Di=HX[1];if Li==1 then do bi,hi=rC(w3[ii]());end;else bi,hi=rC(w3[ii](I(w3,ii+0x01,t3)));end;do if Di==1 then t3=ii-1;else if Di==0 then bi=bi+ii-0x1;t3=bi;else bi=ii+Di-0X2;t3=bi+1;end;local Lw=(0X0);do for Ua=ii,bi do do Lw=Lw+0X1;end;w3[Ua]=hi[Lw];end;end;end;end;else local I9=(HX[0X0007]);local U9=g(function(...)(d)();for rO,hO,aO,YO,NO,nO,LO,uO,yO,OO in...do(d)(true,{rO,hO,aO,YO,NO,nO,LO,uO,yO,OO});end;end);U9(w3[I9],w3[I9+0X0001],w3[I9+2]);t3=I9;(w3)[I9]=U9;H3=HX[0X6];end;else do H3=HX[0X06];end;end;end;else if not(QX>=0x000011)then w3[HX[0X7]]=k(w3[HX[0X0006]],w3[HX[1]]);else do if QX==0x012 then do if not(w3[HX[7]])then else H3=HX[0x00006];end;end;else do(w3)[4]=i3[HX[2]];end;HX=Re[H3];H3=H3+1;do w3[0x004]=w3[0X00004][HX[0X5]];end;do H3=H3+1;end;do H3=H3+0X01;end;do HX=Re[H3];end;H3=H3+1;w3[5]=i3[HX[2]];HX=Re[H3];do H3=H3+0X1;end;(w3)[0x6]=HX[0X2];H3=H3+1;w3[0X7]={};HX=Re[H3];local a9=(8);do H3=H3+1;end;w3[0X0007][HX[0x002]]=w3[0X00];HX=Re[H3];H3=H3+1;w3[8]=i3[HX[0X2]];do H3=H3+1;end;H3=H3+0X00001;H3=H3+0x00001;w3[0x9]=w3[2];H3=H3+0X1;w3[a9]=w3[a9](w3[a9+0X1]);do t3=a9;end;HX=Re[H3];do H3=H3+0x1;end;w3[0X7][HX[2]]=w3[8];HX=Re[H3];do H3=H3+1;end;do(w3)[0X8]=i3[HX[0x002]];end;H3=H3+0X1;H3=H3+1;HX=Re[H3];do H3=H3+0x1;end;do(w3)[0X0008]=w3[8][HX[5]];end;H3=H3+0X001;H3=H3+0X1;HX=Re[H3];do H3=H3+0X01;end;do(w3)[9]=w3[0X3][HX[5]];end;do H3=H3+0X1;end;H3=H3+1;HX=Re[H3];H3=H3+1;w3[0XA]=i3[HX[2]];H3=H3+0X1;do a9=0x8;end;w3[a9]=w3[a9](w3[a9+0X1],w3[a9+0X2]);t3=a9;do H3=H3+1;end;H3=H3+0X001;HX=Re[H3];H3=H3+0X1;w3[7][HX[0X00002]]=w3[0X8];HX=Re[H3];H3=H3+1;(w3)[8]=w3[3][HX[0X5]];HX=Re[H3];H3=H3+0x1;w3[7][HX[0X00002]]=w3[0X8];do H3=H3+1;end;do a9=4;end;t3=a9+4-0X1;(w3[a9])(I(w3,a9+0X1,t3));t3=a9-0x0001;HX=Re[H3];do H3=H3+0X1;end;do H3=HX[0x06];end;end;end;end;end;end;end;end;end;end;end);if u3 then if M3 then if F3~=0X1 then return w3[K3](I(w3,K3+0x1,t3));else return w3[K3]();end;elseif K3 then return I(w3,K3,F3);end;else if f(M3)~="string"then(b)(M3,0);else if e(M3,'at\116e\109pt t\o\032\y\i\e\108\d \097\cr\o\115\115 \m\e\116am\e\116\h\o\d\/\067\%\045\ca\l\l b\oun\da\114\y')then return coroutine.yield();end;if not(e(M3,"^.-:%d+: "))then b(M3,0);else(b)("Luraph Script:"..(Ae[H3-1]or"\(in\116\101r\110\097\108\)")..': '..r(M3),0);end;end;end;end;end;else if me<121 then fe=function(...)local of,Cf=1,{};local Af=(0);local If=(m());local Zf=({[1]=ce,[0X2]=Cf});local Uf,jf=rC(...);Uf=Uf-1;for gX=0,Uf do if not(he>gX)then break;else(Cf)[gX]=jf[gX+1];end;end;local hf=(If==F and Le or If);if not ge then jf=nil;elseif not(xe)then else(Cf)[he]={n=Uf>=he and Uf-he+0X1 or 0,I(jf,he+0X1,Uf+0x1)};end;if hf~=If then i(fe,hf);end;local uf,Jf,gf,nf=j(function()while true do local vt=(Re[of]);local lt=vt[0x0004];do of=of+0X00001;end;if lt>=8 then if lt<0XC then if not(lt>=10)then if lt~=9 then for Ah=vt[7],vt[0X06]do Cf[Ah]=nil;end;else(Cf)[vt[0X7]]=hf[vt[2]];end;else do if lt~=0X00b then do Cf[vt[0X7]]=Cf[vt[0X0006]]<Cf[vt[1]];end;else do repeat local jE,FE=De,Cf;if#jE>0 then local Ul={};do for Uq,mq in D,jE do for mS,CS in D,mq do if not(CS[0X1]==FE and CS[0X002]>=0X0)then else local Kx=CS[0X2];if not Ul[Kx]then Ul[Kx]={FE[Kx]};end;(CS)[0X0001]=Ul[Kx];do(CS)[0x0002]=0X1;end;end;end;end;end;end;until true;end;do return;end;end;end;end;else do if not(lt<14)then if lt<0X00F then local bh=vt[7];local ih=(g(function(...)(d)();for zG,hG,rG,sG,XG,jG,EG,TG,xG,GG in...do d(true,{zG,hG,rG,sG,XG,jG,EG,TG,xG,GG});end;end));(ih)(Cf[bh],Cf[bh+0X1],Cf[bh+2]);Af=bh;do Cf[bh]=ih;end;of=vt[0X6];else if lt==16 then if not(not Cf[vt[7]])then else of=vt[6];end;else local OC=(ve[0]);local kC=0;(Cf)[0X0]=OC[0X1][OC[2]];of=of+0X01;of=of+0X0001;vt=Re[of];of=of+0X1;local TC=(Cf[0X00000]);do(Cf)[kC+0X001]=TC;end;Cf[kC]=TC[vt[5]];of=of+0X1;kC=0X00000;Cf[kC](Cf[kC+1]);Af=kC-1;vt=Re[of];of=of+0X1;(Cf)[0]=hf[vt[0X2]];do of=of+1;end;do of=of+0x00001;end;do vt=Re[of];end;of=of+1;(Cf)[0x0]=Cf[0x0][vt[5]];do vt=Re[of];end;of=of+1;if not(not Cf[0])then else of=vt[6];end;end;end;else if lt==13 then Cf[vt[7]]=vt[2];else do Cf[0X0]=hf[vt[0X2]];end;do of=of+0X001;end;of=of+0X1;of=of+1;Af=0;(Cf)[Af]=Cf[Af]();do of=of+0X0001;end;do of=of+1;end;do of=of+0X1;end;(Cf)[0X0]=not Cf[0];vt=Re[of];of=of+1;do of=vt[0X0006];end;end;end;end;end;else if not(lt>=0x00004)then if lt>=0X2 then if lt==3 then of=vt[6];else Cf[vt[7]]={I({},1,vt[6])};end;else if lt==0X00001 then local eN=(ve[0]);(Cf)[0X000]=eN[1][eN[2]];local vN=(0);vt=Re[of];of=of+1;local DN=(Cf[0]);(Cf)[vN+1]=DN;do Cf[vN]=DN[vt[0X0005]];end;of=of+0X1;vN=0;Cf[vN]=Cf[vN](Cf[vN+0X1]);Af=vN;vt=Re[of];of=of+1;of=vt[0x00006];else local Uv=je[vt[6]];local ov,zv=Uv[8],nil;local nv=(#ov);if not(nv>0)then else zv={};for Df=1,nv do local Xf=(ov[Df]);do if Xf[1]==0 then zv[Df-1]={Cf,Xf[2]};else do(zv)[Df-0X1]=ve[Xf[0X00002]];end;end;end;end;A(De,zv);end;Cf[vt[0X7]]=NC(zv,hf,Uv);end;end;else if not(lt<6)then if lt==0X7 then repeat local M_,q_=De,Cf;do if not(#M_>0X0)then else local ke={};for M5,z5 in D,M_ do for wB,HB in D,z5 do if not(HB[1]==q_ and HB[0X2]>=0)then else local pM=(HB[0x2]);if not(not ke[pM])then else do(ke)[pM]={q_[pM]};end;end;HB[1]=ke[pM];(HB)[0X2]=1;end;end;end;end;end;until true;local Fi=(vt[7]);do return false,Fi,Fi;end;else Cf[vt[7]]=O(Cf[vt[0X6]],Cf[vt[0x1]]);end;else if lt~=0x5 then else local be=vt[0X6];local qe=Cf[be];for rR=be+1,vt[0X01]do qe=qe..Cf[rR];end;(Cf)[vt[7]]=qe;end;end;end;end;end;end);do if uf then do if Jf then if nf~=1 then return Cf[gf](I(Cf,gf+1,Af));else do return Cf[gf]();end;end;elseif gf then return I(Cf,gf,nf);end;end;else if f(Jf)~="string"then(b)(Jf,0);else if not(e(Jf,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if e(Jf,'\^\046-\:%\d+:\ ')then(b)("Luraph Script:"..(Ae[of-1]or"\(in\116\101\114na\l\)")..": "..r(Jf),0X0000);else(b)(Jf,0);end;end;end;end;end;end;else if me==0X7a then fe=function(...)local ww,Yw=0X1,{};local Sw=0;local nw=(m());local Kw,aw=rC(...);local rw={[1]=ce,[0X2]=Yw};Kw=Kw-0x0001;local Ew=(nw==F and Le or nw);for M0=0,Kw do if he>M0 then Yw[M0]=aw[M0+0X00001];else break;end;end;do if not ge then do aw=nil;end;elseif not(xe)then else do(Yw)[he]={n=Kw>=he and Kw-he+1 or 0,I(aw,he+1,Kw+0X001)};end;end;end;if Ew~=nw then i(fe,Ew);end;local Zw,Mw,Jw,kw=j(function()while true do local D7=(Re[ww]);local E7=(D7[0x04]);ww=ww+0x1;if not(E7<9)then if E7>=0X00e then do if not(E7<0X10)then if not(E7>=17)then else if E7~=0X000012 then for KC=D7[7],D7[6]do Yw[KC]=nil;end;else do repeat local oj,Rj=De,(Yw);do if#oj>0X0000 then local yO={};for EY,dY in D,oj do for fI,tI in D,dY do if tI[1]==Rj and tI[2]>=0X00 then local J3=tI[0x02];if not yO[J3]then(yO)[J3]={Rj[J3]};end;tI[1]=yO[J3];tI[0x2]=0X1;end;end;end;end;end;until true;end;do return;end;end;end;else do if E7==0X0000F then do if Yw[D7[6]]==Yw[D7[1]]then ww=D7[0X00007];end;end;else(Yw)[0X0]=Ew[D7[0x2]];ww=ww+1;ww=ww+1;do D7=Re[ww];end;ww=ww+0x1;(Yw)[0x0]=Yw[0X0][D7[5]];D7=Re[ww];ww=ww+0X0001;if not Yw[0X0]then ww=D7[6];end;end;end;end;end;else if not(E7>=0Xb)then if E7==0X00a then Yw[0X0000]=Ew[D7[2]];do ww=ww+0X00001;end;ww=ww+0X1;D7=Re[ww];do ww=ww+1;end;do Yw[0]=Yw[0X0][D7[0x5]];end;do D7=Re[ww];end;ww=ww+0X00001;Yw[1]=D7[0X2];local Td=0X00;ww=ww+1;Yw[Td]=Yw[Td](Yw[Td+0X01]);Sw=Td;ww=ww+1;ww=ww+0X001;D7=Re[ww];ww=ww+0X1;if not Yw[0]then do ww=D7[6];end;end;else local BW=ve[0X00000];(Yw)[0]=BW[0X00001][BW[2]];ww=ww+1;local lW=0;ww=ww+1;D7=Re[ww];ww=ww+0X1;local jW=(Yw[0]);(Yw)[lW+1]=jW;Yw[lW]=jW[D7[0X0005]];ww=ww+0X01;lW=0X000;do(Yw)[lW]=Yw[lW](Yw[lW+0X1]);end;Sw=lW;do D7=Re[ww];end;ww=ww+1;if not Yw[0X0]then ww=D7[0x6];end;end;else if not(E7<12)then if E7==0X00D then do Yw[D7[0X07]]=D7[0x2];end;else Yw[D7[7]]=Ew[D7[2]];end;else do ww=D7[0x6];end;end;end;end;else if not(E7<0x4)then do if E7<0x6 then do if E7~=5 then Yw[D7[7]]={I({},1,D7[0x006])};else local fq=(ve[0x0]);(Yw)[0]=fq[0X1][fq[0X002]];local mq=(0x0);D7=Re[ww];ww=ww+0X1;local Mq=Yw[0X0];Yw[mq+0X1]=Mq;(Yw)[mq]=Mq[D7[5]];do ww=ww+0X1;end;mq=0x0000;Yw[mq](Yw[mq+0X01]);Sw=mq-0X1;ww=ww+0X00001;do ww=ww+1;end;do ww=ww+0X1;end;repeat local X6,C6=De,(Yw);if not(#X6>0)then else local AU={};for VN,xN in D,X6 do for nA,UA in D,xN do if UA[1]==C6 and UA[0X2]>=0 then local Bb=UA[2];do if not AU[Bb]then(AU)[Bb]={C6[Bb]};end;end;UA[0X001]=AU[Bb];do(UA)[2]=0x1;end;end;end;end;end;until true;return;end;end;else if E7>=0X00007 then if E7==0X0008 then local Wp=(D7[7]);do for JO=Wp,Wp+(D7[0X6]-0x1)do Yw[JO]=aw[he+(JO-Wp)+1];end;end;else do(Yw)[D7[7]]=L(Yw[D7[6]],Yw[D7[0X001]]);end;end;else local li=(D7[0X6]);local ti=Yw[li];for wT=li+1,D7[1]do do ti=ti..Yw[wT];end;end;Yw[D7[7]]=ti;end;end;end;else if E7>=2 then if E7==0X3 then local OQ=je[D7[0X006]];local PQ=OQ[8];local FQ=nil;local dQ=#PQ;if dQ>0X000 then FQ={};for ZK=1,dQ do local MK=(PQ[ZK]);if MK[1]~=0X00000 then do(FQ)[ZK-0X00001]=ve[MK[2]];end;else FQ[ZK-0X1]={Yw,MK[2]};end;end;(A)(De,FQ);end;(Yw)[D7[7]]=NC(FQ,Ew,OQ);else Yw[0]=Ew[D7[2]];ww=ww+1;ww=ww+0X1;ww=ww+0x1;do Sw=0;end;(Yw)[Sw]=Yw[Sw]();ww=ww+0X1;ww=ww+0x001;D7=Re[ww];do ww=ww+0X00001;end;if Yw[0]then ww=D7[6];end;end;else if E7==1 then Yw[0x0000]=Ew[D7[2]];D7=Re[ww];local k1=(je[D7[0X6]]);ww=ww+0X0001;local v1,G1=nil,k1[8];local n1=#G1;if n1>0x00000 then v1={};for Yx=0X1,n1 do local Tx=G1[Yx];do if Tx[1]~=0 then do v1[Yx-1]=ve[Tx[0X2]];end;else do(v1)[Yx-1]={Yw,Tx[0X2]};end;end;end;end;(A)(De,v1);end;Yw[0x1]=NC(v1,Ew,k1);local w1=0;do ww=ww+1;end;(Yw[w1])(Yw[w1+0X1]);do Sw=w1-0X001;end;ww=ww+0X1;ww=ww+0X1;D7=Re[ww];ww=ww+0X1;ww=D7[0X0006];else if not(Yw[D7[0X07]])then else do ww=D7[0X6];end;end;end;end;end;end;end;end);if Zw then if Mw then if kw==0X1 then return Yw[Jw]();else return Yw[Jw](I(Yw,Jw+0x0001,Sw));end;elseif not(Jw)then else return I(Yw,Jw,kw);end;else if f(Mw)=="\str\i\110\g"then if not(e(Mw,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(e(Mw,"^.-:%d+: "))then(b)(Mw,0);else(b)("\L\117ra\112\h\ \Sc\114\i\p\116:"..(Ae[ww-0X001]or"(internal)")..":\ "..r(Mw),0);end;else b(Mw,0);end;end;end;else fe=function(...)local sw=(0x0);local Kw=1;local qw=({});local Lw=({[1]=ce,[0X2]=qw});local Iw=m();local Bw,Jw=rC(...);local fw=(Iw==F and Le or Iw);do Bw=Bw-0X1;end;for wP=0,Bw do if not(he>wP)then do break;end;else qw[wP]=Jw[wP+1];end;end;if not ge then Jw=nil;elseif xe then(qw)[he]={n=Bw>=he and Bw-he+0X1 or 0,I(Jw,he+0X1,Bw+1)};end;do if fw~=Iw then(i)(fe,fw);end;end;local hw,yw,Gw,iw=j(function()while true do local Y5=(Re[Kw]);local t5=(Y5[0X4]);Kw=Kw+1;do if not(t5>=0X0008)then if t5<0X4 then if not(t5<2)then do if t5~=3 then local oK,tK=je[Y5[0X6]],(nil);local yK=oK[8];local GK=#yK;do if not(GK>0X0)then else tK={};for vl=1,GK do local Bl=(yK[vl]);if Bl[1]==0X0 then(tK)[vl-1]={qw,Bl[0x2]};else tK[vl-0X001]=ve[Bl[2]];end;end;(A)(De,tK);end;end;do qw[Y5[7]]=NC(tK,fw,oK);end;else local E6=(ve[0x0]);qw[0X0]=E6[1][E6[2]];Kw=Kw+0X00001;Kw=Kw+1;do Kw=Kw+1;end;E6=ve[1];do qw[0X1]=E6[1][E6[0x2]];end;Y5=Re[Kw];do Kw=Kw+0x1;end;if qw[0]~=qw[0X1]then Kw=Y5[0X7];end;end;end;else if t5==0X1 then qw[Y5[0X7]]=O(qw[Y5[6]],qw[Y5[0X1]]);else qw[0X0000]=false;Y5=Re[Kw];Kw=Kw+0X1;fw[Y5[2]]=qw[0];Y5=Re[Kw];do Kw=Kw+1;end;Kw=Y5[0X6];end;end;else do if not(t5<0X06)then do if t5==0x007 then qw[Y5[0X7]]=qw[Y5[6]]%qw[Y5[1]];else end;end;else if t5==5 then if qw[Y5[7]]then Kw=Y5[6];end;else repeat local ii,Xi=De,(qw);if#ii>0x0 then local X6={};do for D9,O9 in D,ii do for W0,s0 in D,O9 do if not(s0[1]==Xi and s0[2]>=0)then else local RK=s0[2];do if not X6[RK]then do(X6)[RK]={Xi[RK]};end;end;end;s0[0X1]=X6[RK];s0[0x2]=0X1;end;end;end;end;end;until true;do return;end;end;end;end;end;else if not(t5>=0X0000C)then do if not(t5>=0X0000A)then if t5==0x09 then local MB=(qw[Y5[0X6]]/qw[Y5[1]]);do(qw)[Y5[0X0007]]=MB-MB%0X1;end;else do Lw[Y5[6]]=qw[Y5[0X00007]];end;end;else if t5==11 then Kw=Y5[6];else qw[Y5[0X7]]=qw[Y5[6]]>qw[Y5[1]];end;end;end;else do if t5<0Xe then if t5~=0Xd then do(qw)[Y5[0X7]]={I({},1,Y5[6])};end;else qw[Y5[0X7]]=fw[Y5[2]];end;else if t5==15 then(qw)[Y5[7]]=#qw[Y5[0X6]];else do(qw)[Y5[0X7]]=Y5[0X02];end;end;end;end;end;end;end;end;end);if not(hw)then if f(yw)=="\s\116r\i\110\103"then do if not(e(yw,'\097\116\116e\109p\116\ t\111\ yi\el\d\ a\c\114\o\115\115\ \met\097\m\101t\104\o\100\/\C\037\-ca\108\l\ b\111\117\110\dar\y'))then else return coroutine.yield();end;end;if e(yw,"^.-:%d+: ")then(b)("\Lu\114aph \S\cri\pt:"..(Ae[Kw-0X1]or'\(\105\110\116e\114na\108\)').."\: "..r(yw),0X000);else b(yw,0);end;else b(yw,0X00000);end;else if yw then do if iw~=0X1 then return qw[Gw](I(qw,Gw+0X00001,sw));else return qw[Gw]();end;end;elseif Gw then return I(qw,Gw,iw);end;end;end;end;end;end;else do if me<126 then if me>=124 then if me~=0X7d then fe=function(...)local hg=0X1;local dg=({});local Eg=m();local og,qg=0X00000,(Eg==F and Le or Eg);local zg=({[0X2]=dg,[1]=ce});local Jg,Og=rC(...);do Jg=Jg-1;end;for Bo=0X0,Jg do if he>Bo then dg[Bo]=Og[Bo+1];else break;end;end;if not ge then Og=nil;elseif xe then dg[he]={n=Jg>=he and Jg-he+1 or 0X0000,I(Og,he+1,Jg+1)};end;do if qg==Eg then else(i)(fe,qg);end;end;local Wg,Kg,Zg,tg=j(function()while true do local NM=Re[hg];local uM=NM[0X0004];hg=hg+1;if not(uM<0X0000F)then if uM>=0X16 then if uM>=26 then if not(uM>=0X1C)then if uM==0x001b then(dg)[NM[0X00007]]=dg[NM[6]]<=dg[NM[0x001]];else do dg[NM[0x7]]=dg[NM[0X00006]]+dg[NM[1]];end;end;else do if uM==29 then else local v1=(NM[7]);local I1,P1=dg[v1]();if not(I1)then else hg=NM[0X6];(dg)[v1+3]=P1;end;end;end;end;else if not(uM<0X000018)then do if uM==25 then do dg[0xB]=qg[NM[0X00002]];end;do NM=Re[hg];end;local Mb=11;hg=hg+0X1;dg[12]=dg[9][NM[5]];hg=hg+1;(dg)[13]=dg[0X0000];hg=hg+0X01;(dg)[Mb]=dg[Mb](dg[Mb+1],dg[Mb+0x2]);do og=Mb;end;hg=hg+0X1;do hg=hg+1;end;NM=Re[hg];hg=hg+1;do if not(dg[0xB])then else hg=NM[6];end;end;else local zW=je[NM[6]];local qW,PW=zW[8],(nil);local pW=#qW;if pW>0 then do PW={};end;for qT=0X0001,pW do local HT=(qW[qT]);if HT[0X00001]~=0x0 then(PW)[qT-0X1]=ve[HT[0x2]];else(PW)[qT-0X01]={dg,HT[2]};end;end;A(De,PW);end;dg[NM[0x007]]=NC(PW,qg,zW);end;end;else if uM==0X17 then(dg)[0X0b]=qg[NM[2]];NM=Re[hg];hg=hg+0X01;dg[11]=dg[11][NM[0X5]];hg=hg+1;hg=hg+0X1;do hg=hg+0X1;end;do(dg)[12]=dg[3];end;hg=hg+0X1;dg[0x00D]=dg[0x9];local So=0XB;hg=hg+0X1;dg[So](dg[So+1],dg[So+2]);do og=So-1;end;hg=hg+0x01;hg=hg+0X1;NM=Re[hg];hg=hg+0X01;hg=NM[6];else dg[NM[0x7]]=dg[NM[0x0006]];end;end;end;else do if not(uM<18)then if not(uM>=0X000014)then do if uM==19 then(dg)[0xD]=qg[NM[0X2]];do hg=hg+0X01;end;hg=hg+1;NM=Re[hg];hg=hg+1;(dg)[13]=dg[13][NM[5]];do hg=hg+0x1;end;hg=hg+0X0001;NM=Re[hg];do hg=hg+1;end;(dg)[0x00e]=qg[NM[0X2]];hg=hg+1;hg=hg+0X1;NM=Re[hg];local Qw=(0X0000d);hg=hg+1;dg[0XF]=dg[0x00009][NM[0X5]];hg=hg+1;do(dg)[Qw]=dg[Qw](dg[Qw+0X0001],dg[Qw+0x02]);end;do og=Qw;end;do NM=Re[hg];end;hg=hg+1;if not(dg[13])then else hg=NM[0X6];end;else for Cd=NM[0x007],NM[6]do(dg)[Cd]=nil;end;end;end;else do if uM~=21 then dg[NM[7]]=qg[NM[0X2]];else do dg[3]={};end;hg=hg+0x00001;dg[4]=dg[1];NM=Re[hg];do hg=hg+1;end;if not(dg[0X0004])then else hg=NM[0X6];end;end;end;end;else if uM<16 then do hg=NM[0X6];end;else if uM~=17 then do dg[NM[0x7]]={I({},1,NM[6])};end;else do(dg)[0XB]=dg[10][NM[5]];end;hg=hg+0X1;hg=hg+1;NM=Re[hg];hg=hg+1;do if not(NM[0X2]<dg[11])then hg=NM[7];end;end;end;end;end;end;end;else if uM<0X00007 then if not(uM>=0X3)then if uM>=1 then do if uM==2 then do if not(not dg[NM[7]])then else hg=NM[0X6];end;end;else(dg)[5]=NM[0X002];hg=hg+0x1;(dg)[6]=#dg[4];NM=Re[hg];do hg=hg+0X001;end;local XS=(5);do dg[0X7]=NM[0X2];end;NM=Re[hg];hg=hg+0X1;local QS=dg[XS+2];local iS=dg[XS];local US=dg[XS+0X0001];do(dg)[XS]=g(function()do for V5=iS,US,QS do(d)(true,V5);end;end;end);end;hg=NM[6];end;end;else dg[NM[0X7]]=-dg[NM[6]];end;else if not(uM<0X5)then if uM==0x6 then dg[NM[7]]=NM[2];else dg[NM[7]]=NM[0X2];end;else if uM~=0X00004 then repeat local KW,VW=De,(dg);do if#KW>0 then local Zd={};for Hc,Ic in D,KW do do for e5,p5 in D,Ic do do if p5[1]==VW and p5[0X0002]>=0X0 then local GU=(p5[2]);if not Zd[GU]then do(Zd)[GU]={VW[GU]};end;end;do(p5)[0x01]=Zd[GU];end;p5[2]=1;end;end;end;end;end;end;end;until true;return;else repeat local ZK,AK=De,dg;if#ZK>0X00 then local Pu=({});do for sd,pd in D,ZK do for rE,vE in D,pd do if vE[1]==AK and vE[2]>=0 then local Ox=vE[0X2];if not(not Pu[Ox])then else(Pu)[Ox]={AK[Ox]};end;vE[1]=Pu[Ox];do vE[0X0002]=0x001;end;end;end;end;end;end;until true;local zb=NM[7];return false,zb,zb;end;end;end;else if not(uM>=11)then if uM>=0X9 then if uM==0Xa then(dg)[3]=false;hg=hg+0X0001;(dg)[2]=dg[0X3];do hg=hg+0X1;end;(dg)[3]=nil;hg=hg+0x1;dg[0]=dg[3];NM=Re[hg];hg=hg+0X00001;hg=NM[0X06];else do dg[0x9]=dg[0X4][dg[8]];end;hg=hg+0X01;local Ft=dg[0x0009];hg=hg+1;NM=Re[hg];hg=hg+1;local Ot=10;(dg)[Ot+0X1]=Ft;do(dg)[Ot]=Ft[NM[0X5]];end;NM=Re[hg];hg=hg+1;dg[12]=NM[2];do hg=hg+1;end;do Ot=0XA;end;do(dg)[Ot]=dg[Ot](dg[Ot+0X0001],dg[Ot+0X2]);end;do og=Ot;end;NM=Re[hg];do hg=hg+0x1;end;if not dg[0X000]then do hg=NM[0X6];end;end;end;else do if uM==0X8 then(dg)[NM[7]]=G(dg[NM[6]],dg[NM[1]]);else do if dg[NM[6]]~=NM[5]then hg=NM[0X7];end;end;end;end;end;else if uM>=0X00d then if uM==14 then dg[11]=dg[0x009][NM[0X0005]];NM=Re[hg];hg=hg+0X1;(dg)[0xc]=qg[NM[0X2]];hg=hg+1;hg=hg+0X1;do NM=Re[hg];end;hg=hg+1;do(dg)[0X0C]=dg[0xC][NM[0X00005]];end;hg=hg+1;hg=hg+0X1;do NM=Re[hg];end;hg=hg+0X00001;do if dg[11]==dg[0x000c]then hg=NM[7];end;end;else if dg[NM[7]]then hg=NM[0X6];end;end;else if uM==12 then(dg)[NM[7]]=dg[NM[0X06]]>dg[NM[1]];else dg[NM[7]]=true;end;end;end;end;end;end;end);if Wg then if Kg then if tg==1 then return dg[Zg]();else return dg[Zg](I(dg,Zg+1,og));end;elseif Zg then do return I(dg,Zg,tg);end;end;else do if f(Kg)~="\115\116r\105n\g"then(b)(Kg,0);else if e(Kg,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(e(Kg,"^.-:%d+: "))then b(Kg,0X0);else(b)("Luraph Script:"..(Ae[hg-0X0001]or"\(int\e\114na\l\)")..": "..r(Kg),0);end;end;end;end;end;else fe=function(...)local f9,n9,y9=0X1,0X0,{};local t9=m();local w9=((t9==F and Le or t9));local N9={[0X2]=y9,[1]=ce};local a9,d9=rC(...);a9=a9-1;for Ec=0,a9 do if not(he>Ec)then break;else(y9)[Ec]=d9[Ec+0X1];end;end;if not ge then d9=nil;elseif xe then y9[he]={n=a9>=he and a9-he+1 or 0,I(d9,he+0X01,a9+0X1)};end;if w9~=t9 then i(fe,w9);end;local k9,Y9,C9,S9=j(function()do while true do local dM=Re[f9];local kM=dM[0x04];do f9=f9+1;end;if kM>=7 then do if not(kM>=0xb)then if not(kM>=0X0009)then if kM~=8 then do(y9)[dM[0X07]]={I({},0X1,dM[6])};end;else do if not y9[dM[7]]then f9=dM[0X00006];end;end;end;else if kM~=0xA then do(y9)[dM[0X7]]=dM[2];end;else repeat local Eq,Lq=De,(y9);if#Eq>0X00000 then local We={};for gh,mh in D,Eq do for yG,DG in D,mh do if DG[1]==Lq and DG[0X0002]>=0X0 then local ei=(DG[0X2]);if not(not We[ei])then else do We[ei]={Lq[ei]};end;end;DG[0X001]=We[ei];DG[0X00002]=0X00001;end;end;end;end;until true;do return;end;end;end;else if kM<0X0000D then if kM~=12 then y9[dM[0X07]]=y9[dM[6]]>=y9[dM[1]];else do(y9)[0X0]=w9[dM[2]];end;f9=f9+1;f9=f9+1;dM=Re[f9];local qh=0x0;f9=f9+1;local Xh=y9[0X000];y9[qh+0X1]=Xh;(y9)[qh]=Xh[dM[0x5]];dM=Re[f9];f9=f9+0X0001;y9[0X2]=dM[0X2];f9=f9+0X01;qh=0x0;do y9[qh]=y9[qh](y9[qh+0X1],y9[qh+2]);end;n9=qh;f9=f9+0X01;f9=f9+0X1;f9=f9+1;(y9)[1]={};dM=Re[f9];f9=f9+0x1;y9[0X2]=dM[2];dM=Re[f9];local wh=je[dM[0X6]];f9=f9+0X1;local Ih=wh[0x8];local vh=nil;local xh=#Ih;if not(xh>0)then else vh={};for dB=0X01,xh do local rB=Ih[dB];do if rB[0X1]~=0X000 then vh[dB-0X1]=ve[rB[0X2]];else do(vh)[dB-1]={y9,rB[0x2]};end;end;end;end;A(De,vh);end;y9[3]=NC(vh,w9,wh);dM=Re[f9];f9=f9+0X1;y9[4]=w9[dM[2]];dM=Re[f9];f9=f9+0X00001;y9[0X04]=y9[0X0004][dM[5]];do dM=Re[f9];end;f9=f9+1;do wh=je[dM[6]];end;do vh=nil;end;Ih=wh[0X08];xh=#Ih;if xh>0 then vh={};do for vy=1,xh do local Dy=(Ih[vy]);do if Dy[0X1]==0X000 then(vh)[vy-0x1]={y9,Dy[2]};else do(vh)[vy-0X00001]=ve[Dy[0X2]];end;end;end;end;end;A(De,vh);end;(y9)[0X5]=NC(vh,w9,wh);f9=f9+0X1;qh=4;(y9[qh])(y9[qh+1]);do n9=qh-1;end;f9=f9+1;repeat local Pv,rv=De,y9;if not(#Pv>0X0000)then else local FZ={};do for yl,al in D,Pv do for t4,G4 in D,al do if G4[0x1]==rv and G4[0x2]>=0X0 then local xQ=G4[0X2];if not(not FZ[xQ])then else FZ[xQ]={rv[xQ]};end;G4[1]=FZ[xQ];G4[0X02]=0X1;end;end;end;end;end;until true;return;end;else if kM==0X0000e then local xk=(dM[0X0007]);local kk,uk=y9[xk]();do if not(kk)then else do f9=dM[0X006];end;(y9)[xk+0X3]=uk;end;end;else(y9)[dM[0X7]]=y9[dM[6]]+y9[dM[1]];end;end;end;end;else do if not(kM<3)then do if not(kM<5)then do if kM~=6 then for eZ=dM[0X7],dM[6]do do y9[eZ]=nil;end;end;else(y9)[dM[0X07]]=w9[dM[0X02]];end;end;else if kM~=4 then do f9=dM[0X6];end;else local fr=(je[dM[0X0006]]);local br=nil;local Zr=fr[8];local sr=(#Zr);if not(sr>0)then else br={};for qv=1,sr do local Gv=Zr[qv];do if Gv[1]~=0 then do br[qv-0X00001]=ve[Gv[0X2]];end;else do br[qv-0x001]={y9,Gv[0X02]};end;end;end;end;(A)(De,br);end;y9[dM[7]]=NC(br,w9,fr);end;end;end;else if kM<0X0001 then else if kM~=2 then w9[dM[2]]=y9[dM[0X07]];else(y9)[0x00000]=w9[dM[2]];do f9=f9+0X1;end;do f9=f9+1;end;do dM=Re[f9];end;do f9=f9+1;end;if y9[0X0]then f9=dM[6];end;end;end;end;end;end;end;end;end);do if not(k9)then if f(Y9)~="\115\116rin\103"then(b)(Y9,0X0);else if e(Y9,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if e(Y9,"^.-:%d+: ")then(b)("\Lu\114\097\p\104\032\S\099r\i\pt\:"..(Ae[f9-1]or"(internal)")..'\: '..r(Y9),0X0);else b(Y9,0);end;end;else do if Y9 then if S9==1 then return y9[C9]();else return y9[C9](I(y9,C9+0X1,n9));end;elseif C9 then return I(y9,C9,S9);end;end;end;end;end;end;else fe=function(...)local At=0X1;local Ht,Dt={},0x000;local St={[0X2]=Ht,[1]=ce};local nt=(m());local Et,ot=rC(...);do Et=Et-0X1;end;local tt=(nt==F and Le or nt);for tr=0,Et do if not(he>tr)then break;else(Ht)[tr]=ot[tr+0X01];end;end;do if not ge then ot=nil;elseif not(xe)then else(Ht)[he]={n=Et>=he and Et-he+1 or 0X000,I(ot,he+0X1,Et+0X01)};end;end;if tt~=nt then i(fe,tt);end;local Tt,Ot,xt,Vt=j(function()while true do local bg=(Re[At]);local rg=(bg[4]);At=At+1;do if not(rg<0Xa)then do if rg>=0xF then do if rg<18 then if rg<0X10 then Ht[bg[0X07]]=G(Ht[bg[0X6]],Ht[bg[0X001]]);else if rg~=0X11 then do if Ht[bg[0X6]]==Ht[bg[0X1]]then At=bg[7];end;end;else if Ht[bg[7]]then At=bg[0X6];end;end;end;else do if not(rg<19)then do if rg==20 then local ii=(je[bg[6]]);local Ei=ii[8];local Ui=#Ei;local ki=(nil);if Ui>0X00 then do ki={};end;for KI=0X1,Ui do local JI=(Ei[KI]);if JI[1]~=0 then do ki[KI-0X001]=ve[JI[0X2]];end;else(ki)[KI-1]={Ht,JI[2]};end;end;(A)(De,ki);end;do Ht[bg[7]]=NC(ki,tt,ii);end;else do Ht[bg[7]]={I({},0X00001,bg[0X006])};end;end;end;else Ht[bg[0X7]]=L(Ht[bg[6]],Ht[bg[1]]);end;end;end;end;else if not(rg>=12)then if rg==11 then local cz=ve[0];do(Ht)[0X0]=cz[1][cz[2]];end;local vz=0;At=At+1;At=At+1;bg=Re[At];At=At+1;local Rz=Ht[0];(Ht)[vz+0X1]=Rz;Ht[vz]=Rz[bg[5]];At=At+1;vz=0;(Ht)[vz]=Ht[vz](Ht[vz+1]);Dt=vz;do bg=Re[At];end;At=At+1;if not(not Ht[0])then else At=bg[6];end;else local ro=(bg[0x6]);local vo=Ht[ro];for yX=ro+1,bg[1]do vo=vo..Ht[yX];end;Ht[bg[7]]=vo;end;else if not(rg>=0XD)then(Ht)[bg[0x007]]=tt[bg[2]];else if rg~=14 then(Ht)[0]=tt[bg[0X2]];At=At+1;do Dt=0;end;(Ht)[Dt]=Ht[Dt]();do bg=Re[At];end;do At=At+0X001;end;At=bg[6];else Ht[bg[7]]=k(Ht[bg[6]],Ht[bg[0X001]]);end;end;end;end;end;else if rg<0X05 then if rg>=0X2 then do if rg>=3 then do if rg~=4 then tt[bg[0x2]]=Ht[bg[0x007]];else Ht[0]=tt[bg[0X02]];do At=At+1;end;At=At+0X1;bg=Re[At];At=At+1;if Ht[0X00000]then do At=bg[0x6];end;end;end;end;else for mr=bg[7],bg[6]do Ht[mr]=nil;end;end;end;else if rg~=0X1 then repeat local cL,RL=De,Ht;if#cL>0X0 then local dz=({});for Q4,I4 in D,cL do do for Cx,Vx in D,I4 do do if not(Vx[1]==RL and Vx[2]>=0X0000)then else local ZI=(Vx[0X2]);if not(not dz[ZI])then else do(dz)[ZI]={RL[ZI]};end;end;Vx[1]=dz[ZI];(Vx)[2]=1;end;end;end;end;end;end;until true;local As=bg[0X00007];return false,As,As;else At=bg[0X6];end;end;else do if rg<7 then do if rg==0x0006 then(Ht)[bg[7]]=not Ht[bg[6]];else end;end;else if not(rg<0X8)then if rg==0X9 then(Ht)[bg[7]]=bg[0X2];else repeat local ci,di=De,Ht;if#ci>0 then local Dq=({});for wh,Th in D,ci do for RI,rI in D,Th do if not(rI[0X1]==di and rI[0X02]>=0)then else local Dy=(rI[2]);do if not Dq[Dy]then Dq[Dy]={di[Dy]};end;end;do rI[0X1]=Dq[Dy];end;do rI[0X2]=1;end;end;end;end;end;until true;return;end;else(Ht)[0]=tt[bg[2]];do At=At+0X00001;end;At=At+0X1;bg=Re[At];At=At+1;(Ht)[0]=Ht[0][bg[0X05]];At=At+1;At=At+1;At=At+1;(Ht)[0]=not Ht[0X0];bg=Re[At];At=At+1;At=bg[6];end;end;end;end;end;end;end;end);if Tt then if Ot then if Vt==0x1 then do return Ht[xt]();end;else return Ht[xt](I(Ht,xt+1,Dt));end;elseif xt then do return I(Ht,xt,Vt);end;end;else if f(Ot)=="string"then if e(Ot,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(Ot,"^.\045:\037\100\+\058\ ")then b("Luraph Script:"..(Ae[At-0X1]or"(internal)")..':\032'..r(Ot),0X00000);else(b)(Ot,0x00);end;else(b)(Ot,0);end;end;end;end;else if me<0X007f then fe=function(...)local SZ,eZ=1,{};local uZ=0;local NZ=({[0X2]=eZ,[1]=ce});local rZ=m();local vZ,iZ=rC(...);do vZ=vZ-1;end;for s6=0X00000,vZ do if not(he>s6)then break;else do eZ[s6]=iZ[s6+1];end;end;end;local JZ=((rZ==F and Le or rZ));if not ge then iZ=nil;elseif xe then eZ[he]={n=vZ>=he and vZ-he+0X1 or 0X0,I(iZ,he+0X00001,vZ+1)};end;if JZ~=rZ then i(fe,JZ);end;local yZ,YZ,EZ,oZ=j(function()while true do local aP=Re[SZ];local cP=(aP[0X4]);SZ=SZ+1;if cP<0x12 then if cP>=9 then if not(cP>=0xD)then do if not(cP<0Xb)then if cP==0Xc then eZ[aP[0x7]]={I({},1,aP[6])};else local Mo=(0XB);local xo=(eZ[10]);eZ[Mo+1]=xo;(eZ)[Mo]=xo[aP[0X00005]];aP=Re[SZ];do SZ=SZ+1;end;(eZ)[13]=aP[0x00002];SZ=SZ+0x1;Mo=0XB;do eZ[Mo]=eZ[Mo](eZ[Mo+0X1],eZ[Mo+0X2]);end;uZ=Mo;aP=Re[SZ];do SZ=SZ+0X1;end;do if not eZ[11]then SZ=aP[6];end;end;end;else if cP~=10 then if not(not(eZ[aP[0x006]]<=eZ[aP[0X1]]))then else do SZ=aP[0X7];end;end;else local GH=(je[aP[6]]);local VH=GH[8];local bH,CH=#VH,(nil);if bH>0x000 then do CH={};end;for LC=0X1,bH do local TC=VH[LC];if TC[0X00001]~=0x0 then do(CH)[LC-1]=ve[TC[0X002]];end;else(CH)[LC-1]={eZ,TC[2]};end;end;A(De,CH);end;(eZ)[aP[0X7]]=NC(CH,JZ,GH);end;end;end;else do if not(cP<0XF)then do if not(cP>=0X0010)then local Pp=(aP[0X7]);local hp,sp=eZ[Pp]();if not(hp)then else SZ=aP[6];(eZ)[Pp+3]=sp;end;else do if cP~=0X11 then(eZ)[aP[7]]=eZ[aP[0x6]]~=eZ[aP[1]];else(eZ)[aP[7]]=aP[0x0002];end;end;end;end;else if cP==14 then(eZ)[13]=eZ[10][aP[0X5]];aP=Re[SZ];do SZ=SZ+1;end;local Oc,lc=13,(eZ[0XD]);(eZ)[Oc+0x1]=lc;eZ[Oc]=lc[aP[5]];SZ=SZ+0X01;Oc=0xD;do eZ[Oc]=eZ[Oc](eZ[Oc+0X0001]);end;uZ=Oc;SZ=SZ+0X1;do SZ=SZ+1;end;aP=Re[SZ];SZ=SZ+1;Oc=0Xd;do lc=eZ[0Xd];end;do(eZ)[Oc+0X00001]=lc;end;(eZ)[Oc]=lc[aP[0X05]];aP=Re[SZ];SZ=SZ+1;do eZ[0Xf]=aP[2];end;do SZ=SZ+1;end;Oc=0xd;eZ[Oc]=eZ[Oc](eZ[Oc+0X1],eZ[Oc+0X002]);uZ=Oc;SZ=SZ+0x1;SZ=SZ+0x1;aP=Re[SZ];SZ=SZ+1;if not(eZ[0Xd])then else SZ=aP[6];end;else eZ[0xC]=JZ[aP[0x0002]];aP=Re[SZ];SZ=SZ+0x01;(eZ)[0XD]=eZ[0Xa][aP[5]];do SZ=SZ+1;end;do SZ=SZ+0X1;end;SZ=SZ+1;local UI=(0Xc);do(eZ)[UI]=eZ[UI](eZ[UI+0X1]);end;do uZ=UI;end;do SZ=SZ+1;end;SZ=SZ+0X01;do aP=Re[SZ];end;SZ=SZ+1;if not eZ[12]then SZ=aP[0X06];end;end;end;end;end;else if not(cP<0x4)then if cP<0X6 then if cP==0X005 then eZ[aP[7]]=not eZ[aP[6]];else for pw=aP[7],aP[0x06]do do(eZ)[pw]=nil;end;end;end;else if not(cP>=7)then do(eZ)[aP[7]]=eZ[aP[0X0006]]*eZ[aP[0X0001]];end;else if cP==8 then do eZ[0XC]=JZ[aP[0X2]];end;local ks=0Xc;SZ=SZ+1;do SZ=SZ+0X1;end;do aP=Re[SZ];end;SZ=SZ+1;eZ[0x0D]=eZ[0xA][aP[0x5]];do SZ=SZ+0X1;end;SZ=SZ+0X1;do SZ=SZ+1;end;do eZ[ks]=eZ[ks](eZ[ks+1]);end;do uZ=ks;end;SZ=SZ+0X1;SZ=SZ+1;aP=Re[SZ];do SZ=SZ+1;end;(eZ)[13]=JZ[aP[2]];aP=Re[SZ];SZ=SZ+0X1;(eZ)[14]=eZ[0X0][aP[5]];SZ=SZ+1;do SZ=SZ+1;end;do SZ=SZ+1;end;ks=13;do(eZ)[ks]=eZ[ks](eZ[ks+1]);end;uZ=ks;SZ=SZ+0X00001;SZ=SZ+1;aP=Re[SZ];SZ=SZ+0X1;eZ[0X0000d]=eZ[0x00d]+aP[0x5];aP=Re[SZ];SZ=SZ+0x01;if not(eZ[0XC]<eZ[0X0000d])then do SZ=aP[0X7];end;end;else end;end;end;else do if cP>=0x0002 then do if cP~=0X03 then local W8=(aP[7]);local G8=(aP[1]-1)*0X32;local p8=(eZ[W8]);for hb=1,aP[0x0006]do p8[G8+hb]=eZ[W8+hb];end;else(eZ)[13]=eZ[0X3]+aP[0X5];SZ=SZ+0X0001;do eZ[3]=eZ[13];end;aP=Re[SZ];SZ=SZ+1;do SZ=aP[0X6];end;end;end;else if cP~=0x1 then eZ[aP[0X7]]=eZ[aP[0X06]];else do eZ[10]=eZ[5][eZ[9]];end;SZ=SZ+1;do SZ=SZ+0X1;end;aP=Re[SZ];SZ=SZ+0X1;if not(not eZ[1])then else SZ=aP[6];end;end;end;end;end;end;else if not(cP<0X001b)then if not(cP<31)then if cP<0X021 then if cP~=0X020 then do eZ[0x3]=aP[2];end;aP=Re[SZ];do SZ=SZ+1;end;do eZ[0X4]=aP[2];end;SZ=SZ+0X001;do eZ[0X5]=eZ[2];end;aP=Re[SZ];do SZ=SZ+1;end;if eZ[5]then SZ=aP[6];end;else local sy=(11);local Ky=(eZ[10]);do(eZ)[sy+0X1]=Ky;end;do(eZ)[sy]=Ky[aP[0x00005]];end;aP=Re[SZ];do SZ=SZ+0X1;end;eZ[0XD]=aP[2];do SZ=SZ+1;end;sy=11;eZ[sy]=eZ[sy](eZ[sy+1],eZ[sy+2]);uZ=sy;SZ=SZ+1;do SZ=SZ+1;end;aP=Re[SZ];SZ=SZ+0x1;if not(eZ[0XB])then else do SZ=aP[0X6];end;end;end;else if cP<0X000022 then(eZ)[aP[0X7]]=aP[0X0002]/aP[0x5];else if cP~=35 then eZ[1]=eZ[0X5];do aP=Re[SZ];end;SZ=SZ+0x1;local KR=(0X6);eZ[0X5]=JZ[aP[0X2]];SZ=SZ+0X1;SZ=SZ+1;local RR=0X5;aP=Re[SZ];SZ=SZ+1;eZ[0X0005]=eZ[5][aP[0X05]];aP=Re[SZ];do SZ=SZ+1;end;local qR=eZ[0x005];do(eZ)[RR+1]=qR;end;do eZ[RR]=qR[aP[5]];end;SZ=SZ+1;RR=5;(eZ)[RR]=eZ[RR](eZ[RR+1]);uZ=RR;SZ=SZ+0X1;SZ=SZ+0X1;aP=Re[SZ];do SZ=SZ+1;end;do(eZ)[0X6]=aP[0x00002];end;SZ=SZ+0X1;do(eZ)[0X7]=#eZ[0X005];end;aP=Re[SZ];SZ=SZ+1;do(eZ)[8]=aP[2];end;aP=Re[SZ];do SZ=SZ+1;end;RR=eZ[KR];local AR=eZ[KR+2];local tR=eZ[KR+1];(eZ)[KR]=g(function()for GH=RR,tR,AR do d(true,GH);end;end);SZ=aP[6];else(eZ)[aP[0x0007]]=JZ[aP[0x2]];end;end;end;else do if cP>=0x1D then if cP==30 then(eZ)[aP[7]]=true;else if not eZ[aP[0X00007]]then SZ=aP[6];end;end;else if cP==0X1C then SZ=aP[0X6];else(eZ)[0xD]=eZ[0X4]+aP[5];SZ=SZ+0X0001;(eZ)[4]=eZ[13];aP=Re[SZ];SZ=SZ+1;SZ=aP[6];end;end;end;end;else if not(cP>=0x016)then if not(cP<20)then if cP~=0x0015 then if not(not(eZ[aP[6]]<eZ[aP[0x001]]))then else SZ=aP[7];end;else do(eZ)[12]=eZ[0X00000][aP[5]];end;do aP=Re[SZ];end;do SZ=SZ+0X1;end;(eZ)[12]=eZ[0X0000C][aP[0X0005]];aP=Re[SZ];SZ=SZ+1;eZ[0xd]=eZ[10][aP[0X5]];do SZ=SZ+1;end;(eZ)[14]=eZ[12];aP=Re[SZ];SZ=SZ+0X0001;eZ[13][aP[2]]=eZ[14];do aP=Re[SZ];end;SZ=SZ+0X1;eZ[0xd]=eZ[10][aP[0X5]];do aP=Re[SZ];end;SZ=SZ+0x1;do(eZ[0X000D])[aP[0x002]]=aP[5];end;aP=Re[SZ];SZ=SZ+1;do eZ[13]=eZ[0X00a][aP[0X5]];end;SZ=SZ+1;SZ=SZ+0X1;do aP=Re[SZ];end;SZ=SZ+1;do eZ[13][aP[0x002]]=aP[5];end;aP=Re[SZ];do SZ=SZ+0x00001;end;eZ[0xd]=eZ[0X0a][aP[0X05]];do SZ=SZ+0X1;end;SZ=SZ+0X1;aP=Re[SZ];SZ=SZ+1;eZ[13][aP[0X2]]=aP[0x5];aP=Re[SZ];local zc=(0xD);SZ=SZ+1;(eZ)[0Xd]=eZ[0xA][aP[5]];do aP=Re[SZ];end;SZ=SZ+0x1;do eZ[13][aP[0X002]]=aP[5];end;do aP=Re[SZ];end;SZ=SZ+0x1;do(eZ)[0x00D]=eZ[10][aP[5]];end;aP=Re[SZ];do SZ=SZ+1;end;local Fc=eZ[0Xd];(eZ)[zc+1]=Fc;eZ[zc]=Fc[aP[5]];aP=Re[SZ];SZ=SZ+0x1;eZ[0Xf]=aP[2];SZ=SZ+1;zc=13;eZ[zc](eZ[zc+1],eZ[zc+0X00002]);uZ=zc-0X01;aP=Re[SZ];SZ=SZ+0x01;eZ[13]=eZ[10][aP[0X5]];SZ=SZ+0X1;SZ=SZ+1;do aP=Re[SZ];end;SZ=SZ+0X1;(eZ[13])[aP[0X00002]]=aP[5];aP=Re[SZ];do SZ=SZ+1;end;if not eZ[11]then do SZ=aP[6];end;end;end;else if cP~=19 then(eZ)[11]=eZ[10][aP[5]];aP=Re[SZ];do SZ=SZ+0X001;end;eZ[11]=eZ[0xB][aP[5]];do aP=Re[SZ];end;do SZ=SZ+1;end;if not(not(aP[0X2]<eZ[11]))then else SZ=aP[0X7];end;else(eZ)[0x0b]=eZ[0X000a][aP[5]];do SZ=SZ+1;end;SZ=SZ+1;aP=Re[SZ];do SZ=SZ+0X01;end;eZ[0XC]=eZ[0X0][aP[0X05]];SZ=SZ+0x1;do SZ=SZ+1;end;SZ=SZ+0x1;eZ[0xB]=eZ[11]==eZ[12];do aP=Re[SZ];end;SZ=SZ+1;SZ=aP[6];end;end;else do if not(cP>=24)then if cP==23 then do(eZ)[2]=eZ[5];end;SZ=SZ+1;eZ[0X00005]=eZ[0x1];aP=Re[SZ];do SZ=SZ+0x00001;end;do if not(eZ[5])then else do SZ=aP[6];end;end;end;else do eZ[12]=JZ[aP[2]];end;SZ=SZ+0X01;do SZ=SZ+1;end;aP=Re[SZ];SZ=SZ+1;eZ[13]=eZ[0xa][aP[0X0005]];SZ=SZ+0X1;do SZ=SZ+1;end;aP=Re[SZ];do SZ=SZ+1;end;do(eZ)[13]=eZ[0X0d][aP[5]];end;local H7=0X00C;do SZ=SZ+0x001;end;SZ=SZ+0X1;do SZ=SZ+1;end;(eZ)[H7]=eZ[H7](eZ[H7+1]);uZ=H7;SZ=SZ+1;SZ=SZ+1;aP=Re[SZ];do SZ=SZ+1;end;if not(eZ[12]<=aP[0X5])then SZ=aP[7];end;end;else if not(cP<0X19)then if cP~=0x1A then if eZ[aP[0X7]]then SZ=aP[6];end;else do eZ[aP[7]]=#eZ[aP[6]];end;end;else repeat local cz,Zz=De,(eZ);if not(#cz>0)then else local N0={};for J0,a0 in D,cz do for tF,cF in D,a0 do if not(cF[1]==Zz and cF[2]>=0)then else local Ch=(cF[0X00002]);if not N0[Ch]then(N0)[Ch]={Zz[Ch]};end;(cF)[0X1]=N0[Ch];cF[0X0002]=0X1;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end;end);if not(yZ)then do if f(YZ)~="\str\i\110g"then b(YZ,0X000);else if e(YZ,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if e(YZ,"\094\046\-\:\037\d\+\:\032")then b('\L\117\114aph \Scr\105\p\116\:'..(Ae[SZ-1]or'\(\105\110terna\l)')..": "..r(YZ),0X0);else b(YZ,0);end;end;end;else if YZ then if oZ~=1 then return eZ[EZ](I(eZ,EZ+0X01,uZ));else do return eZ[EZ]();end;end;elseif EZ then return I(eZ,EZ,oZ);end;end;end;else if me~=128 then fe=function(...)local JJ,CJ=1,{};local SJ=m();local gJ=({[1]=ce,[0X2]=CJ});local dJ=((SJ==F and Le or SJ));local qJ=0X000;local LJ,vJ=rC(...);LJ=LJ-0X1;for i4=0X0,LJ do if not(he>i4)then break;else(CJ)[i4]=vJ[i4+0X1];end;end;if not ge then vJ=nil;elseif not(xe)then else(CJ)[he]={n=LJ>=he and LJ-he+1 or 0,I(vJ,he+0x1,LJ+1)};end;if dJ==SJ then else i(fe,dJ);end;local yJ,EJ,RJ,bJ=j(function()while true do local V4=(Re[JJ]);local A4=V4[4];JJ=JJ+1;if not(A4<7)then do if A4<0XB then do if not(A4>=0X00009)then if A4==8 then do repeat local P9,C9,B9=De,CJ,(V4[0X7]);if#P9>0 then local PF=({});for Ug,Ag in D,P9 do for EM,kM in D,Ag do if not(kM[0x0001]==C9 and kM[2]>=B9)then else local lb=(kM[0X002]);if not(not PF[lb])then else(PF)[lb]={C9[lb]};end;(kM)[1]=PF[lb];(kM)[0x2]=0X1;end;end;end;end;until true;end;else JJ=V4[0X0006];end;else if A4==10 then do(CJ)[V4[7]]=V4[2];end;else do CJ[V4[7]]={I({},0x1,V4[6])};end;end;end;end;else if A4>=0xd then do if A4==0X0e then CJ[V4[7]]=CJ[V4[0X6]]-CJ[V4[1]];else local WX=je[V4[6]];local HX=(WX[8]);local AX=(nil);local CX=#HX;if CX>0 then AX={};for lJ=0x1,CX do local oJ=(HX[lJ]);if oJ[0X1]==0x0 then(AX)[lJ-1]={CJ,oJ[0X2]};else(AX)[lJ-0X1]=ve[oJ[2]];end;end;A(De,AX);end;CJ[V4[7]]=NC(AX,dJ,WX);end;end;else if A4==0X000C then(CJ)[V4[7]]=dJ[V4[0X2]];else for F8=V4[0X7],V4[0x06]do CJ[F8]=nil;end;end;end;end;end;else do if A4<0x3 then if not(A4>=0X00001)then do CJ[V4[0X7]]=CJ[V4[0X06]]<CJ[V4[0X1]];end;else if A4~=2 then CJ[V4[0x07]]=CJ[V4[6]]%CJ[V4[0X1]];else if CJ[V4[0X6]]<CJ[V4[1]]then JJ=V4[0X0007];end;end;end;else if A4<5 then if A4~=4 then CJ[V4[0X7]]=CJ[V4[6]]*CJ[V4[0X1]];else do(CJ)[V4[0X0007]]=CJ[V4[0X00006]]>=CJ[V4[1]];end;end;else do if A4==0X6 then else do(CJ)[0]=dJ[V4[2]];end;do JJ=JJ+1;end;do JJ=JJ+0X00001;end;local O8=0;V4=Re[JJ];do JJ=JJ+0X01;end;(CJ)[0X0]=CJ[0X0][V4[0X5]];V4=Re[JJ];local G8=je[V4[6]];local W8=(G8[0X8]);JJ=JJ+0x0001;local x8=(#W8);local P8=nil;if x8>0 then P8={};do for Lq=0X1,x8 do local sq=W8[Lq];if sq[0X1]==0X0 then(P8)[Lq-1]={CJ,sq[2]};else(P8)[Lq-0X00001]=ve[sq[0X2]];end;end;end;(A)(De,P8);end;CJ[1]=NC(P8,dJ,G8);JJ=JJ+0X1;CJ[O8](CJ[O8+1]);do qJ=O8-0X1;end;do JJ=JJ+1;end;JJ=JJ+0x1;JJ=JJ+1;repeat local Xe,We=De,CJ;do if not(#Xe>0)then else local AO=({});for Nl,Dl in D,Xe do for lA,jA in D,Dl do if jA[0X001]==We and jA[0x00002]>=0 then local LC=jA[0X002];do if not AO[LC]then AO[LC]={We[LC]};end;end;jA[0x001]=AO[LC];(jA)[0X0002]=0X1;end;end;end;end;end;until true;return;end;end;end;end;end;end;end;end);if not(yJ)then if f(EJ)=="string"then if not(e(EJ,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(e(EJ,'^\046\-\:\037d\+\058 '))then(b)(EJ,0X0);else b("Luraph Script:"..(Ae[JJ-0X1]or"(\105\110\116\101r\110a\l\)")..'\: '..r(EJ),0);end;else(b)(EJ,0x00000);end;else if EJ then do if bJ==0X01 then do return CJ[RJ]();end;else return CJ[RJ](I(CJ,RJ+1,qJ));end;end;elseif not(RJ)then else do return I(CJ,RJ,bJ);end;end;end;end;else fe=function(...)local CB,AB=1,{};local fB=m();local KB=({[0X2]=AB,[1]=ce});local qB=(0X0);local gB,rB=rC(...);local XB=(fB==F and Le or fB);do gB=gB-1;end;do for EF=0X0000,gB do if he>EF then do AB[EF]=rB[EF+0x1];end;else break;end;end;end;if not ge then do rB=nil;end;elseif xe then AB[he]={n=gB>=he and gB-he+1 or 0,I(rB,he+1,gB+1)};end;if XB~=fB then i(fe,XB);end;local ZB,IB,TB,xB=j(function()while true do local Ez=Re[CB];local pz=(Ez[0X04]);CB=CB+0X1;if pz<0X38 then do if not(pz>=0X0001C)then do if pz<0XE then if pz<0X7 then do if pz>=0x3 then if not(pz<0X5)then if pz==6 then AB[Ez[0X0007]]={I({},1,Ez[0X6])};else if Ez[1]==88 then CB=CB-0X00001;Re[CB]={[6]=(Ez[0X6]-0X4),[0X7]=(Ez[7]-4),[0X4]=0X1};else do repeat local Pe,ze=De,AB;do if not(#Pe>0X00)then else local R0={};for nt,dt in D,Pe do for HB,cB in D,dt do if not(cB[1]==ze and cB[0X0002]>=0X0)then else local Ik=cB[2];if not R0[Ik]then do R0[Ik]={ze[Ik]};end;end;(cB)[0x1]=R0[Ik];do cB[2]=1;end;end;end;end;end;end;until true;end;local LV=Ez[7];return false,LV,LV;end;end;else do if pz~=4 then(AB)[Ez[0x7]]=true;else AB[Ez[7]]=AB[Ez[6]]%Ez[5];end;end;end;else if not(pz>=1)then local gt=(Ez[7]);(AB[gt])(AB[gt+0X1],AB[gt+0X2]);do qB=gt-1;end;else if pz~=2 then if Ez[0X1]==106 then do CB=CB-0X1;end;Re[CB]={[0X06]=(Ez[0X6]-220),[4]=0X31,[7]=(Ez[7]-220)};elseif Ez[0X1]~=224 then repeat local yB,cB,UB=De,AB,(Ez[7]);if#yB>0 then local Mr={};for kt,Wt in D,yB do do for B9,T9 in D,Wt do do if not(T9[1]==cB and T9[2]>=UB)then else local wJ=T9[2];if not(not Mr[wJ])then else(Mr)[wJ]={cB[wJ]};end;T9[0x1]=Mr[wJ];do T9[2]=0X001;end;end;end;end;end;end;end;until true;else CB=CB-0X001;(Re)[CB]={[0x07]=(Ez[0X7]-0XfC),[0X6]=(Ez[0x00006]-0XfC),[0X04]=94};end;else(AB)[Ez[7]]=Ez[2]^AB[Ez[0x001]];end;end;end;end;else if pz>=0X0000a then if pz>=12 then if pz~=0X0D then local ML=(Ez[0x7]);(AB)[ML]=AB[ML](I(AB,ML+0X0001,qB));do qB=ML;end;else(AB)[Ez[0X7]]=AB[Ez[0X06]]*AB[Ez[1]];end;else do if pz~=0XB then(AB)[Ez[7]]=AB[Ez[0X6]]-Ez[0X00005];else AB[Ez[0X7]]=Ez[0x2]*AB[Ez[1]];end;end;end;else if pz>=8 then do if pz~=9 then local bz=AB[Ez[0x06]]/AB[Ez[0X00001]];do(AB)[Ez[0X7]]=bz-bz%1;end;else local pv,Rv=je[Ez[6]],nil;local gv=pv[8];local Ev=(#gv);if not(Ev>0X00000)then else do Rv={};end;for F8=1,Ev do local O8=gv[F8];if O8[1]==0 then do Rv[F8-0X1]={AB,O8[2]};end;else(Rv)[F8-0x001]=ve[O8[2]];end;end;A(De,Rv);end;AB[Ez[0X00007]]=NC(Rv,XB,pv);end;end;else local HB=(Ez[7]);qB=HB+Ez[6]-0X1;(AB[HB])(I(AB,HB+1,qB));qB=HB-0X0001;end;end;end;else if pz<0x15 then if pz<17 then do if pz<15 then XB[Ez[2]]=AB[Ez[7]];else if pz~=0X10 then local ZN=(Ez[7]);local nN=(gB-he);if not(nN<0X0)then else nN=-0x01;end;for Ko=ZN,ZN+nN do AB[Ko]=rB[he+(Ko-ZN)+0x1];end;qB=ZN+nN;else do if not(not(AB[Ez[6]]<Ez[5]))then else do CB=Ez[0X7];end;end;end;end;end;end;else if not(pz>=19)then if pz==0X00012 then do if not(not(AB[Ez[0X6]]<=Ez[5]))then else CB=Ez[0X7];end;end;else AB[Ez[7]]=Ez[2];end;else if pz~=20 then local yV=(Ez[7]);local KV,uV=AB[yV]();if not(KV)then else do AB[yV+1]=uV;end;CB=Ez[6];end;else do AB[Ez[7]]=Ez[2]-AB[Ez[1]];end;end;end;end;else do if not(pz<24)then do if pz<0X1A then do if pz==0x19 then do(AB)[Ez[0X7]]=AB[Ez[0x6]]>Ez[0X00005];end;else local AD=(Ez[0X7]);(AB)[AD]=AB[AD](AB[AD+1]);qB=AD;end;end;else if pz==0X1B then(AB)[Ez[0x7]]=AB[Ez[6]]~=AB[Ez[1]];else(AB)[Ez[0X0007]]=G(AB[Ez[0X00006]],AB[Ez[1]]);end;end;end;else do if not(pz>=0X00016)then local B8,Y8=Ez[7],(AB[Ez[6]]);(AB)[B8+1]=Y8;AB[B8]=Y8[Ez[0X5]];else if pz~=23 then local Rc=(Ez[0X7]);local Yc,Lc,fc=AB[Rc]();if Yc then AB[Rc+1]=Lc;AB[Rc+2]=fc;CB=Ez[0X006];end;else local CZ=Ez[0X0007];local qZ=g(function(...)d();for Ri in...do(d)(true,Ri);end;end);(qZ)(AB[CZ],AB[CZ+1],AB[CZ+0X2]);qB=CZ;(AB)[CZ]=qZ;CB=Ez[6];end;end;end;end;end;end;end;end;else if pz<0X00002A then do if not(pz<35)then if pz>=38 then if pz<40 then do if pz==39 then local sx=Ez[7];local Sx=g(function(...)(d)();do for S4,O4 in...do(d)(true,S4,O4);end;end;end);Sx(AB[sx],AB[sx+1],AB[sx+0X2]);qB=sx;AB[sx]=Sx;CB=Ez[0X0006];else AB[Ez[0x007]]=O(AB[Ez[6]],AB[Ez[1]]);end;end;else do if pz==0X29 then AB[Ez[7]]=AB[Ez[6]]*Ez[5];else local yI=Ez[0X6];local JI=Ez[0X7];if yI==0 then else qB=JI+yI-1;end;local nI,dI=nil,nil;local UI=(Ez[0X00001]);do if yI~=1 then nI,dI=rC(AB[JI](I(AB,JI+0x1,qB)));else nI,dI=rC(AB[JI]());end;end;do if UI~=0X00001 then if UI==0 then nI=nI+JI-1;qB=nI;else do nI=JI+UI-2;end;qB=nI+1;end;local R4=(0x0);for zh=JI,nI do R4=R4+1;(AB)[zh]=dI[R4];end;else do qB=JI-1;end;end;end;end;end;end;else if pz>=0X024 then if pz~=37 then if Ez[1]~=0X0B3 then(AB)[Ez[0X7]]=AB[Ez[6]];else CB=CB-1;Re[CB]={[4]=0x5e,[6]=(Ez[0X06]-0X006C),[7]=(Ez[7]-108)};end;else local HY=Ez[0X007];AB[HY](I(AB,HY+1,qB));do qB=HY-1;end;end;else(AB)[Ez[0x00007]]=false;end;end;else if pz>=0X1F then if not(pz<33)then if pz~=34 then(AB)[Ez[7]]=AB[Ez[6]]~=Ez[5];else if not(Ez[2]<AB[Ez[0x0001]])then else CB=Ez[0X0007];end;end;else if pz~=32 then AB[Ez[7]]=AB[Ez[6]]-AB[Ez[0x1]];else do if AB[Ez[6]]~=Ez[5]then do CB=Ez[0x0007];end;end;end;end;end;else if not(pz>=0x0001d)then do(AB)[Ez[7]]=T(AB[Ez[0x6]]);end;else if pz==30 then(AB)[Ez[0x7]]=AB[Ez[6]]==Ez[5];else do(AB)[Ez[7]]=AB[Ez[6]]<=AB[Ez[1]];end;end;end;end;end;end;else if pz<0X031 then if pz<45 then if pz>=0X0002B then if pz~=0X2C then AB[Ez[0X07]]=KB[Ez[6]];else AB[Ez[7]]=Ez[2]+AB[Ez[1]];end;else do if AB[Ez[6]]==AB[Ez[0x00001]]then else CB=Ez[0X7];end;end;end;else do if not(pz>=0X2f)then if pz~=46 then local qr=(Ez[7]);local Pr=(AB[qr]);local mr=(Ez[0x00001]-1)*50;do for Q5=1,qB-qr do Pr[mr+Q5]=AB[qr+Q5];end;end;else AB[Ez[0X7]]=XB[Ez[0X00002]];end;else if pz~=48 then local Z7=Ez[7];local z7=(g(function(...)(d)();for pZ,hZ,AZ,uZ,LZ,MZ,YZ,PZ,rZ,DZ in...do d(true,{pZ,hZ,AZ,uZ,LZ,MZ,YZ,PZ,rZ,DZ});end;end));(z7)(AB[Z7],AB[Z7+0X0001],AB[Z7+2]);qB=Z7;(AB)[Z7]=z7;CB=Ez[6];else(AB)[Ez[0X7]]=Ez[0X2]/AB[Ez[0X1]];end;end;end;end;else if not(pz<52)then if not(pz<54)then if pz==0X37 then CB=Ez[6];else(AB)[Ez[7]]=L(AB[Ez[0X0006]],AB[Ez[0X0001]]);end;else do if pz==0X35 then if AB[Ez[6]]<AB[Ez[0X1]]then CB=Ez[0X7];end;else repeat local Qz,Sz=De,(AB);if#Qz>0 then local vp={};for Xo,io in D,Qz do for p9,I9 in D,io do if I9[0X1]==Sz and I9[0X2]>=0X0 then local D8=I9[2];if not vp[D8]then vp[D8]={Sz[D8]};end;I9[0X1]=vp[D8];(I9)[2]=1;end;end;end;end;until true;do return false,Ez[0x007],qB;end;end;end;end;else if pz<50 then if Ez[1]==0Xd9 then do CB=CB-1;end;Re[CB]={[7]=(Ez[7]-0XB9),[0X4]=1,[0X6]=(Ez[6]-0X000b9)};elseif Ez[0X0001]==0X007C then do CB=CB-0X1;end;do Re[CB]={[0X7]=(Ez[7]-167),[0x4]=63,[0x6]=(Ez[6]-0XA7)};end;else repeat local P8,g8=De,(AB);do if#P8>0 then local mT=({});for pc,Gc in D,P8 do for y2,B2 in D,Gc do do if not(B2[0X0001]==g8 and B2[0X00002]>=0X0000)then else local nh=B2[0X2];if not(not mT[nh])then else(mT)[nh]={g8[nh]};end;do B2[0x0001]=mT[nh];end;(B2)[0X0002]=1;end;end;end;end;end;end;until true;local mA=(Ez[0X7]);return false,mA,mA+Ez[0X0006]-2;end;else if pz~=51 then local GX=(AB[Ez[0X6]]);(AB)[Ez[7]]=GX..GX;else local b0,u0=Ez[7],(Ez[0X006]);qB=b0+u0-1;repeat local B_,c_=De,(AB);if not(#B_>0X0)then else local yZ=({});do for xR,vR in D,B_ do for Kb,qb in D,vR do if qb[1]==c_ and qb[0X02]>=0X0000 then local Ob=qb[0x00002];if not yZ[Ob]then(yZ)[Ob]={c_[Ob]};end;do qb[0X1]=yZ[Ob];end;do(qb)[2]=0X1;end;end;end;end;end;end;until true;return true,b0,u0;end;end;end;end;end;end;end;else if pz>=84 then if not(pz>=0x0062)then if not(pz>=91)then if pz<0x00057 then if pz<85 then if not(AB[Ez[0X006]]<AB[Ez[1]])then CB=Ez[0x07];end;else do if pz~=0X56 then local KM=(Ez[0X7]);qB=KM+Ez[0X6]-0X1;do AB[KM]=AB[KM](I(AB,KM+1,qB));end;qB=KM;else do(AB)[Ez[0x007]]=-AB[Ez[6]];end;end;end;end;else do if pz<89 then do if pz==88 then AB[Ez[7]]=AB[Ez[6]]+AB[Ez[1]];else repeat local VJ,zJ=De,(AB);if#VJ>0X0000 then local K9=({});for IE,ME in D,VJ do for L4,q4 in D,ME do if not(q4[0X1]==zJ and q4[0X02]>=0X0)then else local MJ=(q4[0x2]);if not(not K9[MJ])then else do(K9)[MJ]={zJ[MJ]};end;end;(q4)[0X1]=K9[MJ];q4[2]=1;end;end;end;end;until true;return true,Ez[0X00007],0X00;end;end;else if pz==90 then do if not(not(Ez[2]<AB[Ez[0X001]]))then else CB=Ez[0X7];end;end;else local nK,fK=Ez[7],((Ez[0X1]-0X1)*50);local wK=(AB[nK]);for z4=0x1,Ez[6]do wK[fK+z4]=AB[nK+z4];end;end;end;end;end;else if not(pz<94)then if pz>=0X60 then if pz==0X00061 then do AB[Ez[0X7]]=AB[Ez[6]]^AB[Ez[1]];end;else local Oz=Ez[0X7];local wz,Uz=AB[Oz]();if not(wz)then else CB=Ez[6];(AB)[Oz+3]=Uz;end;end;else if pz~=95 then do if Ez[0x0001]==0Xa2 then do CB=CB-1;end;Re[CB]={[7]=(Ez[7]-0X071),[0x4]=0X000069,[0x0006]=(Ez[0X6]-113)};elseif Ez[1]==50 then CB=CB-0X1;do(Re)[CB]={[0X0006]=(Ez[0x6]-101),[7]=(Ez[7]-0x65),[0X4]=59};end;else repeat local yh,Lh=De,(AB);do if#yh>0 then local lB={};do for pe,ye in D,yh do for kP,ZP in D,ye do if not(ZP[1]==Lh and ZP[2]>=0)then else local Hi=(ZP[2]);if not lB[Hi]then lB[Hi]={Lh[Hi]};end;do(ZP)[0X1]=lB[Hi];end;(ZP)[0X2]=1;end;end;end;end;end;end;until true;return;end;end;else do if not(not(Ez[0X00002]<=AB[Ez[0x1]]))then else CB=Ez[7];end;end;end;end;else if pz<92 then local vp=(ve[Ez[6]]);do(vp[1])[vp[0X00002]]=AB[Ez[0X07]];end;else do if pz~=0X5d then AB[Ez[0X7]]=wC[Ez[0X06]];else AB[Ez[0X7]]=Ez[2];end;end;end;end;end;else if pz>=0X69 then if pz<109 then if pz<107 then if pz~=0x6A then AB[Ez[7]]=#AB[Ez[0X6]];else AB[Ez[0X7]]=AB[Ez[6]][Ez[5]];end;else if pz~=108 then(wC)[Ez[0X00006]]=AB[Ez[0x7]];else(AB)[Ez[0X7]]=u(AB[Ez[6]],AB[Ez[1]]);end;end;else if not(pz>=111)then if pz==0X00006e then local UN=Ez[0X0007];do(AB)[UN]=AB[UN](AB[UN+1],AB[UN+2]);end;qB=UN;else if AB[Ez[0X0006]]==AB[Ez[1]]then CB=Ez[7];end;end;else if pz==112 then do AB[Ez[7]]=AB[Ez[6]]+Ez[0X5];end;else do KB[Ez[6]]=AB[Ez[0X7]];end;end;end;end;else if not(pz<101)then if not(pz<0X67)then if pz~=104 then(AB)[Ez[0X7]]=AB[Ez[0X0006]]/Ez[0X5];else(AB)[Ez[7]]=not AB[Ez[6]];end;else do if pz~=0x66 then if not(AB[Ez[0x6]]<Ez[0x5])then else do CB=Ez[7];end;end;else(AB)[Ez[7]]=AB[Ez[0X6]]/AB[Ez[0X1]];end;end;end;else if not(pz<0X63)then if pz==100 then AB[Ez[7]]=AB[Ez[0X0006]]%AB[Ez[0X0001]];else(AB[Ez[0X7]])[Ez[0x2]]=AB[Ez[1]];end;else local La=ve[Ez[0x6]];(AB)[Ez[0X7]]=La[0X00001][La[0x002]];end;end;end;end;else if not(pz>=70)then if pz>=63 then if pz<66 then if pz>=0x040 then do if pz~=0X41 then if Ez[1]==0x9B then CB=CB-0X1;Re[CB]={[0X7]=(Ez[0X007]-243),[4]=15,[6]=(Ez[6]-0X000F3)};elseif Ez[0X01]~=41 then if not(AB[Ez[0x7]])then else CB=Ez[6];end;else do CB=CB-0X1;end;(Re)[CB]={[7]=(Ez[7]-240),[0x00006]=(Ez[6]-0X000F0),[4]=0X0000F};end;else do AB[Ez[0X7]][Ez[2]]=Ez[0X05];end;end;end;else if Ez[1]==129 then CB=CB-1;do Re[CB]={[6]=(Ez[6]-0x004),[0X7]=(Ez[0x7]-0X4),[0X4]=0x24};end;elseif Ez[0X001]==104 then CB=CB-0X0001;(Re)[CB]={[6]=(Ez[0X6]-85),[0X4]=0Xf,[0X7]=(Ez[0X0007]-85)};elseif Ez[0x1]==0x000CB then CB=CB-1;Re[CB]={[7]=(Ez[0X7]-0X7f),[6]=(Ez[6]-127),[0X04]=105};else do AB[Ez[0X7]]=nil;end;end;end;else if pz<68 then if pz~=67 then do(AB)[Ez[0X7]]=AB[Ez[6]][AB[Ez[1]]];end;else(AB[Ez[7]])[AB[Ez[6]]]=Ez[0X5];end;else do if pz~=0x000045 then do AB[Ez[0X007]]={};end;else AB[Ez[0X7]]=AB[Ez[0x6]]>=AB[Ez[1]];end;end;end;end;else if pz<59 then if not(pz>=0x039)then if not(AB[Ez[6]]<=AB[Ez[0x1]])then CB=Ez[0X7];end;else do if pz==0X3a then repeat local aY,tY=De,AB;do if not(#aY>0)then else local Ph=({});do for z1,G1 in D,aY do for Y8,j8 in D,G1 do if not(j8[0x1]==tY and j8[0X00002]>=0X00)then else local Nr=(j8[0x2]);if not(not Ph[Nr])then else(Ph)[Nr]={tY[Nr]};end;do(j8)[1]=Ph[Nr];end;do(j8)[2]=1;end;end;end;end;end;end;end;until true;return true,Ez[0X7],1;else local gm=Ez[6];local fm=(AB[gm]);for QM=gm+1,Ez[0X1]do fm=fm..AB[QM];end;(AB)[Ez[0X00007]]=fm;end;end;end;else if pz>=0X3d then if pz==0X3E then local DF=(Ez[0x7]);local CF,LF=AB[DF]();if not(CF)then else do for rh=1,Ez[1]do AB[DF+rh]=LF[rh];end;end;do CB=Ez[0X06];end;end;else do(AB)[Ez[7]]=k(AB[Ez[6]],AB[Ez[1]]);end;end;else if pz~=0X3C then local iF=(Ez[7]);for QR=iF,iF+(Ez[0X6]-0X01)do do AB[QR]=rB[he+(QR-iF)+1];end;end;else if Ez[1]==102 then CB=CB-0X1;(Re)[CB]={[0X04]=0X00024,[0X6]=(Ez[6]-0Xd9),[7]=(Ez[0X7]-217)};else(AB)[Ez[7]]=rB[he+1];end;end;end;end;end;else if pz>=0x4D then if pz<80 then if not(pz<0X004E)then if pz~=79 then AB[Ez[7]]=AB[Ez[0X6]]>AB[Ez[0X1]];else if Ez[1]==159 then do CB=CB-0X01;end;Re[CB]={[0X6]=(Ez[0X6]-85),[7]=(Ez[0X7]-0x055),[4]=0X003f};elseif Ez[0X0001]~=140 then do for J2=Ez[7],Ez[0x6]do AB[J2]=nil;end;end;else CB=CB-0X00001;do Re[CB]={[0X7]=(Ez[7]-243),[4]=59,[0x6]=(Ez[0X0006]-243)};end;end;end;else do if Ez[0X001]~=0X008D then if not AB[Ez[0X7]]then CB=Ez[0x06];end;else CB=CB-0X1;Re[CB]={[6]=(Ez[6]-74),[0x004]=63,[7]=(Ez[0X7]-0X04A)};end;end;end;else if not(pz<82)then if pz==0X000053 then local ms=Ez[0X0006];AB[Ez[7]]=AB[ms]..AB[ms+1];else repeat local qv,gv=De,AB;if#qv>0X00 then local ZM=({});for Qs,cs in D,qv do for zG,BG in D,cs do do if BG[1]==gv and BG[2]>=0X00000 then local EQ=(BG[0X2]);if not ZM[EQ]then(ZM)[EQ]={gv[EQ]};end;(BG)[1]=ZM[EQ];BG[2]=1;end;end;end;end;end;until true;local yw=Ez[7];qB=yw+0X1;return true,yw,0X00002;end;else if pz==0X51 then if not(AB[Ez[0X006]]<=AB[Ez[0x1]])then else CB=Ez[0x07];end;else if AB[Ez[0X06]]~=Ez[5]then else CB=Ez[0X7];end;end;end;end;else if pz<0X49 then if not(pz>=0x0047)then do(AB)[Ez[7]]=AB[Ez[6]]==AB[Ez[1]];end;else do if pz~=0x0048 then do(AB[Ez[7]])[AB[Ez[0x6]]]=AB[Ez[1]];end;else AB[Ez[7]]=AB[Ez[6]]<AB[Ez[0X01]];end;end;end;else if not(pz>=75)then if pz==0X04a then local jQ=Ez[0X00007];local qQ,sQ=AB[jQ],(AB[jQ+0X1]);local TQ=AB[jQ+0x02];AB[jQ]=g(function()for Uo=qQ,sQ,TQ do(d)(true,Uo);end;end);do CB=Ez[0X6];end;else do qB=Ez[7];end;AB[qB]=AB[qB]();end;else do if pz==76 then local Nl=(Ez[0x00007]);AB[Nl](AB[Nl+0X1]);do qB=Nl-1;end;else qB=Ez[7];AB[qB]();do qB=qB-1;end;end;end;end;end;end;end;end;end;end;end);do if not(ZB)then if f(IB)=="\string"then if e(IB,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;do if e(IB,'\^\046-\:\%\100+\058 ')then(b)("Luraph Script:"..(Ae[CB-0x01]or"(internal)")..": "..r(IB),0X000);else b(IB,0X0);end;end;else(b)(IB,0);end;else do if IB then if xB~=0X01 then do return AB[TB](I(AB,TB+0x1,qB));end;else do return AB[TB]();end;end;elseif not(TB)then else return I(AB,TB,xB);end;end;end;end;end;end;end;end;end;end;end;end;end;else if me<47 then if not(me<23)then do if me>=35 then do if me<41 then if me>=38 then do if me>=39 then if me~=0x028 then fe=function(...)local PW,OW=1,{};local uW=m();local oW,MW=rC(...);do oW=oW-0X1;end;local dW,pW={[1]=ce,[0X2]=OW},((uW==F and Le or uW));local lW=0;for XM=0,oW do if he>XM then do OW[XM]=MW[XM+0X1];end;else break;end;end;if not ge then MW=nil;elseif not(xe)then else(OW)[he]={n=oW>=he and oW-he+0X01 or 0,I(MW,he+0X1,oW+1)};end;if pW==uW then else(i)(fe,pW);end;local gW,DW,JW,KW=j(function()while true do local kR=(Re[PW]);local fR=kR[4];PW=PW+1;do if not(fR<7)then if fR>=10 then if fR>=12 then if fR==13 then(OW)[kR[0X7]]=#OW[kR[6]];else for OM=kR[0x07],kR[0x6]do(OW)[OM]=nil;end;end;else if fR~=11 then PW=kR[0X6];else(OW)[kR[0X007]]=kR[2];end;end;else do if not(fR<8)then do if fR~=9 then OW[kR[7]]=k(OW[kR[6]],OW[kR[0x1]]);else OW[0X0]=pW[kR[0X2]];do PW=PW+0x1;end;local pe=0x0;PW=PW+0X0001;kR=Re[PW];PW=PW+0X1;local ee=(OW[0]);do(OW)[pe+1]=ee;end;(OW)[pe]=ee[kR[5]];do kR=Re[PW];end;PW=PW+1;OW[2]=kR[0X2];do PW=PW+1;end;pe=0;do(OW)[pe]=OW[pe](OW[pe+1],OW[pe+0X002]);end;lW=pe;do kR=Re[PW];end;PW=PW+1;do(OW)[1]=pW[kR[0X2]];end;local Fe=(nil);PW=PW+1;PW=PW+1;kR=Re[PW];do PW=PW+0X1;end;(OW)[0X1]=OW[1][kR[0X5]];do PW=PW+0x1;end;PW=PW+0x0001;kR=Re[PW];PW=PW+0x1;local le=je[kR[0x06]];local Ue=(le[0x8]);local Ie=(#Ue);if not(Ie>0x000)then else Fe={};for vQ=0X00001,Ie do local xQ=(Ue[vQ]);if xQ[1]==0 then Fe[vQ-1]={OW,xQ[0X02]};else Fe[vQ-0X01]=ve[xQ[0x02]];end;end;(A)(De,Fe);end;(OW)[2]=NC(Fe,pW,le);PW=PW+0X1;pe=0x1;(OW[pe])(OW[pe+0x1]);lW=pe-1;PW=PW+1;PW=PW+0x01;PW=PW+1;do repeat local L4,R4=De,OW;if not(#L4>0)then else local zZ=({});for Ul,Il in D,L4 do for WY,GY in D,Il do if GY[0x00001]==R4 and GY[0X2]>=0X0 then local Bo=(GY[0X2]);if not zZ[Bo]then do zZ[Bo]={R4[Bo]};end;end;(GY)[1]=zZ[Bo];GY[2]=0X00001;end;end;end;end;until true;end;return;end;end;else OW[kR[0X007]]=G(OW[kR[6]],OW[kR[0X1]]);end;end;end;else if fR<0X003 then if fR<1 then do(OW)[kR[0X7]]=OW[kR[0X06]]%OW[kR[1]];end;else if fR==2 then local p3=(kR[0x7]);local Z3=kR[6];do lW=p3+Z3-0x0001;end;repeat local NT,ZT=De,(OW);if not(#NT>0)then else local nJ={};for CJ,KJ in D,NT do do for Wp,sp in D,KJ do if not(sp[1]==ZT and sp[0X2]>=0)then else local Ji=(sp[2]);if not(not nJ[Ji])then else(nJ)[Ji]={ZT[Ji]};end;(sp)[1]=nJ[Ji];do sp[2]=0X1;end;end;end;end;end;end;until true;return true,p3,Z3;else local cD=(OW[kR[6]]/OW[kR[0X1]]);(OW)[kR[7]]=cD-cD%0X1;end;end;else do if fR<0X0005 then if fR==4 then(OW)[kR[7]]={I({},0x001,kR[6])};else local oy=je[kR[0X00006]];local vy=(oy[8]);local Fy=nil;local Dy=#vy;if not(Dy>0)then else Fy={};for XG=1,Dy do local WG=vy[XG];if WG[1]~=0x000 then(Fy)[XG-0X1]=ve[WG[2]];else(Fy)[XG-1]={OW,WG[2]};end;end;(A)(De,Fy);end;OW[kR[7]]=NC(Fy,pW,oy);end;else do if fR~=0x6 then do OW[kR[7]]=pW[kR[2]];end;else end;end;end;end;end;end;end;end;end);if gW then do if DW then if KW~=1 then return OW[JW](I(OW,JW+0x1,lW));else return OW[JW]();end;elseif not(JW)then else return I(OW,JW,KW);end;end;else do if f(DW)=="string"then do if e(DW,"a\116te\mp\116\ to \y\105\el\d\032ac\114\o\s\115\ \m\et\097\m\e\116\104\od\/\C\%\-ca\108l \098ou\110\100a\114y")then do return coroutine.yield();end;end;end;if not(e(DW,"^.-:%d+: "))then b(DW,0X0);else b('L\117\114a\p\104\032\Sc\114i\p\116\:'..(Ae[PW-0X1]or"(internal)").."\:\032"..r(DW),0x0000);end;else(b)(DW,0X0000);end;end;end;end;else fe=function(...)local h8=({});local O8=(0X0000);local A8=1;local i8=(m());local n8=({[0X2]=h8,[1]=ce});local X8,Q8=rC(...);local p8=(i8==F and Le or i8);X8=X8-1;for Vq=0X0000,X8 do do if he>Vq then do(h8)[Vq]=Q8[Vq+0X001];end;else do break;end;end;end;end;if not ge then Q8=nil;elseif not(xe)then else(h8)[he]={n=X8>=he and X8-he+1 or 0X000,I(Q8,he+0X01,X8+0X1)};end;do if p8==i8 then else i(fe,p8);end;end;local E8,o8,r8,G8=j(function()while true do local o_=(Re[A8]);local T_=(o_[0x4]);do A8=A8+1;end;if not(T_<9)then if not(T_>=13)then if not(T_<11)then if T_~=0Xc then for xu=o_[0x7],o_[0x0006]do(h8)[xu]=nil;end;else h8[0X0]=p8[o_[2]];do o_=Re[A8];end;local pi,ji=ve[0],0X0;A8=A8+0X0001;do(h8)[0X1]=o_[0X00002];end;A8=A8+1;(h8)[ji]=h8[ji](h8[ji+1]);O8=ji;do A8=A8+0x1;end;(h8)[1]=pi[1][pi[0x2]];o_=Re[A8];A8=A8+1;(h8)[0X1]=h8[0X1][o_[5]];A8=A8+0x1;A8=A8+1;do A8=A8+1;end;do h8[2]=h8[0X0];end;A8=A8+0X0001;ji=1;do h8[ji]=h8[ji](h8[ji+0X00001]);end;O8=ji;A8=A8+0x1;A8=A8+1;do o_=Re[A8];end;A8=A8+1;if not(not h8[0X1])then else A8=o_[0x0006];end;end;else do if T_==0X000A then local lb=(o_[0X7]);local jb=((o_[1]-0X0001)*50);local Yb=(h8[lb]);for oI=1,o_[0X6]do Yb[jb+oI]=h8[lb+oI];end;else do h8[1]=p8[o_[0X0002]];end;A8=A8+1;A8=A8+0x001;o_=Re[A8];do A8=A8+1;end;(h8)[0x1]=h8[1][o_[0x05]];A8=A8+0X1;A8=A8+1;o_=Re[A8];A8=A8+0x01;if not(not h8[1])then else A8=o_[0X0006];end;end;end;end;else if T_<0X000F then if T_==0X00E then local ik=(h8[o_[0X6]]/h8[o_[0X1]]);do h8[o_[7]]=ik-ik%0X1;end;else local tn=o_[7];local bn=(o_[6]);if bn==0X0 then else do O8=tn+bn-0X1;end;end;local An,xn=nil,nil;local En=o_[1];if bn~=1 then An,xn=rC(h8[tn](I(h8,tn+0x1,O8)));else do An,xn=rC(h8[tn]());end;end;if En==0X0001 then O8=tn-0X1;else if En~=0 then An=tn+En-2;O8=An+1;else An=An+tn-0x01;O8=An;end;local j4=(0);for AW=tn,An do j4=j4+1;do(h8)[AW]=xn[j4];end;end;end;end;else if not(T_<0X10)then if T_~=17 then h8[o_[7]]=G(h8[o_[6]],h8[o_[0x01]]);else do A8=o_[0x6];end;end;else do if not(h8[o_[7]])then else A8=o_[0X0006];end;end;end;end;end;else if not(T_<4)then if T_<0x6 then if T_==5 then h8[o_[0X7]]=h8[o_[0x06]]-h8[o_[1]];else(h8)[o_[7]]=L(h8[o_[0X6]],h8[o_[0X1]]);end;else if not(T_<7)then if T_~=8 then(h8)[o_[7]]={I({},1,o_[0X006])};else repeat local ix,Ix=De,h8;do if#ix>0x0 then local gD=({});for J4,U4 in D,ix do do for YR,JR in D,U4 do if not(JR[0X1]==Ix and JR[2]>=0)then else local MH=(JR[2]);do if not(not gD[MH])then else do(gD)[MH]={Ix[MH]};end;end;end;(JR)[1]=gD[MH];(JR)[2]=1;end;end;end;end;end;end;until true;return;end;else h8[o_[0X07]]=p8[o_[0X0002]];end;end;else if T_>=2 then do if T_==3 then local YQ=je[o_[0X6]];local aQ=(YQ[8]);local pQ=nil;local XQ=#aQ;if XQ>0x00000 then pQ={};for uC=0X01,XQ do local kC=(aQ[uC]);do if kC[0X001]~=0X0 then(pQ)[uC-1]=ve[kC[0X2]];else(pQ)[uC-1]={h8,kC[0X2]};end;end;end;(A)(De,pQ);end;h8[o_[7]]=NC(pQ,p8,YQ);else h8[o_[0x7]]=o_[0X2];end;end;else if T_==1 then else local ln=ve[0];(h8)[0X001]=ln[0x001][ln[2]];do A8=A8+1;end;A8=A8+0x1;do o_=Re[A8];end;do A8=A8+0x1;end;h8[1]=h8[1][o_[5]];A8=A8+0x001;local Jn=0X1;h8[0x2]=h8[0];A8=A8+0X1;do ln=ve[0X001];end;(h8)[0x3]=ln[0x0001][ln[0X02]];A8=A8+1;(h8[Jn])(h8[Jn+1],h8[Jn+0x0002]);do O8=Jn-1;end;A8=A8+1;do A8=A8+1;end;do A8=A8+0X0001;end;ln=ve[0X01];h8[1]=ln[0X0001][ln[2]];do A8=A8+0X0001;end;local pn=h8[1];A8=A8+1;do o_=Re[A8];end;A8=A8+0x01;Jn=1;h8[Jn+1]=pn;h8[Jn]=pn[o_[0X5]];A8=A8+1;do Jn=1;end;h8[Jn](h8[Jn+1]);O8=Jn-0X1;A8=A8+1;A8=A8+0X1;do o_=Re[A8];end;A8=A8+0X00001;do A8=o_[0x0006];end;end;end;end;end;end;end);if not(E8)then if f(o8)~="\115t\114\ing"then b(o8,0);else if not(e(o8,'a\116t\101\m\112\116 t\111 y\i\e\l\d a\cr\os\115\ \m\101t\097\109et\ho\d/\067\%-\c\097l\l\ \098\ou\110d\097\114\y'))then else do return coroutine.yield();end;end;if e(o8,"^.-:%d+: ")then(b)('\L\117\114\097p\104\ Scr\ip\116\:'..(Ae[A8-1]or"\040int\e\114\110al)")..":\032"..r(o8),0);else(b)(o8,0);end;end;else do if o8 then if G8==1 then return h8[r8]();else return h8[r8](I(h8,r8+0x00001,O8));end;elseif not(r8)then else return I(h8,r8,G8);end;end;end;end;end;else fe=function(...)local Nx,jx,ax=0x01,{},0;local fx=m();local qx=({[1]=ce,[0X2]=jx});local Fx,Ax=rC(...);Fx=Fx-1;do for lq=0,Fx do if he>lq then(jx)[lq]=Ax[lq+0X1];else break;end;end;end;local yx=(fx==F and Le or fx);do if not ge then Ax=nil;elseif xe then(jx)[he]={n=Fx>=he and Fx-he+0X1 or 0,I(Ax,he+1,Fx+1)};end;end;if yx==fx then else i(fe,yx);end;local Mx,tx,sx,Cx=j(function()while true do local B4=Re[Nx];local J4=B4[0x004];Nx=Nx+1;if not(J4<0X9)then if not(J4<0xe)then if J4>=16 then if J4>=0X000011 then do if J4~=0X0012 then else(jx)[B4[0X07]]=k(jx[B4[0X06]],jx[B4[0X00001]]);end;end;else local id=(je[B4[6]]);local Kd=id[8];local Rd,Id=#Kd,nil;if Rd>0X0 then Id={};for WH=1,Rd do local fH=(Kd[WH]);if fH[1]==0X0 then(Id)[WH-0X1]={jx,fH[2]};else Id[WH-1]=ve[fH[2]];end;end;(A)(De,Id);end;(jx)[B4[0x07]]=NC(Id,yx,id);end;else do if J4==15 then jx[B4[0X7]]={I({},1,B4[0X00006])};else do(jx)[B4[7]]=B4[0X2];end;end;end;end;else if not(J4<0XB)then if not(J4>=12)then local Mr=(B4[6]);local Wr=(jx[Mr]);for RN=Mr+0X1,B4[1]do Wr=Wr..jx[RN];end;(jx)[B4[7]]=Wr;else if J4~=0Xd then do(jx)[0x0000]=yx[B4[2]];end;Nx=Nx+1;Nx=Nx+0x01;do B4=Re[Nx];end;Nx=Nx+0X001;(jx)[0]=jx[0][B4[0X0005]];B4=Re[Nx];Nx=Nx+0X01;Nx=B4[0X06];else jx[0]=yx[B4[2]];do B4=Re[Nx];end;do Nx=Nx+0X001;end;(jx)[0X1]=yx[B4[2]];do Nx=Nx+0X1;end;(jx)[0X0]=jx[0X0000][jx[0X1]];Nx=Nx+1;Nx=Nx+0X0001;Nx=Nx+1;do(jx)[0X0]=not jx[0x000];end;do B4=Re[Nx];end;Nx=Nx+0x00001;Nx=B4[0X006];end;end;else if J4==0xA then(jx)[B4[0X07]]=G(jx[B4[0x6]],jx[B4[1]]);else do repeat local tj,cj=De,(jx);if#tj>0 then local WO={};for fb,Gb in D,tj do for aA,PA in D,Gb do if not(PA[0x1]==cj and PA[0x2]>=0X00000)then else local u9=(PA[0x2]);if not(not WO[u9])then else do(WO)[u9]={cj[u9]};end;end;(PA)[0x1]=WO[u9];(PA)[2]=0x01;end;end;end;end;until true;end;local sl=B4[0X7];return false,sl,sl;end;end;end;else do if J4>=0x4 then do if not(J4>=6)then do if J4~=0X5 then jx[B4[7]]=jx[B4[0X6]]<=jx[B4[0X0001]];else if not(not jx[B4[0x00007]])then else Nx=B4[6];end;end;end;else if J4<7 then jx[0x0]=yx[B4[0X2]];Nx=Nx+0X001;do Nx=Nx+1;end;do Nx=Nx+1;end;ax=0;jx[ax]=jx[ax]();do Nx=Nx+1;end;(jx)[0X0]=not jx[0x0];do B4=Re[Nx];end;Nx=Nx+1;do Nx=B4[0X6];end;else if J4~=0X8 then jx[0]=yx[B4[0x2]];Nx=Nx+1;Nx=Nx+1;do B4=Re[Nx];end;Nx=Nx+0X001;(jx)[0X0]=jx[0X0][B4[5]];Nx=Nx+0X00001;Nx=Nx+1;Nx=Nx+0X01;jx[0]=not jx[0X0];B4=Re[Nx];do Nx=Nx+0X001;end;do if not(not jx[0X0])then else Nx=B4[6];end;end;else if not(jx[B4[0X006]]<=jx[B4[0x1]])then Nx=B4[0X00007];end;end;end;end;end;else do if not(J4<0x2)then if J4==0X3 then do(jx)[B4[7]]=yx[B4[0x2]];end;else repeat local OF,VF=De,(jx);if not(#OF>0X0)then else local UV={};for OC,ZC in D,OF do for n2,E2 in D,ZC do do if E2[0x1]==VF and E2[2]>=0 then local uE=(E2[2]);if not(not UV[uE])then else do UV[uE]={VF[uE]};end;end;E2[0X00001]=UV[uE];(E2)[2]=1;end;end;end;end;end;until true;return;end;else if J4~=1 then local jK=B4[7];local aK=jx[B4[0X06]];do jx[jK+1]=aK;end;jx[jK]=aK[B4[0x00005]];else Nx=B4[6];end;end;end;end;end;end;end;end);if not(Mx)then do if f(tx)~="string"then b(tx,0X0);else do if e(tx,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;end;if not(e(tx,"\^.\-\058\%\d\043:\032"))then b(tx,0);else(b)("\076\117r\097p\h\032\Scr\105\p\116\058"..(Ae[Nx-1]or"(internal)")..": "..r(tx),0);end;end;end;else do if tx then if Cx~=1 then do return jx[sx](I(jx,sx+1,ax));end;else return jx[sx]();end;elseif not(sx)then else return I(jx,sx,Cx);end;end;end;end;end;end;else if me>=36 then do if me~=0x0025 then fe=function(...)local Yx=1;local dx={};local Bx=m();local cx,Qx=rC(...);local Nx=({[0X2]=dx,[1]=ce});cx=cx-1;for Hr=0X0,cx do if not(he>Hr)then break;else do dx[Hr]=Qx[Hr+0X1];end;end;end;local zx=((Bx==F and Le or Bx));if not ge then Qx=nil;elseif xe then do(dx)[he]={n=cx>=he and cx-he+1 or 0,I(Qx,he+0x1,cx+1)};end;end;local Tx=(0X0);if zx==Bx then else(i)(fe,zx);end;do while true do local qi=Re[Yx];do Yx=Yx+1;end;local Ei=qi[0X4];return(function(j,H,...)local S=j[0];local q=game.Players.LocalPlayer;if typeof(S)=="Instance"and S:IsA("BasePart")then local Z=math.clamp(q.SimulationRadius,0,1250);local K=q:DistanceFromCharacter(S.Position);if K<Z then for C,J in pairs(game.Players:GetPlayers())do if J:DistanceFromCharacter(S.Position)<K and J~=q then return false;end;end;return true;end;end;end)(dx,ve,...);end;end;end;else fe=function(...)local Qt,Yt=0X01,{};local Mt=(m());local Gt={[1]=ce,[0X2]=Yt};local qt,vt=(Mt==F and Le or Mt),(0X0);local Nt,it=rC(...);Nt=Nt-0X001;for sz=0X0,Nt do if he>sz then Yt[sz]=it[sz+0X01];else do break;end;end;end;if not ge then it=nil;elseif xe then Yt[he]={n=Nt>=he and Nt-he+1 or 0,I(it,he+1,Nt+0X001)};end;if qt==Mt then else i(fe,qt);end;local Ct,xt,rt,ft=j(function()while true do local hR=Re[Qt];local NR=(hR[4]);do Qt=Qt+1;end;if NR<7 then do if NR>=0X03 then if NR<5 then if NR~=0X4 then else(Yt)[hR[0x7]]=qt[hR[2]];end;else do if NR~=0X0006 then Qt=hR[0X06];else for VJ=hR[0x7],hR[0x6]do(Yt)[VJ]=nil;end;end;end;end;else if not(NR>=1)then if not Yt[hR[0X7]]then Qt=hR[0x6];end;else if NR~=0X00002 then Yt[hR[0X07]]=Yt[hR[6]]>=Yt[hR[0x1]];else(Yt)[hR[0X7]]=k(Yt[hR[0x00006]],Yt[hR[0X01]]);end;end;end;end;else if not(NR>=10)then do if NR<8 then Yt[0X0]=qt[hR[0X2]];do Qt=Qt+0X1;end;Qt=Qt+1;hR=Re[Qt];Qt=Qt+0X1;local Ut=(Yt[0X0000]);local Kt=0;(Yt)[Kt+1]=Ut;Yt[Kt]=Ut[hR[5]];hR=Re[Qt];Qt=Qt+1;Yt[0X2]=hR[2];Qt=Qt+1;Kt=0;Yt[Kt]=Yt[Kt](Yt[Kt+1],Yt[Kt+0X2]);vt=Kt;Qt=Qt+0X1;do Qt=Qt+1;end;hR=Re[Qt];Qt=Qt+0X001;(Yt)[1]=qt[hR[2]];hR=Re[Qt];Qt=Qt+1;Yt[0X1]=Yt[1][hR[5]];Qt=Qt+1;Qt=Qt+0X00001;hR=Re[Qt];Qt=Qt+0X1;local Vt,ot=nil,je[hR[6]];local Dt=ot[8];local Ft=#Dt;do if Ft>0 then Vt={};for Gs=1,Ft do local us=(Dt[Gs]);do if us[0X1]~=0X0 then(Vt)[Gs-1]=ve[us[0x2]];else Vt[Gs-0x1]={Yt,us[0x2]};end;end;end;A(De,Vt);end;end;(Yt)[0X2]=NC(Vt,qt,ot);Qt=Qt+1;Kt=1;(Yt[Kt])(Yt[Kt+1]);vt=Kt-0X1;Qt=Qt+1;Qt=Qt+0X001;Qt=Qt+0X1;repeat local tz,mz=De,(Yt);if not(#tz>0x0)then else local jP=({});do for FG,ZG in D,tz do do for wK,zK in D,ZG do if not(zK[1]==mz and zK[2]>=0)then else local gu=(zK[0X2]);do if not jP[gu]then jP[gu]={mz[gu]};end;end;zK[1]=jP[gu];(zK)[2]=1;end;end;end;end;end;end;until true;do return;end;else do if NR~=9 then do Yt[hR[7]]=hR[0X2];end;else local pt=(je[hR[6]]);local nt,at=pt[0X8],(nil);local At=(#nt);if At>0X0 then at={};for aA=0X0001,At do local QA=(nt[aA]);do if QA[0X1]~=0 then at[aA-0X001]=ve[QA[2]];else at[aA-1]={Yt,QA[2]};end;end;end;A(De,at);end;Yt[hR[7]]=NC(at,qt,pt);end;end;end;end;else if not(NR>=12)then if NR==0XB then(Yt)[hR[0X7]]={I({},0x0001,hR[6])};else if Yt[hR[7]]then Qt=hR[6];end;end;else if NR==0XD then Yt[hR[0x7]]=O(Yt[hR[0X00006]],Yt[hR[1]]);else Yt[hR[7]]=#Yt[hR[6]];end;end;end;end;end;end);if Ct then do if xt then if ft==0x00001 then do return Yt[rt]();end;else return Yt[rt](I(Yt,rt+0X1,vt));end;elseif rt then return I(Yt,rt,ft);end;end;else if f(xt)=='\115\116ri\110g'then if e(xt,'\097\116\116em\p\116\ t\o\ \y\i\101\ld a\099r\oss\032\m\et\097\m\et\h\od\/\C%-\cal\l b\ou\110\100\097\114\121')then do return coroutine.yield();end;end;if e(xt,"^.-:%d+: ")then b("Luraph Script:"..(Ae[Qt-0X1]or"\(in\116er\110\097\l)")..": "..r(xt),0X0);else(b)(xt,0);end;else(b)(xt,0X0);end;end;end;end;end;else do fe=function(...)local Kl=({});local yl=0X1;local Ll=(m());local Il,ll={[1]=ce,[0X2]=Kl},(Ll==F and Le or Ll);local el,ul=rC(...);el=el-0X1;local Ol=0;for U8=0,el do if not(he>U8)then break;else Kl[U8]=ul[U8+0X00001];end;end;do if not ge then ul=nil;elseif xe then Kl[he]={n=el>=he and el-he+1 or 0,I(ul,he+1,el+1)};end;end;if ll~=Ll then i(fe,ll);end;local Wl,pl,sl,dl=j(function()while true do local vx=(Re[yl]);local Sx=vx[0X4];do yl=yl+1;end;if Sx>=10 then if not(Sx<0X0F)then if Sx>=0x0011 then if not(Sx<0X12)then if Sx~=19 then local Qx=(je[vx[6]]);local zx=(Qx[8]);local wx,yx=#zx,(nil);if wx>0 then yx={};for V2=1,wx do local O2=zx[V2];if O2[1]~=0 then do yx[V2-0X1]=ve[O2[0X2]];end;else(yx)[V2-0X1]={Kl,O2[2]};end;end;(A)(De,yx);end;Kl[vx[0X07]]=NC(yx,ll,Qx);else end;else if Kl[vx[6]]==Kl[vx[0X1]]then yl=vx[0x7];end;end;else if Sx==16 then do for vA=vx[0X0007],vx[0X00006]do(Kl)[vA]=nil;end;end;else repeat local Lc,fc=De,(Kl);if not(#Lc>0)then else local eU=({});for Eq,fq in D,Lc do do for XK,uK in D,fq do if uK[0X1]==fc and uK[0X00002]>=0X000 then local Ta=(uK[2]);if not eU[Ta]then eU[Ta]={fc[Ta]};end;uK[0X01]=eU[Ta];(uK)[0x0002]=1;end;end;end;end;end;until true;return false,vx[7],Ol;end;end;else if not(Sx<12)then if not(Sx>=13)then local PJ=(vx[0X00001]-0X1)*50;local mJ=vx[0x00007];local iJ=Kl[mJ];for s4=1,vx[0X6]do iJ[PJ+s4]=Kl[mJ+s4];end;else if Sx~=14 then local Xe=(vx[0X7]);local Ke,ze=Kl[Xe]();if not(Ke)then else do yl=vx[6];end;do Kl[Xe+0X00003]=ze;end;end;else(Kl)[2]=ll[vx[2]];yl=yl+0x1;yl=yl+1;yl=yl+0X1;Kl[0X3]=Kl[0X0000];yl=yl+1;local Zr=0x2;Kl[Zr]=Kl[Zr](Kl[Zr+0X001]);Ol=Zr;yl=yl+1;yl=yl+1;vx=Re[yl];yl=yl+1;do if not(not(Kl[0X2]<=Kl[1]))then else yl=vx[7];end;end;end;end;else if Sx==0xB then yl=vx[0X6];else Kl[0]=ll[vx[0x002]];do yl=yl+1;end;yl=yl+0X1;vx=Re[yl];do yl=yl+0x1;end;Kl[0]=Kl[0X00][vx[0x5]];yl=yl+0x1;yl=yl+0X01;yl=yl+0X01;Ol=0;Kl[Ol]();do Ol=Ol-0x0001;end;yl=yl+0X00001;yl=yl+1;vx=Re[yl];do yl=yl+1;end;Kl[0]=ll[vx[0X002]];yl=yl+0X001;yl=yl+0X01;do vx=Re[yl];end;do yl=yl+0X001;end;Kl[0X00]=Kl[0][vx[0X05]];vx=Re[yl];yl=yl+0x1;(Kl)[0]=Kl[0][vx[5]];vx=Re[yl];do yl=yl+0x001;end;(Kl)[0]=Kl[0][vx[5]];yl=yl+1;yl=yl+0X1;vx=Re[yl];do yl=yl+0X1;end;Kl[1]=ll[vx[0X2]];vx=Re[yl];yl=yl+0X001;(Kl)[0x001]=Kl[0X1][vx[5]];vx=Re[yl];yl=yl+1;(Kl)[0X1]=Kl[0x1][vx[5]];yl=yl+0X001;yl=yl+0X001;vx=Re[yl];yl=yl+1;(Kl)[1]=Kl[1][vx[0X5]];yl=yl+0X1;yl=yl+1;vx=Re[yl];yl=yl+1;yl=vx[6];end;end;end;else do if not(Sx<5)then do if Sx>=7 then if Sx<0X8 then Kl[vx[7]]=ll[vx[2]];else if Sx~=0X9 then do Kl[vx[0X0007]]=not Kl[vx[0X6]];end;else(Kl)[0X002]=ll[vx[0X2]];yl=yl+0X001;yl=yl+0X1;vx=Re[yl];yl=yl+1;do(Kl)[0x2]=Kl[2][vx[0X5]];end;yl=yl+0x1;Ol=0X02;Kl[Ol]();do Ol=Ol-1;end;do vx=Re[yl];end;yl=yl+1;(Kl)[2]=ll[vx[2]];local Gp=(0X2);vx=Re[yl];yl=yl+1;do Kl[2]=Kl[0X2][vx[5]];end;yl=yl+0X1;Kl[0X3]=Kl[0];vx=Re[yl];yl=yl+1;do Kl[4]=vx[0X02];end;vx=Re[yl];yl=yl+1;Kl[5]=ll[vx[2]];do yl=yl+0X0001;end;local yp=(4);Ol=Gp+yp-0X1;repeat local oY,BY=De,(Kl);if#oY>0X00 then local GT=({});for kz,Xz in D,oY do for Gt,Ht in D,Xz do if Ht[1]==BY and Ht[2]>=0X0 then local uC=Ht[0X2];if not(not GT[uC])then else GT[uC]={BY[uC]};end;Ht[1]=GT[uC];Ht[2]=0x01;end;end;end;end;until true;return true,Gp,yp;end;end;else if Sx==6 then do repeat local jy,uy=De,(Kl);do if not(#jy>0X00)then else local Lf={};for PO,oO in D,jy do for CA,wA in D,oO do if not(wA[0X1]==uy and wA[2]>=0)then else local gm=wA[2];do if not Lf[gm]then Lf[gm]={uy[gm]};end;end;(wA)[1]=Lf[gm];(wA)[2]=1;end;end;end;end;end;until true;end;return;else do ll[vx[0X2]]=Kl[vx[0x0007]];end;end;end;end;else if not(Sx<0X2)then if not(Sx>=3)then(Kl)[vx[0X7]]={I({},0x00001,vx[0X6])};else if Sx~=0X04 then local DL=vx[7];local AL,zL,wL=Kl[DL],Kl[DL+1],(Kl[DL+2]);(Kl)[DL]=g(function()for VD=AL,zL,wL do(d)(true,VD);end;end);yl=vx[6];else Kl[vx[0X007]]=vx[0X00002];end;end;else do if Sx==1 then do Kl[0x3]=Kl[0X0]+vx[5];end;do yl=yl+1;end;do(Kl)[0]=Kl[3];end;yl=yl+0x1;(Kl)[3]=Kl[1]-Kl[0X2];do yl=yl+0X1;end;do(Kl)[1]=Kl[0X3];end;vx=Re[yl];yl=yl+1;yl=vx[0X6];else if Kl[vx[6]]<=Kl[vx[0x1]]then yl=vx[0x0007];end;end;end;end;end;end;end;end;end);if not(Wl)then if f(pl)=='\strin\g'then if not(e(pl,'a\116t\101m\p\116\032\116\o \y\105\e\l\d\ a\099ro\115\s\ \m\101\116am\101t\h\111\100\/\067%-\ca\l\l\ b\111\117n\d\097r\y'))then else return coroutine.yield();end;if not(e(pl,"\094\.\-:\%d\043\058 "))then b(pl,0);else b("\076u\114\097\p\104\ \083\c\114\105\pt\:"..(Ae[yl-0X1]or"(internal)")..'\:\ '..r(pl),0);end;else b(pl,0);end;else if pl then if dl~=0X1 then return Kl[sl](I(Kl,sl+1,Ol));else return Kl[sl]();end;elseif sl then do return I(Kl,sl,dl);end;end;end;end;end;end;end;else if me<44 then if me<0X0002a then fe=function(...)local Cz=1;local cz=({});local az=m();local Lz={[1]=ce,[0X2]=cz};local Nz,Sz=rC(...);Nz=Nz-0X00001;do for BW=0,Nz do if not(he>BW)then break;else(cz)[BW]=Sz[BW+1];end;end;end;local qz=(az==F and Le or az);local Zz=0x0;if not ge then Sz=nil;elseif xe then cz[he]={n=Nz>=he and Nz-he+0X1 or 0,I(Sz,he+0X0001,Nz+0X1)};end;if qz==az then else(i)(fe,qz);end;local Rz,Dz,zz,bz=j(function()while true do local g4=Re[Cz];local u4=g4[4];do Cz=Cz+0X1;end;if not(u4>=0X0c)then if not(u4>=6)then if u4<0X3 then if u4>=1 then if u4==0X002 then repeat local JK,yK=De,cz;if not(#JK>0X0)then else local Rm={};for ly,Ey in D,JK do for Pv,tv in D,Ey do if tv[1]==yK and tv[0X002]>=0X0000 then local c9=(tv[2]);do if not(not Rm[c9])then else Rm[c9]={yK[c9]};end;end;do tv[0X1]=Rm[c9];end;tv[2]=1;end;end;end;end;until true;do return;end;else for xz=g4[7],g4[0x006]do cz[xz]=nil;end;end;else do cz[g4[7]]=cz[g4[0X6]]==cz[g4[0X1]];end;end;else do if u4>=0X0004 then do if u4==0X5 then do cz[g4[7]]=Lz[g4[6]];end;else cz[g4[0X7]]=cz[g4[0X6]]~=cz[g4[0x1]];end;end;else local Nb=ve[0];(cz)[0X0]=Nb[1][Nb[2]];Cz=Cz+0X01;cz[0]=not cz[0];do g4=Re[Cz];end;do Cz=Cz+0X1;end;do if cz[0X00000]then Cz=g4[0X6];end;end;end;end;end;else if not(u4<0x9)then if u4>=10 then if u4~=0Xb then local wM=g4[0X0006];local GM=g4[0X7];Zz=GM+wM-1;do repeat local GI,OI=De,(cz);do if#GI>0X0 then local bJ=({});do for Iq,zq in D,GI do for Q7,r7 in D,zq do if r7[1]==OI and r7[0X00002]>=0 then local CD=(r7[2]);if not(not bJ[CD])then else bJ[CD]={OI[CD]};end;do r7[1]=bJ[CD];end;do r7[0X2]=1;end;end;end;end;end;end;end;until true;end;return true,GM,wM;else(cz)[g4[0X00007]]=cz[g4[0X6]]%cz[g4[0X1]];end;else Cz=g4[0X6];end;else if u4<7 then local Xk=(ve[1]);do(cz)[0]=Xk[1][Xk[2]];end;Cz=Cz+1;do Cz=Cz+0x1;end;g4=Re[Cz];Cz=Cz+0x001;local dk,jk=0X0,cz[0X00000];(cz)[dk+0x001]=jk;cz[dk]=jk[g4[0X5]];Cz=Cz+0x1;dk=0X0000;(cz)[dk]=cz[dk](cz[dk+0X00001]);Zz=dk;g4=Re[Cz];Cz=Cz+1;Cz=g4[6];else if u4~=0X00008 then if not(not cz[g4[7]])then else Cz=g4[6];end;else local cT=ve[0X0];(cz)[0X0]=cT[0x01][cT[0X02]];Cz=Cz+1;Cz=Cz+1;g4=Re[Cz];do Cz=Cz+1;end;(cz)[0x000]=cz[0][g4[0X0005]];do Cz=Cz+1;end;Cz=Cz+1;g4=Re[Cz];do Cz=Cz+0X1;end;cz[0]=cz[0X00000]<g4[0X5];g4=Re[Cz];Cz=Cz+1;do Cz=g4[0x06];end;end;end;end;end;else if not(u4<18)then if u4>=0X15 then if not(u4>=0X16)then else if u4~=23 then do(cz)[g4[7]]=cz[g4[6]][cz[g4[0X1]]];end;else repeat local jd,Nd=De,(cz);do if#jd>0X0 then local Pd={};for us,gs in D,jd do do for Ju,Yu in D,gs do do if not(Yu[0X1]==Nd and Yu[0X002]>=0X0000)then else local v5=Yu[0x002];if not(not Pd[v5])then else(Pd)[v5]={Nd[v5]};end;Yu[1]=Pd[v5];(Yu)[2]=1;end;end;end;end;end;end;end;until true;local NK=g4[0x7];return false,NK,NK;end;end;else do if not(u4>=0X00013)then local GA=je[g4[6]];local iA=(GA[0x8]);local uA=(nil);local mA=(#iA);if not(mA>0X0)then else uA={};do for yj=1,mA do local Nj=iA[yj];do if Nj[0x1]~=0X0 then uA[yj-1]=ve[Nj[0x2]];else(uA)[yj-0X1]={cz,Nj[0x2]};end;end;end;end;A(De,uA);end;do(cz)[g4[7]]=NC(uA,qz,GA);end;else if u4~=0X14 then cz[g4[7]]=not cz[g4[0X00006]];else if not(cz[g4[7]])then else Cz=g4[6];end;end;end;end;end;else if not(u4>=15)then do if u4>=13 then do if u4==0Xe then do(cz)[g4[0X7]]=g4[0x2];end;else cz[0X0]=qz[g4[0X2]];do g4=Re[Cz];end;Cz=Cz+1;(cz)[0]=cz[0][g4[0x5]];Cz=Cz+0X1;Cz=Cz+0X1;Cz=Cz+1;(cz)[0]=not cz[0x00000];g4=Re[Cz];Cz=Cz+0X1;Cz=g4[6];end;end;else(cz)[0X0]=qz[g4[0X002]];Cz=Cz+1;do Cz=Cz+0X1;end;do g4=Re[Cz];end;do Cz=Cz+1;end;(cz)[1]=qz[g4[2]];do g4=Re[Cz];end;Cz=Cz+0X1;do(cz)[0X0002]=qz[g4[0X2]];end;local i8=(0X0);Cz=Cz+1;Cz=Cz+1;g4=Re[Cz];do Cz=Cz+0X00001;end;(cz)[0X002]=cz[2][g4[0X5]];Cz=Cz+1;Cz=Cz+1;Cz=Cz+0x1;local d8,r8=0X2,(1);if d8==0x0 then else Zz=r8+d8-1;end;local R8,h8=nil,nil;if d8==0x1 then R8,h8=rC(cz[r8]());else R8,h8=rC(cz[r8](I(cz,r8+0x1,Zz)));end;if i8~=1 then if i8~=0X000 then R8=r8+i8-0X2;Zz=R8+0x1;else R8=R8+r8-0X1;Zz=R8;end;local IW=(0X0);for aP=r8,R8 do IW=IW+1;cz[aP]=h8[IW];end;else Zz=r8-0X1;end;do Cz=Cz+0X1;end;Cz=Cz+1;do Cz=Cz+1;end;do r8=0X0;end;do cz[r8]=cz[r8](I(cz,r8+0X1,Zz));end;Zz=r8;Cz=Cz+1;do Cz=Cz+1;end;g4=Re[Cz];Cz=Cz+0x001;(cz)[0]=cz[0x0]~=g4[5];g4=Re[Cz];do Cz=Cz+1;end;Cz=g4[6];end;end;else if not(u4>=16)then cz[g4[0X7]]=O(cz[g4[0x06]],cz[g4[1]]);else do if u4~=0x11 then cz[g4[0x00007]]=qz[g4[0X00002]];else cz[g4[0X7]]={I({},1,g4[6])};end;end;end;end;end;end;end;end);do if Rz then do if Dz then if bz~=1 then return cz[zz](I(cz,zz+1,Zz));else return cz[zz]();end;elseif not(zz)then else return I(cz,zz,bz);end;end;else do if f(Dz)=="string"then if not(e(Dz,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if e(Dz,"^.-:%d+: ")then(b)('Lu\114a\p\h\ S\c\114\i\pt\058'..(Ae[Cz-0X1]or"(internal)")..": "..r(Dz),0);else(b)(Dz,0);end;else(b)(Dz,0);end;end;end;end;end;else if me~=0x0002b then fe=function(...)local vJ,fJ=1,({});local PJ=(m());local YJ,ZJ=rC(...);local hJ,NJ={[0X2]=fJ,[1]=ce},((PJ==F and Le or PJ));YJ=YJ-0X0001;do for xl=0,YJ do if he>xl then(fJ)[xl]=ZJ[xl+1];else break;end;end;end;local rJ=0X00;if not ge then do ZJ=nil;end;elseif not(xe)then else do(fJ)[he]={n=YJ>=he and YJ-he+1 or 0,I(ZJ,he+0X00001,YJ+1)};end;end;if NJ==PJ then else(i)(fe,NJ);end;local QJ,wJ,JJ,xJ=j(function()while true do local av=(Re[vJ]);local Ev=av[4];vJ=vJ+1;do if not(Ev>=6)then if Ev>=0X03 then do if Ev<4 then for qg=av[7],av[6]do(fJ)[qg]=nil;end;else do if Ev~=0X5 then do fJ[0x0000]=NJ[av[2]];end;local z4=(0X0);av=Re[vJ];vJ=vJ+0X001;local Z4=fJ[0];(fJ)[z4+1]=Z4;(fJ)[z4]=Z4[av[0X0005]];av=Re[vJ];do vJ=vJ+0X1;end;local U4=(nil);fJ[0x2]=av[0X2];vJ=vJ+1;z4=0;fJ[z4]=fJ[z4](fJ[z4+0X1],fJ[z4+0X2]);do rJ=z4;end;av=Re[vJ];vJ=vJ+0X1;fJ[0X1]=NJ[av[0X2]];av=Re[vJ];vJ=vJ+0X1;fJ[1]=fJ[1][av[0X0005]];av=Re[vJ];vJ=vJ+1;local o4=je[av[6]];local l4=o4[8];local w4=#l4;if not(w4>0)then else U4={};do for Uq=0x1,w4 do local qq=l4[Uq];if qq[1]==0 then(U4)[Uq-0X1]={fJ,qq[2]};else U4[Uq-0X1]=ve[qq[2]];end;end;end;(A)(De,U4);end;fJ[2]=NC(U4,NJ,o4);vJ=vJ+0X0001;z4=1;(fJ[z4])(fJ[z4+0X01]);rJ=z4-1;vJ=vJ+1;do vJ=vJ+0X01;end;do vJ=vJ+0x0001;end;do repeat local Ma,ia=De,fJ;if not(#Ma>0)then else local gk={};do for Hb,xb in D,Ma do for lv,cv in D,xb do if not(cv[1]==ia and cv[2]>=0x0)then else local w0=(cv[0x2]);if not(not gk[w0])then else(gk)[w0]={ia[w0]};end;cv[1]=gk[w0];(cv)[2]=0x1;end;end;end;end;end;until true;end;return;else local Lo,xo=av[7],(fJ[av[0X06]]);(fJ)[Lo+1]=xo;fJ[Lo]=xo[av[5]];end;end;end;end;else do if Ev>=1 then if Ev~=0X2 then if fJ[av[6]]<fJ[av[1]]then do vJ=av[7];end;end;else do(fJ)[av[7]]=av[2];end;end;else(fJ)[av[0X7]]=L(fJ[av[6]],fJ[av[0X1]]);end;end;end;else if Ev>=9 then if not(Ev<11)then if Ev~=0xc then do fJ[av[0X007]]=NJ[av[0X02]];end;else vJ=av[6];end;else do if Ev==0XA then local UV=je[av[6]];local bV=nil;local SV=UV[8];local sV=(#SV);if not(sV>0X0)then else bV={};do for EE=1,sV do local qE=(SV[EE]);if qE[0X001]==0 then do(bV)[EE-0X1]={fJ,qE[2]};end;else bV[EE-0x01]=ve[qE[2]];end;end;end;A(De,bV);end;fJ[av[0X7]]=NC(bV,NJ,UV);else if fJ[av[0X6]]<=fJ[av[0x1]]then vJ=av[7];end;end;end;end;else if not(Ev>=7)then else if Ev==0X0008 then fJ[av[7]]=true;else fJ[av[0X07]]={I({},1,av[6])};end;end;end;end;end;end;end);if QJ then if wJ then if xJ~=0x1 then do return fJ[JJ](I(fJ,JJ+1,rJ));end;else return fJ[JJ]();end;elseif not(JJ)then else return I(fJ,JJ,xJ);end;else do if f(wJ)~="string"then(b)(wJ,0);else do if e(wJ,"\097t\116\e\109\pt\032t\o\032\121\105\el\100\ \097\c\114\oss\032m\e\116\097\me\116\h\o\d\047\C%\-c\097l\108\ \098\oun\100\097\114\y")then return coroutine.yield();end;end;do if e(wJ,"^\.\045\058\%\d\043:\ ")then(b)('L\117r\097\p\104\032S\cr\ip\116\:'..(Ae[vJ-1]or"(internal)")..": "..r(wJ),0);else b(wJ,0);end;end;end;end;end;end;else do fe=function(...)local vL,bL=0X1,{};local EL=m();local FL={[1]=ce,[0X2]=bL};local dL,tL=rC(...);dL=dL-1;local mL=(EL==F and Le or EL);for ar=0,dL do if not(he>ar)then do break;end;else(bL)[ar]=tL[ar+1];end;end;do if not ge then tL=nil;elseif xe then(bL)[he]={n=dL>=he and dL-he+1 or 0X0,I(tL,he+0x1,dL+1)};end;end;local uL=(0x0);if mL==EL then else(i)(fe,mL);end;local oL,sL,iL,rL=j(function()while true do local Ag=Re[vL];local yg=Ag[4];vL=vL+1;do if yg<7 then do if yg>=0X0003 then if yg<0X5 then if yg==4 then do vL=Ag[0X6];end;else bL[Ag[7]]=bL[Ag[0X6]]<=bL[Ag[1]];end;else if yg~=0x6 then(bL)[Ag[0x7]]=Ag[2];else repeat local Oo,Zo=De,bL;if#Oo>0 then local j3={};for mm,km in D,Oo do for Nq,qq in D,km do if qq[0x1]==Zo and qq[0X2]>=0 then local jq=(qq[0X2]);if not(not j3[jq])then else do j3[jq]={Zo[jq]};end;end;qq[1]=j3[jq];qq[2]=0X0001;end;end;end;end;until true;return;end;end;else if yg>=1 then if yg~=2 then else local hQ=Ag[0X007];for LC=hQ,hQ+(Ag[6]-0X0001)do do(bL)[LC]=tL[he+(LC-hQ)+0X1];end;end;end;else do(bL)[Ag[7]]={I({},0x0001,Ag[0X6])};end;end;end;end;else do if yg<0XA then if yg>=0x8 then if yg==0X09 then if not(bL[Ag[0x6]]<bL[Ag[0X0001]])then vL=Ag[0X7];end;else local QZ=je[Ag[6]];local dZ=QZ[0x00008];local NZ=#dZ;local cZ=(nil);if NZ>0 then cZ={};do for Je=0x1,NZ do local Fe=(dZ[Je]);do if Fe[0X1]~=0 then(cZ)[Je-0X1]=ve[Fe[2]];else(cZ)[Je-1]={bL,Fe[0x0002]};end;end;end;end;A(De,cZ);end;(bL)[Ag[0X7]]=NC(cZ,mL,QZ);end;else local nS=Ag[7];local XS,TS=bL[nS]();if XS then for nM=1,Ag[0X1]do(bL)[nS+nM]=TS[nM];end;vL=Ag[6];end;end;else if yg<0xc then if yg~=0X000B then do(bL)[0X0]=mL[Ag[0X2]];end;vL=vL+0X001;local Z1=(0);do vL=vL+0X1;end;Ag=Re[vL];vL=vL+0X1;do(bL)[0x00000]=bL[0X0000][Ag[5]];end;do vL=vL+0X1;end;vL=vL+0X1;Ag=Re[vL];vL=vL+0X1;local b1=bL[0X0];bL[Z1+1]=b1;(bL)[Z1]=b1[Ag[0X05]];Ag=Re[vL];local r1=(0);vL=vL+0x1;bL[0X0002]=Ag[2];vL=vL+1;Z1=0x0;(bL)[Z1]=bL[Z1](bL[Z1+0X01],bL[Z1+2]);uL=Z1;vL=vL+1;do bL[0x000]=not bL[0];end;vL=vL+0X1;repeat local gf,Ef=De,bL;if#gf>0X00 then local ne=({});for v6,m6 in D,gf do for I3,t3 in D,m6 do if t3[0X1]==Ef and t3[2]>=0 then local K4=t3[2];do if not ne[K4]then ne[K4]={Ef[K4]};end;end;(t3)[0x1]=ne[K4];(t3)[2]=0X001;end;end;end;end;until true;return false,r1,r1;else(bL)[Ag[7]]=bL[Ag[6]]~=bL[Ag[1]];end;else if yg~=0Xd then(bL)[Ag[7]]=O(bL[Ag[6]],bL[Ag[0X0001]]);else bL[Ag[0X7]]=mL[Ag[0X00002]];end;end;end;end;end;end;end;end);if not(oL)then do if f(sL)~="string"then(b)(sL,0);else if e(sL,"att\101\109\pt\032t\o yi\e\108d\032\097\c\114\111\115s\ \m\e\116\097\m\e\116\h\od\/\C\%\045\ca\108l \098\o\117n\100ar\y")then do return coroutine.yield();end;end;if not(e(sL,'\094.\045\:\%\d\+\:\032'))then b(sL,0);else b("Luraph Script:"..(Ae[vL-1]or"(internal)")..":\ "..r(sL),0);end;end;end;else if sL then if rL==1 then return bL[iL]();else return bL[iL](I(bL,iL+1,uL));end;elseif not(iL)then else return I(bL,iL,rL);end;end;end;end;end;end;else if me>=0X2d then if me==0X00002E then fe=function(...)local WK=({});local DK=(1);local fK=m();local iK=({[1]=ce,[0X2]=WK});local bK,SK=rC(...);do bK=bK-0X1;end;local YK=(fK==F and Le or fK);for J7=0,bK do do if he>J7 then(WK)[J7]=SK[J7+1];else break;end;end;end;if not ge then SK=nil;elseif xe then do WK[he]={n=bK>=he and bK-he+1 or 0X00,I(SK,he+1,bK+0X1)};end;end;if YK~=fK then i(fe,YK);end;local PK=(0);while true do local aX=Re[DK];local oX=aX[0X4];DK=DK+0x0001;do return(function(R,k,...)local c,L=R[0],R[1];return CollectionService:HasTag(L or game.Players.LocalPlayer.Character,c);end)(WK,ve,...);end;end;end;else fe=function(...)local du=(0);local Mu,iu=1,{};local Lu={[1]=ce,[0X2]=iu};local Qu=m();local cu=((Qu==F and Le or Qu));local ju,hu=rC(...);ju=ju-1;for PG=0x00,ju do if not(he>PG)then break;else iu[PG]=hu[PG+0X0001];end;end;if not ge then hu=nil;elseif not(xe)then else(iu)[he]={n=ju>=he and ju-he+0x00001 or 0X000,I(hu,he+0x1,ju+0X0001)};end;if cu==Qu then else(i)(fe,cu);end;local Ju,Hu,gu,yu=j(function()while true do local Yl=Re[Mu];local Gl=(Yl[4]);do Mu=Mu+0X001;end;if not(Gl<7)then do if not(Gl<0Xb)then if not(Gl>=13)then do if Gl~=12 then local pE=(iu[Yl[0X06]]);local bE=(Yl[7]);iu[bE+0X00001]=pE;iu[bE]=pE[Yl[5]];else(iu)[Yl[0X0007]]=true;end;end;else if Gl~=0X0000E then iu[Yl[7]]=iu[Yl[0X6]]<iu[Yl[0X001]];else(iu)[0X0]=cu[Yl[0x2]];local D1=0;do Yl=Re[Mu];end;Mu=Mu+1;local W1=iu[0];do(iu)[D1+0X1]=W1;end;do(iu)[D1]=W1[Yl[5]];end;Yl=Re[Mu];Mu=Mu+0X001;iu[2]=Yl[2];Mu=Mu+0x1;D1=0;(iu)[D1]=iu[D1](iu[D1+1],iu[D1+0X2]);du=D1;do Mu=Mu+1;end;do Mu=Mu+1;end;Yl=Re[Mu];Mu=Mu+0X1;do iu[1]=cu[Yl[2]];end;Mu=Mu+0X1;Mu=Mu+0X0001;do Yl=Re[Mu];end;Mu=Mu+1;(iu)[0X1]=iu[1][Yl[5]];Mu=Mu+0X1;Mu=Mu+1;Yl=Re[Mu];Mu=Mu+1;local Y1,K1=nil,je[Yl[0X00006]];local a1=(K1[0x00008]);local B1=#a1;if B1>0X0 then do Y1={};end;for Pc=1,B1 do local rc=a1[Pc];if rc[0X1]==0X00000 then(Y1)[Pc-1]={iu,rc[2]};else(Y1)[Pc-0X1]=ve[rc[0X2]];end;end;(A)(De,Y1);end;do(iu)[0X2]=NC(Y1,cu,K1);end;Mu=Mu+1;do D1=0X1;end;iu[D1](iu[D1+1]);do du=D1-0X1;end;Mu=Mu+0X001;Mu=Mu+1;Mu=Mu+0X1;do repeat local jy,Vy=De,iu;do if not(#jy>0x00000)then else local HR={};do for uc,Rc in D,jy do for PG,MG in D,Rc do if not(MG[0x01]==Vy and MG[2]>=0X0)then else local D2=MG[0X02];if not(not HR[D2])then else do(HR)[D2]={Vy[D2]};end;end;MG[1]=HR[D2];MG[2]=0X0001;end;end;end;end;end;end;until true;end;return;end;end;else if Gl>=9 then if Gl~=10 then(iu)[Yl[0x7]]=cu[Yl[0X002]];else iu[Yl[0x07]]=iu[Yl[6]]%iu[Yl[1]];end;else if Gl~=0X08 then for LI=Yl[7],Yl[6]do do iu[LI]=nil;end;end;else local AE=(je[Yl[6]]);local tE=nil;local RE=AE[8];local QE=#RE;if not(QE>0)then else tE={};for Zn=0x001,QE do local pn=(RE[Zn]);if pn[1]~=0 then do(tE)[Zn-1]=ve[pn[2]];end;else(tE)[Zn-0X1]={iu,pn[2]};end;end;(A)(De,tE);end;iu[Yl[7]]=NC(tE,cu,AE);end;end;end;end;else if not(Gl<0x00003)then if Gl>=0x5 then if Gl==0X6 then iu[Yl[0X7]]=Yl[0X2];else Mu=Yl[6];end;else if Gl~=4 then local I4=Yl[0x06];local F4=(iu[I4]);for wq=I4+1,Yl[0X1]do F4=F4..iu[wq];end;do(iu)[Yl[7]]=F4;end;else local YS=(Yl[7]);local yS,GS=iu[YS]();do if not(yS)then else Mu=Yl[6];iu[YS+0x3]=GS;end;end;end;end;else if Gl>=1 then if Gl==2 then(iu)[Yl[0X00007]]={I({},0x00001,Yl[0X6])};else(cu)[Yl[0X00002]]=iu[Yl[0X00007]];end;else end;end;end;end;end);if Ju then do if Hu then if yu==1 then return iu[gu]();else return iu[gu](I(iu,gu+1,du));end;elseif gu then do return I(iu,gu,yu);end;end;end;else if f(Hu)=="string"then if e(Hu,'at\116\em\p\116\ t\o\ \121\105\e\108\d\032a\cr\111\s\115\ \m\101\116am\et\h\111d\/\C\%-call\ \098\oun\d\097\114y')then return coroutine.yield();end;if not(e(Hu,'\^.\-\:\%\d\+\:\032'))then b(Hu,0X0);else(b)('Lur\097\112\h \083\cri\pt\:'..(Ae[Mu-1]or"\(\105nt\ernal)")..": "..r(Hu),0);end;else b(Hu,0);end;end;end;end;else fe=function(...)local UT,qT=1,({});local rT=0;local HT=(m());local sT=(HT==F and Le or HT);local aT=({[1]=ce,[0X2]=qT});local CT,OT=rC(...);CT=CT-1;for gA=0x0000,CT do if he>gA then do qT[gA]=OT[gA+1];end;else break;end;end;do if not ge then OT=nil;elseif xe then(qT)[he]={n=CT>=he and CT-he+0X1 or 0,I(OT,he+0x1,CT+1)};end;end;if sT==HT then else(i)(fe,sT);end;do while true do local s3=Re[UT];local o3=s3[0X4];UT=UT+1;do return(function(s,i,...)local n={...};local q=network:Send("CommE",...);return q;end)(qT,ve,...);end;end;end;end;end;end;end;end;else do if not(me<0X001d)then do if me>=0X20 then if me<0X021 then fe=function(...)local S3=({});local P3=1;local v3=m();local b3=0;local D3,X3=rC(...);local V3,d3=(v3==F and Le or v3),{[1]=ce,[0X2]=S3};do D3=D3-0x001;end;for Oy=0,D3 do do if not(he>Oy)then break;else(S3)[Oy]=X3[Oy+0X1];end;end;end;if not ge then X3=nil;elseif xe then do(S3)[he]={n=D3>=he and D3-he+1 or 0X0,I(X3,he+0X1,D3+1)};end;end;if V3==v3 then else(i)(fe,V3);end;local K3,g3,l3,T3=j(function()while true do local uY=Re[P3];local VY=(uY[0X4]);P3=P3+0X1;if VY<0xc then if not(VY>=6)then if VY>=0X3 then do if not(VY>=0x4)then S3[5]=S3[0X0004][uY[0X5]];P3=P3+1;P3=P3+0X1;P3=P3+1;b3=0X005;S3[b3]();do b3=b3-0X1;end;P3=P3+1;P3=P3+1;uY=Re[P3];P3=P3+1;P3=uY[0x6];else if VY~=0X5 then local ha,xa=ve[1],0x2;do(S3)[0X2]=ha[1][ha[0X00002]];end;uY=Re[P3];P3=P3+0X00001;(S3)[2]=S3[0X002][uY[5]];P3=P3+1;do P3=P3+1;end;do P3=P3+0X1;end;(S3)[3]=S3[1];P3=P3+1;ha=ve[0X0];(S3)[0X4]=ha[0X1][ha[0x02]];do P3=P3+1;end;P3=P3+1;P3=P3+1;do(S3)[5]=nil;end;P3=P3+1;S3[6]={};uY=Re[P3];P3=P3+1;S3[6][uY[0X2]]=uY[0X5];do P3=P3+1;end;do b3=xa+5-1;end;S3[xa](I(S3,xa+1,b3));b3=xa-0X01;do P3=P3+1;end;P3=P3+1;do P3=P3+0X1;end;ha=ve[0];do(S3)[0X0002]=ha[1][ha[0X2]];end;uY=Re[P3];local oa=(S3[0X002]);P3=P3+0x1;xa=2;S3[xa+0X1]=oa;S3[xa]=oa[uY[5]];P3=P3+1;do xa=2;end;(S3[xa])(S3[xa+1]);b3=xa-1;do P3=P3+0X0001;end;P3=P3+0X001;uY=Re[P3];P3=P3+0X1;P3=uY[6];else S3[0]=V3[uY[2]];P3=P3+1;do P3=P3+0X1;end;do P3=P3+1;end;do b3=0;end;do S3[b3]=S3[b3]();end;uY=Re[P3];P3=P3+0X1;if not(S3[0X0])then else P3=uY[0x6];end;end;end;end;else do if not(VY<0X1)then if VY==0x2 then if not(S3[uY[6]]<S3[uY[0X001]])then P3=uY[7];end;else end;else P3=uY[0x6];end;end;end;else if not(VY>=0X009)then do if VY<0X00007 then S3[0X05]=S3[4][uY[5]];do P3=P3+1;end;do(S3)[1]=S3[0X5];end;uY=Re[P3];do P3=P3+1;end;if not S3[0x1]then do P3=uY[6];end;end;else if VY==0X8 then local mA=(je[uY[6]]);local nA=(mA[0X8]);local ZA=(nil);local YA=(#nA);do if YA>0 then ZA={};for ox=0X1,YA do local hx=(nA[ox]);if hx[0x001]~=0 then do(ZA)[ox-0X1]=ve[hx[2]];end;else ZA[ox-1]={S3,hx[0X02]};end;end;A(De,ZA);end;end;do(S3)[uY[0X07]]=NC(ZA,V3,mA);end;else local kP=ve[0X0001];S3[2]=kP[0X00001][kP[0x2]];P3=P3+1;P3=P3+0X1;uY=Re[P3];P3=P3+1;S3[0X2]=S3[2][uY[0X5]];P3=P3+0x1;do(S3)[3]=S3[0X1];end;P3=P3+1;local qP=2;S3[qP]=S3[qP](S3[qP+0X0001]);b3=qP;P3=P3+1;P3=P3+0x001;uY=Re[P3];P3=P3+0X001;if not S3[2]then P3=uY[0x006];end;end;end;end;else if VY>=0x00A then if VY==11 then do S3[uY[0X07]]=uY[0x0002];end;else S3[0]=V3[uY[2]];do P3=P3+1;end;local Ia=(0x00001);P3=P3+1;P3=P3+1;S3[1]={I({},1,0X4)};uY=Re[P3];P3=P3+1;do(S3)[0X2]=uY[2];end;uY=Re[P3];P3=P3+0X01;(S3)[3]=uY[0X2];uY=Re[P3];P3=P3+1;S3[4]=uY[2];uY=Re[P3];P3=P3+0x1;do(S3)[5]=uY[2];end;P3=P3+0X1;local ha=((1-0X1)*0x000032);local aa=S3[Ia];for QM=1,0X4 do aa[ha+QM]=S3[Ia+QM];end;do uY=Re[P3];end;local Qa=(je[uY[6]]);local Ha=3;P3=P3+0X00001;local La,Ua=nil,(Qa[0X008]);local na=#Ua;if na>0X00 then do La={};end;do for DI=0X1,na do local tI=Ua[DI];do if tI[0X01]~=0X0 then do La[DI-0X1]=ve[tI[0x02]];end;else La[DI-1]={S3,tI[0x2]};end;end;end;end;(A)(De,La);end;(S3)[0x02]=NC(La,V3,Qa);P3=P3+1;Ia=0X0;local Aa=(0x00003);if Aa~=0X0 then b3=Ia+Aa-1;end;local Ra,Ta=nil,nil;if Aa==1 then Ra,Ta=rC(S3[Ia]());else Ra,Ta=rC(S3[Ia](I(S3,Ia+1,b3)));end;if Ha~=1 then do if Ha==0 then Ra=Ra+Ia-1;do b3=Ra;end;else Ra=Ia+Ha-0x2;b3=Ra+1;end;end;local uK=0;do for W9=Ia,Ra do uK=uK+1;do S3[W9]=Ta[uK];end;end;end;else b3=Ia-1;end;local Va=(ve[0x0]);P3=P3+1;(S3)[2]=Va[1][Va[0x2]];local ua=(S3[0x2]);uY=Re[P3];P3=P3+1;Ia=2;(S3)[Ia+0X01]=ua;do(S3)[Ia]=ua[uY[5]];end;do P3=P3+0X1;end;Ia=2;(S3[Ia])(S3[Ia+0X1]);do b3=Ia-0x001;end;uY=Re[P3];do P3=P3+1;end;do S3[2]=V3[uY[0X0002]];end;do P3=P3+0X1;end;(S3)[3]=S3[0x0];P3=P3+0X01;do Ia=2;end;Aa=2;Ha=4;do if Aa==0x00 then else do b3=Ia+Aa-0X001;end;end;end;do Ra,Ta=nil;end;if Aa==0X0001 then Ra,Ta=rC(S3[Ia]());else Ra,Ta=rC(S3[Ia](I(S3,Ia+1,b3)));end;do if Ha==1 then do b3=Ia-0X001;end;else if Ha~=0X00 then Ra=Ia+Ha-2;b3=Ra+0X1;else Ra=Ra+Ia-0X001;do b3=Ra;end;end;local Tv=0X0000;do for eX=Ia,Ra do Tv=Tv+0X1;do(S3)[eX]=Ta[Tv];end;end;end;end;end;uY=Re[P3];do P3=P3+1;end;Ia=0X2;local ia=g(function(...)d();for J9,C9 in...do(d)(true,J9,C9);end;end);ia(S3[Ia],S3[Ia+1],S3[Ia+2]);b3=Ia;(S3)[Ia]=ia;P3=uY[6];end;else local qh=(uY[7]);local xh,Nh,th=S3[qh]();if not(xh)then else do S3[qh+1]=Nh;end;(S3)[qh+2]=th;P3=uY[6];end;end;end;end;else if VY>=18 then do if not(VY<21)then if not(VY<0X17)then if VY==24 then for DV=uY[7],uY[0x00006]do S3[DV]=nil;end;else local Sm=ve[0X0];(S3)[0X0]=Sm[1][Sm[0X2]];local Um=(0);uY=Re[P3];P3=P3+1;local Em=(S3[0]);S3[Um+1]=Em;S3[Um]=Em[uY[5]];do P3=P3+1;end;Um=0X0000;(S3)[Um]=S3[Um](S3[Um+0x001]);b3=Um;P3=P3+1;P3=P3+1;do uY=Re[P3];end;P3=P3+0X1;if not S3[0]then P3=uY[0X6];end;end;else if VY==0X16 then S3[0X0000]=V3[uY[0X2]];do P3=P3+0X1;end;do P3=P3+1;end;do P3=P3+1;end;b3=0;do S3[b3]=S3[b3]();end;do uY=Re[P3];end;do P3=P3+0x01;end;S3[1]=V3[uY[2]];P3=P3+1;(S3)[0]=S3[0X0]-S3[1];uY=Re[P3];P3=P3+1;if not(not(uY[2]<S3[0]))then else P3=uY[7];end;else do if S3[uY[0X6]]<S3[uY[1]]then P3=uY[7];end;end;end;end;else if not(VY<0X013)then if VY~=20 then do repeat local jN,BN=De,(S3);if not(#jN>0)then else local Su=({});for qO,AO in D,jN do do for Ht,It in D,AO do if not(It[0x1]==BN and It[2]>=0X0)then else local uI=It[2];do if not Su[uI]then Su[uI]={BN[uI]};end;end;(It)[0X01]=Su[uI];do It[0x02]=0X1;end;end;end;end;end;end;until true;end;do return;end;else(S3)[uY[0X7]]={I({},1,uY[0x6])};end;else(S3)[uY[7]]=S3[uY[0x6]]<S3[uY[0X1]];end;end;end;else if not(VY<0XF)then if not(VY>=0X0010)then S3[0x0]=V3[uY[0X2]];uY=Re[P3];P3=P3+0X1;do S3[0X0]=S3[0x0][uY[0X0005]];end;do P3=P3+0X1;end;P3=P3+1;do uY=Re[P3];end;P3=P3+0x1;if not(not S3[0X0])then else P3=uY[6];end;else if VY==0X11 then local V6=(uY[0X7]);local T6=(S3[uY[6]]);(S3)[V6+1]=T6;do(S3)[V6]=T6[uY[5]];end;else(S3)[uY[7]]=V3[uY[0x2]];end;end;else if not(VY<13)then if VY~=14 then(S3)[uY[0x007]]=S3[uY[6]]-S3[uY[1]];else(S3)[uY[7]]=S3[uY[0X00006]][uY[5]];end;else do if S3[uY[0X7]]then do P3=uY[0X6];end;end;end;end;end;end;end;end;end);if K3 then if g3 then if T3~=1 then do return S3[l3](I(S3,l3+0x1,b3));end;else return S3[l3]();end;elseif not(l3)then else return I(S3,l3,T3);end;else if f(g3)=="string"then if not(e(g3,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(e(g3,"^.-:%d+: "))then(b)(g3,0);else(b)("Luraph Script:"..(Ae[P3-1]or"\(\in\116\e\114n\097\l\)")..'\058\032'..r(g3),0X00000);end;else(b)(g3,0);end;end;end;else if me==0x22 then fe=function(...)local ak,Uk=0X0001,{};local lk=0x0;local Qk={[0X2]=Uk,[1]=ce};local hk=m();local Lk,sk=rC(...);Lk=Lk-0X001;local ek=(hk==F and Le or hk);for Rv=0,Lk do if not(he>Rv)then break;else(Uk)[Rv]=sk[Rv+1];end;end;if not ge then sk=nil;elseif xe then Uk[he]={n=Lk>=he and Lk-he+0X1 or 0X000,I(sk,he+0x0001,Lk+0X001)};end;if ek~=hk then(i)(fe,ek);end;local Zk,Vk,Dk,Mk=j(function()while true do local XW=(Re[ak]);local NW=XW[0X4];do ak=ak+1;end;if not(NW<0Xe)then if NW>=21 then if NW>=25 then if not(NW<0X00001b)then if NW~=0X01c then Uk[0]=ek[XW[2]];do ak=ak+0x1;end;lk=0X000;(Uk)[lk]=Uk[lk]();XW=Re[ak];ak=ak+0X1;do(Uk)[1]=ek[XW[0x2]];end;ak=ak+0X1;do(Uk)[0]=Uk[0X0]-Uk[1];end;XW=Re[ak];ak=ak+0X1;if XW[0x0002]<Uk[0X0]then ak=XW[0X007];end;else repeat local Wh,Rh=De,(Uk);do if#Wh>0X0 then local iz={};do for h8,B8 in D,Wh do for IU,BU in D,B8 do if BU[1]==Rh and BU[0X2]>=0X0 then local oJ=(BU[2]);do if not iz[oJ]then(iz)[oJ]={Rh[oJ]};end;end;do(BU)[0x00001]=iz[oJ];end;do BU[0X00002]=0x1;end;end;end;end;end;end;end;until true;do return;end;end;else if NW~=0X1a then do if Uk[XW[0X6]]<Uk[XW[1]]then ak=XW[0X7];end;end;else ak=XW[0X6];end;end;else do if not(NW>=23)then if NW~=0X000016 then local zT=(ve[0X0001]);Uk[0X1]=zT[1][zT[0X2]];ak=ak+1;ak=ak+1;XW=Re[ak];ak=ak+1;Uk[1]=Uk[1][XW[0X05]];ak=ak+0x0001;do ak=ak+1;end;ak=ak+1;Uk[0x2]=Uk[0];ak=ak+1;zT=ve[0x00];(Uk)[3]=zT[0X1][zT[2]];local uT=(0x001);ak=ak+1;ak=ak+1;ak=ak+1;Uk[uT](Uk[uT+0X1],Uk[uT+2]);lk=uT-1;do ak=ak+1;end;do ak=ak+0X00001;end;ak=ak+1;zT=ve[0X0];(Uk)[1]=zT[0x1][zT[0X2]];XW=Re[ak];ak=ak+0X1;uT=0X001;local iT=(Uk[1]);do(Uk)[uT+1]=iT;end;Uk[uT]=iT[XW[5]];ak=ak+0X1;uT=1;(Uk[uT])(Uk[uT+0X1]);lk=uT-0X1;do ak=ak+1;end;do ak=ak+0X1;end;XW=Re[ak];ak=ak+1;ak=XW[6];else Uk[XW[0x7]]=#Uk[XW[6]];end;else if NW==24 then if not(Uk[XW[0X7]])then else ak=XW[6];end;else Uk[0x0]=ek[XW[0X2]];ak=ak+1;lk=0;do(Uk)[lk]=Uk[lk]();end;ak=ak+1;ak=ak+0X1;do XW=Re[ak];end;ak=ak+1;if not(not(XW[0X002]<=Uk[0]))then else ak=XW[0X7];end;end;end;end;end;else do if NW>=0x11 then if not(NW>=0X13)then if NW==18 then local Ci=(ve[0]);Uk[0X00001]=Ci[1][Ci[2]];local ai=(0X1);XW=Re[ak];ak=ak+1;local Ei=Uk[0X1];do Uk[ai+0x1]=Ei;end;Uk[ai]=Ei[XW[0X00005]];ak=ak+1;do ai=0X00001;end;do(Uk)[ai]=Uk[ai](Uk[ai+1]);end;lk=ai;XW=Re[ak];do ak=ak+0X1;end;if not(not Uk[0x1])then else ak=XW[6];end;else end;else if NW~=20 then for Y2=XW[7],XW[6]do(Uk)[Y2]=nil;end;else Uk[0X0]=ek[XW[0X2]];XW=Re[ak];ak=ak+0X1;Uk[1]=XW[2];do ak=ak+1;end;local wu=(0X0);Uk[wu]=Uk[wu](Uk[wu+0X1]);lk=wu;ak=ak+1;do ak=ak+0x1;end;do XW=Re[ak];end;do ak=ak+1;end;if not Uk[0]then ak=XW[6];end;end;end;else do if not(NW<15)then if NW==0x0010 then(Uk)[0]=ek[XW[0X00002]];ak=ak+0X1;ak=ak+1;XW=Re[ak];ak=ak+0x0001;(Uk)[0x00]=Uk[0][XW[0X5]];XW=Re[ak];do ak=ak+0x0001;end;if not Uk[0X00000]then ak=XW[6];end;else do(Uk)[XW[0X7]]=XW[0X0002];end;end;else(Uk)[0X0]=ek[XW[0x00002]];ak=ak+0X00001;local Mi=(0);ak=ak+0X1;XW=Re[ak];ak=ak+1;local si=Uk[0x0];(Uk)[Mi+0X1]=si;do Uk[Mi]=si[XW[0X5]];end;XW=Re[ak];ak=ak+1;Uk[0X2]=XW[0X2];XW=Re[ak];ak=ak+0X1;Uk[0X03]=XW[2];ak=ak+1;Mi=0X0;lk=Mi+4-0X001;(Uk)[Mi]=Uk[Mi](I(Uk,Mi+0X01,lk));do lk=Mi;end;XW=Re[ak];ak=ak+0X00001;do if not(not Uk[0X00])then else do ak=XW[0X006];end;end;end;end;end;end;end;end;else do if not(NW<0X07)then do if not(NW>=0X0000A)then if NW<8 then(Uk)[0]=ek[XW[2]];local fY=0;XW=Re[ak];ak=ak+1;(Uk)[0X1]=XW[2];ak=ak+0X00001;Uk[fY]=Uk[fY](Uk[fY+0X1]);lk=fY;do XW=Re[ak];end;ak=ak+0X1;do if not Uk[0]then ak=XW[6];end;end;else if NW~=9 then(Uk)[0]=ek[XW[2]];do XW=Re[ak];end;local tL=0X0;do ak=ak+1;end;(Uk)[0X001]=XW[0X002];ak=ak+1;(Uk)[tL]=Uk[tL](Uk[tL+1]);lk=tL;ak=ak+0X0001;ak=ak+0x1;XW=Re[ak];ak=ak+0X1;if not(not Uk[0X0])then else ak=XW[6];end;else Uk[XW[0X07]]=O(Uk[XW[0x6]],Uk[XW[1]]);end;end;else if NW<0X00C then if NW~=0XB then(Qk)[XW[6]]=Uk[XW[7]];else Uk[0]=ek[XW[0X0002]];do ak=ak+0X01;end;do ak=ak+1;end;XW=Re[ak];ak=ak+1;(Uk)[0]=Uk[0x0][XW[0X005]];XW=Re[ak];do ak=ak+0X1;end;do if not(not Uk[0])then else ak=XW[0X006];end;end;end;else if NW==13 then do Uk[XW[0X7]]=ek[XW[2]];end;else if Uk[XW[0X006]]==Uk[XW[1]]then else ak=XW[0x7];end;end;end;end;end;else if not(NW<0X003)then do if NW>=5 then if NW==0X0006 then(Uk)[0]=ek[XW[0X0002]];ak=ak+0X1;local EL=0X0000;ak=ak+1;XW=Re[ak];ak=ak+0X0001;do Uk[0X1]=XW[2];end;ak=ak+0X1;Uk[EL]=Uk[EL](Uk[EL+0X0001]);local OL=ve[0X1];lk=EL;ak=ak+0X0001;ak=ak+0X1;do ak=ak+0X00001;end;Uk[1]=OL[0x1][OL[2]];do ak=ak+1;end;ak=ak+0X1;XW=Re[ak];ak=ak+0x1;(Uk)[0X01]=Uk[1][XW[0X5]];do ak=ak+0x001;end;Uk[2]=Uk[0];ak=ak+0x1;EL=1;Uk[EL]=Uk[EL](Uk[EL+1]);lk=EL;ak=ak+0X1;do ak=ak+0X1;end;XW=Re[ak];ak=ak+1;if not Uk[1]then ak=XW[0X6];end;else(Uk)[0]=ek[XW[0X2]];do ak=ak+0X1;end;ak=ak+0X1;local xB=(0);do XW=Re[ak];end;do ak=ak+0x1;end;Uk[0X001]=XW[0X02];do ak=ak+1;end;(Uk[xB])(Uk[xB+1]);lk=xB-1;ak=ak+0x00001;ak=ak+1;XW=Re[ak];ak=ak+1;ak=XW[0X006];end;else if NW~=4 then(Uk)[XW[7]]={I({},1,XW[6])};else local iI=(je[XW[0x0006]]);local xI=nil;local FI=(iI[0X8]);local BI=(#FI);if BI>0X0 then do xI={};end;for NN=1,BI do local FN=(FI[NN]);do if FN[0X1]~=0 then(xI)[NN-0X00001]=ve[FN[2]];else(xI)[NN-0X001]={Uk,FN[0x00002]};end;end;end;A(De,xI);end;(Uk)[XW[0X7]]=NC(xI,ek,iI);end;end;end;else if NW<1 then(Uk)[XW[7]]=T(Uk[XW[6]]);else if NW==2 then(Uk)[0X1]=ek[XW[0X2]];XW=Re[ak];ak=ak+1;Uk[1]=Uk[0x0001][XW[0x005]];ak=ak+1;ak=ak+1;XW=Re[ak];do ak=ak+1;end;if Uk[1]==XW[5]then else do ak=XW[7];end;end;else do Uk[0X0]=ek[XW[0x2]];end;ak=ak+0X01;ak=ak+0X1;do XW=Re[ak];end;ak=ak+0X0001;(Uk)[0X0]=Uk[0][XW[0X05]];ak=ak+1;ak=ak+1;XW=Re[ak];ak=ak+1;do if not Uk[0X0]then ak=XW[6];end;end;end;end;end;end;end;end;end;end);do if not(Zk)then if f(Vk)=='str\i\110g'then if e(Vk,'at\116\em\112t\032t\111\032\y\i\101l\d\ \097\c\114\os\115\ \met\097\m\e\116\ho\d\/\C\%\-\099a\l\l\ boun\100\097r\y')then do return coroutine.yield();end;end;if not(e(Vk,'^\046\-:\%\100+:\032'))then(b)(Vk,0X0);else b("Luraph Script:"..(Ae[ak-1]or"(internal)").."\058\ "..r(Vk),0X0);end;else b(Vk,0X00);end;else if Vk then if Mk==1 then do return Uk[Dk]();end;else return Uk[Dk](I(Uk,Dk+0X1,lk));end;elseif not(Dk)then else return I(Uk,Dk,Mk);end;end;end;end;else fe=function(...)local Bz=1;local kz={};local Xz,Cz={[1]=ce,[0X2]=kz},0X0;local gz=m();local Lz,hz=rC(...);do Lz=Lz-0X01;end;for kR=0X0,Lz do do if not(he>kR)then do break;end;else kz[kR]=hz[kR+1];end;end;end;local bz=(gz==F and Le or gz);do if not ge then hz=nil;elseif xe then(kz)[he]={n=Lz>=he and Lz-he+0X0001 or 0x0000,I(hz,he+1,Lz+0X1)};end;end;do if bz==gz then else(i)(fe,bz);end;end;local Fz,sz,Nz,Uz=j(function()while true do local Wa=Re[Bz];local Fa=Wa[4];Bz=Bz+1;if Fa<7 then if not(Fa>=3)then if Fa>=1 then if Fa~=2 then kz[Wa[0x007]]=Wa[0X2];else do for m0=Wa[7],Wa[0x0006]do(kz)[m0]=nil;end;end;end;else(kz)[Wa[0X7]]=L(kz[Wa[6]],kz[Wa[0X1]]);end;else if Fa<5 then if Fa~=0x00004 then local ar,rr=Wa[7],Wa[0x06];if rr==0 then else do Cz=ar+rr-0X1;end;end;local er,Tr,vr=Wa[0x00001],nil,(nil);if rr~=0X0001 then Tr,vr=rC(kz[ar](I(kz,ar+0X1,Cz)));else Tr,vr=rC(kz[ar]());end;if er~=0X1 then if er~=0X0 then Tr=ar+er-0x0002;Cz=Tr+0X1;else Tr=Tr+ar-0X00001;Cz=Tr;end;local Sm=0X0;do for wU=ar,Tr do Sm=Sm+0X1;do(kz)[wU]=vr[Sm];end;end;end;else Cz=ar-1;end;else Bz=Wa[0X6];end;else if Fa==0x006 then(kz)[Wa[0X0007]]={I({},1,Wa[0X6])};else local s7=(Wa[0X7]);local L7,o7=kz[s7]();if not(L7)then else Bz=Wa[0X6];kz[s7+3]=o7;end;end;end;end;else if Fa<0xA then if not(Fa<0X8)then if Fa~=0X0009 then kz[0X0]=bz[Wa[0x00002]];local Zb=0;Wa=Re[Bz];do Bz=Bz+1;end;local Vb=(kz[0]);kz[Zb+1]=Vb;do(kz)[Zb]=Vb[Wa[0X5]];end;Wa=Re[Bz];Bz=Bz+1;kz[2]=Wa[2];Bz=Bz+1;Zb=0;kz[Zb]=kz[Zb](kz[Zb+1],kz[Zb+2]);Cz=Zb;Bz=Bz+1;Bz=Bz+1;do Wa=Re[Bz];end;Bz=Bz+1;(kz)[1]=bz[Wa[0X2]];Wa=Re[Bz];Bz=Bz+0X1;(kz)[0X001]=kz[0X1][Wa[5]];Wa=Re[Bz];local Cb=(je[Wa[6]]);Bz=Bz+0X1;local Sb=(Cb[8]);local fb=nil;local Db=(#Sb);if not(Db>0X0)then else fb={};for M8=0X001,Db do local r8=(Sb[M8]);if r8[0X01]~=0X000 then fb[M8-1]=ve[r8[0X0002]];else(fb)[M8-0X1]={kz,r8[2]};end;end;A(De,fb);end;do kz[0X2]=NC(fb,bz,Cb);end;Bz=Bz+1;Zb=0X1;(kz[Zb])(kz[Zb+1]);Cz=Zb-1;do Bz=Bz+1;end;Bz=Bz+1;Bz=Bz+1;do repeat local EI,lI=De,(kz);do if#EI>0x00000 then local Wg={};for Pk,jk in D,EI do do for c8,d8 in D,jk do if d8[0X1]==lI and d8[0x2]>=0X000 then local bG=d8[2];if not(not Wg[bG])then else do(Wg)[bG]={lI[bG]};end;end;(d8)[1]=Wg[bG];d8[2]=0X1;end;end;end;end;end;end;until true;end;return;else if kz[Wa[0x00006]]<kz[Wa[1]]then Bz=Wa[0X7];end;end;else if kz[Wa[0X7]]then Bz=Wa[0x00006];end;end;else if not(Fa<12)then do if Fa~=0Xd then kz[Wa[0X7]]=G(kz[Wa[6]],kz[Wa[1]]);else end;end;else if Fa~=0XB then kz[Wa[0x00007]]=bz[Wa[0x002]];else local aW=(je[Wa[6]]);local QW=(aW[0X008]);local ZW,DW=#QW,(nil);if not(ZW>0X0000)then else do DW={};end;for x5=0x01,ZW do local V5=(QW[x5]);do if V5[1]==0 then DW[x5-0X01]={kz,V5[2]};else(DW)[x5-1]=ve[V5[2]];end;end;end;A(De,DW);end;kz[Wa[0X0007]]=NC(DW,bz,aW);end;end;end;end;end;end);do if Fz then if sz then if Uz==1 then return kz[Nz]();else return kz[Nz](I(kz,Nz+0X1,Cz));end;elseif not(Nz)then else do return I(kz,Nz,Uz);end;end;else if f(sz)~='\st\114i\110\g'then(b)(sz,0);else if not(e(sz,"\097\116t\101mpt\ \116\o \yi\e\l\d\032a\099\114\o\ss \me\116a\m\et\104\o\d\/\C%\-\ca\ll\ bo\117n\100\097\114\121"))then else return coroutine.yield();end;if e(sz,"^.-:%d+: ")then(b)("\076\117\114\097\p\h\ \083c\114\i\p\116\:"..(Ae[Bz-1]or"(internal)")..': '..r(sz),0);else(b)(sz,0);end;end;end;end;end;end;end;else do if me>=30 then do if me==31 then do fe=function(...)local el,kl=0x0001,({});local tl=m();local cl,Kl=rC(...);local Nl=({[1]=ce,[0X2]=kl});do cl=cl-0X1;end;do for HD=0X0,cl do do if he>HD then do(kl)[HD]=Kl[HD+1];end;else break;end;end;end;end;local Xl=((tl==F and Le or tl));if not ge then Kl=nil;elseif xe then do(kl)[he]={n=cl>=he and cl-he+0x01 or 0,I(Kl,he+0X1,cl+1)};end;end;local yl=0X00000;do if Xl==tl then else(i)(fe,Xl);end;end;local Zl,wl,Jl,sl=j(function()while true do local sH=Re[el];local ZH=sH[0x04];do el=el+0x1;end;do if ZH>=0X1c then if not(ZH>=42)then if not(ZH>=35)then if not(ZH>=31)then if ZH>=29 then do if ZH~=30 then kl[0x0005]=Xl[sH[2]];do sH=Re[el];end;el=el+1;(kl)[0x5]=kl[0X00005][sH[5]];do sH=Re[el];end;el=el+1;(kl)[0X5]=kl[5][sH[0x5]];do sH=Re[el];end;el=el+0X1;do if not(sH[2]<=kl[5])then el=sH[7];end;end;else(kl)[0x6]=Xl[sH[2]];sH=Re[el];el=el+0X001;(kl)[6]=kl[6][sH[0x05]];el=el+1;el=el+0x01;do sH=Re[el];end;do el=el+1;end;if not(not kl[6])then else el=sH[0X6];end;end;end;else(kl)[0X3]=Xl[sH[2]];sH=Re[el];el=el+0x0001;do(kl)[3]=kl[3][sH[0X0005]];end;sH=Re[el];el=el+0X00001;if kl[3]then el=sH[0X6];end;end;else if ZH>=0X21 then if ZH~=34 then do kl[3]=Xl[sH[0X2]];end;sH=Re[el];el=el+0X00001;(kl)[0x3]=kl[3][sH[0X5]];do el=el+0X1;end;el=el+0X1;sH=Re[el];el=el+0X1;if not kl[0X003]then el=sH[0x06];end;else if kl[sH[0X6]]==sH[0X5]then else do el=sH[0X007];end;end;end;else if ZH~=32 then for KA=sH[0X7],sH[0X6]do kl[KA]=nil;end;else kl[0X4]=Xl[sH[0X2]];sH=Re[el];el=el+1;kl[0x0004]=kl[4][sH[5]];sH=Re[el];el=el+1;kl[4]=kl[4][sH[0x5]];do el=el+1;end;do el=el+0X1;end;sH=Re[el];do el=el+1;end;if not(not(sH[2]<kl[4]))then else el=sH[7];end;end;end;end;else if not(ZH>=38)then do if ZH>=0X024 then if ZH~=0X025 then(kl)[3]=Xl[sH[2]];el=el+0X00001;do el=el+0X1;end;do sH=Re[el];end;do el=el+1;end;do if not kl[0x03]then el=sH[0X06];end;end;else local uC=sH[7];local KC,TC=kl[uC]();if KC then el=sH[0x06];kl[uC+3]=TC;end;end;else local zh=sH[0x06];local Sh=(kl[zh]);do for oX=zh+1,sH[0x1]do Sh=Sh..kl[oX];end;end;(kl)[sH[7]]=Sh;end;end;else if ZH<0X28 then if ZH~=39 then kl[0X03]=Xl[sH[0x2]];el=el+0X1;el=el+1;sH=Re[el];el=el+1;(kl)[4]=sH[0X2];el=el+0X1;do(kl)[5]=true;end;do el=el+1;end;local JB=(3);kl[JB]=kl[JB](kl[JB+1],kl[JB+0x2]);yl=JB;do el=el+1;end;(kl)[0X2]=kl[3];sH=Re[el];el=el+0X1;kl[3]=kl[2]==sH[0X5];sH=Re[el];el=el+1;do if not(kl[0x3])then else el=sH[6];end;end;else do(kl)[3]=Xl[sH[2]];end;el=el+0x001;el=el+0X1;sH=Re[el];local o8=je[sH[0X0006]];el=el+1;local I8=o8[0x0008];local G8=(nil);local A8=#I8;if not(A8>0X0000)then else G8={};for oz=1,A8 do local dz=I8[oz];if dz[0x1]~=0X00000 then(G8)[oz-1]=ve[dz[0X002]];else(G8)[oz-1]={kl,dz[2]};end;end;(A)(De,G8);end;local p8=0X3;kl[0X004]=NC(G8,Xl,o8);el=el+1;(kl[p8])(kl[p8+1]);yl=p8-1;do el=el+1;end;el=el+1;sH=Re[el];el=el+0X1;el=sH[0X0006];end;else if ZH==41 then(kl)[0X0004]=Xl[sH[2]];local ac=4;el=el+1;el=el+0X1;sH=Re[el];el=el+1;(kl)[0X5]=sH[0x2];el=el+1;kl[ac](kl[ac+1]);yl=ac-0x1;sH=Re[el];el=el+1;el=sH[6];else do kl[0x003]=Xl[sH[0X2]];end;el=el+1;el=el+0X01;sH=Re[el];do el=el+0X1;end;do if not(kl[3])then else el=sH[6];end;end;end;end;end;end;else if ZH<0X31 then if ZH>=0X2d then if ZH<47 then if ZH~=46 then kl[0X00003]=Xl[sH[0X2]];sH=Re[el];el=el+0X1;do(kl)[3]=kl[0X3][sH[5]];end;sH=Re[el];el=el+0X01;if not(kl[3])then else el=sH[0x06];end;else(kl)[0x000]=Xl[sH[0X2]];local bk=3;sH=Re[el];el=el+1;(kl)[1]=Xl[sH[2]];el=el+0X1;el=el+0X001;sH=Re[el];el=el+0X1;(kl)[0X0002]=sH[2];sH=Re[el];el=el+1;(kl)[0X3]=Xl[sH[0X2]];el=el+1;el=el+0X1;sH=Re[el];el=el+1;(kl)[3]=kl[0x0003][sH[0x05]];local jk=(0X00);el=el+0X1;local rk=0x4;do if rk==0 then else yl=jk+rk-1;end;end;local zk,Gk=nil,nil;if rk~=1 then zk,Gk=rC(kl[jk](I(kl,jk+0X1,yl)));else zk,Gk=rC(kl[jk]());end;if bk==1 then do yl=jk-1;end;else do if bk~=0 then do zk=jk+bk-2;end;yl=zk+1;else zk=zk+jk-1;yl=zk;end;end;local K7=(0);for Wc=jk,zk do K7=K7+0X1;(kl)[Wc]=Gk[K7];end;end;el=el+1;do el=el+0X1;end;sH=Re[el];el=el+0X1;do if kl[1]==sH[0X5]then el=sH[0x07];end;end;end;else if ZH==48 then(kl)[sH[7]]=sH[0x0002];else(kl)[3]=Xl[sH[2]];el=el+1;el=el+0x01;do sH=Re[el];end;el=el+1;kl[3]=kl[3][sH[5]];sH=Re[el];el=el+1;if kl[3]then do el=sH[6];end;end;end;end;else if not(ZH>=0X2b)then kl[0x2]=Xl[sH[0x2]];el=el+0X1;el=el+1;do el=el+1;end;yl=0X2;kl[yl]();do yl=yl-0X00001;end;do sH=Re[el];end;el=el+0X1;do(kl)[0x2]=Xl[sH[2]];end;sH=Re[el];el=el+0X01;kl[2][sH[0X2]]=sH[0X05];sH=Re[el];el=el+0X1;kl[0X2]=Xl[sH[2]];do sH=Re[el];end;el=el+1;(kl[2])[sH[2]]=sH[5];el=el+0X0001;repeat local cu,ou=De,kl;if#cu>0X0 then local wf=({});for lw,zw in D,cu do for wd,Zd in D,zw do if Zd[0X1]==ou and Zd[2]>=0X000 then local HT=(Zd[0X2]);do if not(not wf[HT])then else(wf)[HT]={ou[HT]};end;end;Zd[0X00001]=wf[HT];do(Zd)[0X2]=1;end;end;end;end;end;until true;return;else if ZH==44 then Xl[sH[2]]=kl[0x3];local d0,u0=0X3,ve[0X0];el=el+0X1;kl[3]=u0[1][u0[0X2]];sH=Re[el];do el=el+0X1;end;local U0=(kl[3]);do(kl)[d0+1]=U0;end;kl[d0]=U0[sH[5]];el=el+0x1;d0=0X0003;kl[d0]=kl[d0](kl[d0+1]);yl=d0;do sH=Re[el];end;el=el+0X0001;do if not kl[0X3]then do el=sH[6];end;end;end;else do kl[3]=Xl[sH[2]];end;el=el+1;el=el+0X001;sH=Re[el];el=el+0X001;(kl)[0X3]=kl[0X3][sH[5]];el=el+1;do el=el+1;end;sH=Re[el];el=el+0X1;if not kl[0X0003]then el=sH[6];end;end;end;end;else if not(ZH>=52)then if not(ZH>=0X0032)then do kl[3]=Xl[sH[0X0002]];end;sH=Re[el];el=el+1;(kl)[0x03]=kl[0X3][sH[5]];sH=Re[el];el=el+0x001;if not(kl[0x003])then else do el=sH[0X6];end;end;else do if ZH==0X33 then(kl)[0X3]=Xl[sH[0X02]];do el=el+1;end;el=el+0X1;sH=Re[el];el=el+1;if not(kl[0X3])then else el=sH[6];end;else(kl)[0X4]=Xl[sH[0X2]];do el=el+1;end;el=el+0X1;local cv=0X4;do sH=Re[el];end;el=el+0X1;(kl)[0X5]=sH[2];el=el+0X001;kl[cv](kl[cv+1]);yl=cv-1;sH=Re[el];el=el+1;el=sH[0X6];end;end;end;else if not(ZH>=54)then if ZH==0X35 then do(kl)[4]=Xl[sH[0x2]];end;el=el+1;el=el+0X1;sH=Re[el];el=el+0x00001;(kl)[0X005]=sH[0X2];el=el+0x01;local tR=4;kl[tR]=kl[tR](kl[tR+1]);yl=tR;el=el+0X1;do el=el+1;end;sH=Re[el];el=el+1;if not kl[0X4]then el=sH[6];end;else local LD=(sH[0X00007]);local SD,oD=kl[LD],(sH[1]-1)*50;for CV=1,sH[6]do SD[oD+CV]=kl[LD+CV];end;end;else if ZH~=0X000037 then do(kl)[4]=Xl[sH[0X2]];end;el=el+1;el=el+1;sH=Re[el];do el=el+1;end;do kl[4]=kl[0X00004][sH[0X5]];end;el=el+1;do el=el+0X00001;end;sH=Re[el];el=el+1;kl[0X4]=kl[4][sH[0X5]];el=el+1;do el=el+1;end;do sH=Re[el];end;el=el+1;if sH[2]<kl[4]then el=sH[0x07];end;else if not(kl[sH[7]])then else el=sH[6];end;end;end;end;end;end;else do if not(ZH>=14)then if ZH>=7 then if ZH>=10 then if not(ZH>=12)then if ZH~=0XB then local kZ,fZ=je[sH[0X006]],(nil);local jZ=kZ[0x8];local qZ=(#jZ);if not(qZ>0X0)then else fZ={};do for rD=1,qZ do local cD=(jZ[rD]);if cD[0X1]==0X0 then fZ[rD-0x00001]={kl,cD[0x2]};else(fZ)[rD-0X1]=ve[cD[0x2]];end;end;end;(A)(De,fZ);end;(kl)[sH[7]]=NC(fZ,Xl,kZ);else kl[5]=Xl[sH[0x2]];do el=el+1;end;el=el+0X0001;sH=Re[el];el=el+0X00001;do(kl)[0x5]=kl[5][sH[5]];end;sH=Re[el];el=el+0X1;kl[5]=kl[5][sH[0X0005]];sH=Re[el];el=el+1;do if not(not(sH[0X2]<=kl[0X5]))then else el=sH[0X7];end;end;end;else if ZH==13 then do(kl)[2]=kl[1];end;sH=Re[el];do el=el+1;end;kl[0X3]=kl[0X01]==sH[0X005];do sH=Re[el];end;do el=el+1;end;if not(kl[0x3])then else el=sH[6];end;else el=sH[0X6];end;end;else if not(ZH>=0X8)then kl[sH[0X07]]={I({},0X01,sH[6])};else do if ZH~=9 then kl[sH[7]]=Xl[sH[2]];else Xl[sH[2]]=kl[0X3];do sH=Re[el];end;el=el+1;(kl)[0X00003]=Xl[sH[0X00002]];sH=Re[el];el=el+1;if not(kl[3])then else do el=sH[0X6];end;end;end;end;end;end;else if not(ZH>=0X3)then if not(ZH>=0X01)then kl[0X3]=Xl[sH[2]];sH=Re[el];local iq=(0x3);el=el+0X1;kl[0X00004]=sH[0X2];el=el+1;(kl)[iq]=kl[iq](kl[iq+0x1]);yl=iq;el=el+0X01;el=el+0X1;sH=Re[el];el=el+0X1;if not kl[3]then el=sH[6];end;else if ZH==0X2 then do kl[0X5]=Xl[sH[2]];end;el=el+0X1;el=el+0X00001;sH=Re[el];el=el+0X001;do(kl)[5]=kl[5][sH[0x5]];end;el=el+0X0001;do el=el+0X01;end;sH=Re[el];el=el+0X1;if not(not kl[0x5])then else el=sH[6];end;else kl[sH[0X07]]=kl[sH[0X6]]==sH[5];end;end;else if ZH<0X5 then do if ZH~=0X4 then else(kl)[0x3]=Xl[sH[2]];sH=Re[el];el=el+0x1;kl[0x0003]=kl[0X3][sH[5]];sH=Re[el];el=el+1;do if kl[3]then el=sH[6];end;end;end;end;else do if ZH==6 then kl[0X3]=Xl[sH[2]];sH=Re[el];el=el+0X01;kl[0x003]=kl[0x3][sH[0x5]];sH=Re[el];el=el+0X1;if not(kl[0X00003])then else el=sH[0X00006];end;else local Tu=ve[1];(kl)[4]=Tu[0x001][Tu[2]];el=el+0X1;el=el+1;sH=Re[el];do el=el+1;end;do kl[4]=kl[4][sH[5]];end;local Uu=(0X004);el=el+0x1;do(kl)[5]=kl[3];end;el=el+1;kl[Uu]=kl[Uu](kl[Uu+0X001]);yl=Uu;do el=el+0X001;end;el=el+1;sH=Re[el];do el=el+0x1;end;do if not kl[4]then el=sH[6];end;end;end;end;end;end;end;else do if ZH>=0X15 then do if ZH>=0X018 then if ZH<0X1a then do if ZH==0X000019 then local pX=ve[1];kl[4]=pX[1][pX[0X2]];sH=Re[el];el=el+0X1;local SX=0X4;(kl)[4]=kl[4][sH[0X005]];el=el+1;kl[0x5]=kl[3];el=el+0X1;pX=ve[0];kl[0x00006]=pX[1][pX[2]];do sH=Re[el];end;local RX=(je[sH[0X0006]]);el=el+0X1;local ZX,rX=RX[8],nil;local cX=(#ZX);if not(cX>0)then else rX={};do for gg=0X1,cX do local Cg=(ZX[gg]);if Cg[0X0001]~=0 then rX[gg-0x1]=ve[Cg[2]];else rX[gg-0X0001]={kl,Cg[0X0002]};end;end;end;A(De,rX);end;(kl)[7]=NC(rX,Xl,RX);el=el+1;yl=SX+0X04-0X001;kl[SX](I(kl,SX+0X1,yl));yl=SX-1;do el=el+0X1;end;el=el+1;do el=el+1;end;pX=ve[0];kl[0X4]=pX[0X01][pX[0X2]];do sH=Re[el];end;do el=el+1;end;do SX=0X4;end;local zX=kl[4];kl[SX+0X0001]=zX;do(kl)[SX]=zX[sH[0X5]];end;el=el+0x001;do SX=4;end;(kl[SX])(kl[SX+1]);yl=SX-1;sH=Re[el];el=el+0X1;el=sH[0x6];else do kl[sH[0x0007]]=kl[sH[6]]>kl[sH[1]];end;end;end;else do if ZH==0X01B then if not(not kl[sH[0X7]])then else el=sH[6];end;else kl[0X3]=Xl[sH[2]];el=el+0X1;el=el+1;sH=Re[el];el=el+0X001;if not(not kl[3])then else el=sH[6];end;end;end;end;else if not(ZH>=0X016)then kl[0x3]=Xl[sH[0x02]];el=el+1;el=el+1;do sH=Re[el];end;el=el+1;(kl)[3]=kl[3][sH[0x5]];do el=el+0x1;end;el=el+1;sH=Re[el];el=el+1;if not kl[0X3]then el=sH[0X006];end;else if ZH~=23 then do repeat local WW,BW=De,kl;if not(#WW>0X0)then else local Q1=({});for BS,dS in D,WW do do for ns,fs in D,dS do do if fs[0X1]==BW and fs[2]>=0 then local Fc=fs[2];if not Q1[Fc]then(Q1)[Fc]={BW[Fc]};end;do fs[1]=Q1[Fc];end;(fs)[0X2]=0X001;end;end;end;end;end;end;until true;end;do return;end;else kl[0X6]=Xl[sH[2]];sH=Re[el];el=el+0x1;kl[6]=kl[6][sH[0x5]];sH=Re[el];el=el+0X1;if kl[0X06]then do el=sH[6];end;end;end;end;end;end;else if ZH>=0x11 then if ZH>=0x013 then if ZH~=0X000014 then do kl[3]=Xl[sH[2]];end;el=el+0X1;el=el+1;sH=Re[el];el=el+0X00001;kl[3]=kl[3][sH[0X5]];do sH=Re[el];end;do el=el+1;end;if not(not kl[3])then else el=sH[6];end;else(kl)[4]=Xl[sH[0X02]];el=el+1;do el=el+0x001;end;sH=Re[el];el=el+1;local LV=(0x4);(kl)[0X5]=sH[0X2];el=el+1;kl[6]=true;el=el+0X1;(kl)[LV]=kl[LV](kl[LV+0X1],kl[LV+2]);do yl=LV;end;el=el+0x1;el=el+1;el=el+0x1;(kl)[0X002]=kl[4];sH=Re[el];el=el+0x1;el=sH[6];end;else if ZH==0x12 then do kl[sH[7]]=true;end;else(kl)[3]=Xl[sH[2]];do el=el+0x1;end;el=el+0X1;do sH=Re[el];end;do el=el+0X1;end;do if not kl[3]then el=sH[0X6];end;end;end;end;else if ZH<0X000F then local CL=(ve[0]);(kl)[3]=CL[1][CL[2]];el=el+1;el=el+0x1;local LL=3;sH=Re[el];do el=el+1;end;local jL=(kl[3]);(kl)[LL+0X1]=jL;(kl)[LL]=jL[sH[0X5]];do el=el+0x1;end;LL=3;(kl[LL])(kl[LL+0x1]);yl=LL-0X1;sH=Re[el];do el=el+1;end;do kl[0x3]=Xl[sH[2]];end;sH=Re[el];do el=el+0X01;end;kl[4]=sH[2];do el=el+1;end;do LL=0X03;end;kl[LL]=kl[LL](kl[LL+1]);do yl=LL;end;do el=el+0X1;end;el=el+0X1;sH=Re[el];el=el+1;do(kl)[4]=Xl[sH[0X2]];end;do el=el+0x1;end;el=el+0x00001;do sH=Re[el];end;el=el+0X1;(kl)[0X4]=kl[4][sH[5]];el=el+0X1;do el=el+1;end;sH=Re[el];do el=el+1;end;if kl[0X4]then el=sH[6];end;else if ZH==16 then if kl[sH[6]]~=kl[sH[0X1]]then do el=sH[0x7];end;end;else do kl[3]=Xl[sH[2]];end;do el=el+0x1;end;el=el+1;sH=Re[el];el=el+0X1;kl[0X3]=kl[3][sH[5]];do el=el+0X1;end;el=el+0X1;sH=Re[el];el=el+0X00001;if kl[3]then el=sH[0X6];end;end;end;end;end;end;end;end;end;end;end;end);if Zl then do if wl then do if sl==1 then do return kl[Jl]();end;else return kl[Jl](I(kl,Jl+1,yl));end;end;elseif Jl then do return I(kl,Jl,sl);end;end;end;else if f(wl)~='\str\i\110\g'then b(wl,0);else if not(e(wl,'a\116\116\e\109\112t\032\116o\ \y\105e\l\d\032\097\c\114\os\s\032\me\116am\et\h\o\d\/C\%\-\099\097\l\l\032b\o\117\110\100a\114\y'))then else return coroutine.yield();end;if not(e(wl,"^\046\-\:\037d+:\032"))then b(wl,0);else(b)("Luraph Script:"..(Ae[el-1]or"\(\int\e\114na\l\041")..": "..r(wl),0);end;end;end;end;end;else fe=function(...)local ZA,TA=0X1,({});local uA={[0X2]=TA,[1]=ce};local tA=m();local lA=((tA==F and Le or tA));local sA=(0x0);local HA,kA=rC(...);HA=HA-0X00001;for HV=0,HA do do if he>HV then TA[HV]=kA[HV+0X0001];else break;end;end;end;if not ge then kA=nil;elseif xe then do(TA)[he]={n=HA>=he and HA-he+0x0001 or 0x0,I(kA,he+0X1,HA+1)};end;end;if lA==tA then else(i)(fe,lA);end;local IA,YA,pA,nA=j(function()while true do local uF=(Re[ZA]);local XF=(uF[0x4]);ZA=ZA+1;if XF>=0X7 then if XF>=0x000A then if XF<12 then if XF~=0Xb then TA[uF[7]]=uF[2];else TA[uF[7]]=uF[2];end;else if XF==13 then TA[uF[0X7]]=lA[uF[2]];else(TA)[uF[0X7]]={I({},1,uF[0X0006])};end;end;else if not(XF>=8)then else do if XF~=0X9 then local tm=(uF[7]);local Fm,Zm=TA[tm]();if not(Fm)then else ZA=uF[0x6];do TA[tm+3]=Zm;end;end;else repeat local Cv,Bv=De,(TA);if not(#Cv>0x0)then else local jX={};for wq,Gq in D,Cv do for xu,Pu in D,Gq do if Pu[1]==Bv and Pu[2]>=0 then local nX=Pu[0X2];do if not(not jX[nX])then else jX[nX]={Bv[nX]};end;end;Pu[0x1]=jX[nX];do(Pu)[0x2]=0X1;end;end;end;end;end;until true;do return false,uF[0X7],sA;end;end;end;end;end;else if XF<0X3 then if XF>=0x001 then do if XF~=2 then local HG,lG=je[uF[6]],nil;local eG=(HG[8]);local iG=#eG;do if not(iG>0X0)then else do lG={};end;do for w2=0X1,iG do local X2=eG[w2];if X2[1]~=0X0 then do(lG)[w2-1]=ve[X2[2]];end;else lG[w2-0X00001]={TA,X2[0x2]};end;end;end;A(De,lG);end;end;(TA)[uF[0X7]]=NC(lG,lA,HG);else local g7=(ve[0]);TA[0]=g7[0X1][g7[2]];ZA=ZA+1;ZA=ZA+0x0001;local v7=(0X00000);uF=Re[ZA];do ZA=ZA+1;end;do(TA)[1]=uF[0X2];end;ZA=ZA+0X1;repeat local pI,OI=De,TA;do if not(#pI>0)then else local H_={};for Ii,ni in D,pI do do for AQ,CQ in D,ni do if CQ[1]==OI and CQ[0X2]>=0 then local lj=CQ[0X2];if not(not H_[lj])then else H_[lj]={OI[lj]};end;do(CQ)[0X01]=H_[lj];end;CQ[2]=1;end;end;end;end;end;end;until true;sA=v7+0X1;return true,v7,0X02;end;end;else(TA)[uF[0X7]]=TA[uF[6]]<=TA[uF[1]];end;else if XF<5 then if XF==4 then do TA[uF[0X7]]=TA[uF[6]][TA[uF[0X0001]]];end;else do repeat local la,Xa=De,TA;do if not(#la>0)then else local yP={};for Pc,Xc in D,la do do for fl,ml in D,Xc do if not(ml[0X1]==Xa and ml[0x0002]>=0X0)then else local uc=ml[0X2];do if not yP[uc]then do(yP)[uc]={Xa[uc]};end;end;end;ml[0X01]=yP[uc];ml[0x02]=1;end;end;end;end;end;end;until true;end;return;end;else if XF~=6 then ZA=uF[0X6];else local DG=(uF[7]);do for Pf=DG,DG+(uF[6]-1)do(TA)[Pf]=kA[he+(Pf-DG)+1];end;end;end;end;end;end;end;end);do if IA then do if YA then if nA==1 then return TA[pA]();else return TA[pA](I(TA,pA+0X00001,sA));end;elseif not(pA)then else do return I(TA,pA,nA);end;end;end;else if f(YA)~="string"then b(YA,0);else if e(YA,'\097t\116\101m\112\116\ \116\o \121\iel\d\ a\cr\o\115\s\ \109\eta\109e\116h\o\100\047\067\037-\ca\l\l\ b\111\117ndar\y')then return coroutine.yield();end;if e(YA,"^.-:%d+: ")then b("Luraph Script:"..(Ae[ZA-0X1]or"(internal)").."\: "..r(YA),0x0);else(b)(YA,0);end;end;end;end;end;end;end;else fe=function(...)local qj=({});local Fj=(1);local rj=(m());local pj,mj=rC(...);local Nj=((rj==F and Le or rj));local lj=({[0X2]=qj,[1]=ce});pj=pj-1;for iS=0X0,pj do if not(he>iS)then break;else qj[iS]=mj[iS+1];end;end;local wj=0x0;if not ge then mj=nil;elseif xe then do qj[he]={n=pj>=he and pj-he+0x001 or 0X0,I(mj,he+0X001,pj+1)};end;end;if Nj==rj then else(i)(fe,Nj);end;local yj,ij,Wj,Bj=j(function()while true do local GR=(Re[Fj]);local ER=(GR[4]);do Fj=Fj+1;end;if not(ER<6)then if not(ER>=9)then if not(ER<0X7)then if ER~=0X8 then local ds=je[GR[6]];local Gs=ds[0X0008];local Bs,Ks=#Gs,(nil);if Bs>0X0 then Ks={};for hg=0X1,Bs do local vg=Gs[hg];if vg[1]==0X000 then(Ks)[hg-1]={qj,vg[2]};else do Ks[hg-1]=ve[vg[2]];end;end;end;A(De,Ks);end;do(qj)[GR[7]]=NC(Ks,Nj,ds);end;else for iN=GR[7],GR[0X6]do do qj[iN]=nil;end;end;end;else Fj=GR[0X6];end;else do if not(ER<0XB)then if ER~=0xC then qj[GR[0X7]]={I({},1,GR[0x6])};else local gP,fP=GR[0x0007],(qj[GR[0X6]]);(qj)[gP+0X1]=fP;(qj)[gP]=fP[GR[0X0005]];end;else if ER~=0X0000a then qj[GR[0X0007]]=qj[GR[0x06]]>qj[GR[1]];else qj[GR[7]]=qj[GR[6]]+qj[GR[1]];end;end;end;end;else do if ER>=3 then if ER<0X04 then local Iu=(ve[0X1]);qj[0]=Iu[0X1][Iu[2]];Fj=Fj+0X00001;wj=0X0;(qj)[wj]=qj[wj]();do Fj=Fj+0X001;end;Fj=Fj+1;Fj=Fj+1;do Iu=ve[0X0];end;Iu[0X1][Iu[0X2]]=qj[0];do Fj=Fj+0X1;end;repeat local VR,ZR=De,(qj);if not(#VR>0X0)then else local Y9=({});for Um,Pm in D,VR do for VH,jH in D,Pm do if jH[0X01]==ZR and jH[0X2]>=0 then local fK=jH[0X2];if not(not Y9[fK])then else(Y9)[fK]={ZR[fK]};end;jH[0X1]=Y9[fK];jH[0x002]=0x1;end;end;end;end;until true;return;else if ER~=0X005 then qj[GR[0x7]]=qj[GR[6]]==qj[GR[1]];else do(qj)[GR[0X7]]=GR[0x02];end;end;end;else do if not(ER>=0X1)then(qj)[GR[7]]=GR[0X2];else if ER~=0x002 then(qj)[GR[0X7]]=Nj[GR[2]];else end;end;end;end;end;end;end;end);if not(yj)then if f(ij)~="\st\114\i\110\103"then(b)(ij,0);else if not(e(ij,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(e(ij,"^.-:%d+: "))then(b)(ij,0);else b('\076u\114ap\h\ S\cri\112\116\058'..(Ae[Fj-0x01]or"(internal)")..'\: '..r(ij),0X00);end;end;else if ij then if Bj~=0X001 then return qj[Wj](I(qj,Wj+1,wj));else return qj[Wj]();end;elseif not(Wj)then else return I(qj,Wj,Bj);end;end;end;end;end;end;end;else if me>=0X00001a then if not(me>=27)then do fe=function(...)local Ed,kd=0X1,{};local zd=m();local od={[0X2]=kd,[1]=ce};local sd=((zd==F and Le or zd));local Yd,Gd=rC(...);Yd=Yd-0x1;for kn=0X000,Yd do do if not(he>kn)then break;else kd[kn]=Gd[kn+1];end;end;end;local hd=(0);do if not ge then do Gd=nil;end;elseif xe then kd[he]={n=Yd>=he and Yd-he+0X1 or 0,I(Gd,he+0x1,Yd+0x001)};end;end;do if sd==zd then else(i)(fe,sd);end;end;do while true do local wE=(Re[Ed]);do Ed=Ed+1;end;local mE=(wE[4]);return(function(i,o,...)local d,e=pcall(function(...)local O={...};local a=network:Send("CommF_",...);if O[1]=="requestEntrance"then CollectionService:AddTag(Client,"Teleporting");task.delay(3,function()CollectionService:RemoveTag(Client,"Teleporting");end);wait(.1);end;return a;end,...);return d and e;end)(kd,ve,...);end;end;end;end;else if me~=28 then do fe=function(...)local jP,EP=0X1,0;local mP=({});local WP=(m());local LP={[1]=ce,[0X2]=mP};local IP=((WP==F and Le or WP));local rP,bP=rC(...);rP=rP-1;for tS=0X0,rP do if not(he>tS)then break;else mP[tS]=bP[tS+1];end;end;do if not ge then bP=nil;elseif xe then(mP)[he]={n=rP>=he and rP-he+0X001 or 0,I(bP,he+1,rP+0X001)};end;end;do if IP~=WP then(i)(fe,IP);end;end;local PP,OP,eP,SP=j(function()do while true do local yW=Re[jP];local kW=(yW[4]);do jP=jP+1;end;if kW>=0xe then if kW<0X15 then do if not(kW<17)then if not(kW<19)then if kW~=20 then mP[0X0000]=IP[yW[2]];jP=jP+1;jP=jP+0x00001;do yW=Re[jP];end;jP=jP+0X1;if not mP[0]then jP=yW[0X06];end;else end;else do if kW==0X12 then(mP)[yW[0X7]]=-mP[yW[0X6]];else local Nt=je[yW[6]];local Rt=(Nt[0X8]);local Bt,wt=#Rt,nil;if not(Bt>0X0)then else wt={};for w1=1,Bt do local I1=Rt[w1];if I1[1]==0 then(wt)[w1-0X001]={mP,I1[2]};else do(wt)[w1-0X001]=ve[I1[2]];end;end;end;A(De,wt);end;do(mP)[yW[7]]=NC(wt,IP,Nt);end;end;end;end;else if kW<0Xf then(mP[yW[0x00007]])[mP[yW[0x6]]]=mP[yW[1]];else if kW==16 then do(mP)[yW[7]]=G(mP[yW[6]],mP[yW[1]]);end;else local V1,I1=yW[0X7],(mP[yW[6]]);do(mP)[V1+0X1]=I1;end;mP[V1]=I1[yW[5]];end;end;end;end;else if not(kW>=0X00019)then do if kW>=0X17 then if kW==0X000018 then do(mP)[yW[7]]=yW[2];end;else(mP)[6]=IP[yW[0x2]];jP=jP+1;jP=jP+0X01;do yW=Re[jP];end;jP=jP+1;local zP=(6);mP[7]=mP[0X005][yW[0X5]];jP=jP+0X1;mP[zP]=mP[zP](mP[zP+1]);EP=zP;yW=Re[jP];jP=jP+0X01;(mP)[7]=IP[yW[0X2]];jP=jP+1;jP=jP+0X1;do yW=Re[jP];end;jP=jP+0X1;do(mP)[0X7]=mP[0x7][yW[5]];end;jP=jP+1;jP=jP+1;yW=Re[jP];jP=jP+0X1;zP=8;local HP=(mP[1]);(mP)[zP+0x1]=HP;local XP=3;mP[zP]=HP[yW[0X0005]];yW=Re[jP];jP=jP+0x1;mP[10]=mP[5][yW[5]];jP=jP+0X1;jP=jP+0X00001;jP=jP+0X1;do zP=8;end;local AP=(0X0000);if XP==0x00000 then else do EP=zP+XP-0X01;end;end;local YP,MP=nil,(nil);if XP==0X1 then YP,MP=rC(mP[zP]());else do YP,MP=rC(mP[zP](I(mP,zP+1,EP)));end;end;if AP==0X1 then EP=zP-0X1;else do if AP~=0X00000 then YP=zP+AP-0X2;EP=YP+1;else YP=YP+zP-1;EP=YP;end;end;local pL=(0);for Ku=zP,YP do do pL=pL+0X1;end;(mP)[Ku]=MP[pL];end;end;do jP=jP+0X1;end;jP=jP+1;do jP=jP+0X1;end;do zP=7;end;mP[zP]=mP[zP](I(mP,zP+1,EP));do EP=zP;end;yW=Re[jP];jP=jP+1;zP=0X00007;do HP=mP[7];end;mP[zP+1]=HP;(mP)[zP]=HP[yW[5]];jP=jP+1;zP=7;(mP[zP])(mP[zP+0x1]);EP=zP-0X1;yW=Re[jP];do jP=jP+0x00001;end;mP[0X07]=IP[yW[2]];jP=jP+1;do jP=jP+1;end;do yW=Re[jP];end;jP=jP+1;mP[0X8]=yW[0X0002];do jP=jP+0X1;end;mP[9]=mP[0x6];jP=jP+0x1;(mP)[10]=mP[5];jP=jP+0X1;zP=7;do EP=zP+4-1;end;mP[zP](I(mP,zP+0X1,EP));EP=zP-1;jP=jP+0X0001;jP=jP+0X00001;do yW=Re[jP];end;jP=jP+0X01;(mP)[0X7]=mP[0]+yW[0X5];jP=jP+1;mP[0X000]=mP[0X07];yW=Re[jP];jP=jP+1;mP[0X00007]=IP[yW[2]];jP=jP+1;do jP=jP+1;end;yW=Re[jP];jP=jP+1;(mP)[7]=mP[7][yW[0X005]];yW=Re[jP];jP=jP+1;mP[8]=IP[yW[2]];jP=jP+0x1;do jP=jP+0x00001;end;do yW=Re[jP];end;jP=jP+0X1;(mP)[9]=mP[5][yW[0X0005]];jP=jP+0X1;do zP=7;end;(mP[zP])(mP[zP+0x1],mP[zP+0X2]);EP=zP-0X1;yW=Re[jP];do jP=jP+1;end;jP=yW[0x6];end;else if kW~=0X16 then mP[6]=IP[yW[2]];do yW=Re[jP];end;do jP=jP+0X1;end;local Tm=6;mP[0X00007]=mP[5][yW[0x5]];do jP=jP+0X00001;end;mP[Tm]=mP[Tm](mP[Tm+1]);do EP=Tm;end;yW=Re[jP];do jP=jP+1;end;mP[7]=IP[yW[2]];jP=jP+1;jP=jP+1;yW=Re[jP];jP=jP+0x00001;do(mP)[7]=mP[0X07][yW[5]];end;local Hm=(mP[1]);yW=Re[jP];jP=jP+1;do Tm=0X8;end;mP[Tm+1]=Hm;(mP)[Tm]=Hm[yW[0X0005]];do yW=Re[jP];end;jP=jP+1;(mP)[0xa]=mP[5][yW[0x5]];do jP=jP+1;end;local jm=3;do Tm=8;end;local rm=(0X0);if jm~=0 then EP=Tm+jm-0X00001;end;local mm,km=nil,(nil);do if jm==1 then mm,km=rC(mP[Tm]());else mm,km=rC(mP[Tm](I(mP,Tm+0X1,EP)));end;end;if rm~=1 then if rm~=0 then do mm=Tm+rm-0X00002;end;do EP=mm+0x1;end;else mm=mm+Tm-0X1;do EP=mm;end;end;local vQ=0X0000;for JO=Tm,mm do do vQ=vQ+0X00001;end;(mP)[JO]=km[vQ];end;else EP=Tm-0X1;end;jP=jP+1;jP=jP+0X001;jP=jP+0x0001;Tm=7;do mP[Tm]=mP[Tm](I(mP,Tm+0X1,EP));end;EP=Tm;yW=Re[jP];jP=jP+1;Tm=0X0007;Hm=mP[0X7];mP[Tm+0X1]=Hm;(mP)[Tm]=Hm[yW[5]];jP=jP+1;Tm=7;mP[Tm](mP[Tm+0X00001]);EP=Tm-0X1;do jP=jP+0x1;end;jP=jP+1;yW=Re[jP];jP=jP+1;(mP)[0X7]=IP[yW[2]];yW=Re[jP];jP=jP+1;do(mP)[0X8]=yW[2];end;do jP=jP+0X1;end;do(mP)[0x9]=mP[0X06];end;jP=jP+0x1;(mP)[10]=mP[0X5];jP=jP+0X1;Tm=0x007;EP=Tm+0X0004-1;(mP[Tm])(I(mP,Tm+1,EP));EP=Tm-0X1;yW=Re[jP];do jP=jP+0X1;end;do mP[0X7]=mP[0]+yW[5];end;jP=jP+1;(mP)[0]=mP[7];do yW=Re[jP];end;jP=jP+0X01;do mP[7]=IP[yW[2]];end;yW=Re[jP];jP=jP+1;mP[7]=mP[7][yW[5]];do jP=jP+0X1;end;do jP=jP+0X1;end;do yW=Re[jP];end;jP=jP+0X1;(mP)[0X8]=IP[yW[2]];yW=Re[jP];jP=jP+1;(mP)[0X9]=mP[5][yW[0x5]];jP=jP+1;Tm=7;(mP[Tm])(mP[Tm+0x0001],mP[Tm+0x2]);do EP=Tm-1;end;jP=jP+1;jP=jP+1;do yW=Re[jP];end;jP=jP+0X1;jP=yW[0X0006];else(mP)[3]=IP[yW[2]];yW=Re[jP];do jP=jP+0X1;end;do(mP)[4]=IP[yW[0X2]];end;jP=jP+0X01;do jP=jP+1;end;yW=Re[jP];jP=jP+1;do mP[4]=mP[4][yW[0X5]];end;do yW=Re[jP];end;jP=jP+1;mP[0X04]=mP[0X4][yW[0X5]];yW=Re[jP];jP=jP+0X1;mP[0x04]=mP[4][yW[5]];jP=jP+1;do jP=jP+1;end;yW=Re[jP];local T0,i0=4,0X2;do jP=jP+1;end;local z0=mP[4];do(mP)[T0+0x1]=z0;end;do(mP)[T0]=z0[yW[5]];end;jP=jP+1;T0=4;local G0=0;if i0~=0X0 then do EP=T0+i0-0X1;end;end;local a0,L0=nil,(nil);if i0~=0X1 then a0,L0=rC(mP[T0](I(mP,T0+1,EP)));else a0,L0=rC(mP[T0]());end;if G0==0X1 then do EP=T0-1;end;else if G0~=0x0 then a0=T0+G0-0X2;EP=a0+1;else a0=a0+T0-1;do EP=a0;end;end;local bY=(0X0);for h7=T0,a0 do bY=bY+1;mP[h7]=L0[bY];end;end;jP=jP+1;T0=3;i0=0X0000;G0=0X004;if i0~=0x00000 then EP=T0+i0-0X1;end;do a0,L0=nil;end;if i0==1 then do a0,L0=rC(mP[T0]());end;else a0,L0=rC(mP[T0](I(mP,T0+0X001,EP)));end;if G0~=1 then do if G0==0 then a0=a0+T0-0X1;do EP=a0;end;else a0=T0+G0-0x2;EP=a0+0X1;end;end;local uC=0;for v3=T0,a0 do uC=uC+1;do(mP)[v3]=L0[uC];end;end;else EP=T0-0X01;end;yW=Re[jP];jP=jP+0X1;T0=3;local g0=g(function(...)d();do for bh,Lh in...do(d)(true,bh,Lh);end;end;end);(g0)(mP[T0],mP[T0+1],mP[T0+0X2]);do EP=T0;end;do mP[T0]=g0;end;jP=yW[0X6];end;end;end;else if kW<27 then if kW==26 then mP[yW[0X7]]=IP[yW[2]];else local E6=yW[0X7];local n6=g(function(...)(d)();for pu,Au,Mu,Lu,uu,ku,cu,Wu,du,Yu in...do(d)(true,{pu,Au,Mu,Lu,uu,ku,cu,Wu,du,Yu});end;end);(n6)(mP[E6],mP[E6+1],mP[E6+0X02]);EP=E6;do(mP)[E6]=n6;end;jP=yW[6];end;else do if kW~=0x01c then(mP)[yW[7]]=mP[yW[6]]~=mP[yW[0X001]];else(mP)[yW[7]]={I({},0X1,yW[6])};end;end;end;end;end;else if kW>=0x7 then if not(kW>=0X0A)then if kW<0X00008 then mP[yW[0x7]]=mP[yW[6]]/mP[yW[1]];else if kW~=0X9 then mP[6]=mP[5][yW[5]];local bf=0X6;yW=Re[jP];jP=jP+0X00001;local If=mP[6];do(mP)[bf+0X1]=If;end;do mP[bf]=If[yW[0X0005]];end;do yW=Re[jP];end;do jP=jP+1;end;(mP)[0X0008]=yW[2];do jP=jP+1;end;bf=6;do(mP)[bf]=mP[bf](mP[bf+1],mP[bf+2]);end;EP=bf;yW=Re[jP];jP=jP+0X001;if not mP[0X00006]then jP=yW[0x6];end;else do mP[6]=IP[yW[2]];end;jP=jP+0X1;jP=jP+1;yW=Re[jP];jP=jP+0x1;(mP)[0X00006]=mP[0x6][yW[0X5]];jP=jP+1;jP=jP+0X1;yW=Re[jP];jP=jP+1;mP[0X0007]=IP[yW[2]];local yj=6;yW=Re[jP];jP=jP+1;mP[8]=mP[5][yW[0X5]];jP=jP+1;(mP)[yj]=mP[yj](mP[yj+0X0001],mP[yj+2]);do EP=yj;end;yW=Re[jP];jP=jP+0X1;if mP[0x0006]then jP=yW[6];end;end;end;else if kW>=12 then if kW==13 then(mP)[0x6]=IP[yW[0x0002]];yW=Re[jP];jP=jP+0x1;mP[0X6]=mP[0X6][yW[5]];jP=jP+0X1;jP=jP+1;yW=Re[jP];jP=jP+1;mP[7]=IP[yW[2]];do jP=jP+1;end;jP=jP+0X001;yW=Re[jP];jP=jP+0X1;local Wg=(6);mP[0X8]=mP[5][yW[0x0005]];jP=jP+1;do(mP)[Wg]=mP[Wg](mP[Wg+0X1],mP[Wg+0X2]);end;do EP=Wg;end;yW=Re[jP];jP=jP+0X01;do if not(mP[0X6])then else do jP=yW[0X6];end;end;end;else(mP)[0X06]=mP[5][yW[5]];jP=jP+0x1;local bT=0X6;jP=jP+1;do yW=Re[jP];end;jP=jP+0X1;local dT=(mP[6]);(mP)[bT+0X01]=dT;(mP)[bT]=dT[yW[5]];do yW=Re[jP];end;jP=jP+1;do(mP)[8]=yW[0X2];end;do jP=jP+1;end;bT=6;mP[bT]=mP[bT](mP[bT+0X1],mP[bT+2]);do EP=bT;end;yW=Re[jP];jP=jP+0X001;if not mP[6]then jP=yW[0X6];end;end;else if kW~=11 then mP[0x0]=IP[yW[2]];jP=jP+1;jP=jP+1;yW=Re[jP];jP=jP+1;do mP[0X0]=mP[0][yW[5]];end;jP=jP+1;jP=jP+1;do yW=Re[jP];end;jP=jP+0X1;do mP[0X00000]=mP[0x0000][yW[5]];end;yW=Re[jP];jP=jP+1;do if not(mP[0]<=yW[0x05])then jP=yW[0x7];end;end;else do mP[yW[0X0007]]=#mP[yW[0X006]];end;end;end;end;else if kW>=0X3 then if not(kW>=5)then do if kW==0X0004 then repeat local Px,ix=De,(mP);if#Px>0 then local PU=({});for nt,zt in D,Px do for Iz,Az in D,zt do if not(Az[1]==ix and Az[0x002]>=0)then else local Lq=(Az[2]);do if not(not PU[Lq])then else PU[Lq]={ix[Lq]};end;end;(Az)[1]=PU[Lq];Az[0X2]=1;end;end;end;end;until true;return;else local Z_=yW[7];local h_,b_,F_=mP[Z_]();if h_ then do(mP)[Z_+0X00001]=b_;end;mP[Z_+0X2]=F_;jP=yW[0X6];end;end;end;else if kW~=6 then mP[0x00]=yW[2];yW=Re[jP];do jP=jP+1;end;local Gi=(0X2);mP[1]=yW[0X00002];yW=Re[jP];do jP=jP+1;end;(mP)[2]=IP[yW[0X02]];do yW=Re[jP];end;jP=jP+0x1;local Mi=2;(mP)[0X3]=yW[2];jP=jP+1;(mP)[Mi]=mP[Mi](mP[Mi+1]);EP=Mi;yW=Re[jP];jP=jP+0x1;mP[0x3]=IP[yW[0x2]];yW=Re[jP];jP=jP+1;mP[4]=IP[yW[0X00002]];do yW=Re[jP];end;jP=jP+0X00001;mP[4]=mP[4][yW[5]];jP=jP+0X001;jP=jP+0x01;yW=Re[jP];jP=jP+0x00001;mP[0x0004]=mP[4][yW[0X5]];do yW=Re[jP];end;jP=jP+0X1;do(mP)[4]=mP[4][yW[5]];end;yW=Re[jP];local Ni=(mP[4]);jP=jP+0X01;Mi=0X04;mP[Mi+1]=Ni;(mP)[Mi]=Ni[yW[5]];do jP=jP+0x1;end;Mi=0x00004;local Ai=(0x0);if Gi~=0 then EP=Mi+Gi-1;end;local Ui,ei=nil,(nil);do if Gi~=0x001 then Ui,ei=rC(mP[Mi](I(mP,Mi+1,EP)));else Ui,ei=rC(mP[Mi]());end;end;if Ai==0X1 then EP=Mi-1;else do if Ai~=0 then do Ui=Mi+Ai-2;end;EP=Ui+0x0001;else Ui=Ui+Mi-1;EP=Ui;end;end;local di=(0);for vF=Mi,Ui do di=di+0X001;mP[vF]=ei[di];end;end;jP=jP+0X1;jP=jP+0x1;jP=jP+1;Mi=0X3;Gi=0X000;do Ai=4;end;if Gi~=0x0 then EP=Mi+Gi-0x1;end;Ui,ei=nil;if Gi==1 then Ui,ei=rC(mP[Mi]());else Ui,ei=rC(mP[Mi](I(mP,Mi+0x00001,EP)));end;if Ai==1 then EP=Mi-1;else if Ai==0 then Ui=Ui+Mi-0x001;EP=Ui;else Ui=Mi+Ai-2;EP=Ui+1;end;local C5=0X0;do for qc=Mi,Ui do C5=C5+0x1;mP[qc]=ei[C5];end;end;end;yW=Re[jP];jP=jP+0X01;do Mi=0X00003;end;local Ji=g(function(...)(d)();for Gq,vq in...do(d)(true,Gq,vq);end;end);(Ji)(mP[Mi],mP[Mi+0X1],mP[Mi+2]);do EP=Mi;end;(mP)[Mi]=Ji;jP=yW[6];else(mP)[3]=IP[yW[2]];jP=jP+0X01;EP=0x3;(mP)[EP]=mP[EP]();do yW=Re[jP];end;do jP=jP+1;end;(IP)[yW[2]]=mP[0X3];yW=Re[jP];jP=jP+0X1;jP=yW[6];end;end;else if kW<0X001 then do jP=yW[0X6];end;else if kW~=0X002 then for Y4=yW[7],yW[0X0006]do mP[Y4]=nil;end;else if not(not mP[yW[0x00007]])then else jP=yW[0X6];end;end;end;end;end;end;end;end;end);do if PP then if OP then if SP~=1 then return mP[eP](I(mP,eP+0X1,EP));else do return mP[eP]();end;end;elseif not(eP)then else return I(mP,eP,SP);end;else if f(OP)=='\st\114\105ng'then if not(e(OP,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if e(OP,"^.-:%d+: ")then(b)("L\117\114a\p\104 \Scr\i\p\116:"..(Ae[jP-1]or'\(\i\110t\101r\110\097\l\041').."\: "..r(OP),0);else(b)(OP,0X0);end;else(b)(OP,0);end;end;end;end;end;else do fe=function(...)local cx=(0X1);local Qx={};local Zx=(m());local Hx,bx,ex={[1]=ce,[0X2]=Qx},(Zx==F and Le or Zx),(0X0);local wx,Ex=rC(...);wx=wx-1;for MM=0X00,wx do if he>MM then Qx[MM]=Ex[MM+0x1];else break;end;end;if not ge then Ex=nil;elseif xe then Qx[he]={n=wx>=he and wx-he+1 or 0X0000,I(Ex,he+1,wx+0X1)};end;if bx~=Zx then(i)(fe,bx);end;local Gx,Kx,Dx,Bx=j(function()while true do local Xd=Re[cx];local id=Xd[4];cx=cx+1;do if not(id>=11)then do if id<0X0005 then if id>=2 then if not(id>=0X03)then for dT=Xd[0X7],Xd[6]do Qx[dT]=nil;end;else if id==0X04 then Qx[Xd[0X00007]]=u(Qx[Xd[0X6]],Qx[Xd[1]]);else if not(not Qx[Xd[7]])then else do cx=Xd[6];end;end;end;end;else do if id==1 then local hq=Xd[7];local Bq,Jq,bq=Qx[hq]();if Bq then Qx[hq+1]=Jq;(Qx)[hq+2]=bq;do cx=Xd[6];end;end;else repeat local FL,TL=De,(Qx);if#FL>0x0 then local Z2=({});for Ia,ia in D,FL do for Z9,B9 in D,ia do do if B9[0X1]==TL and B9[2]>=0X0000 then local xB=(B9[2]);do if not Z2[xB]then Z2[xB]={TL[xB]};end;end;(B9)[0X0001]=Z2[xB];B9[2]=1;end;end;end;end;end;until true;do return;end;end;end;end;else if id<8 then if not(id<6)then if id==7 then Qx[7]=Qx[0X6][Xd[5]];cx=cx+1;cx=cx+0x1;Xd=Re[cx];cx=cx+0X01;do Qx[7]=Qx[0X7][Xd[0x5]];end;cx=cx+0X0001;cx=cx+0x00001;do Xd=Re[cx];end;cx=cx+1;Qx[7]=Qx[7][Xd[0X5]];cx=cx+0x001;cx=cx+1;cx=cx+1;Qx[0X3]=Qx[0X7];cx=cx+1;Qx[7]=Qx[6];cx=cx+0X1;(Qx)[2]=Qx[7];Xd=Re[cx];cx=cx+1;do cx=Xd[6];end;else(Qx)[0X4]=bx[Xd[2]];cx=cx+0x1;Qx[5]=Qx[0X0];Xd=Re[cx];cx=cx+1;Qx[0x00006]=Qx[0X01][Xd[5]];do cx=cx+0X00001;end;cx=cx+1;local p_=0X00004;do cx=cx+1;end;do(Qx)[7]=true;end;cx=cx+0X1;do ex=p_+0X4-0X01;end;do Qx[p_]=Qx[p_](I(Qx,p_+1,ex));end;ex=p_;do Xd=Re[cx];end;do cx=cx+0X01;end;Qx[0x05]=Qx[1][Xd[0X5]];cx=cx+0x1;cx=cx+0X001;Xd=Re[cx];cx=cx+0X00001;(Qx)[5]=Qx[5][Xd[0X5]];cx=cx+1;cx=cx+1;Xd=Re[cx];cx=cx+1;Qx[5]=Qx[5][Xd[5]];do cx=cx+1;end;cx=cx+0x01;Xd=Re[cx];cx=cx+1;Qx[5]=Qx[0x5]/Xd[0X5];Xd=Re[cx];do cx=cx+1;end;Qx[0x5]=Qx[5]+Xd[5];cx=cx+0X1;do Qx[4]=Qx[4]<=Qx[5];end;Xd=Re[cx];cx=cx+0X001;if not Qx[0x4]then cx=Xd[0x6];end;end;else(Qx)[Xd[7]]=Qx[Xd[0X06]]*Qx[Xd[1]];end;else do if not(id<9)then do if id==0Xa then local PS=Xd[0x7];local KS,nS=Qx[PS]();if not(KS)then else for mG=1,Xd[0x1]do do(Qx)[PS+mG]=nS[mG];end;end;cx=Xd[0X6];end;else(Hx)[Xd[6]]=Qx[Xd[0X0007]];end;end;else local Ll=je[Xd[6]];local Ul,al=Ll[0x0008],nil;local xl=(#Ul);if not(xl>0x0)then else al={};for Z6=0X1,xl do local p6=Ul[Z6];if p6[0X1]~=0x00000 then(al)[Z6-1]=ve[p6[2]];else(al)[Z6-1]={Qx,p6[0x2]};end;end;(A)(De,al);end;(Qx)[Xd[7]]=NC(al,bx,Ll);end;end;end;end;end;else if id>=17 then if id>=20 then if id<21 then do repeat local sW,FW=De,(Qx);if#sW>0 then local OC=({});for HT,fT in D,sW do do for wc,vc in D,fT do if vc[1]==FW and vc[2]>=0 then local sM=vc[2];do if not OC[sM]then OC[sM]={FW[sM]};end;end;vc[0X1]=OC[sM];do(vc)[0X0002]=1;end;end;end;end;end;end;until true;end;local t4=Xd[0X7];return false,t4,t4;else do if id~=22 then do Qx[0X007]=Qx[0X006][Xd[5]];end;do Xd=Re[cx];end;cx=cx+1;(Qx)[0X7]=Qx[0X00007][Xd[0x0005]];do cx=cx+1;end;cx=cx+0x01;Xd=Re[cx];do cx=cx+1;end;do(Qx)[7]=Qx[0X7][Xd[5]];end;cx=cx+1;cx=cx+1;Xd=Re[cx];cx=cx+1;if not(Qx[0X3]<Qx[0x7])then cx=Xd[7];end;else Qx[0X0007]=bx[Xd[2]];do cx=cx+0x1;end;(Qx)[8]=Qx[0x0];do Xd=Re[cx];end;cx=cx+0X1;do Qx[9]=Qx[0x0006][Xd[5]];end;local F_=(0x00007);cx=cx+0X1;cx=cx+1;do cx=cx+0X1;end;do(Qx)[10]=true;end;cx=cx+0X00001;ex=F_+0x4-1;(Qx)[F_]=Qx[F_](I(Qx,F_+1,ex));do ex=F_;end;cx=cx+1;do cx=cx+0X1;end;Xd=Re[cx];cx=cx+0x1;do Qx[0X8]=Qx[0X06][Xd[0X005]];end;cx=cx+1;cx=cx+0X1;Xd=Re[cx];cx=cx+0X001;(Qx)[8]=Qx[8][Xd[0X00005]];Xd=Re[cx];cx=cx+1;(Qx)[0X8]=Qx[8][Xd[0X5]];Xd=Re[cx];cx=cx+0X1;Qx[0X8]=Qx[0x0008]/Xd[5];do Xd=Re[cx];end;cx=cx+1;do Qx[0X008]=Qx[0x8]+Xd[0x5];end;Xd=Re[cx];cx=cx+0X1;do if not(not(Qx[0X07]<=Qx[0x0008]))then else cx=Xd[0X00007];end;end;end;end;end;else if id>=0X12 then do if id==19 then else do Qx[Xd[0X7]]={I({},0X1,Xd[0X6])};end;end;end;else Qx[4]=bx[Xd[0x2]];local vB=0X5;Xd=Re[cx];cx=cx+1;Qx[5]=bx[Xd[2]];local XB=(0X2);do cx=cx+1;end;cx=cx+1;Xd=Re[cx];cx=cx+1;local aB=(Qx[5]);do(Qx)[vB+1]=aB;end;(Qx)[vB]=aB[Xd[0X005]];cx=cx+1;do vB=0X0005;end;local OB=(0);if XB~=0 then ex=vB+XB-0X0001;end;local jB,eB=nil,(nil);if XB==0X01 then jB,eB=rC(Qx[vB]());else do jB,eB=rC(Qx[vB](I(Qx,vB+0X1,ex)));end;end;do if OB==1 then do ex=vB-1;end;else if OB==0 then jB=jB+vB-1;ex=jB;else jB=vB+OB-0X2;do ex=jB+1;end;end;local aQ=0;for GZ=vB,jB do aQ=aQ+1;(Qx)[GZ]=eB[aQ];end;end;end;do cx=cx+1;end;cx=cx+0X1;cx=cx+0X00001;vB=0X004;do XB=0X0;end;OB=0X4;if XB==0 then else ex=vB+XB-0X1;end;do jB,eB=nil;end;do if XB==1 then do jB,eB=rC(Qx[vB]());end;else jB,eB=rC(Qx[vB](I(Qx,vB+1,ex)));end;end;if OB~=0X1 then if OB~=0 then jB=vB+OB-0X002;ex=jB+0X1;else jB=jB+vB-0X1;ex=jB;end;local PG=(0);for pi=vB,jB do PG=PG+0X1;(Qx)[pi]=eB[PG];end;else ex=vB-0X1;end;do Xd=Re[cx];end;cx=cx+0X1;vB=4;local sB=g(function(...)(d)();for fO,dO in...do(d)(true,fO,dO);end;end);(sB)(Qx[vB],Qx[vB+0X001],Qx[vB+2]);ex=vB;(Qx)[vB]=sB;cx=Xd[6];end;end;else if id>=14 then if id<0XF then cx=Xd[6];else if id~=16 then(Qx)[Xd[0x07]]=Xd[2];else Qx[Xd[7]]=Qx[Xd[0X6]];end;end;else if id>=0X00c then if id==0x0d then Qx[Xd[7]]=true;else do Qx[Xd[0x7]]=bx[Xd[2]];end;end;else(Qx)[Xd[7]]=-Qx[Xd[6]];end;end;end;end;end;end;end);if not(Gx)then if f(Kx)~="\s\116\114\i\110\g"then b(Kx,0x00000);else if e(Kx,"\097tte\109\112t\032t\o \yie\ld\ a\099r\o\115\s\ \m\101tam\101\116\h\o\d\047C\%\-\099a\l\l\ \098\111\117n\d\097\114\y")then do return coroutine.yield();end;end;if e(Kx,"^.-:%d+: ")then(b)('\Lu\114a\112\h\032\Sc\114\i\p\116\:'..(Ae[cx-1]or"(\inte\114na\l\041").."\:\032"..r(Kx),0);else(b)(Kx,0X0000);end;end;else if Kx then do if Bx~=1 then return Qx[Dx](I(Qx,Dx+1,ex));else do return Qx[Dx]();end;end;end;elseif not(Dx)then else return I(Qx,Dx,Bx);end;end;end;end;end;end;else if me>=24 then do if me~=0X19 then fe=function(...)local bX,kX=1,{};local nX=(0X0);local NX=m();local jX={[0X2]=kX,[1]=ce};local eX,TX=rC(...);eX=eX-0x1;local oX=(NX==F and Le or NX);for sT=0,eX do if he>sT then kX[sT]=TX[sT+0X01];else break;end;end;do if not ge then TX=nil;elseif xe then kX[he]={n=eX>=he and eX-he+1 or 0,I(TX,he+1,eX+1)};end;end;if oX==NX then else(i)(fe,oX);end;local DX,lX,tX,WX=j(function()while true do local Xq=(Re[bX]);local Eq=Xq[0X4];bX=bX+0X001;if Eq>=29 then if not(Eq<0X2c)then if not(Eq<0x33)then do if Eq>=0X037 then if not(Eq<0X39)then if Eq~=0X3a then(kX)[13]=kX[0X8][Xq[0X5]];Xq=Re[bX];bX=bX+0X00001;do kX[12][Xq[0x00002]]=kX[0xd];end;Xq=Re[bX];bX=bX+0X1;kX[0xD]=oX[Xq[0X00002]];local pX=(13);bX=bX+0X1;bX=bX+1;Xq=Re[bX];do bX=bX+1;end;kX[13]=kX[13][Xq[0x005]];Xq=Re[bX];do bX=bX+0X00001;end;do kX[0Xe]=kX[0X8][Xq[0x5]];end;bX=bX+1;kX[pX]=kX[pX](kX[pX+1]);nX=pX;Xq=Re[bX];bX=bX+0X1;kX[0Xc][Xq[0X2]]=kX[13];do Xq=Re[bX];end;bX=bX+1;bX=Xq[6];else kX[0x0006]=oX[Xq[0x02]];bX=bX+0X1;bX=bX+0X1;Xq=Re[bX];bX=bX+1;(kX)[0X00006]=kX[6][Xq[5]];bX=bX+1;bX=bX+1;Xq=Re[bX];do bX=bX+0X1;end;kX[7]=oX[Xq[2]];bX=bX+0x1;bX=bX+0X0001;Xq=Re[bX];bX=bX+0X1;(kX)[0x7]=kX[0x7][Xq[5]];Xq=Re[bX];bX=bX+1;kX[7]=kX[0X7][Xq[0X0005]];Xq=Re[bX];bX=bX+0X0001;if kX[6]==kX[0X007]then else bX=Xq[0X7];end;end;else if Eq~=56 then kX[Xq[7]]=kX[Xq[6]][Xq[5]];else(kX)[Xq[7]]=oX[Xq[0X2]];end;end;else if not(Eq>=0X35)then if Eq==52 then(kX)[0X000d]=oX[Xq[0x0002]];bX=bX+0X0001;bX=bX+0X1;Xq=Re[bX];bX=bX+1;(kX)[13]=kX[0x000D][Xq[0X00005]];do Xq=Re[bX];end;bX=bX+1;do if not kX[0X0000D]then bX=Xq[6];end;end;else repeat local LR,fR=De,(kX);if not(#LR>0x0)then else local ze=({});for LC,KC in D,LR do do for Xe,se in D,KC do do if se[0X1]==fR and se[2]>=0 then local ZL=se[2];do if not ze[ZL]then do ze[ZL]={fR[ZL]};end;end;end;se[0x0001]=ze[ZL];se[0X02]=1;end;end;end;end;end;end;until true;local mE=Xq[7];do return false,mE,mE;end;end;else do if Eq==54 then local iw=je[Xq[6]];local Ow,Cw=iw[0X8],(nil);local nw=(#Ow);if nw>0 then do Cw={};end;for xd=1,nw do local qd=(Ow[xd]);if qd[1]~=0X0 then do(Cw)[xd-0x1]=ve[qd[2]];end;else Cw[xd-0X1]={kX,qd[2]};end;end;(A)(De,Cw);end;kX[0X6]=NC(Cw,oX,iw);bX=bX+0X00001;kX[7]=kX[6];Xq=Re[bX];bX=bX+1;(kX)[8]=oX[Xq[2]];Xq=Re[bX];local Ew=0X7;do bX=bX+1;end;do(kX)[0X8]=kX[8][Xq[5]];end;bX=bX+0X01;bX=bX+1;bX=bX+0X1;(kX[Ew])(kX[Ew+1]);nX=Ew-0x1;Xq=Re[bX];bX=bX+0x1;do kX[0X00007]=oX[Xq[2]];end;Xq=Re[bX];do bX=bX+1;end;(kX)[7]=kX[7][Xq[5]];do Xq=Re[bX];end;do bX=bX+0x00001;end;do if kX[0X0007]==Xq[0x00005]then else bX=Xq[0X7];end;end;else do(kX)[6]=oX[Xq[2]];end;bX=bX+0X1;bX=bX+0X01;local ID=(6);do Xq=Re[bX];end;bX=bX+1;do(kX)[6]=kX[0x6][Xq[5]];end;bX=bX+1;bX=bX+1;Xq=Re[bX];bX=bX+1;local OD=(kX[0X6]);kX[ID+0X1]=OD;do kX[ID]=OD[Xq[0X5]];end;Xq=Re[bX];bX=bX+1;(kX)[0X8]=Xq[0X02];do Xq=Re[bX];end;do bX=bX+1;end;do kX[0X009]=oX[Xq[2]];end;bX=bX+0X1;bX=bX+1;do Xq=Re[bX];end;do bX=bX+0X1;end;(kX)[0X09]=kX[9][Xq[0x00005]];do bX=bX+1;end;bX=bX+0X1;bX=bX+0X1;do kX[0X9]=#kX[9];end;do bX=bX+1;end;ID=6;do nX=ID+0X4-1;end;(kX)[ID]=kX[ID](I(kX,ID+1,nX));nX=ID;Xq=Re[bX];do bX=bX+0X00001;end;if kX[6]~=Xq[0X05]then do bX=Xq[7];end;end;end;end;end;end;end;else do if Eq<47 then if Eq<45 then local Mg=(Xq[7]);local Og,Eg=kX[Mg]();do if Og then bX=Xq[6];(kX)[Mg+3]=Eg;end;end;else if Eq==0X2e then kX[6]=Xq[2];do Xq=Re[bX];end;do bX=bX+1;end;local Pr=(kX[6]);local br=6;kX[br+0x1]=Pr;(kX)[br]=Pr[Xq[5]];do Xq=Re[bX];end;bX=bX+1;kX[0X8]=oX[Xq[2]];bX=bX+0X1;bX=bX+1;do Xq=Re[bX];end;bX=bX+1;kX[0x8]=kX[8][Xq[0x5]];do bX=bX+1;end;bX=bX+1;do bX=bX+1;end;br=0X6;do kX[br]=kX[br](kX[br+1],kX[br+0x2]);end;do nX=br;end;Xq=Re[bX];bX=bX+1;if not kX[6]then bX=Xq[0X6];end;else do kX[6]=oX[Xq[0X2]];end;do bX=bX+0X1;end;bX=bX+0X1;local az=(6);do Xq=Re[bX];end;bX=bX+0x1;do kX[0x0006]=kX[0X00006][Xq[5]];end;do Xq=Re[bX];end;bX=bX+0x1;local bz=kX[0X6];kX[az+1]=bz;(kX)[az]=bz[Xq[0X5]];do Xq=Re[bX];end;bX=bX+1;do(kX)[0X8]=Xq[0X2];end;do Xq=Re[bX];end;bX=bX+1;(kX)[0X9]=oX[Xq[0X0002]];Xq=Re[bX];bX=bX+0X1;do(kX)[9]=kX[9][Xq[0x5]];end;do bX=bX+1;end;(kX)[0X9]=#kX[9];bX=bX+1;do az=0X6;end;do nX=az+0X4-0X1;end;(kX)[az]=kX[az](I(kX,az+0X1,nX));do nX=az;end;do bX=bX+0X1;end;bX=bX+0X1;Xq=Re[bX];bX=bX+1;do if kX[6]==Xq[0X005]then else bX=Xq[7];end;end;end;end;else if Eq>=49 then if Eq~=50 then(kX)[4]=oX[Xq[2]];Xq=Re[bX];bX=bX+1;local sN=(0x2);kX[5]=oX[Xq[2]];do bX=bX+0X1;end;do nX=sN+4-1;end;(kX)[sN]=kX[sN](I(kX,sN+1,nX));do nX=sN;end;do bX=bX+0X1;end;bX=bX+1;Xq=Re[bX];bX=bX+1;(kX)[3]=Xq[0X2]/Xq[5];do bX=bX+0x1;end;(kX)[0X4]={};Xq=Re[bX];bX=bX+0X1;local LN=(1-0X001)*0X032;do(oX)[Xq[0X2]]=kX[4];end;bX=bX+0X1;do(kX)[4]={I({},0x0001,2)};end;Xq=Re[bX];bX=bX+1;(kX)[5]=Xq[2];Xq=Re[bX];do bX=bX+1;end;local cN=(2);kX[0X06]=Xq[2];bX=bX+0x1;sN=0X4;local GN=kX[sN];for Rc=1,0x2 do(GN)[LN+Rc]=kX[sN+Rc];end;do bX=bX+1;end;kX[0X5]={};bX=bX+1;kX[0X6]=nil;do Xq=Re[bX];end;bX=bX+1;do(oX)[Xq[2]]=kX[0X006];end;Xq=Re[bX];bX=bX+1;kX[6]=oX[Xq[2]];bX=bX+1;bX=bX+1;do Xq=Re[bX];end;bX=bX+1;(kX)[0X7]=oX[Xq[0X02]];do bX=bX+1;end;do bX=bX+1;end;bX=bX+1;sN=0X6;local dN=4;if cN==0X00000 then else nX=sN+cN-1;end;local NN,KN=nil,nil;if cN==1 then NN,KN=rC(kX[sN]());else NN,KN=rC(kX[sN](I(kX,sN+0X1,nX)));end;if dN~=1 then if dN~=0X0 then NN=sN+dN-2;do nX=NN+1;end;else NN=NN+sN-1;nX=NN;end;local B8=(0);for Ab=sN,NN do B8=B8+0X0001;do kX[Ab]=KN[B8];end;end;else nX=sN-0X001;end;do Xq=Re[bX];end;bX=bX+0X001;sN=6;local QN=(g(function(...)d();for KQ,vQ in...do(d)(true,KQ,vQ);end;end));(QN)(kX[sN],kX[sN+0x001],kX[sN+2]);do nX=sN;end;(kX)[sN]=QN;bX=Xq[6];else(kX)[16]=kX[15][Xq[5]];bX=bX+0X1;do bX=bX+1;end;do bX=bX+0X001;end;kX[0X010]=kX[0x0002]-kX[16];bX=bX+0X001;do kX[0X3]=kX[16];end;bX=bX+0X1;(kX)[0X10]=kX[0x0f];Xq=Re[bX];bX=bX+0X01;(oX)[Xq[2]]=kX[16];Xq=Re[bX];bX=bX+0X0001;(kX)[16]=oX[Xq[2]];do Xq=Re[bX];end;do bX=bX+0X00001;end;kX[16]=kX[16][Xq[0X0005]];bX=bX+0X1;bX=bX+0x0001;Xq=Re[bX];do bX=bX+0X0001;end;kX[17]=oX[Xq[0X00002]];bX=bX+0x1;bX=bX+0X1;Xq=Re[bX];bX=bX+1;kX[18]=Xq[2];bX=bX+1;do(kX)[0X13]=kX[0x0F];end;bX=bX+0X1;local yB=(0X10);nX=yB+4-1;(kX[yB])(I(kX,yB+0X01,nX));do nX=yB-0X1;end;bX=bX+0X1;bX=bX+0x001;Xq=Re[bX];do bX=bX+0X0001;end;bX=Xq[6];end;else if Eq==48 then do repeat local mS,nS=De,(kX);if#mS>0 then local SC=({});for xA,mA in D,mS do for pl,gl in D,mA do if not(gl[0X1]==nS and gl[2]>=0)then else local o_=gl[2];if not(not SC[o_])then else SC[o_]={nS[o_]};end;(gl)[1]=SC[o_];gl[0x2]=0X001;end;end;end;end;until true;end;return;else kX[10]=oX[Xq[2]];Xq=Re[bX];do bX=bX+1;end;kX[10]=kX[0Xa][Xq[5]];Xq=Re[bX];bX=bX+0X1;do kX[11]=oX[Xq[0X00002]];end;bX=bX+0X1;bX=bX+1;bX=bX+0x1;kX[12]=kX[0x9];do bX=bX+0X1;end;local d4=(0X00A);kX[d4](kX[d4+0X001],kX[d4+2]);do nX=d4-0x1;end;bX=bX+0x1;do bX=bX+1;end;Xq=Re[bX];do bX=bX+1;end;bX=Xq[0x06];end;end;end;end;end;else if Eq>=0X24 then do if Eq<40 then do if not(Eq<0X0026)then if Eq~=0X27 then(kX)[Xq[0x7]]=Xq[0x00002];else kX[0X9]=Xq[2];bX=bX+0X00001;do kX[10]=#kX[8];end;local bP=9;do Xq=Re[bX];end;bX=bX+0x00001;kX[11]=Xq[0X002];Xq=Re[bX];do bX=bX+1;end;local SP,OP,LP=kX[bP],kX[bP+0x01],(kX[bP+0X2]);kX[bP]=g(function()for gG=SP,OP,LP do(d)(true,gG);end;end);bX=Xq[0X00006];end;else do if Eq~=0X00025 then(kX)[6]=oX[Xq[2]];Xq=Re[bX];bX=bX+0X1;kX[7]=oX[Xq[0X2]];Xq=Re[bX];do bX=bX+0X001;end;local aM=0X7;(kX)[0x7]=kX[7][Xq[5]];bX=bX+1;bX=bX+0x01;Xq=Re[bX];do bX=bX+1;end;do(kX)[0X08]=Xq[2];end;Xq=Re[bX];bX=bX+0X1;(kX)[0X9]=Xq[2];do Xq=Re[bX];end;bX=bX+1;kX[0x0A]=Xq[0X2];do bX=bX+1;end;nX=aM+0x00004-1;kX[aM]=kX[aM](I(kX,aM+0X1,nX));nX=aM;Xq=Re[bX];do bX=bX+0x1;end;kX[6][Xq[0X02]]=kX[0X0007];Xq=Re[bX];do bX=bX+0x001;end;bX=Xq[6];else do kX[0X6]=oX[Xq[0X2]];end;do Xq=Re[bX];end;bX=bX+1;do(kX)[0X6]=kX[6][Xq[0X00005]];end;do bX=bX+0X01;end;bX=bX+0x1;Xq=Re[bX];bX=bX+1;do(oX)[Xq[2]]=kX[0X6];end;Xq=Re[bX];bX=bX+0X1;do bX=Xq[6];end;end;end;end;end;else do if Eq>=42 then if Eq~=0X2B then bX=Xq[0X6];else kX[13]=oX[Xq[2]];bX=bX+1;bX=bX+0X1;Xq=Re[bX];bX=bX+1;(kX)[13]=kX[0Xd][Xq[5]];bX=bX+0X1;bX=bX+0x1;Xq=Re[bX];bX=bX+1;do(kX)[13]=kX[0x00d][Xq[5]];end;do Xq=Re[bX];end;do bX=bX+0X00001;end;if kX[11]==kX[13]then else bX=Xq[0x7];end;end;else do if Eq~=0X29 then(kX)[13]=oX[Xq[2]];do bX=bX+1;end;bX=bX+0X01;Xq=Re[bX];local CY=14;bX=bX+1;kX[13]=kX[0X0d][Xq[0X5]];bX=bX+0X01;bX=bX+1;Xq=Re[bX];bX=bX+0X00001;(kX)[0Xe]=oX[Xq[2]];do Xq=Re[bX];end;bX=bX+0x00001;do(kX)[0Xe]=kX[0X0e][Xq[0X0005]];end;bX=bX+1;bX=bX+1;do Xq=Re[bX];end;bX=bX+0X1;(kX)[0X00F]=kX[0X8][Xq[0X00005]];bX=bX+1;(kX)[CY]=kX[CY](kX[CY+0x001]);do nX=CY;end;Xq=Re[bX];bX=bX+0x1;kX[13][Xq[0X2]]=kX[0xe];Xq=Re[bX];bX=bX+0X1;kX[13]=oX[Xq[2]];Xq=Re[bX];bX=bX+1;kX[13]=kX[13][Xq[0X05]];bX=bX+0X1;bX=bX+1;Xq=Re[bX];bX=bX+0X1;do(kX)[0XE]=kX[8][Xq[5]];end;do bX=bX+1;end;do bX=bX+1;end;Xq=Re[bX];bX=bX+1;kX[13][Xq[0X2]]=kX[0X0000E];do Xq=Re[bX];end;do bX=bX+0X1;end;bX=Xq[6];else do kX[0X2]=oX[Xq[2]];end;do bX=bX+0x1;end;bX=bX+1;Xq=Re[bX];bX=bX+0X1;kX[0x0003]=Xq[0X2];bX=bX+0X001;local Vb=0X2;(kX[Vb])(kX[Vb+0X1]);do nX=Vb-0X001;end;Xq=Re[bX];bX=bX+1;bX=Xq[6];end;end;end;end;end;end;else if not(Eq>=32)then if Eq>=0X01E then if Eq==0X1F then local Ao=(je[Xq[6]]);local Do=(Ao[0x08]);local co=(nil);local Fo=(#Do);if Fo>0X0 then co={};do for fo=1,Fo do local po=(Do[fo]);if po[0X0001]~=0X00000 then co[fo-1]=ve[po[2]];else(co)[fo-1]={kX,po[0X00002]};end;end;end;(A)(De,co);end;do kX[Xq[0x00007]]=NC(co,oX,Ao);end;else(kX)[6]=oX[Xq[0x02]];Xq=Re[bX];bX=bX+1;kX[0X00006]=kX[0X6][Xq[5]];do Xq=Re[bX];end;bX=bX+0x1;(kX)[0X6]=kX[0X006][Xq[5]];bX=bX+0x0001;bX=bX+0x001;Xq=Re[bX];bX=bX+0X1;do if kX[0X6]~=Xq[0x0005]then bX=Xq[0X7];end;end;end;else kX[Xq[0X07]]={I({},1,Xq[0X6])};end;else if not(Eq>=0X22)then if Eq~=33 then if not(not(kX[Xq[0X00006]]<Xq[5]))then else do bX=Xq[7];end;end;else(kX)[7]=kX[0X6];do Xq=Re[bX];end;bX=bX+1;do kX[8]=Xq[2];end;local Pt=7;bX=bX+0x0001;(kX[Pt])(kX[Pt+0X1]);nX=Pt-0X00001;Xq=Re[bX];bX=bX+0X1;bX=Xq[0X6];end;else if Eq~=0X00023 then kX[3]=oX[Xq[2]];bX=bX+0X1;do bX=bX+0X01;end;Xq=Re[bX];bX=bX+0X1;(kX)[0X3]=kX[3][Xq[0X5]];Xq=Re[bX];bX=bX+1;do(kX)[3]=kX[0x003][Xq[5]];end;bX=bX+1;do bX=bX+1;end;Xq=Re[bX];do bX=bX+0X01;end;(kX)[0x3]=kX[0x003][Xq[5]];Xq=Re[bX];bX=bX+1;bX=Xq[0x6];else local Ol,Hl=Xq[7],Xq[6];do if Hl~=0X0 then nX=Ol+Hl-0X01;end;end;local Rl,sl=nil,nil;local Zl=Xq[0X01];do if Hl==1 then Rl,sl=rC(kX[Ol]());else Rl,sl=rC(kX[Ol](I(kX,Ol+0X1,nX)));end;end;do if Zl~=0X1 then if Zl~=0X0 then do Rl=Ol+Zl-0X00002;end;do nX=Rl+0X1;end;else Rl=Rl+Ol-1;nX=Rl;end;local s9=0X0;for qX=Ol,Rl do do s9=s9+0x1;end;kX[qX]=sl[s9];end;else nX=Ol-0x1;end;end;end;end;end;end;end;else if not(Eq>=14)then if Eq<0X7 then if Eq>=0X3 then if Eq<0x00005 then do if Eq==4 then local fV=(Xq[7]);local xV,QV,WV=kX[fV]();if xV then do kX[fV+1]=QV;end;kX[fV+2]=WV;bX=Xq[6];end;else(kX)[12]=oX[Xq[2]];Xq=Re[bX];bX=bX+0X00001;(kX)[0XD]=kX[8][Xq[5]];do bX=bX+1;end;bX=bX+0X1;Xq=Re[bX];do bX=bX+1;end;kX[0XC][Xq[0X2]]=kX[13];Xq=Re[bX];bX=bX+0X1;(kX)[0xC]=oX[Xq[2]];bX=bX+0X00001;bX=bX+0X1;Xq=Re[bX];do bX=bX+1;end;kX[0X000D]=oX[Xq[0X2]];bX=bX+1;bX=bX+0x1;local yE=13;Xq=Re[bX];bX=bX+1;(kX)[13]=kX[13][Xq[5]];Xq=Re[bX];bX=bX+1;do(kX)[14]=kX[0X08][Xq[5]];end;bX=bX+1;do bX=bX+0X01;end;bX=bX+0x1;(kX)[yE]=kX[yE](kX[yE+1]);nX=yE;Xq=Re[bX];do bX=bX+0x1;end;kX[12][Xq[2]]=kX[13];Xq=Re[bX];bX=bX+0X001;bX=Xq[6];end;end;else if Eq~=0X06 then kX[12]=oX[Xq[2]];Xq=Re[bX];local Js=kX[12];do bX=bX+1;end;local As=(12);do kX[As+1]=Js;end;do kX[As]=Js[Xq[5]];end;bX=bX+0x1;kX[0X0E]=kX[11];do bX=bX+1;end;As=0XC;do kX[As]=kX[As](kX[As+1],kX[As+2]);end;nX=As;do Xq=Re[bX];end;do bX=bX+1;end;if not kX[0X0000C]then bX=Xq[6];end;else for FD=Xq[7],Xq[0X00006]do(kX)[FD]=nil;end;end;end;else if Eq>=0x1 then if Eq==2 then(kX)[16]=kX[15];bX=bX+1;kX[0X005][kX[0XE]]=kX[0X10];Xq=Re[bX];do bX=bX+1;end;bX=Xq[6];else kX[Xq[7]][kX[Xq[6]]]=kX[Xq[1]];end;else(kX)[0X0006]=oX[Xq[0x2]];bX=bX+1;do bX=bX+0X001;end;Xq=Re[bX];bX=bX+0x00001;kX[7]=oX[Xq[0X2]];Xq=Re[bX];do bX=bX+1;end;(kX)[0X00007]=kX[7][Xq[0X05]];bX=bX+1;do bX=bX+0X1;end;Xq=Re[bX];bX=bX+0X0001;local cR=(7);(kX)[0X0008]=Xq[0X2];do Xq=Re[bX];end;bX=bX+0X1;(kX)[9]=Xq[2];Xq=Re[bX];do bX=bX+0X1;end;kX[0X0A]=Xq[2];bX=bX+1;do nX=cR+4-1;end;(kX)[cR]=kX[cR](I(kX,cR+1,nX));nX=cR;Xq=Re[bX];bX=bX+1;kX[0X006][Xq[2]]=kX[0X7];Xq=Re[bX];bX=bX+0x0001;bX=Xq[6];end;end;else do if not(Eq>=10)then do if Eq<8 then kX[14]=kX[13][Xq[0X5]];bX=bX+0X001;kX[14]=kX[2]-kX[0xe];Xq=Re[bX];bX=bX+0X0001;if not(kX[0xe]<kX[3])then bX=Xq[7];end;else if Eq==0X00009 then(kX)[0x00C]=oX[Xq[0X2]];bX=bX+0X1;do bX=bX+1;end;Xq=Re[bX];bX=bX+0X1;(kX)[0XC]=kX[12][Xq[0X005]];bX=bX+1;bX=bX+0X1;Xq=Re[bX];bX=bX+1;if kX[11]~=kX[0X000c]then bX=Xq[7];end;else do kX[0X0002]=oX[Xq[2]];end;bX=bX+0X0001;bX=bX+1;Xq=Re[bX];do bX=bX+0X1;end;kX[0X0002]=kX[2][Xq[5]];do bX=bX+1;end;(kX)[0X3]=kX[0];Xq=Re[bX];bX=bX+0X1;if kX[3]then bX=Xq[6];end;end;end;end;else if not(Eq>=12)then if Eq==11 then(kX)[Xq[7]]=G(kX[Xq[0X06]],kX[Xq[0x1]]);else if not(kX[Xq[0X0007]])then else bX=Xq[6];end;end;else do if Eq~=0XD then kX[0X000D]=kX[8][kX[0x0C]];bX=bX+0X1;bX=bX+0X01;Xq=Re[bX];bX=bX+0X1;do(kX)[0x0e]=kX[0Xd][Xq[5]];end;bX=bX+1;bX=bX+1;Xq=Re[bX];bX=bX+1;if not(kX[14]<=kX[2])then bX=Xq[7];end;else kX[9]=oX[Xq[0X02]];bX=bX+0X1;bX=bX+1;Xq=Re[bX];do bX=bX+0x001;end;kX[0x0A]=kX[8][Xq[0X00005]];bX=bX+1;do bX=bX+1;end;bX=bX+1;local Tu=(0x2);local ku=0X9;local Qu=(4);if Tu~=0 then nX=ku+Tu-0X1;end;local qu,du=nil,(nil);if Tu==1 then qu,du=rC(kX[ku]());else do qu,du=rC(kX[ku](I(kX,ku+0X00001,nX)));end;end;do if Qu==1 then nX=ku-0x001;else if Qu==0X0000 then qu=qu+ku-0X00001;do nX=qu;end;else qu=ku+Qu-0X2;do nX=qu+0X1;end;end;local Za=0;for BS=ku,qu do Za=Za+1;kX[BS]=du[Za];end;end;end;do bX=bX+1;end;bX=bX+0x1;Xq=Re[bX];do bX=bX+1;end;ku=0X09;local pu=g(function(...)(d)();do for Ek,ok in...do d(true,Ek,ok);end;end;end);pu(kX[ku],kX[ku+1],kX[ku+2]);nX=ku;(kX)[ku]=pu;bX=Xq[6];end;end;end;end;end;end;else do if Eq>=21 then if Eq<25 then if not(Eq>=23)then do if Eq~=22 then kX[6]=oX[Xq[0x2]];bX=bX+0x1;do bX=bX+1;end;Xq=Re[bX];bX=bX+1;kX[7]=oX[Xq[2]];Xq=Re[bX];do bX=bX+1;end;kX[0X7]=kX[7][Xq[5]];do Xq=Re[bX];end;bX=bX+1;kX[8]=Xq[2];Xq=Re[bX];bX=bX+1;local Xy=(0X0007);do(kX)[9]=Xq[0X2];end;Xq=Re[bX];bX=bX+1;kX[0Xa]=Xq[2];do bX=bX+0X01;end;nX=Xy+0x04-1;kX[Xy]=kX[Xy](I(kX,Xy+1,nX));do nX=Xy;end;do Xq=Re[bX];end;bX=bX+1;do(kX[0X6])[Xq[2]]=kX[0X07];end;do Xq=Re[bX];end;bX=bX+1;bX=Xq[6];else(kX)[6]=oX[Xq[0X2]];bX=bX+1;local OI=0x0006;do bX=bX+1;end;bX=bX+1;(kX)[6]=#kX[0x6];do Xq=Re[bX];end;do bX=bX+1;end;(kX)[0X00007]=Xq[0X2];Xq=Re[bX];bX=bX+0x1;kX[0x8]=Xq[2];Xq=Re[bX];do bX=bX+0x0001;end;local DI=kX[OI+2];local pI,zI=kX[OI],kX[OI+1];(kX)[OI]=g(function()for ll=pI,zI,DI do(d)(true,ll);end;end);do bX=Xq[0X6];end;end;end;else if Eq~=0x18 then do if not kX[Xq[7]]then bX=Xq[0X00006];end;end;else local zm=Xq[7];local Rm=(kX[zm+0X2]);local Dm,Am=kX[zm],kX[zm+0X001];do kX[zm]=g(function()for aV=Dm,Am,Rm do(d)(true,aV);end;end);end;bX=Xq[0X6];end;end;else if Eq<0X001B then if Eq~=26 then do kX[6]=oX[Xq[0X2]];end;bX=bX+0X1;do bX=bX+0X1;end;Xq=Re[bX];bX=bX+1;do(kX)[6]=kX[6][Xq[0X05]];end;Xq=Re[bX];bX=bX+0X0001;(kX)[0X7]=oX[Xq[2]];do bX=bX+1;end;bX=bX+0X1;Xq=Re[bX];bX=bX+1;kX[8]=Xq[0X2];Xq=Re[bX];bX=bX+0X1;kX[9]=kX[5][Xq[5]];bX=bX+0x1;bX=bX+1;local BP=(0X6);bX=bX+1;nX=BP+0X4-0X1;kX[BP](I(kX,BP+0X0001,nX));nX=BP-1;bX=bX+1;bX=bX+1;Xq=Re[bX];bX=bX+0X01;do bX=Xq[0x6];end;else end;else if Eq==0X1C then kX[Xq[7]]=kX[Xq[0x0006]]^kX[Xq[0x1]];else(kX)[0X6]=Xq[0X2];local Ox=(6);do Xq=Re[bX];end;bX=bX+0X1;local qx=(kX[6]);do kX[Ox+0X0001]=qx;end;(kX)[Ox]=qx[Xq[0X5]];Xq=Re[bX];do bX=bX+0X1;end;(kX)[8]=oX[Xq[2]];bX=bX+1;bX=bX+0X00001;do Xq=Re[bX];end;do bX=bX+1;end;kX[0X8]=kX[8][Xq[5]];bX=bX+0x1;Ox=0X006;do kX[Ox]=kX[Ox](kX[Ox+1],kX[Ox+2]);end;nX=Ox;do bX=bX+1;end;bX=bX+0X0001;do Xq=Re[bX];end;do bX=bX+0X1;end;if kX[6]then bX=Xq[6];end;end;end;end;else if Eq>=0x11 then if Eq<0x13 then if Eq==0X12 then kX[0X6]=oX[Xq[0X2]];Xq=Re[bX];bX=bX+0X1;kX[7]=oX[Xq[2]];Xq=Re[bX];local G3=(0x4);bX=bX+0X0001;(kX)[7]=kX[0X7][Xq[5]];do bX=bX+1;end;bX=bX+1;Xq=Re[bX];bX=bX+0X1;kX[0X7]=kX[7][Xq[5]];bX=bX+0x1;local Y3=6;bX=bX+0X1;bX=bX+1;local I3=(2);if I3==0X0 then else nX=Y3+I3-0x00001;end;local W3,V3=nil,nil;if I3~=0X1 then W3,V3=rC(kX[Y3](I(kX,Y3+1,nX)));else W3,V3=rC(kX[Y3]());end;if G3~=1 then if G3==0 then W3=W3+Y3-0X1;do nX=W3;end;else W3=Y3+G3-2;nX=W3+1;end;local Zp=(0x000);for u0=Y3,W3 do Zp=Zp+1;kX[u0]=V3[Zp];end;else nX=Y3-1;end;Xq=Re[bX];bX=bX+1;do Y3=0x0006;end;local C3=g(function(...)d();for xI,iI in...do(d)(true,xI,iI);end;end);(C3)(kX[Y3],kX[Y3+0x001],kX[Y3+2]);nX=Y3;kX[Y3]=C3;bX=Xq[6];else(kX)[Xq[0X07]]=kX[Xq[6]]>kX[Xq[0X001]];end;else do if Eq~=0X014 then(kX)[0X000E]=oX[Xq[2]];bX=bX+1;do bX=bX+0X1;end;do Xq=Re[bX];end;bX=bX+1;(kX)[0XE]=kX[0X000E][Xq[0X5]];Xq=Re[bX];do bX=bX+1;end;(kX)[15]=kX[13][Xq[5]];bX=bX+0X0001;local lm=(0XE);bX=bX+1;Xq=Re[bX];bX=bX+0X0001;kX[0X10]=oX[Xq[2]];bX=bX+0x00001;do bX=bX+1;end;bX=bX+0x1;do(kX)[lm]=kX[lm](kX[lm+0X1],kX[lm+0X2]);end;nX=lm;do bX=bX+0X00001;end;bX=bX+1;bX=bX+1;do kX[0XF]={};end;Xq=Re[bX];bX=bX+1;kX[0x10]=oX[Xq[2]];bX=bX+0X001;(kX)[0X011]=kX[0X7];bX=bX+0X1;lm=16;do(kX)[lm]=kX[lm](kX[lm+0X1]);end;do nX=lm;end;Xq=Re[bX];bX=bX+1;kX[0xf][Xq[2]]=kX[0X10];Xq=Re[bX];bX=bX+1;kX[16]=oX[Xq[0X2]];bX=bX+1;(kX)[17]=kX[0Xc];bX=bX+1;lm=0X0010;(kX)[lm]=kX[lm](kX[lm+0X1]);nX=lm;do bX=bX+0X1;end;bX=bX+1;Xq=Re[bX];bX=bX+0X1;(kX[15])[Xq[2]]=kX[0x00010];Xq=Re[bX];bX=bX+0X00001;kX[0xf][Xq[0X2]]=kX[14];Xq=Re[bX];bX=bX+0X0001;do kX[16]=kX[0Xd][Xq[0X05]];end;do Xq=Re[bX];end;bX=bX+0X1;kX[15][Xq[2]]=kX[0x10];Xq=Re[bX];bX=bX+1;kX[0x0010]=oX[Xq[0X2]];bX=bX+1;do bX=bX+0x001;end;Xq=Re[bX];do bX=bX+1;end;kX[0X10]=kX[0x0010][Xq[5]];do bX=bX+0X1;end;(kX)[0x00011]=kX[4];bX=bX+1;kX[18]=kX[0Xe];bX=bX+1;lm=16;kX[lm]=kX[lm](kX[lm+0X1],kX[lm+0X2]);nX=lm;bX=bX+0X0001;bX=bX+0x01;Xq=Re[bX];do bX=bX+1;end;if not(not kX[0x10])then else bX=Xq[6];end;else do kX[6]=oX[Xq[2]];end;bX=bX+0X1;bX=bX+0X1;Xq=Re[bX];bX=bX+1;kX[6]=kX[0X6][Xq[0x5]];Xq=Re[bX];do bX=bX+1;end;do if kX[6]~=Xq[0X0005]then bX=Xq[0X07];end;end;end;end;end;else do if not(Eq>=0X0000f)then do(kX)[6]=oX[Xq[0X002]];end;Xq=Re[bX];bX=bX+1;(kX)[6]=kX[6][Xq[5]];do bX=bX+1;end;do bX=bX+1;end;Xq=Re[bX];do bX=bX+1;end;if not kX[6]then do bX=Xq[0x6];end;end;else do if Eq~=16 then kX[14]=kX[13][Xq[5]];bX=bX+0X1;do bX=bX+0X00001;end;Xq=Re[bX];bX=bX+0X1;local uK=(15);kX[15]=oX[Xq[0X2]];bX=bX+1;bX=bX+0X1;Xq=Re[bX];bX=bX+1;kX[15]=kX[0XF][Xq[0X0005]];bX=bX+1;bX=bX+0X1;Xq=Re[bX];bX=bX+0X0001;do kX[16]=kX[0xD][Xq[0X5]];end;do bX=bX+0X1;end;do bX=bX+1;end;Xq=Re[bX];bX=bX+0X1;kX[17]=oX[Xq[0X02]];bX=bX+1;do(kX)[uK]=kX[uK](kX[uK+0X001],kX[uK+2]);end;do nX=uK;end;bX=bX+1;bX=bX+1;do bX=bX+0x1;end;do(kX)[0X000E]=kX[0Xe][kX[0Xf]];end;bX=bX+0X1;bX=bX+0X1;Xq=Re[bX];bX=bX+0x1;if kX[14]==Xq[0X5]then bX=Xq[0X07];end;else kX[0X6]=oX[Xq[0x2]];bX=bX+0X0001;bX=bX+0X1;Xq=Re[bX];bX=bX+0x1;local m3=0X7;(kX)[7]=oX[Xq[0X2]];Xq=Re[bX];bX=bX+1;kX[0X7]=kX[0X7][Xq[5]];Xq=Re[bX];bX=bX+0x1;do kX[8]=Xq[0X2];end;do Xq=Re[bX];end;bX=bX+0x01;do(kX)[9]=Xq[0X2];end;Xq=Re[bX];do bX=bX+1;end;do(kX)[0Xa]=Xq[0X2];end;bX=bX+1;nX=m3+0x04-1;do kX[m3]=kX[m3](I(kX,m3+0x00001,nX));end;nX=m3;Xq=Re[bX];bX=bX+0X1;do kX[0X6][Xq[0X02]]=kX[7];end;Xq=Re[bX];bX=bX+0X001;bX=Xq[0X0006];end;end;end;end;end;end;end;end;end;end;end);if DX then if lX then do if WX==0x1 then return kX[tX]();else return kX[tX](I(kX,tX+0X00001,nX));end;end;elseif tX then return I(kX,tX,WX);end;else if f(lX)=='\s\116rin\103'then if not(e(lX,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(e(lX,"^.-:%d+: "))then b(lX,0);else(b)('L\117\114ap\h\032\Sc\114\105\112\116\:'..(Ae[bX-0X1]or"(internal)")..": "..r(lX),0X00);end;else(b)(lX,0);end;end;end;else fe=function(...)local t7=(0X01);local y7={};local P7=(m());local s7,q7=rC(...);local Q7={[1]=ce,[0X2]=y7};s7=s7-1;for Bq=0x0,s7 do if he>Bq then do(y7)[Bq]=q7[Bq+1];end;else break;end;end;local a7,z7=(P7==F and Le or P7),0;if not ge then do q7=nil;end;elseif xe then y7[he]={n=s7>=he and s7-he+1 or 0,I(q7,he+0x1,s7+1)};end;if a7==P7 then else(i)(fe,a7);end;local r7,W7,v7,D7=j(function()do while true do local gP=Re[t7];local fP=gP[0X4];t7=t7+0X00001;if fP>=0x7 then do if not(fP<11)then if fP<13 then if fP==12 then if y7[gP[7]]then t7=gP[6];end;else(y7)[gP[7]]=a7[gP[2]];end;else if fP==14 then(y7)[gP[0X007]]=y7[gP[6]]-y7[gP[0x1]];else local i_=(gP[7]);local h_,V_=y7[i_]();do if h_ then t7=gP[0X6];y7[i_+3]=V_;end;end;end;end;else if not(fP<0X9)then if fP~=0XA then(y7)[0X000]=a7[gP[2]];gP=Re[t7];t7=t7+1;local ov,Nv=0X0,y7[0x0000];(y7)[ov+1]=Nv;(y7)[ov]=Nv[gP[0X05]];gP=Re[t7];do t7=t7+1;end;y7[0X002]=gP[2];t7=t7+1;ov=0X0000;y7[ov]=y7[ov](y7[ov+0X1],y7[ov+0X002]);z7=ov;do t7=t7+0X1;end;t7=t7+1;do gP=Re[t7];end;t7=t7+1;do(y7)[1]=a7[gP[0X2]];end;t7=t7+0X0001;t7=t7+0X00001;gP=Re[t7];t7=t7+1;do y7[0X001]=y7[0X1][gP[5]];end;do t7=t7+1;end;t7=t7+0X0001;gP=Re[t7];local Ov=(je[gP[6]]);t7=t7+0X1;local Ev=Ov[0X0008];local fv=(nil);local pv=(#Ev);if pv>0 then fv={};for LE=0X1,pv do local cE=Ev[LE];do if cE[1]~=0 then do(fv)[LE-1]=ve[cE[0X2]];end;else do(fv)[LE-0X1]={y7,cE[0X02]};end;end;end;end;A(De,fv);end;(y7)[2]=NC(fv,a7,Ov);t7=t7+1;ov=1;y7[ov](y7[ov+0x1]);z7=ov-1;t7=t7+1;repeat local Gj,Yj=De,y7;do if not(#Gj>0)then else local jJ=({});for nJ,dJ in D,Gj do for dP,cP in D,dJ do do if cP[1]==Yj and cP[2]>=0x0 then local es=cP[0x2];if not(not jJ[es])then else(jJ)[es]={Yj[es]};end;cP[0x001]=jJ[es];cP[0X0002]=0X1;end;end;end;end;end;end;until true;do return;end;else t7=gP[6];end;else do if fP==8 then local Wy=(gP[0X7]);local fy,By=y7[Wy+1],(y7[Wy+2]);local Ty=(y7[Wy]);y7[Wy]=g(function()for vy=Ty,fy,By do(d)(true,vy);end;end);t7=gP[0X6];else local mS=(gP[7]);local WS=gP[1];local eS=(gP[0X00006]);if eS~=0X0 then z7=mS+eS-1;end;local fS,AS=nil,nil;if eS~=0X1 then fS,AS=rC(y7[mS](I(y7,mS+1,z7)));else fS,AS=rC(y7[mS]());end;if WS==0x0001 then z7=mS-0X1;else if WS==0X0000 then fS=fS+mS-1;z7=fS;else fS=mS+WS-0X2;do z7=fS+0x1;end;end;local Yw=(0X0);for q8=mS,fS do Yw=Yw+1;y7[q8]=AS[Yw];end;end;end;end;end;end;end;else if fP>=3 then if fP>=0X00005 then do if fP~=0X6 then else y7[gP[7]]=gP[0x2];end;end;else if fP~=4 then local SQ=(je[gP[6]]);local oQ=nil;local IQ=SQ[0x00008];local GQ=#IQ;do if not(GQ>0)then else oQ={};do for Ij=0x001,GQ do local jj=(IQ[Ij]);do if jj[0X1]~=0 then do oQ[Ij-0X1]=ve[jj[0X2]];end;else(oQ)[Ij-0X1]={y7,jj[2]};end;end;end;end;(A)(De,oQ);end;end;(y7)[gP[7]]=NC(oQ,a7,SQ);else do y7[gP[7]]={I({},1,gP[6])};end;end;end;else if not(fP>=0X01)then do repeat local YX,GX,SX=De,y7,gP[0X7];if not(#YX>0)then else local TZ={};for lE,TE in D,YX do for oa,pa in D,TE do if not(pa[1]==GX and pa[0X2]>=SX)then else local il=(pa[2]);do if not TZ[il]then TZ[il]={GX[il]};end;end;(pa)[1]=TZ[il];(pa)[2]=1;end;end;end;end;until true;end;else if fP==2 then y7[gP[0x00007]]=y7[gP[6]]^y7[gP[1]];else for UP=gP[7],gP[0X06]do(y7)[UP]=nil;end;end;end;end;end;end;end;end);do if not(r7)then if f(W7)~="string"then b(W7,0X00);else if not(e(W7,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(e(W7,"\^.\-\:%d+\:\032"))then(b)(W7,0X0);else(b)("Luraph Script:"..(Ae[t7-0X1]or'\(\in\116e\114n\097\108)')..'\058\032'..r(W7),0x0000);end;end;else if W7 then do if D7==1 then return y7[v7]();else return y7[v7](I(y7,v7+1,z7));end;end;elseif not(v7)then else return I(y7,v7,D7);end;end;end;end;end;end;else fe=function(...)local md,Nd=0X00001,{};local Cd=(m());local Fd,Zd={[1]=ce,[0X2]=Nd},(0X0);local Vd,jd=rC(...);local Yd=((Cd==F and Le or Cd));Vd=Vd-0X1;for UI=0X0000,Vd do do if not(he>UI)then break;else(Nd)[UI]=jd[UI+1];end;end;end;if not ge then jd=nil;elseif xe then Nd[he]={n=Vd>=he and Vd-he+1 or 0,I(jd,he+0X001,Vd+0X1)};end;if Yd==Cd then else i(fe,Yd);end;local Dd,wd,Xd,od=j(function()while true do local iz=(Re[md]);local mz=iz[4];md=md+0X001;if mz>=22 then do if not(mz<33)then do if mz<0X27 then if not(mz>=36)then if mz>=0X00022 then if mz==35 then repeat local rX,OX=De,(Nd);if#rX>0X00000 then local yL={};for ZV,qV in D,rX do for yM,gM in D,qV do if gM[1]==OX and gM[2]>=0 then local pP=gM[0X2];if not yL[pP]then yL[pP]={OX[pP]};end;gM[0X1]=yL[pP];gM[2]=1;end;end;end;end;until true;return;else(Nd)[0x3]=Yd[iz[0X0002]];do iz=Re[md];end;md=md+0x1;do Nd[3][iz[0X2]]=iz[5];end;iz=Re[md];do md=md+1;end;do md=iz[6];end;end;else Nd[0X2]=Yd[iz[2]];md=md+1;do md=md+1;end;iz=Re[md];md=md+1;do(Nd)[0x2]=Nd[0X2][iz[5]];end;do md=md+0X1;end;md=md+1;iz=Re[md];md=md+0x1;if not(not Nd[2])then else md=iz[0x6];end;end;else if not(mz<0X25)then if mz==38 then(Nd)[0x0003]=false;iz=Re[md];md=md+1;do Yd[iz[2]]=Nd[0x3];end;iz=Re[md];md=md+1;Nd[0X3]=Yd[iz[2]];local Yz=0x0003;do iz=Re[md];end;md=md+0X1;Nd[0x00004]=iz[0X0002];md=md+0X01;(Nd)[Yz]=Nd[Yz](Nd[Yz+0x01]);Zd=Yz;md=md+1;md=md+1;iz=Re[md];md=md+1;if not(not Nd[3])then else md=iz[6];end;else if Nd[iz[7]]then md=iz[0X6];end;end;else(Nd)[3]=Yd[iz[2]];md=md+1;md=md+0X0001;iz=Re[md];md=md+1;do(Nd)[0X0003]=Nd[0x3][iz[0X5]];end;do md=md+0X1;end;do md=md+0X001;end;do iz=Re[md];end;md=md+0x1;Nd[3]=Nd[0x3][iz[5]];iz=Re[md];do md=md+1;end;(Nd)[3]=Nd[3][iz[0X5]];iz=Re[md];do md=md+0X1;end;if not(iz[2]<=Nd[3])then md=iz[7];end;end;end;else if mz<0x2a then do if not(mz>=0X28)then Nd[2]=Yd[iz[2]];iz=Re[md];md=md+1;(Nd)[2]=Nd[0X2][iz[0X00005]];do iz=Re[md];end;md=md+0X001;if not(Nd[0x002])then else md=iz[6];end;else if mz~=41 then(Nd)[0x4]=Nd[0X2][iz[5]];md=md+1;do md=md+0X1;end;iz=Re[md];md=md+1;Nd[4]=Nd[0X4][iz[0x5]];iz=Re[md];md=md+1;md=iz[6];else Nd[0X04]=Yd[iz[0X2]];do md=md+1;end;md=md+1;md=md+0X00001;Zd=0X00004;(Nd)[Zd]=Nd[Zd]();md=md+0x00001;do md=md+1;end;do iz=Re[md];end;do md=md+1;end;if Nd[4]then do md=iz[6];end;end;end;end;end;else if mz>=43 then if mz==44 then(Nd)[0x2]=Yd[iz[0X2]];iz=Re[md];do md=md+0X1;end;(Nd[2])[iz[0X2]]=iz[5];iz=Re[md];md=md+1;md=iz[6];else Nd[0x3]=true;iz=Re[md];do md=md+0X1;end;(Yd)[iz[2]]=Nd[3];iz=Re[md];do md=md+1;end;md=iz[0x6];end;else(Nd)[iz[0X7]]=Yd[iz[0X2]];end;end;end;end;else do if mz<27 then do if not(mz>=0X00018)then do if mz~=23 then(Nd)[0x3]=Yd[iz[0x2]];do iz=Re[md];end;md=md+0X1;Nd[0X003][iz[2]]=iz[5];iz=Re[md];md=md+1;Nd[3]=Yd[iz[0X2]];do md=md+0X001;end;Zd=3;Nd[Zd]();Zd=Zd-0X1;md=md+1;md=md+1;iz=Re[md];md=md+0X001;local Cg=0x3;Nd[0X3]=Yd[iz[2]];iz=Re[md];md=md+1;Nd[4]=Yd[iz[0X2]];md=md+1;Nd[Cg](Nd[Cg+1]);Zd=Cg-1;iz=Re[md];md=md+0x1;md=iz[0x6];else Nd[0X002]=Yd[iz[0X2]];md=md+0x1;md=md+1;iz=Re[md];md=md+1;Nd[0X2]=Nd[0X00002][iz[5]];md=md+0X1;md=md+1;iz=Re[md];md=md+1;if not(Nd[0x2])then else md=iz[6];end;end;end;else if not(mz<25)then if mz==26 then md=iz[0x6];else(Nd)[0X0002]=Yd[iz[0X002]];md=md+1;md=md+1;iz=Re[md];md=md+0X0001;(Nd)[0X3]=iz[2];local mm=(2);md=md+1;Nd[4]=true;md=md+1;Nd[mm]=Nd[mm](Nd[mm+1],Nd[mm+0x2]);Zd=mm;iz=Re[md];md=md+1;if not Nd[2]then md=iz[6];end;end;else(Nd)[0x0]=Yd[iz[0X2]];local p4=0;do iz=Re[md];end;do md=md+0X1;end;(Nd)[0X1]=Yd[iz[0X2]];iz=Re[md];md=md+1;do Nd[0x2]=iz[0X2];end;iz=Re[md];md=md+1;Nd[0X003]=Yd[iz[0X2]];do iz=Re[md];end;md=md+1;(Nd)[0X3]=Nd[3][iz[5]];md=md+1;local E4=(0X00004);if E4~=0 then do Zd=p4+E4-1;end;end;local t4,X4,W4=3,nil,(nil);if E4~=0x001 then do X4,W4=rC(Nd[p4](I(Nd,p4+0X1,Zd)));end;else do X4,W4=rC(Nd[p4]());end;end;do if t4==1 then Zd=p4-1;else do if t4~=0 then X4=p4+t4-2;Zd=X4+0x1;else X4=X4+p4-1;Zd=X4;end;end;local Up=0;for BD=p4,X4 do Up=Up+0X1;do Nd[BD]=W4[Up];end;end;end;end;md=md+0X1;md=md+1;iz=Re[md];md=md+1;if not Nd[0X0]then md=iz[6];end;end;end;end;else do if not(mz<0X1e)then if mz>=0X1f then if mz==0X20 then Nd[3]=Yd[iz[0X02]];md=md+0X001;do md=md+1;end;iz=Re[md];local z4=3;do md=md+0X0001;end;Nd[4]=iz[0X2];md=md+1;do Nd[5]=true;end;md=md+0X01;do Nd[z4]=Nd[z4](Nd[z4+1],Nd[z4+2]);end;Zd=z4;md=md+1;md=md+1;iz=Re[md];md=md+0X00001;if Nd[3]~=iz[0x5]then else md=iz[7];end;else Nd[2]=Yd[iz[2]];local X1=(2);md=md+1;md=md+0X1;iz=Re[md];do md=md+1;end;(Nd)[3]=iz[2];md=md+0X00001;Nd[X1]=Nd[X1](Nd[X1+1]);Zd=X1;iz=Re[md];md=md+1;if not Nd[0X002]then md=iz[6];end;end;else if Nd[iz[0X6]]~=iz[0X05]then md=iz[0X7];end;end;else do if not(mz>=28)then(Nd)[iz[7]]=not Nd[iz[6]];else do if mz~=0X1D then local xF,oF=iz[0x7],iz[0X006];if oF~=0 then Zd=xF+oF-0x1;end;local lF,bF,GF=nil,nil,(iz[1]);if oF~=1 then lF,bF=rC(Nd[xF](I(Nd,xF+0X1,Zd)));else do lF,bF=rC(Nd[xF]());end;end;if GF==0X1 then do Zd=xF-1;end;else if GF~=0x0 then lF=xF+GF-2;Zd=lF+1;else lF=lF+xF-1;Zd=lF;end;local wK=0x0;do for l6=xF,lF do wK=wK+1;do(Nd)[l6]=bF[wK];end;end;end;end;else Nd[5]=Yd[iz[0x2]];md=md+0X1;Zd=0X5;(Nd)[Zd]=Nd[Zd]();do md=md+1;end;do md=md+0X0001;end;iz=Re[md];md=md+0X0001;do if not(Nd[5])then else md=iz[0X00006];end;end;end;end;end;end;end;end;end;end;end;end;else if not(mz>=0X000B)then if not(mz>=5)then if not(mz<2)then do if not(mz>=0X3)then do if Nd[iz[6]]==iz[5]then md=iz[7];end;end;else if mz~=4 then Nd[iz[7]]=Nd[iz[6]]>=Nd[iz[1]];else do for vo=iz[0X0007],iz[6]do Nd[vo]=nil;end;end;end;end;end;else if mz~=1 then Nd[3]=Yd[iz[2]];iz=Re[md];md=md+0X1;Nd[3]=Nd[3][iz[0X5]];md=md+0X1;md=md+0X0001;do iz=Re[md];end;md=md+0X1;do Nd[0X03]=Nd[0x003][iz[5]];end;md=md+0X1;md=md+0X1;iz=Re[md];md=md+0x1;do if not(iz[2]<=Nd[0X3])then do md=iz[0x007];end;end;end;else Nd[0X00003]=Yd[iz[2]];md=md+0X001;do md=md+1;end;iz=Re[md];md=md+1;local Aj,ej=nil,je[iz[0X6]];local lj=ej[8];local Xj=(#lj);do if Xj>0 then Aj={};for SH=0X1,Xj do local fH=(lj[SH]);do if fH[1]~=0 then(Aj)[SH-1]=ve[fH[2]];else Aj[SH-0X1]={Nd,fH[0X2]};end;end;end;A(De,Aj);end;end;(Nd)[0X004]=NC(Aj,Yd,ej);local Oj=0X0003;do md=md+1;end;(Nd[Oj])(Nd[Oj+0X1]);do Zd=Oj-1;end;md=md+0X0001;md=md+0X1;iz=Re[md];md=md+0X1;do md=iz[6];end;end;end;else if mz>=0X00008 then if not(mz<9)then if mz~=10 then Nd[iz[7]]=iz[0x2];else(Nd)[iz[0X00007]]=Nd[iz[0X6]]-Nd[iz[0X00001]];end;else end;else if not(mz>=6)then(Nd)[iz[0x7]]={I({},1,iz[0x6])};else if mz==7 then Nd[iz[0X7]]=k(Nd[iz[0x6]],Nd[iz[1]]);else Nd[iz[0X7]]=T(Nd[iz[6]]);end;end;end;end;else if not(mz<16)then if not(mz<0X13)then if not(mz>=0x14)then Nd[2]=Yd[iz[0X2]];md=md+1;md=md+1;do iz=Re[md];end;do md=md+0X0001;end;do Nd[0X003]=iz[2];end;iz=Re[md];md=md+1;(Nd)[0X4]=iz[0X02];md=md+1;local KH=0X2;do Nd[KH]=Nd[KH](Nd[KH+0X1],Nd[KH+2]);end;Zd=KH;md=md+1;md=md+0X0001;iz=Re[md];md=md+0X1;if Nd[0x0002]then md=iz[0x6];end;else if mz~=21 then if not(not Nd[iz[7]])then else do md=iz[0X6];end;end;else Nd[0X0003]=Yd[iz[0X02]];do md=md+0X1;end;(Nd)[0X004]=Nd[1];do md=md+0X0001;end;local xx=(0X3);(Nd)[xx]=Nd[xx](Nd[xx+1]);Zd=xx;iz=Re[md];md=md+0X0001;if Nd[0x3]~=iz[0X5]then md=iz[0x7];end;end;end;else do if not(mz<17)then if mz~=18 then do Nd[0X2]=Yd[iz[2]];end;iz=Re[md];md=md+1;(Nd[2])[iz[0X2]]=iz[0x5];iz=Re[md];md=md+1;Nd[2]=Yd[iz[0x0002]];md=md+0X1;md=md+0X001;md=md+1;Zd=0X2;(Nd[Zd])();Zd=Zd-1;md=md+0X00001;do repeat local tR,nR=De,Nd;do if not(#tR>0x0)then else local y7=({});for KM,vM in D,tR do for bZ,MZ in D,vM do if not(MZ[0X1]==nR and MZ[2]>=0)then else local P0=(MZ[0X2]);do if not y7[P0]then do(y7)[P0]={nR[P0]};end;end;end;do MZ[0x00001]=y7[P0];end;MZ[0X2]=0X00001;end;end;end;end;end;until true;end;return;else(Nd)[0X0003]=Yd[iz[2]];md=md+0X001;md=md+1;iz=Re[md];md=md+1;(Nd[3])[iz[0X02]]=iz[0x5];iz=Re[md];md=md+1;do(Nd)[0x3]=Yd[iz[0X2]];end;md=md+1;md=md+0X01;do iz=Re[md];end;md=md+1;if Nd[3]then md=iz[6];end;end;else local Wg=nil;local kg=(je[iz[0x00006]]);local Lg=(kg[8]);local Yg=(#Lg);if not(Yg>0X000)then else Wg={};for W8=1,Yg do local k8=Lg[W8];if k8[1]==0 then Wg[W8-1]={Nd,k8[0x2]};else(Wg)[W8-0x1]=ve[k8[2]];end;end;(A)(De,Wg);end;Nd[iz[0X7]]=NC(Wg,Yd,kg);end;end;end;else do if not(mz<13)then if not(mz<0Xe)then if mz~=15 then(Nd)[iz[0X0007]]=L(Nd[iz[6]],Nd[iz[0X0001]]);else(Nd)[0X00002]=Yd[iz[2]];md=md+0X1;do md=md+0X1;end;iz=Re[md];do md=md+0X1;end;Nd[2]=Nd[2][iz[5]];md=md+0x1;md=md+0X1;iz=Re[md];md=md+1;if not(not Nd[0X2])then else md=iz[6];end;end;else(Nd)[0x0004]=Yd[iz[0X2]];iz=Re[md];md=md+0X001;(Nd)[0x00004]=Nd[0X004][iz[0X5]];iz=Re[md];do md=md+0X01;end;if not(Nd[0X4])then else do md=iz[6];end;end;end;else if mz~=12 then local eF=(iz[0x007]);local ZF=(Nd[eF]);local hF=((iz[0X1]-0X1)*0x32);for eT=1,iz[6]do ZF[hF+eT]=Nd[eF+eT];end;else if not(iz[0X002]<=Nd[iz[0x0001]])then md=iz[7];end;end;end;end;end;end;end;end;end);do if Dd then if wd then do if od~=0x00001 then return Nd[Xd](I(Nd,Xd+1,Zd));else return Nd[Xd]();end;end;elseif not(Xd)then else return I(Nd,Xd,od);end;else if f(wd)~="\115\116\114in\103"then b(wd,0X00000);else do if not(e(wd,"\097\116\116\e\109pt\032\116\111\032\yi\el\100 \097\099\114o\s\115\032\me\116\097m\e\116\104\o\100/\C\%\-\cal\l\ b\ou\110d\097\114\y"))then else return coroutine.yield();end;end;if not(e(wd,"^.-:%d+: "))then b(wd,0);else b("L\117r\097\112\h\ S\099r\i\pt:"..(Ae[md-1]or"(internal)").."\058\ "..r(wd),0);end;end;end;end;end;end;end;end;end;end;end;else do if not(me>=0X000B)then do if not(me<0X0005)then if not(me<0x8)then if not(me>=0x9)then fe=function(...)local Ob,tb=0X0000,{};local rb=({[0X2]=tb,[1]=ce});local eb=m();local lb,Jb=1,(eb==F and Le or eb);local Cb,hb=rC(...);do Cb=Cb-0x0001;end;for vT=0X00,Cb do if not(he>vT)then break;else do tb[vT]=hb[vT+1];end;end;end;if not ge then do hb=nil;end;elseif not(xe)then else(tb)[he]={n=Cb>=he and Cb-he+1 or 0X0,I(hb,he+1,Cb+0x1)};end;do if Jb==eb then else i(fe,Jb);end;end;local Mb,bb,wb,nb=j(function()do while true do local oE=(Re[lb]);local GE=(oE[4]);lb=lb+0X1;do if not(GE>=11)then do if GE>=5 then if GE>=8 then if not(GE>=0x9)then if not(tb[oE[0X6]]<tb[oE[1]])then else lb=oE[7];end;else if GE~=0X000a then local KF=(oE[0X007]);local LF=oE[0X006];Ob=KF+LF-0X001;repeat local z3,n3=De,(tb);if not(#z3>0X0)then else local JR=({});for qF,JF in D,z3 do do for BN,nN in D,JF do if nN[1]==n3 and nN[0X00002]>=0x00000 then local km=(nN[2]);if not(not JR[km])then else JR[km]={n3[km]};end;(nN)[0X00001]=JR[km];(nN)[2]=1;end;end;end;end;end;until true;do return true,KF,LF;end;else repeat local Pt,gt=De,tb;do if not(#Pt>0X0)then else local jb=({});for O6,p6 in D,Pt do for Ff,Vf in D,p6 do if not(Vf[0x1]==gt and Vf[0X2]>=0)then else local lY=(Vf[0X2]);do if not jb[lY]then jb[lY]={gt[lY]};end;end;Vf[0X1]=jb[lY];(Vf)[2]=0X01;end;end;end;end;end;until true;do return;end;end;end;else if not(GE<0X6)then if GE~=0X0007 then lb=oE[6];else tb[6]=Jb[oE[0X0002]];do oE=Re[lb];end;lb=lb+1;local MW=(je[oE[0X6]]);local XW=(nil);local YW=MW[8];local bW=#YW;do if not(bW>0x0000)then else do XW={};end;for Nw=1,bW do local Lw=(YW[Nw]);if Lw[0x01]~=0 then do XW[Nw-1]=ve[Lw[2]];end;else(XW)[Nw-1]={tb,Lw[0X2]};end;end;A(De,XW);end;end;(tb)[7]=NC(XW,Jb,MW);oE=Re[lb];do lb=lb+0X1;end;do(tb[0X6])[oE[2]]=tb[7];end;do oE=Re[lb];end;local pW=0X00006;lb=lb+1;local KW=(tb[0]);(tb)[pW+1]=KW;(tb)[pW]=KW[oE[0X5]];do oE=Re[lb];end;lb=lb+1;(tb)[8]=oE[2];oE=Re[lb];lb=lb+0X1;(tb)[0X9]=oE[2];oE=Re[lb];lb=lb+1;(tb)[0XA]=oE[2];lb=lb+0X1;pW=6;Ob=pW+5-1;(tb[pW])(I(tb,pW+1,Ob));Ob=pW-0X1;do lb=lb+1;end;(tb)[0x6]=tb[0x4];do oE=Re[lb];end;lb=lb+0X00001;(tb)[7]=Jb[oE[2]];do lb=lb+1;end;pW=6;(tb[pW])(tb[pW+1]);Ob=pW-0X00001;do oE=Re[lb];end;lb=lb+1;tb[0X6]=Jb[oE[0x2]];oE=Re[lb];lb=lb+1;(tb)[7]=tb[0][oE[5]];oE=Re[lb];lb=lb+0X0001;(tb)[0X07]=tb[7]*oE[5];lb=lb+0X01;do pW=6;end;(tb[pW])(tb[pW+0x00001]);Ob=pW-0X1;oE=Re[lb];lb=lb+0X001;do pW=0X0006;end;KW=tb[0X0];(tb)[pW+0x1]=KW;(tb)[pW]=KW[oE[0X5]];lb=lb+0x01;pW=6;(tb[pW])(tb[pW+0X00001]);Ob=pW-1;lb=lb+1;do lb=lb+0X1;end;do oE=Re[lb];end;lb=lb+1;lb=oE[0x6];end;else if tb[oE[0X7]]then lb=oE[6];end;end;end;else if GE<0x2 then if GE~=0X1 then tb[oE[7]]=Jb[oE[0X2]];else(tb)[6]=Jb[oE[0x0002]];do lb=lb+1;end;(tb)[0X6]=#tb[0X6];oE=Re[lb];lb=lb+1;if not(not(oE[0X2]<tb[0X00006]))then else do lb=oE[7];end;end;end;else do if not(GE<0X03)then if GE~=4 then tb[0X5]=Jb[oE[0x2]];lb=lb+0x1;lb=lb+0X001;do oE=Re[lb];end;lb=lb+1;tb[0X5]=tb[0X05][oE[0X05]];oE=Re[lb];lb=lb+0x00001;lb=oE[0x6];else for sb=oE[7],oE[6]do(tb)[sb]=nil;end;end;else if not(not tb[oE[7]])then else lb=oE[0X6];end;end;end;end;end;end;else if GE>=0X0011 then do if not(GE<0X00014)then if not(GE<0X0015)then do if GE==0X16 then do tb[oE[7]]={I({},0X1,oE[0X6])};end;else(tb)[oE[7]]=tb[oE[6]]/tb[oE[1]];end;end;else end;else do if not(GE<18)then if GE==19 then tb[0X5]=Jb[oE[0X2]];lb=lb+1;lb=lb+1;oE=Re[lb];lb=lb+0X1;tb[0X5]=tb[5][oE[0X5]];oE=Re[lb];lb=lb+1;do if not(tb[0X5])then else lb=oE[0X06];end;end;else(tb)[oE[0X07]]=oE[0x00002];end;else(tb)[oE[0X7]]=tb[oE[6]]<=tb[oE[0X00001]];end;end;end;end;else if not(GE>=0xe)then if GE<0X0c then tb[5]=Jb[oE[0X02]];lb=lb+1;lb=lb+1;oE=Re[lb];do lb=lb+1;end;(tb)[0X05]=tb[5][oE[5]];oE=Re[lb];do lb=lb+0X01;end;if not tb[5]then lb=oE[6];end;else if GE==0X00D then repeat local mm,Im=De,(tb);if#mm>0 then local N7={};for zA,kA in D,mm do for as,js in D,kA do if js[0X1]==Im and js[2]>=0X0 then local UY=(js[2]);do if not(not N7[UY])then else(N7)[UY]={Im[UY]};end;end;(js)[0X1]=N7[UY];js[2]=1;end;end;end;end;until true;return false,oE[0X7],Ob;else tb[5]=Jb[oE[0X02]];do lb=lb+1;end;lb=lb+1;do oE=Re[lb];end;lb=lb+1;(tb)[0X00006]=Jb[oE[2]];do oE=Re[lb];end;lb=lb+1;(tb)[6]=tb[6][oE[5]];do lb=lb+1;end;lb=lb+1;oE=Re[lb];do lb=lb+1;end;do(tb[5])[oE[0X2]]=tb[6];end;oE=Re[lb];lb=lb+1;(tb)[5]=Jb[oE[2]];do oE=Re[lb];end;lb=lb+1;tb[5]=tb[5][oE[0X5]];lb=lb+1;do tb[6]=tb[0];end;do lb=lb+1;end;(tb)[0x07]=tb[0X01];do lb=lb+0X1;end;tb[8]=tb[2];do oE=Re[lb];end;lb=lb+0X1;local nl=5;tb[9]=oE[0X02];lb=lb+0X1;(tb)[0X0000a]=tb[0X4];lb=lb+0X1;local Fl=0x6;Ob=nl+Fl-0x0001;do repeat local YW,ZW=De,tb;if not(#YW>0)then else local tD={};for YJ,sJ in D,YW do for EJ,MJ in D,sJ do if MJ[1]==ZW and MJ[2]>=0x0000 then local Yj=MJ[0x02];if not(not tD[Yj])then else(tD)[Yj]={ZW[Yj]};end;MJ[1]=tD[Yj];MJ[2]=0X01;end;end;end;end;until true;end;return true,nl,Fl;end;end;else if GE>=15 then do if GE~=0X010 then local yl=je[oE[0x0006]];local Hl,Il=yl[0X8],nil;local xl=#Hl;do if xl>0 then Il={};for CN=1,xl do local tN=Hl[CN];if tN[1]~=0X00 then Il[CN-0X1]=ve[tN[0X2]];else(Il)[CN-0X01]={tb,tN[2]};end;end;(A)(De,Il);end;end;tb[oE[0X00007]]=NC(Il,Jb,yl);else local dM,FM=oE[0x7],tb[oE[6]];(tb)[dM+0X1]=FM;(tb)[dM]=FM[oE[0X5]];end;end;else local Of=(oE[7]);local uf,Qf=tb[Of]();if uf then do for Hm=0x1,oE[0x001]do(tb)[Of+Hm]=Qf[Hm];end;end;lb=oE[0X6];end;end;end;end;end;end;end;end;end);if not(Mb)then if f(bb)=="string"then if e(bb,"\097tt\101\mpt to\ \y\i\el\100\ ac\114\o\115\s \m\eta\109\et\h\o\d\047C\%\-\099a\l\108 b\111un\dar\121")then return coroutine.yield();end;if e(bb,'^\.\-\058\%\d\043\:\ ')then(b)("Luraph Script:"..(Ae[lb-0X1]or"\040\in\116\101\114\110\097l\)")..": "..r(bb),0x0);else(b)(bb,0X0);end;else(b)(bb,0X00);end;else do if bb then if nb==0X001 then do return tb[wb]();end;else do return tb[wb](I(tb,wb+0X01,Ob));end;end;elseif wb then return I(tb,wb,nb);end;end;end;end;else if me~=10 then fe=function(...)local jh,qh=1,({});local Vh={[1]=ce,[0X2]=qh};local Uh=(m());local ch,Qh=rC(...);local wh=0X00000;ch=ch-1;local eh=((Uh==F and Le or Uh));for Qz=0X0000,ch do if he>Qz then(qh)[Qz]=Qh[Qz+0x1];else do break;end;end;end;if not ge then do Qh=nil;end;elseif not(xe)then else do qh[he]={n=ch>=he and ch-he+1 or 0X00,I(Qh,he+1,ch+1)};end;end;if eh==Uh then else i(fe,eh);end;local Mh,uh,Kh,Dh=j(function()while true do local f7=(Re[jh]);local U7=(f7[0X4]);jh=jh+0X1;do if not(U7>=0Xa)then if not(U7>=5)then if not(U7<2)then if U7>=0x03 then if U7~=0X4 then repeat local N9,j9,f9=De,qh,(f7[7]);if not(#N9>0x00)then else local LZ={};for wb,Xb in D,N9 do for JW,yW in D,Xb do if not(yW[1]==j9 and yW[0x2]>=f9)then else local F1=(yW[2]);if not LZ[F1]then LZ[F1]={j9[F1]};end;yW[1]=LZ[F1];do(yW)[0X2]=1;end;end;end;end;end;until true;else do repeat local Ub,fb=De,(qh);if not(#Ub>0)then else local gi={};do for is,Ts in D,Ub do for Rd,Zd in D,Ts do if Zd[0X00001]==fb and Zd[0x2]>=0 then local p1=(Zd[0x0002]);if not gi[p1]then gi[p1]={fb[p1]};end;Zd[0X1]=gi[p1];Zd[0X2]=1;end;end;end;end;end;until true;end;local YK=(f7[0x7]);return false,YK,YK;end;else do jh=f7[0x06];end;end;else if U7~=0x1 then qh[f7[7]]=qh[f7[6]]>=qh[f7[1]];else do qh[0X0]=eh[f7[2]];end;f7=Re[jh];do jh=jh+0X001;end;qh[0x1]=eh[f7[2]];do jh=jh+0X00001;end;(qh)[0X00]=qh[0][qh[1]];jh=jh+0X001;qh[0]=not qh[0X0];do f7=Re[jh];end;do jh=jh+1;end;if not(not qh[0X0])then else do jh=f7[0X6];end;end;end;end;else if U7<7 then if U7~=0X6 then do if not(qh[f7[7]])then else jh=f7[6];end;end;else do(qh)[0]=eh[f7[2]];end;jh=jh+0X1;jh=jh+0X1;f7=Re[jh];jh=jh+0x1;(qh)[0X000]=qh[0][f7[0X5]];jh=jh+0X0001;jh=jh+0X1;f7=Re[jh];do jh=jh+1;end;jh=f7[0X0006];end;else if U7>=8 then if U7==0X009 then(qh)[0X00000]=eh[f7[2]];jh=jh+1;do jh=jh+0X01;end;f7=Re[jh];jh=jh+1;qh[0X00000]=qh[0X0][f7[0x5]];jh=jh+0X1;jh=jh+1;do jh=jh+0X001;end;(qh)[0X0]=not qh[0X0000];do f7=Re[jh];end;jh=jh+1;jh=f7[6];else repeat local VB,kB=De,qh;if#VB>0X0 then local nK=({});for DS,US in D,VB do for JX,AX in D,US do do if not(AX[1]==kB and AX[0x00002]>=0X0)then else local qQ=AX[2];if not(not nK[qQ])then else(nK)[qQ]={kB[qQ]};end;(AX)[1]=nK[qQ];(AX)[2]=1;end;end;end;end;end;until true;do return;end;end;else end;end;end;else if U7>=0XF then if U7>=0X000012 then do if U7<0X13 then(qh)[f7[0X7]]={I({},0X1,f7[0X6])};else if U7==20 then local aI=(ve[0]);qh[0X0]=aI[1][aI[2]];do jh=jh+1;end;do jh=jh+1;end;f7=Re[jh];jh=jh+0X01;(qh)[0]=qh[0x0][f7[0x5]];jh=jh+1;do jh=jh+1;end;jh=jh+1;(qh)[0x0]=not qh[0x0];f7=Re[jh];jh=jh+1;do if not(qh[0x00])then else jh=f7[0x6];end;end;else do(qh)[f7[7]]=eh[f7[0X2]];end;end;end;end;else do if not(U7>=0X10)then qh[f7[7]]=f7[0x2];else if U7~=0X11 then(qh)[0X0]=eh[f7[2]];jh=jh+1;do wh=0X0;end;(qh)[wh]=qh[wh]();f7=Re[jh];jh=jh+1;jh=f7[0X6];else do qh[f7[0X7]]=qh[f7[6]]>qh[f7[1]];end;end;end;end;end;else if not(U7>=0Xc)then if U7~=11 then(qh)[f7[7]]=qh[f7[6]];else repeat local PE,JE=De,qh;if#PE>0 then local eL={};for eW,oW in D,PE do do for vE,mE in D,oW do if not(mE[0x00001]==JE and mE[2]>=0)then else local Ch=(mE[0X002]);if not(not eL[Ch])then else do(eL)[Ch]={JE[Ch]};end;end;mE[1]=eL[Ch];mE[0X02]=1;end;end;end;end;end;until true;local Fz=f7[0x7];return false,Fz,Fz+f7[6]-2;end;else if U7>=13 then if U7==14 then do if qh[f7[0X006]]~=qh[f7[0X1]]then do jh=f7[0x7];end;end;end;else local P1=je[f7[6]];local R1=P1[0X8];local g1=#R1;local X1=(nil);if g1>0 then X1={};do for f2=0X1,g1 do local P2=(R1[f2]);if P2[1]~=0 then do X1[f2-0X1]=ve[P2[2]];end;else do(X1)[f2-1]={qh,P2[0X2]};end;end;end;end;(A)(De,X1);end;do qh[f7[0X7]]=NC(X1,eh,P1);end;end;else local QR=(ve[0]);qh[0X0000]=QR[1][QR[0X002]];f7=Re[jh];jh=jh+0X1;do(qh)[0X0]=qh[0X0][f7[0X5]];end;jh=jh+1;jh=jh+0X01;f7=Re[jh];do jh=jh+0X1;end;(qh)[0X00]=qh[0X0]<=f7[5];do f7=Re[jh];end;jh=jh+0x1;do jh=f7[6];end;end;end;end;end;end;end;end);do if Mh then if uh then if Dh~=0X01 then return qh[Kh](I(qh,Kh+0X1,wh));else do return qh[Kh]();end;end;elseif not(Kh)then else return I(qh,Kh,Dh);end;else if f(uh)=="string"then if not(e(uh,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if e(uh,"^.-:%d+: ")then(b)("Luraph Script:"..(Ae[jh-1]or'\(\105\110t\e\114\110\097\108\)')..'\:\ '..r(uh),0x0);else b(uh,0X0);end;end;else(b)(uh,0);end;end;end;end;else do fe=function(...)local fT,ST=0X01,{};local DT={[1]=ce,[0X2]=ST};local UT=m();local bT,BT=rC(...);local KT=(UT==F and Le or UT);bT=bT-1;for S2=0X0,bT do do if he>S2 then(ST)[S2]=BT[S2+0X1];else break;end;end;end;local oT=0;if not ge then do BT=nil;end;elseif not(xe)then else ST[he]={n=bT>=he and bT-he+0X01 or 0,I(BT,he+1,bT+0X01)};end;if KT~=UT then(i)(fe,KT);end;local xT,LT,XT,zT=j(function()while true do local hd=Re[fT];local nd=hd[4];fT=fT+0X1;if not(nd>=7)then if not(nd<3)then do if not(nd>=5)then do if nd==0X4 then local aU=je[hd[0X6]];local TU=aU[0X8];local IU,eU=#TU,(nil);if not(IU>0x0)then else do eU={};end;for SQ=1,IU do local iQ=TU[SQ];if iQ[0X1]==0 then(eU)[SQ-0X00001]={ST,iQ[0X2]};else eU[SQ-1]=ve[iQ[0X02]];end;end;(A)(De,eU);end;ST[hd[7]]=NC(eU,KT,aU);else repeat local HF,aF,sF=De,ST,(hd[0X07]);if#HF>0 then local Jm=({});do for Ii,ki in D,HF do for pX,YX in D,ki do do if not(YX[1]==aF and YX[0x0002]>=sF)then else local ZM=(YX[0X2]);if not(not Jm[ZM])then else Jm[ZM]={aF[ZM]};end;do(YX)[1]=Jm[ZM];end;do YX[0X0002]=0X0001;end;end;end;end;end;end;end;until true;end;end;else if nd~=0X6 then local Yj=(ve[0]);ST[0]=Yj[0X00001][Yj[2]];hd=Re[fT];local Oj=ST[0];fT=fT+0X01;local sj=(0);ST[sj+1]=Oj;do(ST)[sj]=Oj[hd[5]];end;fT=fT+1;sj=0x0;ST[sj](ST[sj+1]);oT=sj-1;fT=fT+0x00001;do repeat local Ji,Oi=De,ST;if#Ji>0 then local xA=({});for xR,kR in D,Ji do for Uf,mf in D,kR do do if not(mf[1]==Oi and mf[0X0002]>=0)then else local Dx=(mf[2]);do if not xA[Dx]then xA[Dx]={Oi[Dx]};end;end;(mf)[0X1]=xA[Dx];mf[0X2]=1;end;end;end;end;end;until true;end;return;else do fT=hd[0X6];end;end;end;end;else if nd<0x1 then do(ST)[hd[0x7]]={I({},1,hd[6])};end;else if nd~=0x2 then local cW=(hd[7]);local qW,hW=ST[cW]();if qW then fT=hd[0X006];ST[cW+3]=hW;end;else(ST[hd[7]])[ST[hd[6]]]=ST[hd[0X0001]];end;end;end;else if nd>=11 then do if not(nd>=0x0000D)then do if nd==12 then for rx=hd[7],hd[6]do ST[rx]=nil;end;else ST[hd[7]]=hd[2];end;end;else do if nd==14 then else local dN=ve[0];(ST)[0X00]=dN[0X1][dN[0x2]];fT=fT+0x01;local jN=0X000;fT=fT+0X00001;do hd=Re[fT];end;local vN=(0X000);do fT=fT+0x01;end;local xN=(ST[0X0]);do ST[jN+0X00001]=xN;end;ST[jN]=xN[hd[0X005]];fT=fT+1;do jN=0;end;(ST[jN])(ST[jN+0X1]);oT=jN-0X1;hd=Re[fT];do fT=fT+0X001;end;do ST[0]=KT[hd[2]];end;fT=fT+0X1;do oT=0x00000;end;ST[oT]();oT=oT-0X0001;hd=Re[fT];fT=fT+0x1;(ST)[0]=KT[hd[0X2]];hd=Re[fT];fT=fT+0X001;(ST)[0x1]=hd[0x2];do hd=Re[fT];end;fT=fT+0X1;(ST)[2]=hd[2];do fT=fT+0X01;end;jN=0X00000;(ST[jN])(ST[jN+0X1],ST[jN+2]);oT=jN-0X1;hd=Re[fT];fT=fT+0X00001;(ST)[0]=hd[0X2];hd=Re[fT];fT=fT+1;do(ST)[1]=hd[0X2];end;hd=Re[fT];fT=fT+0X00001;(ST)[2]=hd[2];hd=Re[fT];fT=fT+1;jN=ST[vN];local AN=(ST[vN+1]);local PN=ST[vN+0X2];ST[vN]=g(function()for Ty=jN,AN,PN do d(true,Ty);end;end);fT=hd[6];end;end;end;end;else if nd<9 then if nd==0X8 then do ST[0X4]=KT[hd[0X2]];end;fT=fT+1;do fT=fT+0X0001;end;hd=Re[fT];do fT=fT+1;end;local x5=0X006;(ST)[0X5]=hd[0X02];hd=Re[fT];fT=fT+0x1;(ST)[0X6]=KT[hd[0x00002]];fT=fT+1;fT=fT+0X1;hd=Re[fT];do fT=fT+0X1;end;ST[0X6]=ST[0X6][hd[0X5]];local S5=(0);hd=Re[fT];fT=fT+1;ST[7]=hd[0X02];hd=Re[fT];fT=fT+0X01;ST[0X00008]=hd[0X2];hd=Re[fT];fT=fT+1;(ST)[0x9]=hd[2];fT=fT+0X0001;local a5=(4);do if a5==0 then else oT=x5+a5-1;end;end;local O5,U5=nil,nil;if a5==0x00001 then O5,U5=rC(ST[x5]());else O5,U5=rC(ST[x5](I(ST,x5+1,oT)));end;do if S5==0X1 then oT=x5-0X00001;else if S5~=0 then O5=x5+S5-0x002;do oT=O5+1;end;else O5=O5+x5-1;oT=O5;end;local ix=0X00000;for oB=x5,O5 do do ix=ix+1;end;do(ST)[oB]=U5[ix];end;end;end;end;fT=fT+1;x5=0X4;(ST[x5])(I(ST,x5+0x00001,oT));do oT=x5-0X1;end;fT=fT+1;do fT=fT+1;end;hd=Re[fT];fT=fT+1;do ST[0X4]=KT[hd[2]];end;fT=fT+1;oT=0X4;(ST[oT])();oT=oT-1;hd=Re[fT];do fT=fT+1;end;fT=hd[6];else ST[hd[7]]=-ST[hd[0X6]];end;else if nd==10 then ST[hd[0X7]]=KT[hd[0x02]];else do(DT)[hd[0X6]]=ST[hd[0x7]];end;end;end;end;end;end;end);if not(xT)then if f(LT)~="string"then(b)(LT,0);else if not(e(LT,"\097ttem\p\116 \116\o\ \121i\e\108\100 ac\114\os\115\ m\et\097me\116\104\o\100\/C\037\-\099\097\l\108 bo\117n\100\097\114y"))then else return coroutine.yield();end;if e(LT,'\^\.-:\037\d\043: ')then(b)("\076\117r\097\112\h \083\c\114i\112\116\058"..(Ae[fT-1]or'\(int\e\114\110\097\l)')..": "..r(LT),0X0);else b(LT,0x0);end;end;else if LT then if zT~=1 then return ST[XT](I(ST,XT+0X001,oT));else do return ST[XT]();end;end;elseif not(XT)then else do return I(ST,XT,zT);end;end;end;end;end;end;end;else if not(me<0X6)then if me==7 then do fe=function(...)local jP,vP=1,({});local FP=m();local wP={[1]=ce,[0X2]=vP};local KP,QP=rC(...);KP=KP-0X1;for nc=0,KP do if not(he>nc)then break;else do vP[nc]=QP[nc+0X01];end;end;end;local TP=0X0;local dP=((FP==F and Le or FP));if not ge then QP=nil;elseif not(xe)then else vP[he]={n=KP>=he and KP-he+1 or 0,I(QP,he+0X1,KP+0X0001)};end;if dP==FP then else(i)(fe,dP);end;local HP,bP,pP,NP=j(function()while true do local qD=Re[jP];local XD=(qD[4]);jP=jP+1;if not(XD<6)then if XD<9 then if XD<7 then do(vP)[qD[0x7]]=vP[qD[6]][vP[qD[1]]];end;else if XD==0X8 then vP[qD[7]]=vP[qD[6]]>vP[qD[0X1]];else local Ev=je[qD[0X6]];local Ov=Ev[8];local Tv=(#Ov);local dv=(nil);if Tv>0 then do dv={};end;for VK=1,Tv do local bK=(Ov[VK]);do if bK[1]~=0 then do(dv)[VK-0X1]=ve[bK[0x02]];end;else(dv)[VK-0X00001]={vP,bK[2]};end;end;end;A(De,dv);end;do(vP)[qD[7]]=NC(dv,dP,Ev);end;end;end;else if XD<0Xa then(vP)[qD[7]]=dP[qD[0x2]];else do if XD~=0XB then vP[0x0]=dP[qD[0x2]];jP=jP+1;do jP=jP+1;end;do qD=Re[jP];end;local Te=0X0;do jP=jP+1;end;local pe=vP[0X0];(vP)[Te+1]=pe;do(vP)[Te]=pe[qD[0X05]];end;do qD=Re[jP];end;jP=jP+0x00001;vP[2]=qD[2];jP=jP+1;do Te=0;end;(vP)[Te]=vP[Te](vP[Te+1],vP[Te+0x2]);TP=Te;do qD=Re[jP];end;jP=jP+0X00001;vP[1]=dP[qD[2]];do jP=jP+0X00001;end;do jP=jP+1;end;qD=Re[jP];do jP=jP+0X001;end;do vP[1]=vP[0X1][qD[5]];end;jP=jP+1;jP=jP+1;qD=Re[jP];local Oe=je[qD[0X6]];jP=jP+1;local He=(Oe[8]);local Ve=nil;local ye=(#He);if not(ye>0)then else Ve={};do for N3=1,ye do local P3=He[N3];if P3[0X1]==0 then Ve[N3-1]={vP,P3[0X2]};else do Ve[N3-1]=ve[P3[0X2]];end;end;end;end;(A)(De,Ve);end;vP[2]=NC(Ve,dP,Oe);jP=jP+0X1;Te=0X1;(vP[Te])(vP[Te+0X1]);TP=Te-0X00001;jP=jP+1;repeat local sJ,OJ=De,vP;if not(#sJ>0X00)then else local ef={};for gM,RM in D,sJ do do for g0,W0 in D,RM do if W0[0x00001]==OJ and W0[0X2]>=0X00 then local EX=W0[0X2];if not ef[EX]then ef[EX]={OJ[EX]};end;(W0)[1]=ef[EX];do W0[2]=0X1;end;end;end;end;end;end;until true;return;else jP=qD[6];end;end;end;end;else if not(XD<0X003)then do if XD>=4 then if XD==5 then do vP[qD[0X7]]=vP[qD[6]]<vP[qD[0X01]];end;else(vP)[qD[0X7]]=u(vP[qD[6]],vP[qD[1]]);end;else local sS=(qD[7]);local HS=(vP[qD[0x6]]);(vP)[sS+0X1]=HS;do(vP)[sS]=HS[qD[5]];end;end;end;else do if XD>=1 then if XD==2 then else do vP[qD[0X7]]={I({},0X01,qD[0X00006])};end;end;else vP[qD[0x7]]=qD[0X00002];end;end;end;end;end;end);if HP then if bP then if NP~=0X00001 then return vP[pP](I(vP,pP+0X1,TP));else do return vP[pP]();end;end;elseif pP then return I(vP,pP,NP);end;else if f(bP)~="string"then b(bP,0X00);else if e(bP,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(bP,"^.-:%d+: ")then(b)('\Lu\114ap\104\ \S\c\114\i\pt:'..(Ae[jP-1]or"(internal)")..": "..r(bP),0);else(b)(bP,0x0);end;end;end;end;end;else do fe=function(...)local pZ,uZ=0X1,{};local VZ=(m());local eZ=(VZ==F and Le or VZ);local UZ={[1]=ce,[0X2]=uZ};local bZ,ZZ=rC(...);bZ=bZ-0X1;do for ja=0,bZ do if not(he>ja)then break;else uZ[ja]=ZZ[ja+1];end;end;end;local fZ=(0X0);do if not ge then ZZ=nil;elseif xe then do uZ[he]={n=bZ>=he and bZ-he+1 or 0X0,I(ZZ,he+1,bZ+1)};end;end;end;if eZ~=VZ then(i)(fe,eZ);end;do while true do local qq=(Re[pZ]);pZ=pZ+0X01;local Sq=qq[4];do return(function(z,A,...)_C("AbandonQuest");end)(uZ,ve,...);end;end;end;end;end;end;else do fe=function(...)local tS=0X000;local TS,sS=1,{};local eS={[1]=ce,[0X2]=sS};local YS=(m());local WS,wS=rC(...);local FS=(YS==F and Le or YS);WS=WS-0X1;for zp=0,WS do if he>zp then do(sS)[zp]=wS[zp+0x1];end;else do break;end;end;end;if not ge then wS=nil;elseif xe then sS[he]={n=WS>=he and WS-he+1 or 0,I(wS,he+0X001,WS+1)};end;if FS~=YS then(i)(fe,FS);end;local nS,NS,LS,yS=j(function()while true do local ln=(Re[TS]);local In=ln[4];TS=TS+0X1;if In>=0x12 then if In<27 then if not(In>=22)then if In<0X14 then if In==0X13 then if not(not sS[ln[0X07]])then else TS=ln[6];end;else sS[12]=FS[ln[0X2]];TS=TS+1;(sS)[0X0C]=sS[0xc][sS[0X6]];TS=TS+0X1;TS=TS+1;TS=TS+1;do(sS)[0X0C]=#sS[0XC];end;TS=TS+1;(sS)[13]=#sS[8];ln=Re[TS];TS=TS+0X1;if not(not(sS[0X000D]<=sS[12]))then else TS=ln[0X0007];end;end;else if In==21 then do(sS)[ln[0X007]]=ln[0X0002];end;else for qm=ln[0X7],ln[0X0006]do sS[qm]=nil;end;end;end;else do if not(In>=24)then if In~=0X17 then do(sS)[ln[0X7]]=#sS[ln[6]];end;else local oR=je[ln[6]];local qR=oR[0X8];local zR=(nil);local AR=#qR;if AR>0 then zR={};do for er=1,AR do local ir=(qR[er]);if ir[1]==0 then(zR)[er-0X1]={sS,ir[0X2]};else(zR)[er-0X1]=ve[ir[2]];end;end;end;(A)(De,zR);end;do sS[ln[7]]=NC(zR,FS,oR);end;end;else if not(In<0x0019)then do if In~=26 then do(sS)[ln[7]]=sS[ln[0X00006]];end;else do sS[0x000D]=FS[ln[0X2]];end;do TS=TS+0x01;end;sS[13]=sS[0X0D][sS[0X6]];TS=TS+1;TS=TS+0x0001;TS=TS+0X1;(sS)[0Xd]=sS[0xd][sS[0X0000a]];ln=Re[TS];TS=TS+1;if not(sS[0X0d])then else TS=ln[6];end;end;end;else(sS)[3]={I({},1,0X1)};do TS=TS+0X0001;end;local xz=0x3;do sS[0X004]=sS[0X0];end;local Oz=sS[xz];TS=TS+0X1;local tz=(1-1)*0X32;do for N7=1,1 do Oz[tz+N7]=sS[xz+N7];end;end;do TS=TS+1;end;sS[2]=sS[0X3];ln=Re[TS];do TS=TS+0x1;end;TS=ln[6];end;end;end;end;else if In>=0X00020 then if In<0X0022 then if In~=33 then sS[ln[7]]=sS[ln[6]]<=sS[ln[0X0001]];else do(sS)[7]=FS[ln[0X0002]];end;TS=TS+0X00001;local Gm=0X7;do(sS)[8]=sS[0x6];end;do TS=TS+1;end;sS[Gm]=sS[Gm](sS[Gm+0X00001]);tS=Gm;ln=Re[TS];TS=TS+1;sS[0X8]=FS[ln[2]];TS=TS+0x001;TS=TS+0X1;ln=Re[TS];TS=TS+1;sS[0X08]=sS[0X00008][ln[5]];TS=TS+1;do(sS)[8]=sS[8][sS[0X0006]];end;TS=TS+1;do TS=TS+0X001;end;ln=Re[TS];TS=TS+1;if not sS[8]then TS=ln[0X0006];end;end;else do if not(In<0x23)then do if In~=0x024 then sS[ln[0X00007]]=-sS[ln[0x06]];else do(sS)[ln[0X7]]=sS[ln[6]]~=sS[ln[1]];end;end;end;else local ek=ln[7];local tk,Jk,Hk=sS[ek],sS[ek+0X1],(sS[ek+2]);sS[ek]=g(function()do for l3=tk,Jk,Hk do d(true,l3);end;end;end);TS=ln[0X6];end;end;end;else do if not(In<0X1D)then if In>=0X0001e then if In==31 then(sS)[0X000D]=sS[0Xb][ln[0x5]];TS=TS+1;TS=TS+0X1;do ln=Re[TS];end;TS=TS+0X01;sS[0X000D]=sS[0x0d][ln[0x5]];ln=Re[TS];TS=TS+0X001;sS[0xd]=sS[13][ln[5]];do TS=TS+1;end;do TS=TS+1;end;ln=Re[TS];TS=TS+0x001;sS[13]=sS[0Xd]+ln[0X5];ln=Re[TS];TS=TS+1;if not(not(sS[12]<sS[13]))then else TS=ln[0X00007];end;else sS[0X0000c]=FS[ln[0x2]];do ln=Re[TS];end;do TS=TS+1;end;sS[13]=sS[0X7][ln[0X5]];TS=TS+0X1;TS=TS+1;do ln=Re[TS];end;TS=TS+1;local Dt=12;(sS)[13]=sS[13][ln[5]];do TS=TS+0X1;end;do TS=TS+1;end;do TS=TS+1;end;do sS[Dt]=sS[Dt](sS[Dt+1]);end;tS=Dt;TS=TS+0X1;TS=TS+1;ln=Re[TS];do TS=TS+0X1;end;TS=ln[0X06];end;else(sS)[13]=FS[ln[0x02]];TS=TS+0X1;tS=0X00d;sS[tS]=sS[tS]();do ln=Re[TS];end;TS=TS+1;(FS)[ln[0X2]]=sS[0Xd];ln=Re[TS];do TS=TS+0X00001;end;sS[13]=FS[ln[2]];ln=Re[TS];TS=TS+0x001;(sS)[0XD]=sS[13][ln[0X05]];do ln=Re[TS];end;do TS=TS+1;end;(sS)[13]=sS[13][ln[5]];TS=TS+1;TS=TS+0x1;ln=Re[TS];TS=TS+0X1;do(sS)[0Xd]=sS[0X0d][ln[0X005]];end;ln=Re[TS];local gR=13;TS=TS+1;local BR=sS[0xD];(sS)[gR+0x1]=BR;(sS)[gR]=BR[ln[0X005]];TS=TS+1;sS[15]=sS[7];do TS=TS+0x1;end;gR=13;(sS[gR])(sS[gR+1],sS[gR+0X2]);tS=gR-0x1;ln=Re[TS];TS=TS+0X1;TS=ln[0X6];end;else do if In~=0x01c then do sS[0X0002]=sS[0X0];end;local Hf=3;ln=Re[TS];TS=TS+1;sS[3]=FS[ln[2]];do TS=TS+0x1;end;sS[0x4]=sS[0X00];TS=TS+0x01;(sS)[Hf]=sS[Hf](sS[Hf+1]);do tS=Hf;end;TS=TS+1;TS=TS+1;ln=Re[TS];TS=TS+0X1;if sS[0X03]==ln[0X5]then else TS=ln[7];end;else do repeat local J5,v5=De,(sS);if not(#J5>0)then else local wl={};for ry,iy in D,J5 do for U3,X3 in D,iy do do if not(X3[0X1]==v5 and X3[2]>=0X00000)then else local RX=(X3[2]);if not(not wl[RX])then else do(wl)[RX]={v5[RX]};end;end;X3[0X1]=wl[RX];do(X3)[2]=0X01;end;end;end;end;end;end;until true;end;return;end;end;end;end;end;end;else if In>=0X9 then if not(In>=13)then if In<11 then do if In==10 then do(sS)[12]=FS[ln[0X2]];end;TS=TS+1;TS=TS+1;ln=Re[TS];TS=TS+0X1;do sS[0X00C]=sS[12][ln[0X5]];end;do TS=TS+0X00001;end;do TS=TS+0X1;end;ln=Re[TS];do TS=TS+1;end;local SS=(12);sS[13]=FS[ln[0X00002]];TS=TS+0X001;do TS=TS+1;end;do TS=TS+1;end;(sS)[13]=sS[13][sS[0X06]];TS=TS+0X1;(sS[SS])(sS[SS+1]);do tS=SS-1;end;TS=TS+1;do TS=TS+0X1;end;ln=Re[TS];TS=TS+1;TS=ln[6];else sS[ln[0x7]]={I({},1,ln[6])};end;end;else if In~=12 then(sS)[0Xe]=FS[ln[2]];TS=TS+0x1;TS=TS+0X01;ln=Re[TS];TS=TS+1;(sS)[0X0000E]=sS[0XE][ln[0X00005]];TS=TS+0x1;TS=TS+1;do TS=TS+1;end;sS[0XE]=sS[11]==sS[14];do ln=Re[TS];end;do TS=TS+1;end;TS=ln[6];else repeat local km,cm,Xm=De,sS,ln[0x7];if#km>0X00000 then local Ew={};for ax,Jx in D,km do do for I8,p8 in D,Jx do if not(p8[0X1]==cm and p8[0X2]>=Xm)then else local LV=(p8[0x2]);if not Ew[LV]then do Ew[LV]={cm[LV]};end;end;p8[0X1]=Ew[LV];(p8)[0X2]=1;end;end;end;end;end;until true;end;end;else if not(In>=15)then do if In==14 then(sS[13])[ln[2]]=sS[14];ln=Re[TS];do TS=TS+1;end;sS[0X000E]=sS[13][ln[0X5]];ln=Re[TS];TS=TS+1;if not(not sS[0X0e])then else TS=ln[0X6];end;else TS=ln[0X0006];end;end;else do if not(In>=16)then(sS)[3]={};ln=Re[TS];TS=TS+1;local kU=4;(sS)[0X004]=FS[ln[0X2]];local oU=4;do TS=TS+0X1;end;sS[5]=sS[0X002];TS=TS+0X1;local UU=2;if UU==0X000 then else do tS=oU+UU-0X1;end;end;local BU,pU=nil,nil;if UU==0x1 then BU,pU=rC(sS[oU]());else BU,pU=rC(sS[oU](I(sS,oU+1,tS)));end;if kU==1 then do tS=oU-1;end;else if kU==0 then do BU=BU+oU-0x00001;end;tS=BU;else BU=oU+kU-0X00002;tS=BU+1;end;local bK=0X00000;for XB=oU,BU do bK=bK+1;do sS[XB]=pU[bK];end;end;end;ln=Re[TS];TS=TS+0X1;oU=4;local lU=(g(function(...)(d)();for EY,sY in...do d(true,EY,sY);end;end));(lU)(sS[oU],sS[oU+0X1],sS[oU+2]);tS=oU;do sS[oU]=lU;end;TS=ln[6];else if In~=0x11 then else do if not(sS[ln[7]])then else TS=ln[6];end;end;end;end;end;end;end;else if not(In<0X4)then if In>=0X6 then if In>=0X7 then if In==0X0008 then repeat local oc,Dc=De,(sS);if not(#oc>0X0)then else local On=({});for ao,oo in D,oc do do for N0,y0 in D,oo do if y0[0X1]==Dc and y0[0x0002]>=0x0 then local ba=(y0[2]);if not(not On[ba])then else On[ba]={Dc[ba]};end;(y0)[1]=On[ba];do(y0)[2]=0X001;end;end;end;end;end;end;until true;local fa=ln[7];return false,fa,fa+ln[0X006]-0x2;else sS[13]={};ln=Re[TS];TS=TS+0X0001;(sS[0xd])[ln[0X2]]=sS[7];ln=Re[TS];do TS=TS+0X1;end;(sS[0xD])[ln[0X002]]=sS[0X6];ln=Re[TS];do TS=TS+1;end;local yw=nil;(sS[0xd])[ln[0x00002]]=sS[12];ln=Re[TS];TS=TS+1;(sS[13])[ln[2]]=sS[11];do ln=Re[TS];end;TS=TS+1;local Pw=je[ln[0X006]];local Hw=(Pw[0X8]);local Uw=#Hw;if Uw>0 then yw={};for m1=0x001,Uw do local V1=(Hw[m1]);if V1[1]~=0X0 then(yw)[m1-1]=ve[V1[0X00002]];else(yw)[m1-1]={sS,V1[0x2]};end;end;(A)(De,yw);end;sS[14]=NC(yw,FS,Pw);ln=Re[TS];TS=TS+0x1;sS[13][ln[2]]=sS[14];ln=Re[TS];TS=TS+0X001;sS[0XE]=FS[ln[0x2]];TS=TS+0X1;TS=TS+1;do ln=Re[TS];end;TS=TS+1;do if not(not sS[0x00E])then else do TS=ln[0X6];end;end;end;end;else(sS)[14]=FS[ln[0X2]];do TS=TS+0X1;end;TS=TS+1;TS=TS+0X1;do sS[14]=sS[0X0E][sS[0x06]];end;TS=TS+0X1;TS=TS+0x001;TS=TS+0x00001;do sS[15]=sS[0X00b];end;TS=TS+0X0001;sS[0X000E][sS[10]]=sS[0Xf];ln=Re[TS];do TS=TS+0X1;end;TS=ln[0x00006];end;else if In==5 then do sS[ln[7]]=FS[ln[2]];end;else local Me=sS[ln[0x6]]/sS[ln[0X1]];sS[ln[7]]=Me-Me%0X1;end;end;else if not(In<0X2)then if In~=3 then(sS)[0X9]=FS[ln[0X2]];TS=TS+1;local ea,Aa=0X9,(4);TS=TS+1;TS=TS+0x1;(sS)[0x000A]=sS[8];TS=TS+1;local Ka=(2);if Ka~=0x0 then do tS=ea+Ka-1;end;end;local ia,va=nil,nil;if Ka==1 then do ia,va=rC(sS[ea]());end;else ia,va=rC(sS[ea](I(sS,ea+1,tS)));end;if Aa==1 then tS=ea-1;else if Aa==0x00000 then do ia=ia+ea-1;end;tS=ia;else ia=ea+Aa-2;tS=ia+1;end;local Ah=(0);for S7=ea,ia do Ah=Ah+1;do(sS)[S7]=va[Ah];end;end;end;ln=Re[TS];do TS=TS+0X1;end;ea=0X9;local na=(g(function(...)(d)();for Pb,wb in...do d(true,Pb,wb);end;end));na(sS[ea],sS[ea+1],sS[ea+2]);do tS=ea;end;do sS[ea]=na;end;TS=ln[6];else do sS[4]=FS[ln[0X0002]];end;ln=Re[TS];TS=TS+0X01;sS[0X4]=sS[4][ln[5]];TS=TS+0x01;TS=TS+0x1;do TS=TS+1;end;do(sS)[5]=sS[3];end;ln=Re[TS];local gr=(je[ln[0X6]]);do TS=TS+0X1;end;local Vr=(gr[0X8]);local wr=(nil);local nr=(#Vr);if nr>0X000 then wr={};do for EM=1,nr do local eM=Vr[EM];if eM[0X001]==0 then do(wr)[EM-1]={sS,eM[0X00002]};end;else(wr)[EM-0x1]=ve[eM[2]];end;end;end;A(De,wr);end;(sS)[0X6]=NC(wr,FS,gr);local br=(4);TS=TS+0X001;sS[br](sS[br+0X1],sS[br+2]);tS=br-0X1;TS=TS+0x1;TS=TS+1;TS=TS+0X1;(sS)[0X00004]=sS[3];local Kr=(0X04);do TS=TS+0X1;end;repeat local dn,an=De,sS;do if#dn>0 then local K5=({});do for GW,YW in D,dn do for yQ,WQ in D,YW do if not(WQ[1]==an and WQ[2]>=0X000)then else local FE=WQ[0X2];if not(not K5[FE])then else K5[FE]={an[FE]};end;WQ[1]=K5[FE];WQ[2]=1;end;end;end;end;end;end;until true;return false,Kr,Kr;end;else do if In~=0x1 then do(sS)[14]=#sS[3];end;do ln=Re[TS];end;do TS=TS+0X01;end;sS[0Xe]=sS[14]+ln[0X5];do TS=TS+1;end;(sS)[0XF]=sS[0xD];do TS=TS+1;end;(sS[0X3])[sS[0XE]]=sS[0X00f];ln=Re[TS];TS=TS+1;TS=ln[0X06];else local cJ=(ln[0X7]);local SJ,LJ,FJ=sS[cJ]();if not(SJ)then else(sS)[cJ+1]=LJ;do sS[cJ+0X2]=FJ;end;do TS=ln[0X006];end;end;end;end;end;end;end;end;end;end);if nS then if NS then if yS==0X001 then do return sS[LS]();end;else return sS[LS](I(sS,LS+1,tS));end;elseif LS then return I(sS,LS,yS);end;else if f(NS)=='\s\116\114\i\110\103'then do if not(e(NS,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;do if not(e(NS,"\^.\-\:%\d\+:\ "))then(b)(NS,0);else(b)("Luraph Script:"..(Ae[TS-0x1]or'\(\105nt\e\114\110\097l)')..": "..r(NS),0X0000);end;end;else b(NS,0);end;end;end;end;end;end;else if me>=2 then do if me<0x3 then fe=function(...)local OZ,NZ=0x1,({});local TZ=m();local RZ,qZ=rC(...);local FZ=({[1]=ce,[0X2]=NZ});RZ=RZ-1;for KT=0X0,RZ do if he>KT then(NZ)[KT]=qZ[KT+1];else break;end;end;local bZ=(TZ==F and Le or TZ);local KZ=(0);if not ge then qZ=nil;elseif not(xe)then else(NZ)[he]={n=RZ>=he and RZ-he+1 or 0X0,I(qZ,he+0X1,RZ+0X1)};end;if bZ==TZ then else(i)(fe,bZ);end;local pZ,tZ,nZ,cZ=j(function()while true do local un=Re[OZ];local Ln=(un[4]);OZ=OZ+0X1;do if Ln<0x03F then if Ln<0X001f then if not(Ln<15)then if Ln>=23 then if not(Ln>=0X00001b)then do if not(Ln>=25)then if Ln==24 then NZ[5]=bZ[un[2]];un=Re[OZ];OZ=OZ+1;NZ[5]=NZ[5][un[0X005]];do un=Re[OZ];end;OZ=OZ+1;if not NZ[0x5]then do OZ=un[6];end;end;else NZ[7]=un[0X0002];OZ=OZ+1;local tG=(7);NZ[0x00008]=NZ[0x6];OZ=OZ+1;NZ[7]=NZ[tG]..NZ[tG+0X1];do OZ=OZ+1;end;NZ[0X7]=NZ[0X2][NZ[7]];un=Re[OZ];OZ=OZ+0x1;do(NZ)[0X00008]=bZ[un[0X0002]];end;do un=Re[OZ];end;OZ=OZ+1;do(NZ)[9]=NZ[0X7][un[0x005]];end;un=Re[OZ];do OZ=OZ+1;end;NZ[8][un[2]]=NZ[0X9];do un=Re[OZ];end;OZ=OZ+0X1;local kG=8;do NZ[8]=bZ[un[0X00002]];end;do OZ=OZ+1;end;do OZ=OZ+1;end;do un=Re[OZ];end;do OZ=OZ+0X1;end;do(NZ)[0x00009]=un[2];end;OZ=OZ+0x0001;NZ[kG](NZ[kG+1]);KZ=kG-0X1;OZ=OZ+0X0001;OZ=OZ+1;un=Re[OZ];do OZ=OZ+1;end;(NZ)[0x8]=bZ[un[2]];do un=Re[OZ];end;OZ=OZ+1;NZ[9]=NZ[0X0007][un[5]];OZ=OZ+1;kG=8;(NZ[kG])(NZ[kG+1]);KZ=kG-0X00001;un=Re[OZ];OZ=OZ+0X1;NZ[0X008]=bZ[un[0X02]];OZ=OZ+0X1;OZ=OZ+0X1;OZ=OZ+0x00001;do KZ=8;end;(NZ)[KZ]=NZ[KZ]();do OZ=OZ+1;end;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+1;do OZ=un[0x6];end;end;else if Ln==0X0001A then NZ[8]=NZ[0X7][un[0X5]];OZ=OZ+1;do OZ=OZ+0X00001;end;un=Re[OZ];OZ=OZ+0X1;do if not(not(un[2]<NZ[8]))then else OZ=un[7];end;end;else local Uq,eq=ve[0X0],0x02;do NZ[2]=Uq[0X0001][Uq[2]];end;OZ=OZ+0X001;do OZ=OZ+0X1;end;un=Re[OZ];OZ=OZ+0X1;(NZ)[3]=un[0X2];OZ=OZ+0X1;NZ[eq](NZ[eq+1]);KZ=eq-0X1;un=Re[OZ];do OZ=OZ+0X1;end;(NZ)[2]=bZ[un[2]];OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;do(NZ)[3]=un[0X2];end;un=Re[OZ];do OZ=OZ+0X1;end;do NZ[0X04]=un[2];end;do un=Re[OZ];end;OZ=OZ+0X0001;do NZ[0x00005]=un[0X2];end;OZ=OZ+0X1;do eq=0x00002;end;do KZ=eq+4-0X01;end;(NZ[eq])(I(NZ,eq+1,KZ));KZ=eq-0X01;OZ=OZ+0X1;OZ=OZ+0x1;do un=Re[OZ];end;OZ=OZ+1;OZ=un[6];end;end;end;else if Ln<0X1d then do if Ln==28 then NZ[7]=bZ[un[0X2]];un=Re[OZ];OZ=OZ+0X1;do(NZ)[0X07]=NZ[0X0007][un[5]];end;un=Re[OZ];OZ=OZ+1;do if not NZ[7]then do OZ=un[0X0006];end;end;end;else(NZ)[0X9]=bZ[un[0X2]];un=Re[OZ];OZ=OZ+0X01;local Bl=10;do(NZ)[10]=bZ[un[2]];end;OZ=OZ+0X01;OZ=OZ+0X001;local Vl=(0X2);un=Re[OZ];do OZ=OZ+0X1;end;(NZ)[10]=NZ[0XA][un[5]];OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;local cl=(NZ[0xA]);(NZ)[Bl+0X1]=cl;NZ[Bl]=cl[un[5]];OZ=OZ+1;Bl=0X0000A;local Zl=(0X0);do if Vl==0X0 then else do KZ=Bl+Vl-0x1;end;end;end;local Tl,ll=nil,nil;if Vl==1 then Tl,ll=rC(NZ[Bl]());else Tl,ll=rC(NZ[Bl](I(NZ,Bl+0X1,KZ)));end;do if Zl==1 then KZ=Bl-1;else if Zl==0X000 then Tl=Tl+Bl-1;do KZ=Tl;end;else do Tl=Bl+Zl-0x2;end;KZ=Tl+1;end;local jl=0x000;for Wz=Bl,Tl do jl=jl+1;(NZ)[Wz]=ll[jl];end;end;end;OZ=OZ+0X01;OZ=OZ+0X00001;OZ=OZ+1;do Bl=0X9;end;do Vl=0;end;Zl=0X4;if Vl~=0 then do KZ=Bl+Vl-1;end;end;Tl,ll=nil;if Vl==1 then do Tl,ll=rC(NZ[Bl]());end;else Tl,ll=rC(NZ[Bl](I(NZ,Bl+1,KZ)));end;do if Zl~=1 then if Zl~=0x0000 then Tl=Bl+Zl-0X2;KZ=Tl+1;else Tl=Tl+Bl-0X001;KZ=Tl;end;local KP=(0x000);for s5=Bl,Tl do KP=KP+0X1;NZ[s5]=ll[KP];end;else KZ=Bl-1;end;end;OZ=OZ+0x1;OZ=OZ+1;un=Re[OZ];do OZ=OZ+1;end;do Bl=9;end;local hl=(g(function(...)(d)();for Ue,oe in...do d(true,Ue,oe);end;end));(hl)(NZ[Bl],NZ[Bl+1],NZ[Bl+0X2]);KZ=Bl;(NZ)[Bl]=hl;OZ=un[0X6];end;end;else if Ln~=0X1E then NZ[0X9]=bZ[un[2]];OZ=OZ+0X001;do OZ=OZ+1;end;OZ=OZ+1;KZ=0X0009;(NZ)[KZ]=NZ[KZ]();OZ=OZ+1;OZ=OZ+1;OZ=OZ+1;(NZ)[9]=NZ[9]-NZ[0X8];un=Re[OZ];OZ=OZ+0X1;if not(un[0X00002]<NZ[0X00009])then do OZ=un[7];end;end;else do(NZ)[6]=bZ[un[0X2]];end;do un=Re[OZ];end;OZ=OZ+1;local YM=6;NZ[7]=un[0X2];un=Re[OZ];do OZ=OZ+1;end;(NZ)[8]=un[0X2];un=Re[OZ];OZ=OZ+1;NZ[9]=NZ[0X5][un[5]];do OZ=OZ+1;end;KZ=YM+4-0X1;(NZ[YM])(I(NZ,YM+1,KZ));KZ=YM-0x001;OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;(NZ)[6]=NZ[0X2]+un[0x5];OZ=OZ+1;do NZ[2]=NZ[6];end;un=Re[OZ];OZ=OZ+0X00001;if not(un[0X002]<=NZ[0X2])then do OZ=un[0X0007];end;end;end;end;end;else do if Ln>=0X13 then if Ln>=0X15 then if Ln~=0x000016 then do NZ[0X8]=false;end;un=Re[OZ];local UK=ve[0X1];OZ=OZ+0X00001;do(bZ)[un[0x2]]=NZ[0X8];end;do OZ=OZ+1;end;do(NZ)[0X08]=UK[1][UK[0X002]];end;OZ=OZ+0x01;OZ=OZ+0X1;do un=Re[OZ];end;local QK=(NZ[0X0008]);OZ=OZ+1;local yK=8;do NZ[yK+1]=QK;end;do(NZ)[yK]=QK[un[0X0005]];end;OZ=OZ+0X1;yK=8;(NZ[yK])(NZ[yK+1]);KZ=yK-1;do OZ=OZ+0x00001;end;OZ=OZ+0X1;do un=Re[OZ];end;do OZ=OZ+1;end;OZ=un[6];else local g7=(un[0X0007]);local B7,z7=NZ[g7]();if not(B7)then else do OZ=un[6];end;do(NZ)[g7+0x3]=z7;end;end;end;else if Ln==0X14 then local Rt=(ve[0]);do(NZ)[0x005]=Rt[0X1][Rt[0X2]];end;OZ=OZ+0X1;do OZ=OZ+0x1;end;do un=Re[OZ];end;OZ=OZ+0x1;NZ[0X6]=un[0X2];OZ=OZ+0x01;local tt=5;NZ[tt](NZ[tt+1]);KZ=tt-1;OZ=OZ+1;Rt=ve[0x1];(NZ)[0X5]=Rt[0X1][Rt[0X0002]];OZ=OZ+1;local pt=NZ[5];OZ=OZ+0X001;un=Re[OZ];OZ=OZ+0X1;tt=5;do(NZ)[tt+1]=pt;end;NZ[tt]=pt[un[0X5]];OZ=OZ+1;tt=0x005;NZ[tt](NZ[tt+1]);do KZ=tt-1;end;do OZ=OZ+1;end;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+1;do NZ[5]=bZ[un[0X00002]];end;un=Re[OZ];OZ=OZ+1;NZ[0X6]=bZ[un[0X002]];do un=Re[OZ];end;OZ=OZ+1;NZ[6]=NZ[0X06][un[5]];OZ=OZ+0x1;OZ=OZ+0x001;OZ=OZ+1;(NZ)[7]=NZ[0x4];do OZ=OZ+1;end;do tt=6;end;NZ[tt]=NZ[tt](NZ[tt+1]);do KZ=tt;end;un=Re[OZ];OZ=OZ+1;do NZ[0x07]=bZ[un[0X02]];end;OZ=OZ+0x0001;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+0X1;(NZ)[7]=NZ[0x00007][un[5]];un=Re[OZ];OZ=OZ+0X00001;do(NZ)[8]=bZ[un[2]];end;do OZ=OZ+1;end;OZ=OZ+1;local ot=(nil);un=Re[OZ];OZ=OZ+1;do(NZ)[8]=NZ[0x08][un[0X0005]];end;do OZ=OZ+1;end;OZ=OZ+0X1;un=Re[OZ];do OZ=OZ+1;end;NZ[9]=un[0x02];un=Re[OZ];OZ=OZ+1;NZ[0xA]=un[2];OZ=OZ+1;tt=8;do NZ[tt]=NZ[tt](NZ[tt+1],NZ[tt+2]);end;KZ=tt;OZ=OZ+0X1;OZ=OZ+0X1;un=Re[OZ];OZ=OZ+1;do NZ[8]=NZ[0X8]/un[0X5];end;do un=Re[OZ];end;OZ=OZ+1;NZ[0X9]=un[2];un=Re[OZ];OZ=OZ+0X1;do NZ[10]=bZ[un[0X00002]];end;do un=Re[OZ];end;OZ=OZ+0X1;NZ[0X00a]=NZ[10][un[0X5]];un=Re[OZ];OZ=OZ+1;NZ[0xb]=un[0X2];un=Re[OZ];OZ=OZ+1;do NZ[12]=un[2];end;OZ=OZ+1;do tt=10;end;do NZ[tt]=NZ[tt](NZ[tt+1],NZ[tt+2]);end;do KZ=tt;end;OZ=OZ+0X001;OZ=OZ+1;un=Re[OZ];OZ=OZ+0x1;NZ[0X0000A]=NZ[0Xa]/un[0X5];OZ=OZ+0X1;tt=7;do KZ=tt+0X04-0X1;end;NZ[tt]=NZ[tt](I(NZ,tt+1,KZ));KZ=tt;do OZ=OZ+0X1;end;(NZ)[6]=NZ[0X00006]+NZ[7];un=Re[OZ];OZ=OZ+0X1;local Jt=(je[un[6]]);local Et=Jt[0x8];local Ct=(#Et);if Ct>0 then do ot={};end;for cR=1,Ct do local lR=(Et[cR]);if lR[1]~=0X0 then ot[cR-0X1]=ve[lR[0X2]];else(ot)[cR-1]={NZ,lR[0X2]};end;end;A(De,ot);end;(NZ)[0X7]=NC(ot,bZ,Jt);OZ=OZ+1;(NZ)[8]=true;OZ=OZ+0X1;do tt=0X5;end;KZ=tt+4-1;(NZ[tt])(I(NZ,tt+0x1,KZ));KZ=tt-0X1;OZ=OZ+0X1;OZ=OZ+0X001;un=Re[OZ];do OZ=OZ+0X1;end;(NZ)[0x5]=bZ[un[2]];OZ=OZ+0X1;KZ=5;NZ[KZ]();KZ=KZ-0X1;un=Re[OZ];OZ=OZ+0X01;do NZ[0X0005]=bZ[un[2]];end;do OZ=OZ+0X1;end;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+1;(NZ)[5]=NZ[5][un[0X0005]];un=Re[OZ];OZ=OZ+0X1;do if not(not NZ[0X5])then else OZ=un[6];end;end;else do NZ[3]=bZ[un[2]];end;do OZ=OZ+1;end;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;NZ[0x4]=bZ[un[0X2]];do un=Re[OZ];end;OZ=OZ+1;NZ[0X4]=NZ[0X4][un[5]];un=Re[OZ];OZ=OZ+1;NZ[4]=NZ[0X00004][un[0X5]];un=Re[OZ];do OZ=OZ+1;end;NZ[0X05]=bZ[un[2]];OZ=OZ+1;OZ=OZ+0x0001;un=Re[OZ];local nf=0X3;OZ=OZ+1;NZ[0X005]=NZ[0x0005][un[0X5]];OZ=OZ+0X1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;(NZ)[0x00005]=NZ[0X5][un[5]];OZ=OZ+1;OZ=OZ+1;do un=Re[OZ];end;do OZ=OZ+1;end;(NZ)[5]=NZ[5][un[0X5]];un=Re[OZ];OZ=OZ+0X1;NZ[5]=NZ[0X5][un[5]];un=Re[OZ];do OZ=OZ+0X01;end;(NZ)[0X006]=un[0X2];OZ=OZ+0X1;do KZ=nf+0X4-1;end;NZ[nf](I(NZ,nf+0x1,KZ));KZ=nf-1;un=Re[OZ];OZ=OZ+0x1;(NZ)[0X3]=bZ[un[2]];un=Re[OZ];OZ=OZ+1;do NZ[4]=bZ[un[2]];end;un=Re[OZ];OZ=OZ+1;(NZ)[4]=NZ[0X00004][un[0X00005]];un=Re[OZ];OZ=OZ+1;do(NZ)[0X00004]=NZ[0x4][un[0x5]];end;un=Re[OZ];OZ=OZ+0X01;(NZ)[0x5]=bZ[un[2]];do un=Re[OZ];end;OZ=OZ+0X1;NZ[5]=NZ[5][un[0X00005]];OZ=OZ+0X1;OZ=OZ+0X0001;do un=Re[OZ];end;OZ=OZ+0x1;NZ[5]=NZ[5][un[5]];OZ=OZ+1;do OZ=OZ+1;end;do un=Re[OZ];end;do OZ=OZ+0X1;end;do(NZ)[5]=NZ[5][un[0X5]];end;un=Re[OZ];do OZ=OZ+1;end;do NZ[0X0005]=NZ[0X5][un[0x005]];end;do OZ=OZ+1;end;OZ=OZ+0x001;un=Re[OZ];OZ=OZ+0X0001;(NZ)[6]=un[2];OZ=OZ+1;do nf=0X3;end;KZ=nf+4-0X001;NZ[nf](I(NZ,nf+0X1,KZ));KZ=nf-0x1;do un=Re[OZ];end;OZ=OZ+0X1;OZ=un[6];end;end;else if Ln<0X11 then if Ln~=16 then(NZ)[0X2]=bZ[un[0X2]];do OZ=OZ+0X00001;end;OZ=OZ+1;do un=Re[OZ];end;do OZ=OZ+0X00001;end;do(NZ)[0X3]=un[0X2];end;un=Re[OZ];do OZ=OZ+1;end;NZ[4]=un[2];do un=Re[OZ];end;local GX=0X2;OZ=OZ+1;local EX=(ve[0]);do(NZ)[0X0005]=un[0x2];end;OZ=OZ+0X001;KZ=GX+4-1;(NZ[GX])(I(NZ,GX+1,KZ));do KZ=GX-0X00001;end;OZ=OZ+0X1;NZ[2]=EX[1][EX[0X002]];OZ=OZ+0X1;OZ=OZ+0X1;un=Re[OZ];OZ=OZ+0X1;(NZ)[0X03]=un[2];OZ=OZ+1;do GX=2;end;NZ[GX](NZ[GX+0X0001]);KZ=GX-0X1;OZ=OZ+1;OZ=OZ+0X00001;un=Re[OZ];OZ=OZ+0X1;OZ=un[6];else local z2=(ve[1]);(NZ)[0X04]=z2[1][z2[2]];local T2=4;OZ=OZ+1;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+1;local B2=(NZ[0X004]);NZ[T2+0X00001]=B2;(NZ)[T2]=B2[un[5]];OZ=OZ+0X1;T2=4;NZ[T2](NZ[T2+1]);KZ=T2-1;OZ=OZ+0X00001;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;OZ=un[0x00006];end;else if Ln==18 then NZ[0X7]=NZ[0X3][un[0X5]];OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;if NZ[0x7]~=un[5]then OZ=un[7];end;else do if NZ[un[0X06]]<NZ[un[0X1]]then do OZ=un[0X07];end;end;end;end;end;end;end;end;else if Ln<0X007 then if not(Ln>=3)then do if not(Ln>=1)then repeat local sV,UV=De,(NZ);if#sV>0 then local zJ={};for sT,HT in D,sV do for QU,eU in D,HT do if not(eU[0X1]==UV and eU[0X002]>=0)then else local PL=eU[2];do if not zJ[PL]then zJ[PL]={UV[PL]};end;end;do eU[0X001]=zJ[PL];end;(eU)[2]=1;end;end;end;end;until true;return;else if Ln~=0X00002 then(NZ)[0X5]=bZ[un[0x2]];do OZ=OZ+1;end;local Xj=(5);(NZ)[6]=NZ[4];OZ=OZ+0X1;do(NZ)[Xj]=NZ[Xj](NZ[Xj+0X01]);end;KZ=Xj;do un=Re[OZ];end;OZ=OZ+0X01;if not(NZ[0X5]<un[5])then else do OZ=un[0X7];end;end;else(NZ)[0X0]=bZ[un[2]];un=Re[OZ];do OZ=OZ+1;end;NZ[0X00001]=un[0X0002];un=Re[OZ];do OZ=OZ+1;end;NZ[0X2]=un[2];local DY=(0X0);OZ=OZ+0x1;NZ[DY]=NZ[DY](NZ[DY+0X1],NZ[DY+2]);KZ=DY;do un=Re[OZ];end;OZ=OZ+1;NZ[1]=bZ[un[0x2]];un=Re[OZ];OZ=OZ+1;(NZ)[1]=NZ[1][un[0X0005]];do un=Re[OZ];end;OZ=OZ+1;(NZ)[0X1]=NZ[1][un[5]];OZ=OZ+1;OZ=OZ+0x1;local AY=NZ[0x001];un=Re[OZ];do OZ=OZ+1;end;DY=0X001;(NZ)[DY+1]=AY;(NZ)[DY]=AY[un[0x5]];un=Re[OZ];OZ=OZ+1;NZ[0x003]=un[0X2];OZ=OZ+0X01;NZ[0X4]=true;OZ=OZ+1;DY=0x01;do KZ=DY+4-1;end;NZ[DY]=NZ[DY](I(NZ,DY+1,KZ));KZ=DY;do OZ=OZ+0X01;end;OZ=OZ+0X001;un=Re[OZ];OZ=OZ+0x1;if not(not NZ[1])then else do OZ=un[0X6];end;end;end;end;end;else do if Ln<0X005 then do if Ln==0X004 then(NZ)[0X006]=bZ[un[2]];local UJ=(0x0006);OZ=OZ+0X1;OZ=OZ+0X1;un=Re[OZ];OZ=OZ+0X1;(NZ)[7]=NZ[0x003][un[5]];OZ=OZ+1;OZ=OZ+1;OZ=OZ+1;NZ[UJ]=NZ[UJ](NZ[UJ+1]);KZ=UJ;un=Re[OZ];OZ=OZ+1;if not(not NZ[0X6])then else OZ=un[6];end;else if NZ[un[7]]then OZ=un[0X6];end;end;end;else if Ln~=6 then(NZ)[0X5]=bZ[un[2]];OZ=OZ+0X1;KZ=5;NZ[KZ]=NZ[KZ]();OZ=OZ+1;OZ=OZ+0X1;OZ=OZ+1;(NZ)[0X5]=NZ[5]-NZ[0X0003];un=Re[OZ];OZ=OZ+0X00001;do if not(not(un[0X2]<NZ[0X5]))then else OZ=un[7];end;end;else local N3=ve[0X1];(NZ)[5]=N3[1][N3[0X2]];local L3=5;un=Re[OZ];OZ=OZ+0x1;local x3=(NZ[0X5]);do(NZ)[L3+0X01]=x3;end;NZ[L3]=x3[un[0X5]];OZ=OZ+0x1;do L3=5;end;(NZ)[L3]=NZ[L3](NZ[L3+0X00001]);KZ=L3;OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;if not(not NZ[0X005])then else OZ=un[6];end;end;end;end;end;else do if Ln<11 then if Ln<0X9 then if Ln==0X8 then NZ[7]=NZ[6][un[0X5]];OZ=OZ+1;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+0x1;if NZ[7]==un[5]then OZ=un[0x7];end;else local KE=(ve[0X0]);NZ[2]=KE[1][KE[2]];un=Re[OZ];OZ=OZ+0X1;local sE=(0X002);do NZ[0X3]=un[0X00002];end;do OZ=OZ+0X1;end;NZ[sE](NZ[sE+1]);KZ=sE-1;OZ=OZ+0X1;OZ=OZ+1;do un=Re[OZ];end;do OZ=OZ+0x001;end;(NZ)[0x2]=bZ[un[0X02]];do un=Re[OZ];end;OZ=OZ+0x0001;do NZ[3]=un[0x2];end;do un=Re[OZ];end;OZ=OZ+1;do NZ[0X4]=un[0X02];end;un=Re[OZ];OZ=OZ+0X1;do(NZ)[5]=un[2];end;do OZ=OZ+0x1;end;sE=0X0002;do KZ=sE+4-1;end;(NZ[sE])(I(NZ,sE+1,KZ));do KZ=sE-1;end;OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+0X00001;OZ=un[6];end;else do if Ln~=0xa then(NZ)[0x2]=bZ[un[2]];OZ=OZ+0X1;OZ=OZ+1;un=Re[OZ];do OZ=OZ+0x1;end;do(NZ)[3]=bZ[un[0X2]];end;OZ=OZ+0X1;OZ=OZ+1;un=Re[OZ];OZ=OZ+0X1;NZ[4]=bZ[un[2]];OZ=OZ+1;OZ=OZ+1;un=Re[OZ];local Af=(0);do OZ=OZ+0X00001;end;do NZ[0X4]=NZ[0X004][un[0x00005]];end;OZ=OZ+0x01;local sf=(0X3);OZ=OZ+1;do OZ=OZ+1;end;local Yf=2;do if Yf~=0x000 then KZ=sf+Yf-1;end;end;local Cf,tf=nil,(nil);if Yf~=0X00001 then Cf,tf=rC(NZ[sf](I(NZ,sf+0X1,KZ)));else do Cf,tf=rC(NZ[sf]());end;end;do if Af~=0X001 then do if Af~=0 then Cf=sf+Af-2;KZ=Cf+1;else Cf=Cf+sf-0X1;KZ=Cf;end;end;local Pi=(0);for Qa=sf,Cf do Pi=Pi+0X00001;NZ[Qa]=tf[Pi];end;else KZ=sf-1;end;end;do OZ=OZ+1;end;do sf=0x0002;end;(NZ)[sf]=NZ[sf](I(NZ,sf+0X1,KZ));KZ=sf;OZ=OZ+0X1;OZ=OZ+1;do un=Re[OZ];end;OZ=OZ+1;if NZ[0X02]==un[0X00005]then OZ=un[0x7];end;else do(NZ)[un[0x7]]=un[2]/un[5];end;end;end;end;else do if Ln>=13 then do if Ln~=0X00e then local dQ=un[7];local nQ,AQ=NZ[dQ],((un[0x001]-0X1)*50);for Cp=1,un[0x6]do(nQ)[AQ+Cp]=NZ[dQ+Cp];end;else NZ[un[7]]=un[0X2];end;end;else if Ln==0X000C then local O4=0X5;local e4=ve[1];(NZ)[5]=e4[1][e4[2]];OZ=OZ+1;OZ=OZ+0X1;un=Re[OZ];do OZ=OZ+1;end;local I4=NZ[0X5];do(NZ)[O4+0X01]=I4;end;NZ[O4]=I4[un[5]];OZ=OZ+0X001;do O4=0X5;end;(NZ)[O4]=NZ[O4](NZ[O4+0X0001]);KZ=O4;un=Re[OZ];do OZ=OZ+1;end;if not NZ[5]then OZ=un[0X6];end;else do NZ[un[7]]=NZ[un[0X6]]>=NZ[un[0X01]];end;end;end;end;end;end;end;end;else do if not(Ln<0x2f)then do if not(Ln>=55)then if not(Ln<0X33)then if Ln<0X000035 then if Ln==0X34 then else local be=(ve[0X00000]);NZ[0x0002]=be[0X1][be[2]];OZ=OZ+1;do OZ=OZ+1;end;un=Re[OZ];local Ce=2;OZ=OZ+1;do(NZ)[3]=un[2];end;OZ=OZ+1;(NZ[Ce])(NZ[Ce+1]);KZ=Ce-0x1;do un=Re[OZ];end;OZ=OZ+0x00001;NZ[0X2]=bZ[un[0X2]];un=Re[OZ];OZ=OZ+1;(NZ)[3]=un[0X0002];un=Re[OZ];OZ=OZ+0X001;(NZ)[4]=un[0X0002];un=Re[OZ];OZ=OZ+0X0001;(NZ)[5]=un[2];OZ=OZ+1;Ce=0X02;KZ=Ce+0X0004-1;(NZ[Ce])(I(NZ,Ce+1,KZ));KZ=Ce-1;OZ=OZ+1;do OZ=OZ+0x1;end;un=Re[OZ];do OZ=OZ+1;end;do OZ=un[0X6];end;end;else if Ln~=0X36 then if not(not NZ[un[7]])then else OZ=un[0x006];end;else local Lf=ve[0X0];local af=(0X2);(NZ)[2]=Lf[1][Lf[0X0002]];OZ=OZ+0X0001;do OZ=OZ+0X1;end;un=Re[OZ];OZ=OZ+0x1;NZ[3]=un[0x2];do OZ=OZ+0x1;end;(NZ[af])(NZ[af+1]);KZ=af-1;do un=Re[OZ];end;OZ=OZ+1;NZ[0X2]=bZ[un[0x2]];OZ=OZ+0X00001;do OZ=OZ+1;end;un=Re[OZ];do OZ=OZ+1;end;if NZ[2]then OZ=un[6];end;end;end;else if Ln>=0X31 then if Ln==50 then(NZ)[7]=bZ[un[0X2]];local lh=(0X8);un=Re[OZ];OZ=OZ+0X1;do(NZ)[7]=NZ[0X7][un[5]];end;un=Re[OZ];OZ=OZ+0X1;local Ch=(NZ[6]);NZ[lh+0X1]=Ch;do(NZ)[lh]=Ch[un[0X05]];end;do un=Re[OZ];end;OZ=OZ+1;NZ[0XA]=un[2];do OZ=OZ+0X001;end;lh=8;(NZ)[lh]=NZ[lh](NZ[lh+1],NZ[lh+2]);KZ=lh;do OZ=OZ+1;end;(NZ)[7]=NZ[0X7][NZ[0X8]];OZ=OZ+1;OZ=OZ+1;un=Re[OZ];local yh=3;OZ=OZ+0X01;(NZ)[0X0008]=bZ[un[0x02]];un=Re[OZ];OZ=OZ+1;do lh=0X008;end;Ch=NZ[8];(NZ)[lh+0X1]=Ch;NZ[lh]=Ch[un[5]];do un=Re[OZ];end;OZ=OZ+0X1;do lh=10;end;Ch=NZ[0X6];do NZ[lh+0X1]=Ch;end;(NZ)[lh]=Ch[un[5]];un=Re[OZ];OZ=OZ+1;(NZ)[0xc]=un[0X2];OZ=OZ+0x1;do lh=10;end;local Jh=(0);if yh==0 then else do KZ=lh+yh-1;end;end;local bh,oh=nil,nil;if yh==1 then bh,oh=rC(NZ[lh]());else bh,oh=rC(NZ[lh](I(NZ,lh+0X01,KZ)));end;if Jh~=1 then if Jh~=0 then do bh=lh+Jh-2;end;KZ=bh+1;else do bh=bh+lh-0X1;end;KZ=bh;end;local KC=0X0000;for Sn=lh,bh do KC=KC+0x1;(NZ)[Sn]=oh[KC];end;else KZ=lh-1;end;do OZ=OZ+1;end;OZ=OZ+0X1;OZ=OZ+1;do lh=0x008;end;do(NZ)[lh]=NZ[lh](I(NZ,lh+0X1,KZ));end;KZ=lh;do OZ=OZ+0X1;end;NZ[0x9]=NZ[7];do un=Re[OZ];end;OZ=OZ+1;if not NZ[0X9]then OZ=un[6];end;else do(NZ)[7]=bZ[un[0x2]];end;un=Re[OZ];local XL=0x00007;OZ=OZ+0X1;do(NZ)[0x8]=NZ[6][un[0x5]];end;un=Re[OZ];OZ=OZ+1;do NZ[0X8]=NZ[8][un[0x5]];end;OZ=OZ+0X00001;OZ=OZ+1;do OZ=OZ+0X00001;end;(NZ)[0X9]=NZ[2];do OZ=OZ+1;end;(NZ)[XL]=NZ[XL](NZ[XL+1],NZ[XL+2]);do KZ=XL;end;un=Re[OZ];do OZ=OZ+0x1;end;do if not(not NZ[0X7])then else OZ=un[0X6];end;end;end;else if Ln~=0x30 then local Kw=(un[0x7]);local Cw,cw,ew=NZ[Kw]();do if Cw then do NZ[Kw+0X1]=cw;end;NZ[Kw+0X2]=ew;do OZ=un[6];end;end;end;else NZ[0X2]=NZ[0x000][un[0X005]];OZ=OZ+1;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+1;do if NZ[2]~=un[5]then OZ=un[0X7];end;end;end;end;end;else do if Ln<0x003b then if Ln<0X39 then if Ln==0X0038 then(NZ)[4]=bZ[un[2]];un=Re[OZ];OZ=OZ+1;(NZ)[0X5]=un[0X02];OZ=OZ+0X1;(NZ)[0X6]=false;OZ=OZ+1;local lL=(0X4);(NZ[lL])(NZ[lL+0X1],NZ[lL+2]);do KZ=lL-1;end;OZ=OZ+0X01;OZ=OZ+0X1;un=Re[OZ];OZ=OZ+0X01;do OZ=un[6];end;else(NZ)[0X0007]=bZ[un[0X2]];un=Re[OZ];OZ=OZ+0X1;NZ[0X00007]=NZ[7][un[0X5]];do OZ=OZ+0x1;end;OZ=OZ+0X001;do un=Re[OZ];end;OZ=OZ+1;local ul=7;NZ[8]=un[2];OZ=OZ+1;NZ[ul](NZ[ul+1]);KZ=ul-1;un=Re[OZ];do OZ=OZ+1;end;do(NZ)[7]=bZ[un[0X0002]];end;local Ml=NZ[0x7];OZ=OZ+1;OZ=OZ+1;do un=Re[OZ];end;do OZ=OZ+1;end;ul=7;do NZ[ul+1]=Ml;end;(NZ)[ul]=Ml[un[5]];un=Re[OZ];do OZ=OZ+0X1;end;NZ[9]=un[2];OZ=OZ+1;ul=0X7;(NZ)[ul]=NZ[ul](NZ[ul+1],NZ[ul+2]);KZ=ul;do un=Re[OZ];end;OZ=OZ+1;if not(not NZ[7])then else OZ=un[0X0006];end;end;else if Ln==58 then local Uy=ve[0x0];NZ[0X2]=Uy[0X1][Uy[0x2]];do OZ=OZ+0X1;end;do OZ=OZ+1;end;un=Re[OZ];do OZ=OZ+0x0001;end;local hy=0X002;NZ[3]=un[2];OZ=OZ+0x1;NZ[hy](NZ[hy+1]);do KZ=hy-1;end;un=Re[OZ];OZ=OZ+1;(NZ)[0x2]=bZ[un[2]];do un=Re[OZ];end;local Fy=0X00002;do OZ=OZ+0X001;end;do NZ[0X2]=NZ[0X00002][un[0X5]];end;un=Re[OZ];OZ=OZ+1;NZ[0X00003]=bZ[un[0X00002]];do un=Re[OZ];end;do OZ=OZ+1;end;NZ[0X4]=bZ[un[2]];OZ=OZ+0X001;do OZ=OZ+0X001;end;OZ=OZ+1;do hy=3;end;local Oy=(0X04);if Fy~=0 then KZ=hy+Fy-0X0001;end;local ey,gy=nil,nil;if Fy==0X0001 then do ey,gy=rC(NZ[hy]());end;else ey,gy=rC(NZ[hy](I(NZ,hy+0X0001,KZ)));end;do if Oy~=0X00001 then if Oy~=0 then ey=hy+Oy-0X002;KZ=ey+0X0001;else ey=ey+hy-0X1;do KZ=ey;end;end;local SN=(0);for r4=hy,ey do SN=SN+0X01;NZ[r4]=gy[SN];end;else KZ=hy-1;end;end;un=Re[OZ];OZ=OZ+0X1;do hy=0X03;end;local vy=(g(function(...)(d)();for ZM,jM in...do d(true,ZM,jM);end;end));(vy)(NZ[hy],NZ[hy+0X00001],NZ[hy+0X2]);do KZ=hy;end;(NZ)[hy]=vy;OZ=un[0X0006];else do(NZ)[0XD]=bZ[un[2]];end;do OZ=OZ+0X1;end;local yG=13;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+0X1;do(NZ)[14]=NZ[12][un[5]];end;OZ=OZ+1;NZ[yG]=NZ[yG](NZ[yG+1]);KZ=yG;un=Re[OZ];OZ=OZ+0X00001;do if not(not NZ[13])then else OZ=un[6];end;end;end;end;else if Ln<61 then if Ln~=60 then local Ct=ve[0];NZ[0x2]=Ct[1][Ct[2]];OZ=OZ+1;local Qt=0X0002;OZ=OZ+1;un=Re[OZ];OZ=OZ+0X1;(NZ)[3]=un[0X0002];OZ=OZ+1;NZ[Qt](NZ[Qt+0X1]);KZ=Qt-1;un=Re[OZ];OZ=OZ+0X001;(NZ)[2]=bZ[un[0X02]];do OZ=OZ+0X0001;end;OZ=OZ+0X001;un=Re[OZ];OZ=OZ+1;(NZ)[3]=un[0X2];do OZ=OZ+1;end;(NZ)[0x00004]=nil;OZ=OZ+1;do(NZ)[5]=true;end;un=Re[OZ];OZ=OZ+0x001;NZ[0X6]=un[2]/un[5];OZ=OZ+0x1;(NZ)[0X7]=true;OZ=OZ+0X1;Qt=2;KZ=Qt+0X6-1;(NZ)[Qt]=NZ[Qt](I(NZ,Qt+0x0001,KZ));do KZ=Qt;end;do un=Re[OZ];end;OZ=OZ+1;if not(not NZ[2])then else OZ=un[6];end;else(NZ)[un[7]]={I({},1,un[6])};end;else if Ln~=62 then if NZ[un[0X6]]~=un[0X5]then OZ=un[0x0007];end;else(NZ)[0X00003]=bZ[un[2]];un=Re[OZ];OZ=OZ+0x1;(NZ)[4]=bZ[un[2]];do un=Re[OZ];end;do OZ=OZ+1;end;NZ[0X005]=NZ[0X2][un[0x05]];un=Re[OZ];local nF=(3);OZ=OZ+1;NZ[0X0006]=un[2];OZ=OZ+1;do KZ=nF+0X4-1;end;(NZ[nF])(I(NZ,nF+0x1,KZ));KZ=nF-1;un=Re[OZ];OZ=OZ+1;do OZ=un[6];end;end;end;end;end;end;end;else if not(Ln>=39)then if not(Ln<35)then if not(Ln<37)then do if Ln==0X26 then local pd=(2);local ad=ve[0x0000];NZ[0X2]=ad[1][ad[0X2]];OZ=OZ+0X1;do OZ=OZ+0X1;end;local sd=(0X002);un=Re[OZ];OZ=OZ+0X1;(NZ)[0X3]=un[0X02];OZ=OZ+1;(NZ[pd])(NZ[pd+1]);KZ=pd-0X1;do un=Re[OZ];end;do OZ=OZ+0X1;end;(NZ)[2]=un[2];un=Re[OZ];OZ=OZ+0X0001;(NZ)[0x3]=bZ[un[0X0002]];un=Re[OZ];do OZ=OZ+0X001;end;NZ[0X0004]=bZ[un[2]];do OZ=OZ+0X001;end;do pd=0X3;end;local vd=0X4;if sd~=0x0 then do KZ=pd+sd-1;end;end;local td,wd=nil,nil;if sd~=1 then td,wd=rC(NZ[pd](I(NZ,pd+0x00001,KZ)));else td,wd=rC(NZ[pd]());end;do if vd~=1 then if vd~=0 then td=pd+vd-2;KZ=td+0X0001;else td=td+pd-0X1;KZ=td;end;local Ir=(0);for Ep=pd,td do Ir=Ir+0X1;NZ[Ep]=wd[Ir];end;else do KZ=pd-0X1;end;end;end;do OZ=OZ+0X1;end;OZ=OZ+1;do un=Re[OZ];end;OZ=OZ+0X0001;do pd=0X0003;end;local nd=g(function(...)(d)();do for KE,TE in...do d(true,KE,TE);end;end;end);(nd)(NZ[pd],NZ[pd+0X1],NZ[pd+2]);do KZ=pd;end;NZ[pd]=nd;OZ=un[0x06];else(NZ)[6]=NZ[0X5][un[5]];do OZ=OZ+0X1;end;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;if NZ[6]~=un[5]then OZ=un[0X7];end;end;end;else if Ln==0X24 then for Yv=un[0X07],un[6]do(NZ)[Yv]=nil;end;else OZ=un[0X6];end;end;else if Ln<0X21 then if Ln==32 then(NZ)[0X8]=NZ[0x6][un[0X5]];OZ=OZ+0X1;OZ=OZ+1;un=Re[OZ];OZ=OZ+0X1;if not NZ[0X00008]then OZ=un[0X006];end;else(NZ)[8]=bZ[un[2]];OZ=OZ+0X1;KZ=8;local L5=(ve[0]);do NZ[KZ]=NZ[KZ]();end;local e5=8;OZ=OZ+1;(NZ)[5]=NZ[0X8];OZ=OZ+0X1;NZ[0X8]=L5[0x1][L5[2]];OZ=OZ+1;OZ=OZ+1;do un=Re[OZ];end;OZ=OZ+1;do NZ[0X9]=un[2];end;do OZ=OZ+0x1;end;(NZ[e5])(NZ[e5+0X00001]);KZ=e5-1;OZ=OZ+0x1;do L5=ve[0x00001];end;do NZ[8]=L5[1][L5[2]];end;OZ=OZ+0X1;OZ=OZ+1;do un=Re[OZ];end;local J5=(NZ[0X8]);OZ=OZ+1;e5=8;NZ[e5+0X01]=J5;NZ[e5]=J5[un[5]];OZ=OZ+1;e5=0X8;(NZ[e5])(NZ[e5+1]);do KZ=e5-0X1;end;do OZ=OZ+0X1;end;do OZ=OZ+0X1;end;do un=Re[OZ];end;OZ=OZ+1;(NZ)[0X08]=bZ[un[0X2]];OZ=OZ+1;OZ=OZ+0X0001;OZ=OZ+1;KZ=8;(NZ[KZ])();KZ=KZ-0X01;OZ=OZ+0X1;OZ=OZ+0x001;OZ=OZ+1;(NZ)[8]=true;un=Re[OZ];OZ=OZ+0X1;(bZ)[un[0X002]]=NZ[0X00008];un=Re[OZ];OZ=OZ+1;do(NZ)[8]=bZ[un[2]];end;do un=Re[OZ];end;do OZ=OZ+1;end;(NZ)[9]=NZ[0X7][un[5]];OZ=OZ+1;OZ=OZ+0x1;un=Re[OZ];OZ=OZ+0X0001;(NZ)[9]=NZ[9][un[0X5]];do OZ=OZ+0X01;end;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+0X00001;NZ[0xA]=bZ[un[0X2]];un=Re[OZ];do OZ=OZ+0X01;end;(NZ)[0xa]=NZ[0X00A][un[5]];un=Re[OZ];OZ=OZ+0X01;do(NZ)[0X000b]=bZ[un[0X02]];end;OZ=OZ+0X1;do OZ=OZ+1;end;un=Re[OZ];do OZ=OZ+0X1;end;NZ[0XB]=NZ[0xB][un[5]];un=Re[OZ];OZ=OZ+1;NZ[0xC]=un[2];do un=Re[OZ];end;OZ=OZ+1;(NZ)[0X00d]=un[0X2];do OZ=OZ+0x001;end;e5=0Xb;do NZ[e5]=NZ[e5](NZ[e5+0X1],NZ[e5+2]);end;KZ=e5;local K5=(2);do un=Re[OZ];end;do OZ=OZ+1;end;(NZ)[0xB]=NZ[0Xb]/un[0X5];un=Re[OZ];OZ=OZ+1;do NZ[12]=un[2];end;do un=Re[OZ];end;OZ=OZ+1;NZ[13]=bZ[un[0X0002]];do OZ=OZ+1;end;OZ=OZ+0X1;do un=Re[OZ];end;OZ=OZ+0X1;(NZ)[0X000D]=NZ[0X000d][un[5]];OZ=OZ+1;OZ=OZ+0X1;do un=Re[OZ];end;OZ=OZ+0X01;(NZ)[0X00e]=un[2];un=Re[OZ];OZ=OZ+1;NZ[0X0000F]=un[2];do OZ=OZ+1;end;e5=13;(NZ)[e5]=NZ[e5](NZ[e5+0X1],NZ[e5+2]);do KZ=e5;end;un=Re[OZ];OZ=OZ+1;NZ[0x0d]=NZ[0X000D]/un[5];do OZ=OZ+1;end;e5=0XA;do KZ=e5+4-1;end;NZ[e5]=NZ[e5](I(NZ,e5+1,KZ));do KZ=e5;end;OZ=OZ+1;do OZ=OZ+0x1;end;OZ=OZ+1;(NZ)[0X9]=NZ[9]+NZ[0XA];un=Re[OZ];local l5=je[un[0X6]];OZ=OZ+0X0001;local I5,t5=l5[0X8],(nil);local q5=#I5;if not(q5>0)then else do t5={};end;do for qJ=0X001,q5 do local wJ=I5[qJ];if wJ[1]==0 then t5[qJ-1]={NZ,wJ[2]};else(t5)[qJ-0X0001]=ve[wJ[2]];end;end;end;A(De,t5);end;(NZ)[10]=NC(t5,bZ,l5);OZ=OZ+0x01;e5=0X8;NZ[e5](NZ[e5+0X1],NZ[e5+0X2]);KZ=e5-0X1;OZ=OZ+1;do OZ=OZ+0X1;end;un=Re[OZ];OZ=OZ+0x001;NZ[0X08]=bZ[un[2]];OZ=OZ+1;OZ=OZ+1;OZ=OZ+0x1;(NZ)[9]=NZ[6];do OZ=OZ+0X0001;end;e5=0x8;NZ[e5](NZ[e5+0X1]);KZ=e5-0X1;do un=Re[OZ];end;do OZ=OZ+1;end;(NZ)[8]=bZ[un[0X2]];un=Re[OZ];OZ=OZ+1;NZ[9]=bZ[un[2]];un=Re[OZ];OZ=OZ+1;(NZ)[0X0000a]=bZ[un[2]];OZ=OZ+0X1;OZ=OZ+0X1;un=Re[OZ];OZ=OZ+0x1;(NZ)[0xA]=NZ[10][un[0X005]];OZ=OZ+1;do e5=0X00009;end;local k5=0;if K5==0x0 then else do KZ=e5+K5-1;end;end;local a5,n5=nil,(nil);do if K5==1 then a5,n5=rC(NZ[e5]());else do a5,n5=rC(NZ[e5](I(NZ,e5+0X1,KZ)));end;end;end;if k5==0X00001 then do KZ=e5-0X1;end;else if k5~=0 then a5=e5+k5-2;do KZ=a5+1;end;else a5=a5+e5-0x01;KZ=a5;end;local k9=0X0;for i2=e5,a5 do k9=k9+1;(NZ)[i2]=n5[k9];end;end;OZ=OZ+1;e5=0X008;NZ[e5](I(NZ,e5+0X001,KZ));KZ=e5-0X1;OZ=OZ+0x1;OZ=OZ+0X001;un=Re[OZ];OZ=OZ+1;NZ[8]=bZ[un[2]];un=Re[OZ];OZ=OZ+0X1;do NZ[0x8]=NZ[0X08][un[0X005]];end;un=Re[OZ];OZ=OZ+0x01;NZ[0X9]=un[0X2];OZ=OZ+1;e5=0x008;(NZ[e5])(NZ[e5+1]);do KZ=e5-0x1;end;un=Re[OZ];OZ=OZ+1;if not(not NZ[0X07])then else OZ=un[0X06];end;end;else if Ln~=34 then NZ[0X03]=un[2];local hQ=0X03;do un=Re[OZ];end;OZ=OZ+0X1;NZ[0X0004]=un[2];un=Re[OZ];OZ=OZ+0X00001;NZ[0X0005]=un[0X2];un=Re[OZ];OZ=OZ+1;local nQ,dQ=NZ[hQ+0X1],(NZ[hQ+0X002]);local EQ=NZ[hQ];(NZ)[hQ]=g(function()for uH=EQ,nQ,dQ do d(true,uH);end;end);do OZ=un[6];end;else local nV=(ve[1]);local DV=0X00007;(NZ)[7]=nV[1][nV[2]];do un=Re[OZ];end;OZ=OZ+0X00001;local HV=(NZ[7]);NZ[DV+0x1]=HV;(NZ)[DV]=HV[un[0X5]];OZ=OZ+0X00001;DV=7;(NZ)[DV]=NZ[DV](NZ[DV+0X1]);KZ=DV;OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+0X00001;do if not(not NZ[0X7])then else OZ=un[0X06];end;end;end;end;end;else do if not(Ln<0X2B)then if Ln<0X2d then do if Ln==44 then NZ[2]=NZ[0][un[0X00005]];OZ=OZ+0x1;OZ=OZ+0X1;un=Re[OZ];OZ=OZ+1;if NZ[2]~=un[5]then OZ=un[0X00007];end;else NZ[13]=bZ[un[0X2]];OZ=OZ+0x001;OZ=OZ+1;un=Re[OZ];do OZ=OZ+1;end;NZ[14]=NZ[12][un[0X00005]];OZ=OZ+1;OZ=OZ+1;local X_=(13);OZ=OZ+1;(NZ)[X_]=NZ[X_](NZ[X_+0X00001]);KZ=X_;un=Re[OZ];do OZ=OZ+1;end;if not NZ[0Xd]then do OZ=un[0X6];end;end;end;end;else if Ln==0X2e then local CO=(ve[1]);(NZ)[0X0009]=CO[0X1][CO[2]];local rO=(0x09);un=Re[OZ];OZ=OZ+1;local SO=(NZ[0X9]);(NZ)[rO+0X1]=SO;(NZ)[rO]=SO[un[0X5]];OZ=OZ+0x1;rO=0X9;NZ[rO]=NZ[rO](NZ[rO+0X1]);KZ=rO;OZ=OZ+1;OZ=OZ+0X1;un=Re[OZ];OZ=OZ+1;do if not NZ[9]then OZ=un[0x6];end;end;else repeat local pm,ym,Bm=De,NZ,un[7];if not(#pm>0X00000)then else local uG=({});for ep,Ap in D,pm do for Hn,sn in D,Ap do if not(sn[1]==ym and sn[0x2]>=Bm)then else local rZ=(sn[2]);do if not uG[rZ]then uG[rZ]={ym[rZ]};end;end;(sn)[1]=uG[rZ];sn[2]=0X1;end;end;end;end;until true;end;end;else if Ln<0x29 then if Ln==0X000028 then NZ[7]=bZ[un[2]];OZ=OZ+1;OZ=OZ+1;OZ=OZ+1;KZ=0X7;(NZ)[KZ]=NZ[KZ]();do OZ=OZ+1;end;(NZ)[0x7]=NZ[0X0007]-NZ[0x5];un=Re[OZ];OZ=OZ+0x1;if not(not(un[2]<NZ[7]))then else OZ=un[0X7];end;else local w_=NZ[0X2];local a_=3;(NZ)[a_+1]=w_;(NZ)[a_]=w_[un[0X0005]];do un=Re[OZ];end;OZ=OZ+0X1;NZ[5]=un[2];OZ=OZ+0X00001;a_=0X03;NZ[a_]=NZ[a_](NZ[a_+0x1],NZ[a_+0X2]);KZ=a_;do un=Re[OZ];end;do OZ=OZ+0X01;end;OZ=un[6];end;else if Ln==0X2a then NZ[0x0003]=bZ[un[0X00002]];OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+0X1;local aO=0x3;NZ[0X4]=un[2];do OZ=OZ+1;end;NZ[aO]=NZ[aO](NZ[aO+1]);KZ=aO;OZ=OZ+0X0001;OZ=OZ+0X1;do un=Re[OZ];end;OZ=OZ+1;if not(not NZ[0X0003])then else OZ=un[0X6];end;else local c3=ve[0];do(NZ)[2]=c3[1][c3[0X0002]];end;OZ=OZ+0X1;do OZ=OZ+1;end;do un=Re[OZ];end;OZ=OZ+1;(NZ)[3]=un[2];local v3=2;do OZ=OZ+0X1;end;(NZ[v3])(NZ[v3+1]);KZ=v3-0X001;OZ=OZ+0X1;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+0X0001;NZ[0X2]=bZ[un[2]];do OZ=OZ+1;end;do OZ=OZ+1;end;do un=Re[OZ];end;do OZ=OZ+0x01;end;do NZ[0X3]=un[2];end;un=Re[OZ];OZ=OZ+1;NZ[4]=un[2];do un=Re[OZ];end;OZ=OZ+0X1;(NZ)[5]=un[0x2];OZ=OZ+1;v3=0x2;do KZ=v3+4-0X1;end;(NZ[v3])(I(NZ,v3+0X1,KZ));KZ=v3-1;do OZ=OZ+0X1;end;OZ=OZ+1;do un=Re[OZ];end;OZ=OZ+1;OZ=un[0x00006];end;end;end;end;end;end;end;end;else if Ln<0X5F then if not(Ln>=0X0004F)then if not(Ln>=0x47)then if Ln>=0X43 then do if not(Ln<69)then if Ln~=0X0046 then(NZ)[0X03]=false;un=Re[OZ];OZ=OZ+1;(bZ)[un[2]]=NZ[0X00003];un=Re[OZ];OZ=OZ+0x001;OZ=un[0X6];else do NZ[0X2]=bZ[un[2]];end;do OZ=OZ+1;end;OZ=OZ+1;do un=Re[OZ];end;OZ=OZ+1;local Dw=(3);(NZ)[3]=bZ[un[0X2]];do un=Re[OZ];end;do OZ=OZ+1;end;NZ[4]=bZ[un[0x2]];un=Re[OZ];OZ=OZ+1;(NZ)[4]=NZ[4][un[5]];local ew=0;OZ=OZ+0x1;OZ=OZ+1;OZ=OZ+1;local Nw=0X0002;if Nw==0 then else KZ=Dw+Nw-0x1;end;local Ow,nw=nil,nil;do if Nw~=1 then Ow,nw=rC(NZ[Dw](I(NZ,Dw+1,KZ)));else Ow,nw=rC(NZ[Dw]());end;end;do if ew==0X1 then KZ=Dw-0X1;else if ew~=0X0000 then Ow=Dw+ew-0X2;KZ=Ow+0x1;else Ow=Ow+Dw-0X1;KZ=Ow;end;local vk=0x0;do for j3=Dw,Ow do do vk=vk+1;end;(NZ)[j3]=nw[vk];end;end;end;end;OZ=OZ+0X1;Dw=2;(NZ)[Dw]=NZ[Dw](I(NZ,Dw+0x1,KZ));KZ=Dw;OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+0X01;if NZ[2]~=un[0x5]then else OZ=un[7];end;end;else do if Ln~=0X44 then local bO=(ve[0x0]);(NZ)[0X3]=bO[1][bO[2]];local rO=0X3;do un=Re[OZ];end;OZ=OZ+1;NZ[4]=un[0X02];do OZ=OZ+1;end;(NZ[rO])(NZ[rO+1]);KZ=rO-1;OZ=OZ+1;bO=ve[0x2];NZ[0X03]=bO[1][bO[0X0002]];OZ=OZ+0X001;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;(NZ)[0x3]=NZ[0X3][un[5]];OZ=OZ+0X1;OZ=OZ+0X1;OZ=OZ+0X01;NZ[4]=NZ[0X2];OZ=OZ+0X00001;bO=ve[1];NZ[5]=bO[0X1][bO[2]];OZ=OZ+0x1;rO=3;(NZ[rO])(NZ[rO+1],NZ[rO+2]);KZ=rO-0X00001;do OZ=OZ+1;end;OZ=OZ+0x1;OZ=OZ+1;bO=ve[0X1];(NZ)[0X003]=bO[0X0001][bO[2]];OZ=OZ+1;OZ=OZ+0X1;local zO=(NZ[3]);un=Re[OZ];do OZ=OZ+1;end;rO=3;NZ[rO+1]=zO;(NZ)[rO]=zO[un[0X00005]];do OZ=OZ+0X0001;end;do rO=3;end;NZ[rO](NZ[rO+1]);KZ=rO-1;do OZ=OZ+1;end;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;(NZ)[0X003]=bZ[un[0X0002]];OZ=OZ+0X01;OZ=OZ+1;OZ=OZ+1;KZ=0X0003;(NZ)[KZ]=NZ[KZ]();OZ=OZ+1;OZ=OZ+1;do un=Re[OZ];end;OZ=OZ+1;do OZ=un[6];end;else local aj=ve[0];(NZ)[4]=aj[1][aj[2]];OZ=OZ+1;OZ=OZ+1;do un=Re[OZ];end;local Qj=(0X00004);OZ=OZ+1;(NZ)[5]=un[0X00002];OZ=OZ+1;NZ[Qj](NZ[Qj+0X1]);do KZ=Qj-1;end;OZ=OZ+0x1;aj=ve[0x0001];NZ[4]=aj[0x001][aj[0X2]];local dj=NZ[0x004];un=Re[OZ];OZ=OZ+0X1;Qj=4;(NZ)[Qj+0X1]=dj;(NZ)[Qj]=dj[un[5]];OZ=OZ+1;Qj=4;NZ[Qj](NZ[Qj+1]);do KZ=Qj-1;end;do OZ=OZ+0X001;end;do(NZ)[0x4]=false;end;do un=Re[OZ];end;do OZ=OZ+0X1;end;bZ[un[0x2]]=NZ[0X04];un=Re[OZ];OZ=OZ+1;NZ[4]=bZ[un[0x002]];local Yj=(nil);do OZ=OZ+0X1;end;OZ=OZ+1;OZ=OZ+1;do KZ=0X00004;end;NZ[KZ]();KZ=KZ-0x1;un=Re[OZ];do OZ=OZ+0X1;end;NZ[4]=bZ[un[0X2]];do un=Re[OZ];end;OZ=OZ+1;do NZ[0X00005]=NZ[3][un[0x5]];end;do un=Re[OZ];end;OZ=OZ+1;NZ[5]=NZ[0x5][un[0X5]];do OZ=OZ+1;end;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;(NZ)[6]=bZ[un[0X002]];do un=Re[OZ];end;OZ=OZ+0X1;NZ[6]=NZ[6][un[5]];un=Re[OZ];OZ=OZ+1;NZ[0X0007]=un[2];un=Re[OZ];OZ=OZ+1;NZ[0x8]=un[2];un=Re[OZ];OZ=OZ+0X1;(NZ)[9]=bZ[un[0X002]];OZ=OZ+0X00001;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;NZ[9]=NZ[0X9][un[0X00005]];do un=Re[OZ];end;OZ=OZ+1;NZ[10]=un[0X2];un=Re[OZ];OZ=OZ+1;do NZ[0XB]=un[0X00002];end;OZ=OZ+1;Qj=0X9;NZ[Qj]=NZ[Qj](NZ[Qj+0X001],NZ[Qj+0X2]);KZ=Qj;un=Re[OZ];OZ=OZ+0X1;do(NZ)[9]=NZ[9]/un[0x5];end;do OZ=OZ+0X1;end;Qj=0x6;KZ=Qj+0X04-1;(NZ)[Qj]=NZ[Qj](I(NZ,Qj+0X1,KZ));KZ=Qj;OZ=OZ+0x1;NZ[0X5]=NZ[5]+NZ[0X6];un=Re[OZ];OZ=OZ+1;local nj=je[un[0X6]];local zj=(nj[0X8]);local Xj=#zj;do if Xj>0 then Yj={};for y1=0x1,Xj do local G1=zj[y1];if G1[0x1]==0X00000 then Yj[y1-1]={NZ,G1[2]};else(Yj)[y1-0X00001]=ve[G1[2]];end;end;(A)(De,Yj);end;end;(NZ)[0X00006]=NC(Yj,bZ,nj);OZ=OZ+0X1;Qj=4;local Lj=2;NZ[Qj](NZ[Qj+1],NZ[Qj+2]);KZ=Qj-1;un=Re[OZ];OZ=OZ+1;(NZ)[4]=bZ[un[0X2]];OZ=OZ+0X1;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+0X1;NZ[4]=NZ[0x4][un[5]];OZ=OZ+1;OZ=OZ+0X1;un=Re[OZ];do OZ=OZ+1;end;NZ[0x5]=un[2];OZ=OZ+0x1;Qj=4;(NZ[Qj])(NZ[Qj+1]);KZ=Qj-1;un=Re[OZ];do OZ=OZ+0X1;end;do(NZ)[4]=bZ[un[0X2]];end;un=Re[OZ];OZ=OZ+1;(NZ)[0X0005]=bZ[un[0x00002]];OZ=OZ+0X0001;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+1;NZ[0X00006]=bZ[un[0X002]];un=Re[OZ];do OZ=OZ+0X01;end;NZ[6]=NZ[6][un[0X05]];OZ=OZ+0X1;OZ=OZ+1;do OZ=OZ+0X00001;end;Qj=0X0005;local xj=0;if Lj==0X0 then else KZ=Qj+Lj-1;end;local Cj,cj=nil,(nil);if Lj~=0X1 then Cj,cj=rC(NZ[Qj](I(NZ,Qj+1,KZ)));else Cj,cj=rC(NZ[Qj]());end;do if xj~=0X1 then if xj==0x0 then Cj=Cj+Qj-1;KZ=Cj;else do Cj=Qj+xj-2;end;KZ=Cj+1;end;local PT=0X0;do for fL=Qj,Cj do PT=PT+0X1;NZ[fL]=cj[PT];end;end;else KZ=Qj-1;end;end;OZ=OZ+1;Qj=4;NZ[Qj]=NZ[Qj](I(NZ,Qj+0x01,KZ));KZ=Qj;do un=Re[OZ];end;OZ=OZ+0X1;if NZ[4]~=un[5]then else OZ=un[0X7];end;end;end;end;end;else if Ln<0X00041 then if Ln==0X40 then do(NZ)[6]=bZ[un[0x2]];end;do un=Re[OZ];end;OZ=OZ+0X1;NZ[0x7]=un[2];un=Re[OZ];OZ=OZ+0X1;NZ[0X8]=un[0X02];do un=Re[OZ];end;OZ=OZ+0X001;NZ[0X9]=NZ[0X5][un[5]];do un=Re[OZ];end;do OZ=OZ+1;end;local Fy=6;(NZ)[0XA]=un[0X2];OZ=OZ+0X1;KZ=Fy+0x0005-1;(NZ)[Fy]=NZ[Fy](I(NZ,Fy+0X001,KZ));KZ=Fy;OZ=OZ+0X1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;do if not(not NZ[0X006])then else OZ=un[6];end;end;else(NZ)[0x00004]=bZ[un[2]];OZ=OZ+1;KZ=4;NZ[KZ]();do KZ=KZ-1;end;do un=Re[OZ];end;OZ=OZ+0X1;NZ[0x4]=bZ[un[2]];OZ=OZ+1;OZ=OZ+1;un=Re[OZ];do OZ=OZ+1;end;local ws=0;do(NZ)[5]=bZ[un[0X2]];end;do OZ=OZ+1;end;OZ=OZ+1;un=Re[OZ];OZ=OZ+0X001;do NZ[6]=bZ[un[2]];end;do OZ=OZ+1;end;OZ=OZ+1;un=Re[OZ];OZ=OZ+0x001;local Rs=(5);NZ[0x6]=NZ[6][un[5]];do OZ=OZ+0X1;end;OZ=OZ+1;do OZ=OZ+0x0001;end;local Es=(2);if Es~=0X00000 then KZ=Rs+Es-0x1;end;local Fs,Ms=nil,(nil);if Es==0x1 then do Fs,Ms=rC(NZ[Rs]());end;else Fs,Ms=rC(NZ[Rs](I(NZ,Rs+0X1,KZ)));end;do if ws~=0x1 then if ws==0x000 then do Fs=Fs+Rs-0x0001;end;KZ=Fs;else do Fs=Rs+ws-2;end;KZ=Fs+0X1;end;local HI=(0X0);for gx=Rs,Fs do do HI=HI+1;end;(NZ)[gx]=Ms[HI];end;else KZ=Rs-1;end;end;OZ=OZ+1;do Rs=4;end;NZ[Rs]=NZ[Rs](I(NZ,Rs+1,KZ));KZ=Rs;do un=Re[OZ];end;OZ=OZ+0X1;if NZ[4]~=un[0x05]then else do OZ=un[7];end;end;end;else if Ln~=0X42 then(NZ)[un[7]]=bZ[un[0X002]];else do(NZ)[0x00009]=bZ[un[2]];end;OZ=OZ+1;OZ=OZ+0X1;do un=Re[OZ];end;do OZ=OZ+0X001;end;(NZ)[9]=NZ[9][un[5]];un=Re[OZ];OZ=OZ+0X1;do if not NZ[9]then OZ=un[0x06];end;end;end;end;end;else do if Ln<75 then do if Ln>=0x49 then if Ln==74 then(NZ)[9]=bZ[un[0x00002]];OZ=OZ+1;do OZ=OZ+1;end;un=Re[OZ];local qP=2;OZ=OZ+1;local nP=(0XA);NZ[0xa]=bZ[un[2]];un=Re[OZ];do OZ=OZ+1;end;(NZ)[10]=NZ[10][un[0X05]];OZ=OZ+0x00001;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;local yP=(NZ[10]);do NZ[nP+0X1]=yP;end;do(NZ)[nP]=yP[un[5]];end;OZ=OZ+0X1;nP=10;local jP=(0);if qP~=0X00000 then KZ=nP+qP-1;end;local aP,KP=nil,(nil);if qP~=1 then aP,KP=rC(NZ[nP](I(NZ,nP+1,KZ)));else aP,KP=rC(NZ[nP]());end;if jP~=1 then do if jP~=0X0000 then aP=nP+jP-2;KZ=aP+1;else do aP=aP+nP-1;end;KZ=aP;end;end;local fp=0X00;for z5=nP,aP do fp=fp+0x1;do NZ[z5]=KP[fp];end;end;else KZ=nP-0x001;end;OZ=OZ+1;OZ=OZ+1;do OZ=OZ+0x00001;end;nP=0X9;do qP=0;end;jP=0X4;if qP~=0X0 then KZ=nP+qP-1;end;aP,KP=nil;do if qP==1 then aP,KP=rC(NZ[nP]());else aP,KP=rC(NZ[nP](I(NZ,nP+1,KZ)));end;end;if jP==0X1 then KZ=nP-0x1;else if jP==0 then aP=aP+nP-1;KZ=aP;else aP=nP+jP-2;KZ=aP+0X00001;end;local y5=0;for zp=nP,aP do y5=y5+1;do NZ[zp]=KP[y5];end;end;end;un=Re[OZ];OZ=OZ+0X1;nP=9;local mP=(g(function(...)d();do for nz,az in...do(d)(true,nz,az);end;end;end));(mP)(NZ[nP],NZ[nP+1],NZ[nP+0X2]);KZ=nP;(NZ)[nP]=mP;do OZ=un[6];end;else local k7=ve[0x0];local I7,H7=0X2,(NZ[1]);NZ[I7+0x0001]=H7;NZ[I7]=H7[un[5]];OZ=OZ+1;I7=2;NZ[I7](NZ[I7+0X1]);do KZ=I7-0X1;end;OZ=OZ+1;NZ[2]=k7[0X01][k7[2]];OZ=OZ+0X00001;OZ=OZ+0X1;un=Re[OZ];OZ=OZ+1;(NZ)[3]=un[0x2];OZ=OZ+1;do I7=0x2;end;(NZ[I7])(NZ[I7+0X1]);KZ=I7-0x0001;do un=Re[OZ];end;do OZ=OZ+1;end;(NZ)[2]=bZ[un[2]];un=Re[OZ];do OZ=OZ+0X1;end;(NZ)[3]=un[0X0002];un=Re[OZ];OZ=OZ+0X001;(NZ)[0X4]=un[0X2];do OZ=OZ+1;end;(NZ)[0X005]=true;OZ=OZ+0x1;I7=2;do KZ=I7+0X4-1;end;NZ[I7](I(NZ,I7+1,KZ));KZ=I7-1;do un=Re[OZ];end;OZ=OZ+1;OZ=un[6];end;else do if Ln~=72 then local yD=ve[0];do NZ[0X002]=yD[0X1][yD[2]];end;do OZ=OZ+0x1;end;local wD=(0X0002);OZ=OZ+1;un=Re[OZ];OZ=OZ+0x1;NZ[0X00003]=un[2];OZ=OZ+0X001;NZ[wD](NZ[wD+0x1]);KZ=wD-0X1;do OZ=OZ+0X1;end;do OZ=OZ+1;end;un=Re[OZ];do OZ=OZ+0X1;end;(NZ)[0X2]=bZ[un[2]];OZ=OZ+1;do OZ=OZ+1;end;un=Re[OZ];do OZ=OZ+0X1;end;do(NZ)[0x3]=un[0X2];end;un=Re[OZ];OZ=OZ+0X1;do(NZ)[0x4]=un[2];end;do un=Re[OZ];end;do OZ=OZ+0X1;end;NZ[0x00005]=un[2];OZ=OZ+1;do wD=0X02;end;KZ=wD+4-0x0001;(NZ[wD])(I(NZ,wD+0X1,KZ));KZ=wD-0X1;un=Re[OZ];OZ=OZ+1;OZ=un[0X06];else local MY=ve[1];local wY=(0X5);(NZ)[5]=MY[0X1][MY[2]];do OZ=OZ+0X0001;end;do OZ=OZ+1;end;do un=Re[OZ];end;OZ=OZ+0X1;local EY=NZ[0X005];(NZ)[wY+0X1]=EY;(NZ)[wY]=EY[un[5]];OZ=OZ+0x001;wY=0X5;NZ[wY]=NZ[wY](NZ[wY+0X1]);KZ=wY;un=Re[OZ];do OZ=OZ+0X1;end;if NZ[5]then OZ=un[0X00006];end;end;end;end;end;else if not(Ln<77)then if Ln~=78 then local RV=12;local tV=NZ[0xb];do NZ[RV+0x1]=tV;end;(NZ)[RV]=tV[un[0x05]];un=Re[OZ];OZ=OZ+1;do(NZ)[14]=un[2];end;OZ=OZ+1;RV=12;(NZ)[RV]=NZ[RV](NZ[RV+1],NZ[RV+2]);KZ=RV;do un=Re[OZ];end;OZ=OZ+1;do if not NZ[12]then OZ=un[0X6];end;end;else do NZ[3]=NZ[2][un[0x00005]];end;un=Re[OZ];do OZ=OZ+1;end;NZ[0X3]=NZ[3][un[0X5]];un=Re[OZ];OZ=OZ+0X001;(NZ)[0x4]=bZ[un[2]];OZ=OZ+0x1;OZ=OZ+0X0001;un=Re[OZ];OZ=OZ+1;(NZ)[4]=NZ[4][un[5]];do OZ=OZ+1;end;do OZ=OZ+0X1;end;un=Re[OZ];do OZ=OZ+1;end;NZ[5]=un[2];un=Re[OZ];OZ=OZ+1;(NZ)[0X6]=un[2];un=Re[OZ];OZ=OZ+1;do NZ[7]=un[0X2];end;do OZ=OZ+1;end;local jZ=0x4;KZ=jZ+4-0x00001;(NZ)[jZ]=NZ[jZ](I(NZ,jZ+1,KZ));do KZ=jZ;end;do OZ=OZ+0X1;end;OZ=OZ+1;un=Re[OZ];do OZ=OZ+1;end;do if NZ[0X00003]==NZ[0x4]then else OZ=un[0X7];end;end;end;else do if Ln==76 then(NZ)[2]=bZ[un[0X2]];un=Re[OZ];do OZ=OZ+0X0001;end;NZ[0X2]=NZ[2][un[5]];do un=Re[OZ];end;OZ=OZ+0X1;NZ[0X2]=NZ[2][un[0X5]];un=Re[OZ];OZ=OZ+1;do OZ=un[0X6];end;else do NZ[0X006]=NZ[3][un[5]];end;do OZ=OZ+1;end;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+0X1;do if NZ[0x6]==un[0X0005]then else OZ=un[7];end;end;end;end;end;end;end;end;else if Ln<87 then if Ln>=0x53 then if not(Ln<0X55)then if Ln~=86 then local HJ=(ve[0x0]);NZ[0X2]=HJ[0X1][HJ[0X2]];local sJ=2;do un=Re[OZ];end;OZ=OZ+1;NZ[0x3]=un[2];OZ=OZ+0X1;(NZ[sJ])(NZ[sJ+0X1]);KZ=sJ-0x001;un=Re[OZ];OZ=OZ+1;NZ[0X00002]=bZ[un[0x00002]];un=Re[OZ];OZ=OZ+0X1;do NZ[0x0003]=un[0x2];end;do OZ=OZ+0X1;end;sJ=0X2;(NZ)[sJ]=NZ[sJ](NZ[sJ+0X01]);KZ=sJ;OZ=OZ+0X1;OZ=OZ+1;OZ=OZ+1;HJ=ve[0X2];(NZ)[3]=HJ[1][HJ[2]];OZ=OZ+0X001;OZ=OZ+1;do un=Re[OZ];end;do OZ=OZ+1;end;(NZ)[0x3]=NZ[3][un[0X5]];OZ=OZ+1;OZ=OZ+0X1;OZ=OZ+1;do(NZ)[4]=NZ[0X2];end;do OZ=OZ+0X1;end;sJ=3;do(NZ)[sJ]=NZ[sJ](NZ[sJ+0X1]);end;KZ=sJ;OZ=OZ+1;OZ=OZ+1;do un=Re[OZ];end;OZ=OZ+0X01;if not(not NZ[3])then else do OZ=un[6];end;end;else if not(un[0X2]<NZ[un[0X1]])then OZ=un[0X7];end;end;else if Ln==0X054 then(NZ)[un[7]]=un[0X2];else(NZ)[3]=bZ[un[2]];OZ=OZ+0X1;OZ=OZ+0x0001;local g3=0X3;un=Re[OZ];OZ=OZ+0X1;NZ[4]=un[2];un=Re[OZ];OZ=OZ+0X1;NZ[0X5]=un[2];un=Re[OZ];do OZ=OZ+1;end;do(NZ)[6]=un[0x2];end;un=Re[OZ];OZ=OZ+1;do(NZ)[0X00007]=un[0X002];end;OZ=OZ+0x0001;KZ=g3+5-0x1;(NZ[g3])(I(NZ,g3+1,KZ));KZ=g3-0x1;OZ=OZ+0X1;OZ=OZ+0x00001;un=Re[OZ];OZ=OZ+1;OZ=un[6];end;end;else if not(Ln<81)then do if Ln~=0X00052 then NZ[0XB]=NZ[6];OZ=OZ+0X1;(NZ)[3]=NZ[0xB];do OZ=OZ+1;end;NZ[2]=NZ[10];un=Re[OZ];do OZ=OZ+0X1;end;OZ=un[0x6];else local nG=NZ[3];local VG=0X004;(NZ)[VG+1]=nG;(NZ)[VG]=nG[un[0x5]];un=Re[OZ];OZ=OZ+1;(NZ)[6]=un[0X2];do OZ=OZ+0X00001;end;do VG=0X4;end;NZ[VG]=NZ[VG](NZ[VG+0X1],NZ[VG+2]);KZ=VG;OZ=OZ+0X1;OZ=OZ+0X1;un=Re[OZ];OZ=OZ+1;OZ=un[6];end;end;else if Ln~=80 then(NZ)[0X3]=bZ[un[2]];do OZ=OZ+1;end;do KZ=0X3;end;NZ[KZ]();do KZ=KZ-1;end;do un=Re[OZ];end;OZ=OZ+1;NZ[0x3]=NZ[2][un[0X0005]];OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;do NZ[3]=NZ[3][un[0X5]];end;un=Re[OZ];do OZ=OZ+0X1;end;NZ[4]=bZ[un[2]];un=Re[OZ];OZ=OZ+0x1;(NZ)[4]=NZ[0X004][un[5]];un=Re[OZ];do OZ=OZ+0x0001;end;do NZ[0X5]=un[2];end;un=Re[OZ];OZ=OZ+1;(NZ)[0X006]=un[0X00002];un=Re[OZ];OZ=OZ+0X1;(NZ)[7]=un[0X02];local As=0X004;OZ=OZ+0x1;KZ=As+4-1;(NZ)[As]=NZ[As](I(NZ,As+1,KZ));KZ=As;OZ=OZ+1;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+0X1;if NZ[3]~=NZ[0x4]then else OZ=un[7];end;else do NZ[0X00002]=NZ[0X0][un[0x5]];end;OZ=OZ+1;OZ=OZ+0X001;un=Re[OZ];OZ=OZ+0X1;if NZ[0X2]~=un[5]then OZ=un[7];end;end;end;end;else if not(Ln<0X5b)then if not(Ln>=93)then if Ln==0X05C then local EY=(3);local OY=NZ[0x2];do(NZ)[EY+1]=OY;end;(NZ)[EY]=OY[un[5]];un=Re[OZ];do OZ=OZ+1;end;NZ[5]=un[0X2];OZ=OZ+0x0001;EY=3;(NZ)[EY]=NZ[EY](NZ[EY+0X1],NZ[EY+0X2]);KZ=EY;OZ=OZ+1;OZ=OZ+0X1;un=Re[OZ];do OZ=OZ+0x0001;end;if not NZ[0X0003]then OZ=un[6];end;else(NZ[un[7]])[un[0X002]]=un[0X5];end;else do if Ln==94 then do(NZ)[0x7]=un[0X2];end;OZ=OZ+1;do NZ[8]=NZ[0X006];end;OZ=OZ+1;local ho=(0X07);(NZ)[7]=NZ[ho]..NZ[ho+0X00001];OZ=OZ+0X1;local No=(0x8);NZ[7]=NZ[0x2][NZ[0X0007]];OZ=OZ+0x1;OZ=OZ+1;un=Re[OZ];OZ=OZ+0x0001;do NZ[0X00008]=bZ[un[0X2]];end;un=Re[OZ];OZ=OZ+1;do NZ[0X009]=NZ[7][un[0X5]];end;un=Re[OZ];OZ=OZ+1;do(NZ[8])[un[0x2]]=NZ[9];end;un=Re[OZ];OZ=OZ+1;NZ[0x8]=bZ[un[2]];un=Re[OZ];OZ=OZ+0x1;NZ[0x009]=un[2];OZ=OZ+1;NZ[No](NZ[No+0X01]);KZ=No-1;un=Re[OZ];OZ=OZ+1;(NZ)[0X8]=bZ[un[2]];OZ=OZ+0x1;OZ=OZ+0x1;un=Re[OZ];do OZ=OZ+1;end;(NZ)[9]=NZ[0X07][un[5]];OZ=OZ+0X1;OZ=OZ+0X00001;OZ=OZ+0x001;do No=0X00008;end;NZ[No](NZ[No+0X01]);KZ=No-1;OZ=OZ+0X00001;OZ=OZ+1;un=Re[OZ];do OZ=OZ+0X00001;end;(NZ)[0X8]=bZ[un[2]];do OZ=OZ+0X01;end;KZ=8;NZ[KZ]=NZ[KZ]();do OZ=OZ+0x00001;end;OZ=OZ+0X1;do un=Re[OZ];end;OZ=OZ+0X001;OZ=un[6];else(NZ)[0X9]=bZ[un[0X2]];OZ=OZ+0X00001;KZ=9;NZ[KZ]();KZ=KZ-0X1;OZ=OZ+0X00001;OZ=OZ+1;un=Re[OZ];do OZ=OZ+1;end;NZ[9]=NZ[7][un[5]];OZ=OZ+1;OZ=OZ+1;un=Re[OZ];do OZ=OZ+1;end;NZ[9]=NZ[0X00009][un[0x00005]];un=Re[OZ];OZ=OZ+1;if not(NZ[9])then else OZ=un[6];end;end;end;end;else if Ln<0x59 then do if Ln==88 then do NZ[5]=bZ[un[0X02]];end;do OZ=OZ+0X1;end;do OZ=OZ+0X00001;end;OZ=OZ+0X1;KZ=5;NZ[KZ]=NZ[KZ]();OZ=OZ+0x001;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;OZ=un[0X00006];else local A1=ve[0x000];local t1=0X003;do NZ[0X003]=A1[1][A1[2]];end;un=Re[OZ];OZ=OZ+1;NZ[0x4]=un[0X002];OZ=OZ+0X001;(NZ[t1])(NZ[t1+0X0001]);KZ=t1-0X0001;do OZ=OZ+0X1;end;A1=ve[0x2];(NZ)[0x3]=A1[0x00001][A1[0X2]];un=Re[OZ];OZ=OZ+0X1;do(NZ)[0x3]=NZ[0X0003][un[0x00005]];end;OZ=OZ+1;do(NZ)[0X4]=NZ[2];end;OZ=OZ+1;A1=ve[0X00001];NZ[0x5]=A1[1][A1[2]];OZ=OZ+0x0001;do OZ=OZ+1;end;OZ=OZ+0x01;do(NZ)[6]=nil;end;do OZ=OZ+1;end;NZ[7]={};un=Re[OZ];do OZ=OZ+0X1;end;do(NZ[7])[un[2]]=un[5];end;do OZ=OZ+1;end;t1=3;KZ=t1+5-1;NZ[t1](I(NZ,t1+1,KZ));KZ=t1-1;do OZ=OZ+1;end;A1=ve[0X1];(NZ)[0X3]=A1[1][A1[0X02]];do un=Re[OZ];end;do OZ=OZ+0X1;end;local k1=NZ[0x3];t1=3;NZ[t1+0X00001]=k1;do(NZ)[t1]=k1[un[5]];end;do OZ=OZ+1;end;do t1=3;end;(NZ[t1])(NZ[t1+1]);KZ=t1-1;OZ=OZ+1;do OZ=OZ+1;end;do un=Re[OZ];end;OZ=OZ+1;OZ=un[0X6];end;end;else if Ln==90 then local aP=ve[0X0];do(NZ)[7]=aP[0X1][aP[0X00002]];end;OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;local IP=7;NZ[8]=un[2];do OZ=OZ+0X001;end;(NZ[IP])(NZ[IP+0X1]);KZ=IP-1;do OZ=OZ+1;end;do OZ=OZ+0X1;end;OZ=OZ+0X1;aP=ve[2];NZ[7]=aP[0X0001][aP[0X2]];do un=Re[OZ];end;OZ=OZ+1;do NZ[0X0007]=NZ[7][un[5]];end;OZ=OZ+1;OZ=OZ+0x1;OZ=OZ+0X0001;(NZ)[0X8]=NZ[5];do OZ=OZ+0X1;end;do aP=ve[0X0001];end;NZ[0X9]=aP[1][aP[0X02]];OZ=OZ+1;IP=7;(NZ[IP])(NZ[IP+1],NZ[IP+2]);KZ=IP-0X1;OZ=OZ+0X0001;OZ=OZ+0X1;do OZ=OZ+1;end;do aP=ve[0x1];end;do NZ[0X7]=aP[1][aP[0X00002]];end;OZ=OZ+0x1;OZ=OZ+1;local hP=NZ[7];un=Re[OZ];do OZ=OZ+0X1;end;IP=7;NZ[IP+1]=hP;NZ[IP]=hP[un[0X5]];OZ=OZ+0x00001;IP=0x7;(NZ[IP])(NZ[IP+1]);KZ=IP-1;do un=Re[OZ];end;OZ=OZ+1;OZ=un[6];else NZ[0x2]=NZ[0X0][un[0X005]];OZ=OZ+0X1;OZ=OZ+0x00001;un=Re[OZ];OZ=OZ+1;do if NZ[2]==un[0X5]then else OZ=un[0X7];end;end;end;end;end;end;end;else if Ln>=111 then do if not(Ln<119)then if Ln>=0x7b then if not(Ln<0x7d)then if Ln==126 then NZ[un[0X7]]=NZ[un[6]];else do if NZ[un[0x6]]<=NZ[un[0x1]]then OZ=un[0X7];end;end;end;else if Ln~=124 then(NZ)[0X0D]=NZ[12][un[5]];OZ=OZ+0X01;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;if not NZ[13]then OZ=un[0x6];end;else NZ[3]=bZ[un[2]];do un=Re[OZ];end;do OZ=OZ+1;end;NZ[0X0004]=bZ[un[0x02]];do un=Re[OZ];end;OZ=OZ+0X1;(NZ)[0X0005]=NZ[0X002][un[0X5]];do OZ=OZ+1;end;OZ=OZ+0X1;do un=Re[OZ];end;OZ=OZ+0x1;(NZ)[6]=un[0x2];OZ=OZ+1;local EK=(0X3);KZ=EK+4-0X00001;(NZ[EK])(I(NZ,EK+1,KZ));KZ=EK-1;OZ=OZ+0X001;OZ=OZ+0X1;un=Re[OZ];OZ=OZ+0X1;OZ=un[0X006];end;end;else if not(Ln>=0X79)then if Ln~=120 then local oz=(ve[0]);NZ[2]=oz[0x01][oz[2]];local vz=0x2;OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;NZ[0x3]=un[2];OZ=OZ+1;NZ[vz](NZ[vz+0X01]);KZ=vz-0X1;OZ=OZ+1;do OZ=OZ+0x001;end;un=Re[OZ];OZ=OZ+0X1;(NZ)[0x0002]=bZ[un[2]];un=Re[OZ];OZ=OZ+1;NZ[0X03]=un[2];un=Re[OZ];OZ=OZ+0X1;do(NZ)[4]=un[2];end;un=Re[OZ];OZ=OZ+1;NZ[0x05]=un[2];OZ=OZ+1;do vz=2;end;KZ=vz+0X4-1;(NZ[vz])(I(NZ,vz+1,KZ));KZ=vz-1;un=Re[OZ];OZ=OZ+0x1;do OZ=un[6];end;else if not(not(NZ[un[6]]<NZ[un[0X0001]]))then else OZ=un[7];end;end;else do if Ln==122 then(NZ)[0X9]=bZ[un[2]];do OZ=OZ+0X1;end;do KZ=0X09;end;do NZ[KZ]=NZ[KZ]();end;OZ=OZ+0X00001;do OZ=OZ+0X001;end;OZ=OZ+0X00001;NZ[0X009]=NZ[0X09]-NZ[0x00008];un=Re[OZ];OZ=OZ+1;if not(not(un[0X0002]<NZ[9]))then else do OZ=un[0X7];end;end;else NZ[0X0003]=bZ[un[0X2]];local Hp=0X0003;do OZ=OZ+1;end;OZ=OZ+1;do un=Re[OZ];end;OZ=OZ+1;(NZ)[4]=un[0X2];do OZ=OZ+1;end;NZ[Hp](NZ[Hp+0X1]);KZ=Hp-1;OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+0X1;do OZ=un[0X6];end;end;end;end;end;else if Ln<0X73 then if Ln>=0X000071 then if Ln~=114 then local EG=ve[0X0];local PG=0X02;NZ[2]=EG[1][EG[0x0002]];un=Re[OZ];OZ=OZ+0X0001;(NZ)[3]=un[2];OZ=OZ+0X001;NZ[PG](NZ[PG+1]);KZ=PG-0X00001;un=Re[OZ];OZ=OZ+0X001;(NZ)[0X00002]=bZ[un[0x0002]];OZ=OZ+0X0001;OZ=OZ+0X0001;un=Re[OZ];OZ=OZ+0x1;NZ[0X0003]=un[2];un=Re[OZ];OZ=OZ+1;do(NZ)[4]=un[0X2];end;un=Re[OZ];OZ=OZ+0x01;(NZ)[5]=un[2];OZ=OZ+0X001;do PG=2;end;do KZ=PG+0X4-0X1;end;(NZ[PG])(I(NZ,PG+0X00001,KZ));KZ=PG-0x01;do un=Re[OZ];end;OZ=OZ+1;do OZ=un[6];end;else local X1=6;local v1=ve[0x1];do NZ[0X6]=v1[0X1][v1[0X02]];end;OZ=OZ+1;do OZ=OZ+0X1;end;un=Re[OZ];OZ=OZ+1;local O1=(NZ[0X00006]);(NZ)[X1+1]=O1;do NZ[X1]=O1[un[0x5]];end;do OZ=OZ+0X1;end;X1=6;NZ[X1](NZ[X1+0X1]);do KZ=X1-1;end;OZ=OZ+0X1;OZ=OZ+0X1;do un=Re[OZ];end;do OZ=OZ+0X1;end;OZ=un[0X6];end;else if Ln~=0X70 then(NZ)[un[0x7]]=NZ[un[6]]<NZ[un[1]];else local k5=ve[0x1];(NZ)[0X02]=k5[0X1][k5[2]];OZ=OZ+1;OZ=OZ+0X01;local q5=0X2;un=Re[OZ];OZ=OZ+1;local j5=(NZ[0X02]);NZ[q5+0X1]=j5;NZ[q5]=j5[un[0x5]];OZ=OZ+0X1;do q5=2;end;(NZ[q5])(NZ[q5+1]);KZ=q5-0x1;un=Re[OZ];OZ=OZ+1;NZ[0X0002]=un[0X0002];local z5=(2);OZ=OZ+0X1;NZ[3]=nil;un=Re[OZ];OZ=OZ+0X1;(NZ)[4]=bZ[un[0X00002]];un=Re[OZ];OZ=OZ+0X1;NZ[5]=bZ[un[0X2]];OZ=OZ+0X1;OZ=OZ+1;un=Re[OZ];do OZ=OZ+1;end;(NZ)[5]=NZ[0x5][un[5]];un=Re[OZ];OZ=OZ+1;q5=5;j5=NZ[5];NZ[q5+1]=j5;(NZ)[q5]=j5[un[0X5]];OZ=OZ+0X00001;q5=5;local B5=0x0;if z5==0 then else KZ=q5+z5-1;end;local m5,M5=nil,nil;if z5~=0x1 then m5,M5=rC(NZ[q5](I(NZ,q5+0X1,KZ)));else m5,M5=rC(NZ[q5]());end;if B5~=0X1 then if B5==0X0 then do m5=m5+q5-1;end;do KZ=m5;end;else m5=q5+B5-0X002;do KZ=m5+0x1;end;end;local vc=(0X0);do for p5=q5,m5 do vc=vc+0X1;NZ[p5]=M5[vc];end;end;else do KZ=q5-1;end;end;OZ=OZ+1;OZ=OZ+0X1;OZ=OZ+1;do q5=4;end;do z5=0;end;B5=0X004;do if z5~=0X0 then KZ=q5+z5-0x01;end;end;m5,M5=nil;if z5~=1 then m5,M5=rC(NZ[q5](I(NZ,q5+0X01,KZ)));else m5,M5=rC(NZ[q5]());end;do if B5~=1 then if B5~=0X000 then m5=q5+B5-2;KZ=m5+0X1;else m5=m5+q5-1;KZ=m5;end;local tG=(0);do for KC=q5,m5 do tG=tG+0x1;NZ[KC]=M5[tG];end;end;else KZ=q5-0X1;end;end;do un=Re[OZ];end;do OZ=OZ+1;end;q5=0X4;local a5=(g(function(...)d();do for tG,aG in...do d(true,tG,aG);end;end;end));a5(NZ[q5],NZ[q5+1],NZ[q5+2]);KZ=q5;NZ[q5]=a5;OZ=un[6];end;end;else if not(Ln<117)then if Ln~=0X76 then local GP,QP=0x7,(NZ[6]);(NZ)[GP+1]=QP;NZ[GP]=QP[un[0x5]];un=Re[OZ];OZ=OZ+0X01;(NZ)[9]=un[0x2];OZ=OZ+0X01;GP=7;NZ[GP]=NZ[GP](NZ[GP+0X0001],NZ[GP+2]);KZ=GP;un=Re[OZ];OZ=OZ+1;if not NZ[7]then OZ=un[0X6];end;else NZ[8]=bZ[un[0X002]];OZ=OZ+1;OZ=OZ+1;OZ=OZ+0x00001;KZ=0X8;NZ[KZ]();KZ=KZ-1;un=Re[OZ];OZ=OZ+1;OZ=un[6];end;else if Ln==0X000074 then(NZ)[0X4]=bZ[un[2]];do OZ=OZ+0X1;end;do OZ=OZ+0X01;end;un=Re[OZ];do OZ=OZ+0X001;end;do NZ[0X4]=NZ[0X4][un[0X5]];end;do un=Re[OZ];end;OZ=OZ+0X1;(NZ)[4]=NZ[0X4][un[0X5]];un=Re[OZ];OZ=OZ+0X001;do if not(not(NZ[4]<un[5]))then else OZ=un[0X0007];end;end;else local yI,wI=0X3,(NZ[2]);(NZ)[yI+1]=wI;(NZ)[yI]=wI[un[5]];do un=Re[OZ];end;OZ=OZ+0X1;NZ[0X0005]=un[2];OZ=OZ+0X0001;do yI=0X003;end;NZ[yI]=NZ[yI](NZ[yI+1],NZ[yI+2]);do KZ=yI;end;un=Re[OZ];do OZ=OZ+1;end;if not(not NZ[0X00003])then else OZ=un[0X6];end;end;end;end;end;end;else if not(Ln>=0X00067)then if Ln<0X63 then if Ln<0X61 then if Ln~=0X60 then local gF=(ve[0X0]);local eF=(2);(NZ)[0x2]=gF[0X1][gF[0x002]];un=Re[OZ];OZ=OZ+1;do(NZ)[0X3]=un[0X002];end;OZ=OZ+0X1;NZ[eF](NZ[eF+1]);KZ=eF-1;OZ=OZ+0X01;OZ=OZ+1;OZ=OZ+0x1;NZ[0X002]=true;un=Re[OZ];do OZ=OZ+0X1;end;do bZ[un[0X2]]=NZ[2];end;un=Re[OZ];OZ=OZ+1;NZ[0X2]=bZ[un[2]];un=Re[OZ];OZ=OZ+0X1;(NZ)[0X00003]=un[2];OZ=OZ+1;(NZ)[4]=false;OZ=OZ+0X01;do eF=2;end;NZ[eF](NZ[eF+1],NZ[eF+2]);KZ=eF-1;un=Re[OZ];do OZ=OZ+0X1;end;NZ[2]=bZ[un[2]];un=Re[OZ];do OZ=OZ+0X1;end;do NZ[0X03]=un[2];end;do OZ=OZ+1;end;do eF=2;end;do NZ[eF]=NZ[eF](NZ[eF+1]);end;KZ=eF;OZ=OZ+1;OZ=OZ+0x1;un=Re[OZ];OZ=OZ+0x001;if not NZ[2]then do OZ=un[0X00006];end;end;else NZ[0X0002]=bZ[un[0X2]];OZ=OZ+0X1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;do NZ[0X0002]=NZ[2][un[5]];end;OZ=OZ+1;OZ=OZ+0X0001;un=Re[OZ];OZ=OZ+0x1;(NZ)[0x002]=NZ[2][un[5]];OZ=OZ+0X01;do OZ=OZ+0X00001;end;do un=Re[OZ];end;OZ=OZ+0X1;OZ=un[6];end;else do if Ln==98 then NZ[9]=NZ[0X3][un[5]];OZ=OZ+0X0001;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;do if NZ[9]~=un[5]then OZ=un[7];end;end;else do(NZ)[0X0009]=bZ[un[2]];end;OZ=OZ+1;OZ=OZ+1;do OZ=OZ+1;end;do KZ=9;end;NZ[KZ]();KZ=KZ-1;OZ=OZ+0X0001;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+0x1;(NZ)[9]=NZ[7][un[0X5]];do OZ=OZ+1;end;OZ=OZ+1;un=Re[OZ];do OZ=OZ+1;end;(NZ)[0X9]=NZ[0X009][un[0X5]];un=Re[OZ];do OZ=OZ+1;end;if NZ[0x0009]then OZ=un[6];end;end;end;end;else if Ln>=101 then if Ln~=0X066 then NZ[un[7]]=NZ[un[0X06]][un[5]];else do if NZ[un[6]]==NZ[un[1]]then else OZ=un[7];end;end;end;else if Ln~=0X64 then local HU=(ve[0x00000]);NZ[0x4]=HU[0X1][HU[2]];un=Re[OZ];OZ=OZ+0X1;do NZ[5]=un[2];end;OZ=OZ+0X1;local EU=(4);NZ[EU](NZ[EU+0X01]);do KZ=EU-1;end;do OZ=OZ+1;end;HU=ve[1];(NZ)[4]=HU[0X1][HU[0x2]];OZ=OZ+1;OZ=OZ+0X1;un=Re[OZ];OZ=OZ+1;local qU=NZ[0X4];EU=0X0004;do NZ[EU+0X1]=qU;end;(NZ)[EU]=qU[un[0X0005]];OZ=OZ+1;EU=4;(NZ[EU])(NZ[EU+0X1]);KZ=EU-0X00001;do OZ=OZ+0X01;end;(NZ)[4]=false;un=Re[OZ];do OZ=OZ+1;end;(bZ)[un[0x2]]=NZ[4];un=Re[OZ];OZ=OZ+1;NZ[4]=bZ[un[0X002]];OZ=OZ+1;do OZ=OZ+1;end;do OZ=OZ+0x1;end;KZ=0X4;NZ[KZ]();do KZ=KZ-0x1;end;un=Re[OZ];do OZ=OZ+0X01;end;(NZ)[0X4]=bZ[un[0X2]];do un=Re[OZ];end;OZ=OZ+0x1;(NZ)[0X05]=NZ[3][un[5]];un=Re[OZ];do OZ=OZ+1;end;do NZ[0x5]=NZ[5][un[5]];end;un=Re[OZ];OZ=OZ+1;do NZ[0x6]=bZ[un[0x2]];end;OZ=OZ+1;OZ=OZ+0X0001;un=Re[OZ];OZ=OZ+1;NZ[6]=NZ[6][un[0x5]];do OZ=OZ+1;end;OZ=OZ+1;un=Re[OZ];do OZ=OZ+0X00001;end;(NZ)[7]=un[0x2];un=Re[OZ];OZ=OZ+0X00001;(NZ)[0x8]=un[0X2];un=Re[OZ];do OZ=OZ+0X1;end;(NZ)[0X9]=bZ[un[0X2]];un=Re[OZ];OZ=OZ+1;do NZ[9]=NZ[9][un[5]];end;OZ=OZ+1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;(NZ)[10]=un[2];do un=Re[OZ];end;OZ=OZ+0X1;do(NZ)[0X00B]=un[2];end;do OZ=OZ+0X1;end;EU=9;NZ[EU]=NZ[EU](NZ[EU+0X1],NZ[EU+2]);KZ=EU;un=Re[OZ];do OZ=OZ+1;end;(NZ)[0x9]=NZ[9]/un[5];OZ=OZ+0X00001;do EU=0x00006;end;KZ=EU+4-0X1;NZ[EU]=NZ[EU](I(NZ,EU+1,KZ));do KZ=EU;end;OZ=OZ+1;do OZ=OZ+0X1;end;OZ=OZ+0X1;(NZ)[5]=NZ[0X5]+NZ[6];un=Re[OZ];local YU=(je[un[0X6]]);local yU=(YU[0X8]);OZ=OZ+0X00001;local lU,kU=nil,(#yU);if kU>0X000 then lU={};for As=0X1,kU do local Xs=yU[As];if Xs[1]~=0X0 then(lU)[As-1]=ve[Xs[2]];else(lU)[As-1]={NZ,Xs[2]};end;end;(A)(De,lU);end;do(NZ)[0X6]=NC(lU,bZ,YU);end;OZ=OZ+0X1;EU=4;(NZ[EU])(NZ[EU+1],NZ[EU+2]);KZ=EU-0x1;OZ=OZ+0x1;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+0X1;NZ[4]=bZ[un[0X2]];do OZ=OZ+0X1;end;OZ=OZ+1;OZ=OZ+1;(NZ)[5]=NZ[0X002];OZ=OZ+0X1;EU=4;NZ[EU](NZ[EU+0X1]);KZ=EU-0x1;un=Re[OZ];do OZ=OZ+0X01;end;(NZ)[0X4]=bZ[un[2]];OZ=OZ+1;OZ=OZ+1;do un=Re[OZ];end;OZ=OZ+0X1;do NZ[0X4]=NZ[4][un[5]];end;do un=Re[OZ];end;OZ=OZ+0X001;(NZ)[5]=un[0X0002];do OZ=OZ+1;end;EU=0X4;NZ[EU](NZ[EU+0X1]);KZ=EU-0x00001;do un=Re[OZ];end;OZ=OZ+1;(NZ)[4]=bZ[un[2]];do OZ=OZ+0X01;end;OZ=OZ+0x1;do un=Re[OZ];end;OZ=OZ+1;if not(not NZ[4])then else OZ=un[6];end;else local yr,Lr=0XC,(NZ[0X0b]);(NZ)[yr+0X1]=Lr;(NZ)[yr]=Lr[un[0X5]];un=Re[OZ];OZ=OZ+0X1;(NZ)[14]=un[0X02];OZ=OZ+1;yr=0X00c;do NZ[yr]=NZ[yr](NZ[yr+0x001],NZ[yr+0X002]);end;KZ=yr;do OZ=OZ+1;end;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;if not NZ[0X0C]then OZ=un[6];end;end;end;end;else if Ln>=107 then if not(Ln>=0X6D)then if Ln~=108 then do NZ[0X7]=bZ[un[0X00002]];end;un=Re[OZ];OZ=OZ+1;(NZ)[0x8]=un[0x00002];OZ=OZ+0X1;local px=0X07;NZ[px](NZ[px+0X1]);KZ=px-1;do OZ=OZ+1;end;OZ=OZ+1;un=Re[OZ];do OZ=OZ+0X00001;end;OZ=un[6];else NZ[6]=NZ[0x5][un[5]];OZ=OZ+1;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+0X001;(NZ)[7]=bZ[un[0X2]];do OZ=OZ+0x001;end;do OZ=OZ+1;end;un=Re[OZ];do OZ=OZ+1;end;(NZ)[0x7]=NZ[7][un[0X0005]];un=Re[OZ];do OZ=OZ+0X001;end;do if NZ[6]~=NZ[0X7]then else OZ=un[0X7];end;end;end;else do if Ln==0X00006E then local mB,oB=je[un[6]],nil;local YB=mB[0X8];local KB=#YB;do if not(KB>0)then else do oB={};end;for d4=1,KB do local K4=YB[d4];if K4[0X1]~=0 then(oB)[d4-1]=ve[K4[2]];else do(oB)[d4-1]={NZ,K4[0X2]};end;end;end;A(De,oB);end;end;NZ[un[7]]=NC(oB,bZ,mB);else local Ga=(ve[0X0]);NZ[0X2]=Ga[1][Ga[0X2]];do un=Re[OZ];end;OZ=OZ+0X1;do(NZ)[0X3]=un[0X02];end;local Sa=(2);OZ=OZ+1;NZ[Sa](NZ[Sa+0X01]);do KZ=Sa-1;end;OZ=OZ+1;do OZ=OZ+1;end;un=Re[OZ];OZ=OZ+0X01;(NZ)[2]=bZ[un[2]];un=Re[OZ];OZ=OZ+0X001;do(NZ)[3]=un[0X0002];end;un=Re[OZ];OZ=OZ+0X01;(NZ)[0x4]=un[0X2];un=Re[OZ];OZ=OZ+0X1;NZ[0X00005]=un[2];OZ=OZ+0X1;Sa=2;KZ=Sa+4-1;(NZ[Sa])(I(NZ,Sa+1,KZ));KZ=Sa-0X01;OZ=OZ+0X1;OZ=OZ+0X1;un=Re[OZ];OZ=OZ+0x00001;(NZ)[0x0002]=bZ[un[0X2]];un=Re[OZ];do OZ=OZ+1;end;NZ[3]=un[0X02];do un=Re[OZ];end;OZ=OZ+0X01;NZ[0x04]=un[0x02];do OZ=OZ+0X1;end;do Sa=2;end;NZ[Sa](NZ[Sa+1],NZ[Sa+2]);KZ=Sa-0X0001;OZ=OZ+1;OZ=OZ+0x001;un=Re[OZ];OZ=OZ+1;do NZ[0X2]=bZ[un[2]];end;OZ=OZ+0X00001;OZ=OZ+1;do un=Re[OZ];end;OZ=OZ+0X00001;(NZ)[3]=un[0X002];OZ=OZ+0X00001;Sa=2;(NZ)[Sa]=NZ[Sa](NZ[Sa+1]);do KZ=Sa;end;do OZ=OZ+0X1;end;do Ga=ve[2];end;(NZ)[0X3]=Ga[0X1][Ga[0X2]];do OZ=OZ+1;end;OZ=OZ+0X0001;un=Re[OZ];OZ=OZ+0X00001;NZ[3]=NZ[3][un[0X5]];OZ=OZ+1;(NZ)[4]=NZ[0x00002];OZ=OZ+0X001;do Sa=3;end;(NZ)[Sa]=NZ[Sa](NZ[Sa+1]);do KZ=Sa;end;OZ=OZ+1;OZ=OZ+0X001;un=Re[OZ];do OZ=OZ+0X001;end;if not(not NZ[3])then else do OZ=un[6];end;end;end;end;end;else if Ln>=105 then do if Ln==106 then local Wx,fx=9,(NZ[6]);(NZ)[Wx+1]=fx;(NZ)[Wx]=fx[un[5]];do un=Re[OZ];end;OZ=OZ+0X1;(NZ)[11]=un[2];OZ=OZ+0X1;Wx=0X9;do(NZ)[Wx]=NZ[Wx](NZ[Wx+0X001],NZ[Wx+2]);end;KZ=Wx;OZ=OZ+1;do OZ=OZ+1;end;OZ=OZ+1;(NZ)[9]=NZ[0x09]-NZ[7];un=Re[OZ];OZ=OZ+1;(NZ)[0X9]=NZ[9][un[5]];OZ=OZ+1;do OZ=OZ+1;end;do un=Re[OZ];end;OZ=OZ+1;OZ=un[0x6];else local Wq,oq=0X0006,NZ[0X0005];do(NZ)[Wq+1]=oq;end;(NZ)[Wq]=oq[un[0X00005]];un=Re[OZ];do OZ=OZ+1;end;do NZ[0X00008]=un[0X002];end;OZ=OZ+0X1;Wq=6;(NZ)[Wq]=NZ[Wq](NZ[Wq+0X1],NZ[Wq+2]);do KZ=Wq;end;OZ=OZ+0x1;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;if not(not NZ[0X6])then else OZ=un[6];end;end;end;else if Ln~=0x68 then NZ[8]=NZ[7][un[0X5]];do OZ=OZ+0X1;end;OZ=OZ+1;un=Re[OZ];OZ=OZ+1;if NZ[8]<un[5]then OZ=un[0X7];end;else do(NZ)[0X00003]=un[2];end;un=Re[OZ];OZ=OZ+0X1;NZ[0X4]=un[2];un=Re[OZ];OZ=OZ+0X001;do NZ[5]=un[0x00002];end;local Xk=3;un=Re[OZ];OZ=OZ+1;local xk=(NZ[Xk]);local Zk=NZ[Xk+1];local fk=NZ[Xk+0X2];(NZ)[Xk]=g(function()for eX=xk,Zk,fk do d(true,eX);end;end);OZ=un[6];end;end;end;end;end;end;end;end;end;end);if pZ then if tZ then do if cZ~=0X001 then do return NZ[nZ](I(NZ,nZ+0x1,KZ));end;else do return NZ[nZ]();end;end;end;elseif nZ then return I(NZ,nZ,cZ);end;else do if f(tZ)~="string"then b(tZ,0);else if not(e(tZ,'\097\116\116\101m\pt\ t\111\ \y\i\e\l\100 a\c\114\111\s\s\ \m\e\116\097\me\116h\o\d\047\067\037\045c\097\108\l b\o\117\110\d\097r\121'))then else return coroutine.yield();end;do if e(tZ,'\^\046\045\:\%d\+\058 ')then b("Luraph Script:"..(Ae[OZ-0x1]or'\040i\110te\114\110\097l\041')..": "..r(tZ),0);else(b)(tZ,0);end;end;end;end;end;end;else if me==4 then do fe=function(...)local k6=1;local C6,Z6={},0;local q6=m();local L6,J6=rC(...);local a6,v6=(q6==F and Le or q6),{[1]=ce,[0X2]=C6};L6=L6-0X01;for oc=0X0,L6 do if he>oc then do C6[oc]=J6[oc+0X01];end;else break;end;end;if not ge then J6=nil;elseif not(xe)then else C6[he]={n=L6>=he and L6-he+1 or 0,I(J6,he+0X00001,L6+0x00001)};end;if a6==q6 then else(i)(fe,a6);end;local B6,E6,p6,g6=j(function()while true do local uC=(Re[k6]);local ZC=(uC[4]);k6=k6+0X01;if not(ZC<0X09)then if ZC<0x000E then if not(ZC>=0Xb)then if ZC~=10 then if not(C6[uC[6]]<C6[uC[0X1]])then do k6=uC[0X7];end;end;else local FY=(je[uC[6]]);local yY=(nil);local LY=(FY[0X8]);local UY=#LY;if not(UY>0)then else yY={};do for b4=0X1,UY do local B4=LY[b4];if B4[0x1]==0 then(yY)[b4-1]={C6,B4[2]};else yY[b4-1]=ve[B4[0X02]];end;end;end;(A)(De,yY);end;(C6)[uC[0X00007]]=NC(yY,a6,FY);end;else if not(ZC<12)then if ZC==13 then else(C6)[0]=a6[uC[2]];uC=Re[k6];k6=k6+1;C6[0X0]=C6[0x0][uC[0X05]];uC=Re[k6];k6=k6+0X0001;do k6=uC[0X6];end;end;else do C6[uC[0X7]]={I({},1,uC[6])};end;end;end;else if ZC<16 then if ZC==0X000F then local VE=(uC[6]);local zE=(uC[0X7]);if VE==0X00000 then else Z6=zE+VE-0X1;end;local iE=(uC[1]);local mE,BE=nil,(nil);if VE==0X00001 then mE,BE=rC(C6[zE]());else mE,BE=rC(C6[zE](I(C6,zE+0x1,Z6)));end;if iE==0x1 then Z6=zE-0X0001;else if iE==0X00000 then do mE=mE+zE-1;end;Z6=mE;else mE=zE+iE-0X2;Z6=mE+0x00001;end;local yl=(0X00000);for zu=zE,mE do yl=yl+0x1;C6[zu]=BE[yl];end;end;else C6[0]=a6[uC[2]];k6=k6+1;k6=k6+0X1;k6=k6+0x1;Z6=0X000;C6[Z6]=C6[Z6]();k6=k6+0X0001;C6[0X0]=not C6[0X0000];uC=Re[k6];k6=k6+0X0001;k6=uC[0x6];end;else if ZC>=17 then if ZC~=18 then C6[uC[7]]=O(C6[uC[0X6]],C6[uC[0X00001]]);else(C6)[uC[7]]=C6[uC[6]];end;else if not(not C6[uC[0X0007]])then else do k6=uC[0x6];end;end;end;end;end;else if ZC<0X4 then if not(ZC<0X0002)then if ZC~=0X3 then local U3=(uC[7]);local y3=uC[0X6];Z6=U3+y3-0X1;repeat local xX,AX=De,(C6);if#xX>0 then local lL=({});for RA,uA in D,xX do for id,xd in D,uA do if not(xd[0X0001]==AX and xd[2]>=0X0)then else local GG=xd[0X2];if not lL[GG]then do(lL)[GG]={AX[GG]};end;end;do(xd)[0X1]=lL[GG];end;(xd)[0X2]=1;end;end;end;end;until true;return true,U3,y3;else do repeat local zx,Zx=De,(C6);if not(#zx>0)then else local dM=({});do for gI,JI in D,zx do do for o3,k3 in D,JI do if not(k3[1]==Zx and k3[0x02]>=0)then else local wR=(k3[0X00002]);if not dM[wR]then(dM)[wR]={Zx[wR]};end;do(k3)[1]=dM[wR];end;k3[0X2]=1;end;end;end;end;end;end;until true;end;local YD=(uC[0X7]);return false,YD,YD;end;else do if ZC~=0X1 then v6[uC[0X06]]=C6[uC[0X007]];else C6[uC[0x00007]]=C6[uC[0x6]]<=C6[uC[1]];end;end;end;else if ZC>=0X06 then if not(ZC>=0X7)then C6[uC[7]]=uC[0x2];else if ZC==0X8 then k6=uC[6];else(C6)[uC[0X7]]=a6[uC[0X00002]];end;end;else if ZC==5 then do repeat local tr,Dr=De,C6;if#tr>0 then local r9={};for BX,yX in D,tr do for BA,NA in D,yX do if not(NA[1]==Dr and NA[2]>=0)then else local SR=(NA[0X2]);if not r9[SR]then do r9[SR]={Dr[SR]};end;end;NA[0X1]=r9[SR];(NA)[2]=0x1;end;end;end;end;until true;end;do return;end;else local YU=(ve[0X0]);(C6)[0]=YU[0X0001][YU[2]];local ZU=(0);do uC=Re[k6];end;k6=k6+0x01;local sU=(C6[0x00000]);C6[ZU+1]=sU;C6[ZU]=sU[uC[0x5]];k6=k6+1;do ZU=0X0;end;(C6)[ZU]=C6[ZU](C6[ZU+1]);Z6=ZU;do uC=Re[k6];end;k6=k6+0X1;if not(not C6[0X0])then else do k6=uC[6];end;end;end;end;end;end;end;end);do if not(B6)then if f(E6)~="string"then b(E6,0X0);else if e(E6,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(e(E6,"^.\-\058%\d\+\: "))then b(E6,0);else b("\076\117\114\097\112\104\ \083\c\114\105\112\116\:"..(Ae[k6-0X1]or"(internal)")..": "..r(E6),0X0);end;end;else do if E6 then if g6~=0X00001 then return C6[p6](I(C6,p6+0x1,Z6));else return C6[p6]();end;elseif not(p6)then else do return I(C6,p6,g6);end;end;end;end;end;end;end;else fe=function(...)local Wo,Do=1,{};local bo=(m());local no=({[1]=ce,[0X2]=Do});local Ho,mo=rC(...);Ho=Ho-0X1;for IH=0,Ho do do if he>IH then do(Do)[IH]=mo[IH+1];end;else break;end;end;end;local Go=(bo==F and Le or bo);if not ge then mo=nil;elseif not(xe)then else do Do[he]={n=Ho>=he and Ho-he+1 or 0,I(mo,he+1,Ho+0x1)};end;end;local eo=0;if Go==bo then else i(fe,Go);end;local Jo,Bo,Zo,ro=j(function()while true do local Fh=(Re[Wo]);local Uh=(Fh[0X00004]);do Wo=Wo+0x0001;end;if not(Uh>=0X6)then do if not(Uh<0X3)then do if Uh>=4 then if Uh~=0X5 then local mY,oY=je[Fh[6]],nil;local xY=mY[8];local MY=(#xY);do if not(MY>0)then else do oY={};end;for Su=0X1,MY do local Yu=xY[Su];if Yu[0X1]==0 then oY[Su-0X01]={Do,Yu[2]};else do oY[Su-0X1]=ve[Yu[0X2]];end;end;end;A(De,oY);end;end;Do[Fh[0x7]]=NC(oY,Go,mY);else Do[Fh[7]]=Do[Fh[0X6]]<=Do[Fh[1]];end;else(Do)[0X0]=Go[Fh[2]];local bS=(0X0);Fh=Re[Wo];Wo=Wo+0x1;do(Do)[0X0]=Do[0X0][Fh[0x5]];end;Wo=Wo+0X00001;Wo=Wo+0x1;do Fh=Re[Wo];end;local FS=je[Fh[0X6]];local sS=FS[8];Wo=Wo+0X1;local zS=#sS;local ES=(nil);do if not(zS>0x0)then else ES={};for iH=1,zS do local fH=(sS[iH]);if fH[1]==0 then(ES)[iH-0X01]={Do,fH[0X2]};else ES[iH-0X1]=ve[fH[0X00002]];end;end;A(De,ES);end;end;do(Do)[0X1]=NC(ES,Go,FS);end;do Wo=Wo+1;end;Do[bS](Do[bS+0X1]);do eo=bS-0x00001;end;Wo=Wo+1;do repeat local qf,Kf=De,Do;if#qf>0 then local jP={};for qv,Vv in D,qf do do for ji,gi in D,Vv do if not(gi[0x1]==Kf and gi[0X2]>=0X0)then else local pX=gi[0X0002];if not jP[pX]then(jP)[pX]={Kf[pX]};end;(gi)[0X1]=jP[pX];do(gi)[2]=0X01;end;end;end;end;end;end;until true;end;return;end;end;else do if not(Uh>=0x0001)then if not(Do[Fh[6]]<Do[Fh[0X1]])then else Wo=Fh[0x7];end;else if Uh~=0X2 then do Do[Fh[7]]=Go[Fh[0x0002]];end;else Do[Fh[0X007]]={I({},0X00001,Fh[6])};end;end;end;end;end;else do if not(Uh<9)then do if not(Uh<0Xa)then if Uh~=11 then Do[Fh[0x0007]]=Do[Fh[6]]-Do[Fh[1]];else do(Do)[Fh[0x00007]]=no[Fh[6]];end;end;else end;end;else if Uh<0X7 then do(Do)[Fh[0x7]]=not Do[Fh[0X6]];end;else if Uh~=0X8 then Wo=Fh[0X6];else(Do)[Fh[0X7]]=Fh[0X2];end;end;end;end;end;end;end);do if Jo then if Bo then if ro==0x1 then do return Do[Zo]();end;else return Do[Zo](I(Do,Zo+1,eo));end;elseif not(Zo)then else return I(Do,Zo,ro);end;else if f(Bo)=="\115\116\114\ing"then if not(e(Bo,'at\116e\m\pt\ t\o\ y\i\el\100\ \097\099\114\111\115\s\032\m\e\116\097m\e\116\104\111\d/\067\%\-\c\097\108l\ b\o\117\110da\114\y'))then else return coroutine.yield();end;if e(Bo,"^.-:%d+: ")then b("\Lu\114\097\112\104\032\S\c\114\ip\116:"..(Ae[Wo-1]or"(internal)").."\:\ "..r(Bo),0);else b(Bo,0X0);end;else b(Bo,0);end;end;end;end;end;end;end;else do if me~=0X0001 then fe=function(...)local xI=(0x1);local oI={};local lI=m();local GI=(lI==F and Le or lI);local hI,TI=rC(...);local QI={[1]=ce,[0X2]=oI};hI=hI-1;for FE=0X0,hI do if not(he>FE)then break;else do(oI)[FE]=TI[FE+1];end;end;end;local pI=0X0000;if not ge then do TI=nil;end;elseif xe then(oI)[he]={n=hI>=he and hI-he+1 or 0X0,I(TI,he+1,hI+1)};end;if GI==lI then else(i)(fe,GI);end;local zI,MI,CI,NI=j(function()while true do local Al=(Re[xI]);local ol=(Al[4]);do xI=xI+0X1;end;if not(ol<9)then do if ol<0x0d then if not(ol<0Xb)then do if ol~=0X000c then do oI[0X04]=Al[0X2];end;local kb=(nil);Al=Re[xI];xI=xI+1;local zb=(je[Al[0X6]]);local Tb=(zb[0x00008]);local qb=(#Tb);if not(qb>0X0)then else kb={};do for mx=0X1,qb do local qx=Tb[mx];if qx[0X001]==0 then do(kb)[mx-0x001]={oI,qx[0X2]};end;else(kb)[mx-1]=ve[qx[2]];end;end;end;(A)(De,kb);end;local ob=4;(oI)[5]=NC(kb,GI,zb);xI=xI+0x00001;oI[0][oI[0X0004]]=oI[0X5];do xI=xI+0X1;end;(oI)[0X4]=oI[0X0];xI=xI+1;do repeat local dP,MP=De,oI;do if#dP>0 then local zu={};for Nd,Ad in D,dP do for dF,XF in D,Ad do if not(XF[1]==MP and XF[0X2]>=0)then else local xY=XF[2];if not(not zu[xY])then else do zu[xY]={MP[xY]};end;end;XF[1]=zu[xY];(XF)[0X2]=0X00001;end;end;end;end;end;until true;end;return false,ob,ob;else(oI)[Al[7]]=oI[Al[6]]+oI[Al[0X1]];end;end;else if ol==10 then(oI)[Al[0x7]]=oI[Al[0X0006]]>oI[Al[1]];else(oI)[Al[0x007]]=Al[0x02];end;end;else if not(ol>=0xF)then if ol==0XE then(oI)[Al[7]]=GI[Al[2]];else for Tf=Al[0X0007],Al[0X6]do do oI[Tf]=nil;end;end;end;else do if ol<16 then do repeat local qe,Ce=De,(oI);do if not(#qe>0)then else local SC=({});for w_,e_ in D,qe do for rL,NL in D,e_ do do if NL[1]==Ce and NL[0X2]>=0 then local ee=(NL[0X00002]);if not(not SC[ee])then else(SC)[ee]={Ce[ee]};end;NL[1]=SC[ee];do(NL)[0X2]=1;end;end;end;end;end;end;end;until true;end;return;else if ol~=17 then local sF=(je[Al[6]]);local ZF,MF=sF[0x8],nil;local iF=#ZF;if not(iF>0X0)then else do MF={};end;do for Nn=1,iF do local An=(ZF[Nn]);if An[1]~=0 then MF[Nn-0x001]=ve[An[0x2]];else(MF)[Nn-0X1]={oI,An[0X02]};end;end;end;A(De,MF);end;(oI)[Al[0X7]]=NC(MF,GI,sF);else do(oI)[0X0]={};end;Al=Re[xI];xI=xI+0X1;do oI[0X1]=GI[Al[2]];end;xI=xI+0x00001;xI=xI+1;do Al=Re[xI];end;xI=xI+1;oI[1]=oI[0X1][Al[5]];do xI=xI+0X1;end;xI=xI+0X1;Al=Re[xI];xI=xI+0x1;(oI)[1]=oI[1][Al[5]];Al=Re[xI];xI=xI+0X00001;oI[0X002]=GI[Al[2]];Al=Re[xI];xI=xI+0x00001;oI[0X2]=oI[2][Al[0X5]];xI=xI+0X1;xI=xI+0X1;Al=Re[xI];xI=xI+0X1;local Pg=(2);(oI)[0x00002]=oI[0x2][Al[0X005]];xI=xI+0X00001;xI=xI+1;Al=Re[xI];xI=xI+1;do(oI)[0X3]=oI[2][Al[0X5]];end;Al=Re[xI];xI=xI+1;do(oI)[0X4]=GI[Al[0X2]];end;xI=xI+0X0001;local rg=(0x5);xI=xI+1;Al=Re[xI];xI=xI+1;local Qg=oI[0x0001];do oI[rg+1]=Qg;end;oI[rg]=Qg[Al[5]];do xI=xI+1;end;rg=0X5;local ug=0X000;if Pg==0 then else pI=rg+Pg-0X001;end;local Ag,cg=nil,(nil);if Pg==0X1 then Ag,cg=rC(oI[rg]());else do Ag,cg=rC(oI[rg](I(oI,rg+1,pI)));end;end;do if ug==1 then pI=rg-1;else if ug==0X0000 then Ag=Ag+rg-1;do pI=Ag;end;else Ag=rg+ug-0X2;do pI=Ag+0x1;end;end;local zX=(0);for Pk=rg,Ag do do zX=zX+0X001;end;(oI)[Pk]=cg[zX];end;end;end;xI=xI+1;do rg=0X4;end;Pg=0X0;do ug=0x04;end;if Pg~=0 then pI=rg+Pg-0X0001;end;do Ag,cg=nil;end;if Pg==0X01 then do Ag,cg=rC(oI[rg]());end;else Ag,cg=rC(oI[rg](I(oI,rg+0X1,pI)));end;if ug~=0x1 then if ug~=0 then Ag=rg+ug-0X00002;do pI=Ag+1;end;else do Ag=Ag+rg-0x1;end;do pI=Ag;end;end;local c9=0;for Y4=rg,Ag do c9=c9+1;do oI[Y4]=cg[c9];end;end;else pI=rg-0x1;end;xI=xI+0X01;do xI=xI+1;end;Al=Re[xI];xI=xI+1;rg=0X4;local tg=g(function(...)d();for re,Ge in...do d(true,re,Ge);end;end);tg(oI[rg],oI[rg+1],oI[rg+2]);pI=rg;(oI)[rg]=tg;do xI=Al[6];end;end;end;end;end;end;end;else if ol<0X4 then if ol>=2 then if ol~=0x0003 then oI[0x7]=oI[6][Al[0X5]];Al=Re[xI];xI=xI+0X1;local cr,ur=oI[7],(7);do oI[ur+0X00001]=cr;end;(oI)[ur]=cr[Al[5]];Al=Re[xI];xI=xI+0X1;oI[0X0009]=Al[2];Al=Re[xI];xI=xI+1;(oI)[10]=Al[2];xI=xI+0x00001;do ur=7;end;pI=ur+0X04-1;oI[ur]=oI[ur](I(oI,ur+0X1,pI));pI=ur;Al=Re[xI];xI=xI+0x1;do if oI[7]==Al[5]then else xI=Al[0X7];end;end;else xI=Al[6];end;else do if ol==0X1 then local kA=Al[7];do for gm=kA,kA+(Al[0X6]-1)do do oI[gm]=TI[he+(gm-kA)+0X0001];end;end;end;else end;end;end;else if not(ol>=0X06)then do if ol~=0X0005 then(oI)[Al[0X7]]={I({},1,Al[0X6])};else do(oI)[7]=GI[Al[0X2]];end;do xI=xI+1;end;do xI=xI+0X1;end;do Al=Re[xI];end;xI=xI+1;do oI[0X7]=oI[7][Al[5]];end;do xI=xI+0X1;end;do xI=xI+0X1;end;do Al=Re[xI];end;xI=xI+1;oI[8]=oI[0X6][Al[0X0005]];Al=Re[xI];xI=xI+0X1;(oI)[8]=oI[8][Al[0X5]];Al=Re[xI];do xI=xI+0x1;end;do oI[9]=Al[0X0002];end;Al=Re[xI];local UF=(7);do xI=xI+1;end;(oI)[0Xa]=oI[6][Al[5]];Al=Re[xI];xI=xI+0X1;(oI)[0Xa]=oI[10][Al[0X5]];do xI=xI+1;end;xI=xI+1;do xI=xI+0X1;end;pI=UF+4-1;(oI)[UF]=oI[UF](I(oI,UF+0x1,pI));pI=UF;xI=xI+0x01;xI=xI+0X01;Al=Re[xI];xI=xI+0X1;do(oI)[8]=GI[Al[2]];end;Al=Re[xI];xI=xI+1;oI[8]=oI[8][Al[5]];xI=xI+0X1;xI=xI+0X001;Al=Re[xI];xI=xI+0X001;oI[0X9]=GI[Al[2]];xI=xI+0x1;xI=xI+1;Al=Re[xI];xI=xI+1;oI[9]=oI[0X9][Al[0X00005]];xI=xI+1;xI=xI+1;Al=Re[xI];xI=xI+1;oI[9]=oI[0X09][Al[0X005]];do Al=Re[xI];end;xI=xI+0X1;do oI[9]=oI[0X9][Al[0X5]];end;Al=Re[xI];xI=xI+1;oI[10]=Al[0x02];Al=Re[xI];xI=xI+1;do oI[0Xb]=GI[Al[2]];end;do Al=Re[xI];end;do xI=xI+0X001;end;oI[0Xb]=oI[11][Al[5]];Al=Re[xI];xI=xI+1;oI[0X00B]=oI[0X0b][Al[0X5]];do Al=Re[xI];end;do xI=xI+0x1;end;oI[0x0000b]=oI[11][Al[5]];xI=xI+1;UF=0X8;pI=UF+0X0004-1;oI[UF]=oI[UF](I(oI,UF+1,pI));do pI=UF;end;xI=xI+1;do oI[7]=oI[7]-oI[0X008];end;do Al=Re[xI];end;do xI=xI+1;end;oI[0X7]=oI[7][Al[0x5]];Al=Re[xI];xI=xI+1;if not(oI[7]<=Al[5])then do xI=Al[7];end;end;end;end;else do if ol<0X7 then local rj=(8);local lj=oI[0X6];oI[rj+0x0001]=lj;(oI)[rj]=lj[Al[5]];Al=Re[xI];do xI=xI+0X1;end;do(oI)[10]=Al[0x2];end;do xI=xI+0X1;end;rj=8;oI[rj]=oI[rj](oI[rj+1],oI[rj+0X2]);do pI=rj;end;Al=Re[xI];xI=xI+0X1;oI[8]=oI[8][Al[5]];do xI=xI+0X1;end;do xI=xI+0X001;end;do Al=Re[xI];end;xI=xI+1;(oI[0])[Al[0x2]]=oI[0X8];Al=Re[xI];xI=xI+1;rj=8;lj=oI[6];do(oI)[rj+0X01]=lj;end;do(oI)[rj]=lj[Al[5]];end;do Al=Re[xI];end;xI=xI+0x1;oI[10]=Al[2];xI=xI+1;rj=8;(oI)[rj]=oI[rj](oI[rj+1],oI[rj+0X2]);pI=rj;xI=xI+0X0001;xI=xI+0X1;Al=Re[xI];xI=xI+1;do oI[0x0][Al[2]]=oI[8];end;xI=xI+0X0001;(oI)[8]=oI[0X6];Al=Re[xI];xI=xI+1;(oI[0])[Al[0X00002]]=oI[0X8];Al=Re[xI];do xI=xI+1;end;do(oI[0x0])[Al[2]]=Al[0x5];end;do Al=Re[xI];end;do xI=xI+0X1;end;xI=Al[0x006];else do if ol==0X8 then oI[Al[0x7]]=oI[Al[6]]<oI[Al[1]];else local Lx=Al[7];local Cx,Ix,Hx=oI[Lx]();if not(Cx)then else(oI)[Lx+1]=Ix;oI[Lx+0X002]=Hx;xI=Al[6];end;end;end;end;end;end;end;end;end;end);if not(zI)then do if f(MI)=="string"then if not(e(MI,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if e(MI,"^.-:%d+: ")then b("Luraph Script:"..(Ae[xI-1]or"(\i\110\116\ern\097\l\)")..":\ "..r(MI),0);else b(MI,0);end;else(b)(MI,0X0);end;end;else if MI then if NI==0X001 then return oI[CI]();else return oI[CI](I(oI,CI+1,pI));end;elseif not(CI)then else return I(oI,CI,NI);end;end;end;else fe=function(...)local mW,dW=1,({});local pW=(m());local cW=((pW==F and Le or pW));local KW,kW=rC(...);local lW=({[0X2]=dW,[1]=ce});KW=KW-0X0001;for Gs=0X000,KW do if not(he>Gs)then break;else(dW)[Gs]=kW[Gs+0X1];end;end;local zW=0;do if not ge then kW=nil;elseif not(xe)then else(dW)[he]={n=KW>=he and KW-he+1 or 0,I(kW,he+1,KW+0X001)};end;end;if cW~=pW then i(fe,cW);end;local TW,PW,XW,GW=j(function()while true do local Tw=Re[mW];local tw=Tw[0x4];mW=mW+0x001;do if not(tw<0X6)then do if tw<9 then if tw>=7 then if tw==0X8 then do(dW)[Tw[7]]=cW[Tw[2]];end;else(dW)[Tw[7]]=dW[Tw[6]]+dW[Tw[0X1]];end;else(dW)[Tw[7]]=dW[Tw[0X06]]<dW[Tw[1]];end;else if not(tw>=0X000A)then do dW[Tw[7]]=#dW[Tw[0X6]];end;else if tw~=11 then mW=Tw[6];else end;end;end;end;else if tw>=3 then do if not(tw<4)then if tw==5 then for Yd=Tw[0x07],Tw[6]do do(dW)[Yd]=nil;end;end;else local gx=(Tw[7]);local ix=g(function(...)d();for IU,VU,gU,yU,XU,jU,dU,PU,mU,UU in...do d(true,{IU,VU,gU,yU,XU,jU,dU,PU,mU,UU});end;end);(ix)(dW[gx],dW[gx+1],dW[gx+0X00002]);do zW=gx;end;(dW)[gx]=ix;mW=Tw[6];end;else local Ja=je[Tw[0X00006]];local Ia=(Ja[0X0008]);local Na=(#Ia);local pa=nil;if Na>0 then do pa={};end;do for YN=1,Na do local GN=(Ia[YN]);do if GN[0x1]~=0X0 then pa[YN-1]=ve[GN[0X2]];else(pa)[YN-1]={dW,GN[2]};end;end;end;end;(A)(De,pa);end;dW[Tw[7]]=NC(pa,cW,Ja);end;end;else do if tw<1 then dW[Tw[7]]={I({},1,Tw[6])};else if tw==0X002 then(dW)[Tw[0X7]]=Tw[2];else(dW)[0]=cW[Tw[2]];mW=mW+1;mW=mW+1;local vn=(0);Tw=Re[mW];mW=mW+0X1;local en=(dW[0X0]);(dW)[vn+0X1]=en;(dW)[vn]=en[Tw[5]];Tw=Re[mW];do mW=mW+1;end;(dW)[0X2]=Tw[0X0002];mW=mW+0x001;do vn=0X00;end;(dW)[vn]=dW[vn](dW[vn+1],dW[vn+2]);zW=vn;do mW=mW+0X1;end;mW=mW+1;local Wn=nil;Tw=Re[mW];do mW=mW+1;end;dW[0X00001]=cW[Tw[2]];mW=mW+0X1;mW=mW+1;Tw=Re[mW];mW=mW+1;(dW)[0X1]=dW[0x0001][Tw[5]];mW=mW+0X001;do mW=mW+1;end;Tw=Re[mW];mW=mW+1;local In=je[Tw[6]];local yn=(In[0X8]);local Fn=#yn;if Fn>0X0 then Wn={};for bA=1,Fn do local uA=yn[bA];if uA[1]==0 then do(Wn)[bA-1]={dW,uA[0X2]};end;else Wn[bA-1]=ve[uA[2]];end;end;A(De,Wn);end;dW[0x0002]=NC(Wn,cW,In);mW=mW+1;do vn=1;end;dW[vn](dW[vn+1]);do zW=vn-0X1;end;do mW=mW+1;end;mW=mW+1;mW=mW+1;repeat local g8,k8=De,dW;if not(#g8>0X0)then else local I3={};do for TL,GL in D,g8 do for uC,kC in D,GL do if not(kC[0X1]==k8 and kC[0x002]>=0)then else local ka=kC[0X00002];if not I3[ka]then I3[ka]={k8[ka]};end;(kC)[1]=I3[ka];(kC)[0X0002]=0X1;end;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end;end);if TW then do if PW then if GW~=0X1 then return dW[XW](I(dW,XW+1,zW));else return dW[XW]();end;elseif not(XW)then else return I(dW,XW,GW);end;end;else if f(PW)~="string"then(b)(PW,0X000);else if not(e(PW,"at\116\e\mp\116 t\o\ y\i\101\l\100\ \097\c\114\o\115s\032\m\101\116\097\109\eth\111\d\/\C\037-\c\097\l\108 b\111\117n\da\114\y"))then else do return coroutine.yield();end;end;if e(PW,'\^\.\-:%\100\+:\ ')then(b)("Luraph Script:"..(Ae[mW-1]or"(i\110t\ern\097\l)")..'\058\ '..r(PW),0);else b(PW,0X0);end;end;end;end;end;end;end;end;end;else if me<0X11 then if me<14 then if not(me<12)then if me==0XD then fe=function(...)local lf,Mf=0X00001,{};local ef=m();local rf=(0x0000);local df,pf=rC(...);local Vf={[0X2]=Mf,[1]=ce};df=df-0X1;for W_=0,df do if not(he>W_)then break;else Mf[W_]=pf[W_+0x1];end;end;local Of=((ef==F and Le or ef));if not ge then pf=nil;elseif not(xe)then else Mf[he]={n=df>=he and df-he+0X0001 or 0X0,I(pf,he+1,df+0X0001)};end;if Of==ef then else i(fe,Of);end;local zf,kf,Uf,Sf=j(function()do while true do local BI=(Re[lf]);local rI=BI[4];lf=lf+0X00001;if rI<0X9 then if rI<0X4 then do if rI<0X02 then do if rI~=0X1 then if not(Mf[BI[7]])then else lf=BI[0X6];end;else do(Mf)[BI[7]]=Of[BI[0x00002]];end;end;end;else if rI~=0X3 then(Mf)[0]=Of[BI[0X2]];lf=lf+1;(Mf)[0X0000]=not Mf[0];do BI=Re[lf];end;lf=lf+0X1;lf=BI[6];else local Kw=je[BI[6]];local Tw=Kw[8];local Cw,ew=#Tw,(nil);if not(Cw>0)then else do ew={};end;for ZW=1,Cw do local iW=Tw[ZW];if iW[0X1]~=0 then ew[ZW-0x01]=ve[iW[2]];else do(ew)[ZW-0x1]={Mf,iW[2]};end;end;end;(A)(De,ew);end;do Mf[BI[0x7]]=NC(ew,Of,Kw);end;end;end;end;else if not(rI<6)then if rI<0X7 then(Mf)[BI[7]]=BI[2];else if rI~=8 then for YP=BI[7],BI[6]do do(Mf)[YP]=nil;end;end;else repeat local l1,q1=De,(Mf);if#l1>0 then local Gh={};for x0,B0 in D,l1 do for B6,J6 in D,B0 do if J6[1]==q1 and J6[2]>=0x0 then local tH=(J6[2]);if not Gh[tH]then(Gh)[tH]={q1[tH]};end;do(J6)[1]=Gh[tH];end;J6[2]=1;end;end;end;end;until true;local cD=(BI[7]);return false,cD,cD;end;end;else if rI==5 then local V8=(ve[0X0]);do Mf[0X000]=V8[1][V8[2]];end;local o8=Mf[0X0];do BI=Re[lf];end;lf=lf+0X1;local w8=(0);(Mf)[w8+1]=o8;Mf[w8]=o8[BI[5]];lf=lf+0X1;w8=0;Mf[w8](Mf[w8+1]);rf=w8-1;lf=lf+1;V8=ve[0];(Mf)[0]=V8[1][V8[0X2]];BI=Re[lf];lf=lf+1;w8=0;o8=Mf[0];(Mf)[w8+0X01]=o8;Mf[w8]=o8[BI[0X00005]];lf=lf+0X1;do w8=0;end;do Mf[w8]=Mf[w8](Mf[w8+0X00001]);end;do rf=w8;end;BI=Re[lf];lf=lf+0x1;if not Mf[0X000]then lf=BI[0X06];end;else if not(not Mf[BI[0X7]])then else do lf=BI[6];end;end;end;end;end;else if not(rI<13)then if not(rI<15)then if rI>=16 then if rI==17 then else local HU=(Mf[BI[0x0006]]/Mf[BI[1]]);Mf[BI[0X7]]=HU-HU%1;end;else(Mf)[BI[7]]=Mf[BI[0X06]]>=Mf[BI[0X1]];end;else if rI==0XE then(Mf)[BI[0X7]]=Mf[BI[0X6]]%Mf[BI[1]];else Mf[BI[7]]={I({},1,BI[0X6])};end;end;else if not(rI<0XB)then do if rI==12 then lf=BI[6];else do(Mf)[0]=Of[BI[0X0002]];end;do lf=lf+1;end;lf=lf+1;lf=lf+0X1;rf=0;do Mf[rf]=Mf[rf]();end;lf=lf+1;Mf[0X00]=not Mf[0X0];BI=Re[lf];do lf=lf+0X0001;end;lf=BI[6];end;end;else if rI==0xa then local IW=BI[0x07];local ZW,tW=Mf[IW],((BI[0X1]-1)*0x32);for xh=1,BI[0X6]do(ZW)[tW+xh]=Mf[IW+xh];end;else repeat local IR,LR=De,(Mf);if#IR>0x0 then local ju=({});for w8,n8 in D,IR do for xn,Sn in D,n8 do if Sn[0X001]==LR and Sn[0X2]>=0 then local e9=(Sn[0X2]);if not(not ju[e9])then else(ju)[e9]={LR[e9]};end;do Sn[1]=ju[e9];end;Sn[0X0002]=1;end;end;end;end;until true;return;end;end;end;end;end;end;end);if zf then if kf then if Sf~=1 then return Mf[Uf](I(Mf,Uf+0X001,rf));else return Mf[Uf]();end;elseif not(Uf)then else return I(Mf,Uf,Sf);end;else do if f(kf)=="st\114\in\103"then if not(e(kf,"\097tt\101\m\p\116\ \116\o \y\105el\100\ \097cr\o\s\s\ m\101t\097m\e\116\h\o\d\/\067\%\-ca\l\l\ \098\o\117n\d\097r\y"))then else return coroutine.yield();end;do if e(kf,"^.-:%d+: ")then b("Luraph Script:"..(Ae[lf-1]or"\(\i\110t\101\114\110\097\108\)")..':\ '..r(kf),0X0);else(b)(kf,0x0);end;end;else b(kf,0);end;end;end;end;else fe=function(...)local BO=0X01;local CO={};local lO=(m());local qO,yO=rC(...);local NO=({[0X2]=CO,[1]=ce});local cO=0x0;local zO=((lO==F and Le or lO));qO=qO-1;for GI=0X0,qO do do if not(he>GI)then break;else CO[GI]=yO[GI+1];end;end;end;if not ge then do yO=nil;end;elseif not(xe)then else(CO)[he]={n=qO>=he and qO-he+0X1 or 0X000,I(yO,he+0X00001,qO+1)};end;if zO~=lO then i(fe,zO);end;local FO,fO,pO,rO=j(function()while true do local U_=(Re[BO]);local b_=(U_[0x04]);BO=BO+1;if not(b_<12)then if b_>=0X12 then if not(b_>=21)then if b_>=19 then if b_==20 then(CO)[0]=zO[U_[0X2]];BO=BO+0X1;cO=0x000;CO[cO]=CO[cO]();do U_=Re[BO];end;BO=BO+1;if CO[0]<U_[5]then BO=U_[7];end;else repeat local g4,r4=De,CO;if not(#g4>0)then else local Bw={};do for ov,Dv in D,g4 do for Fd,dd in D,Dv do do if not(dd[0X1]==r4 and dd[2]>=0X0)then else local w8=(dd[2]);do if not(not Bw[w8])then else(Bw)[w8]={r4[w8]};end;end;dd[0x0001]=Bw[w8];dd[0X00002]=1;end;end;end;end;end;end;until true;return;end;else local FL=U_[7];local bL,VL,fL=CO[FL],CO[FL+0X1],CO[FL+2];CO[FL]=g(function()do for FX=bL,VL,fL do d(true,FX);end;end;end);BO=U_[6];end;else if not(b_<23)then if b_~=24 then if not(CO[U_[0x7]])then else do BO=U_[0X6];end;end;else CO[0]=zO[U_[0x02]];BO=BO+0X1;local Rb=(0X0000);BO=BO+0X1;U_=Re[BO];BO=BO+1;(CO)[0x0]=CO[0][U_[5]];U_=Re[BO];do BO=BO+1;end;do CO[0X1]=U_[2];end;BO=BO+1;CO[Rb]=CO[Rb](CO[Rb+1]);cO=Rb;U_=Re[BO];BO=BO+1;do if not CO[0X0]then BO=U_[6];end;end;end;else do if b_==22 then(CO)[0X00000]=zO[U_[0X2]];U_=Re[BO];do BO=BO+0X1;end;local KG=(0);do(CO)[1]=U_[0x00002];end;do BO=BO+1;end;CO[KG]=CO[KG](CO[KG+0X1]);cO=KG;BO=BO+1;BO=BO+0x1;U_=Re[BO];BO=BO+1;if not(not CO[0X0])then else BO=U_[6];end;else(CO)[U_[7]]=zO[U_[2]];end;end;end;end;else if not(b_<15)then do if not(b_<16)then if b_~=17 then repeat local fl,Dl,Ll=De,CO,(U_[7]);if#fl>0 then local sa=({});for i2,X2 in D,fl do for Vm,cm in D,X2 do do if not(cm[1]==Dl and cm[2]>=Ll)then else local TW=(cm[0X02]);if not sa[TW]then sa[TW]={Dl[TW]};end;cm[1]=sa[TW];cm[0X2]=0X1;end;end;end;end;end;until true;else for J3=U_[0x7],U_[0X00006]do CO[J3]=nil;end;end;else BO=U_[6];end;end;else if b_>=13 then if b_~=14 then(CO)[0X000]=zO[U_[0x0002]];U_=Re[BO];BO=BO+1;(CO)[0]=CO[0X000][U_[5]];BO=BO+0X1;do BO=BO+1;end;U_=Re[BO];BO=BO+0X1;if not(not CO[0x00000])then else BO=U_[0X6];end;else local MO=(U_[1]-1)*50;local xO=(U_[7]);local TO=(CO[xO]);do for OS=1,U_[6]do do(TO)[MO+OS]=CO[xO+OS];end;end;end;end;else end;end;end;else if not(b_<0x06)then if not(b_<0x9)then if not(b_>=0X0a)then CO[0]=zO[U_[2]];BO=BO+1;BO=BO+0X1;U_=Re[BO];local Rq=je[U_[6]];local wq=(Rq[0X8]);BO=BO+0X1;local lq,pq=nil,(#wq);if pq>0 then lq={};for N3=0X00001,pq do local b3=wq[N3];do if b3[1]~=0 then do(lq)[N3-0x00001]=ve[b3[0X2]];end;else(lq)[N3-0X00001]={CO,b3[2]};end;end;end;A(De,lq);end;do(CO)[0X00001]=NC(lq,zO,Rq);end;do BO=BO+1;end;local Hq=0X000;(CO[Hq])(CO[Hq+0x01]);cO=Hq-1;BO=BO+0X1;do BO=BO+0X1;end;do U_=Re[BO];end;do BO=BO+1;end;(CO)[0]=zO[U_[2]];U_=Re[BO];do BO=BO+0X01;end;CO[0X1]=U_[0X2];BO=BO+1;do Hq=0X0;end;(CO)[Hq]=CO[Hq](CO[Hq+1]);cO=Hq;BO=BO+1;BO=BO+1;U_=Re[BO];BO=BO+0X0001;if not CO[0]then BO=U_[6];end;else if b_==0X0000B then CO[0x00]=zO[U_[2]];U_=Re[BO];BO=BO+0X0001;do CO[0]=CO[0][U_[5]];end;BO=BO+0X1;BO=BO+1;do U_=Re[BO];end;do BO=BO+1;end;do if not CO[0]then BO=U_[0x6];end;end;else CO[U_[0X00007]]=U_[2];end;end;else do if b_>=7 then if b_==8 then CO[0]=zO[U_[2]];BO=BO+1;do cO=0X00;end;CO[cO]=CO[cO]();U_=Re[BO];BO=BO+0x1;do if not(CO[0X0])then else BO=U_[6];end;end;else local Kf=(ve[0]);CO[0X00000]=Kf[1][Kf[2]];BO=BO+1;BO=BO+0X1;do U_=Re[BO];end;BO=BO+1;local vf=(0);local cf=CO[0x0];CO[vf+1]=cf;CO[vf]=cf[U_[5]];BO=BO+1;vf=0;CO[vf](CO[vf+0X00001]);cO=vf-0X1;BO=BO+0X1;repeat local Mu,Nu=De,CO;if not(#Mu>0)then else local QD={};for YL,nL in D,Mu do for l9,H9 in D,nL do if not(H9[0X001]==Nu and H9[0X2]>=0X0)then else local eH=H9[2];if not(not QD[eH])then else QD[eH]={Nu[eH]};end;(H9)[0X1]=QD[eH];(H9)[2]=0X001;end;end;end;end;until true;return;end;else do CO[U_[0X7]]=CO[U_[0X0006]]>=CO[U_[0X1]];end;end;end;end;else do if b_<3 then do if not(b_<0X00001)then if b_~=2 then local cj=je[U_[0X6]];local wj=(cj[0x8]);local ij,gj=#wj,(nil);do if not(ij>0)then else gj={};do for q8=0X1,ij do local O8=(wj[q8]);if O8[1]==0x0 then gj[q8-1]={CO,O8[2]};else(gj)[q8-0X1]=ve[O8[0X2]];end;end;end;A(De,gj);end;end;(CO)[U_[0X0007]]=NC(gj,zO,cj);else CO[U_[7]]={I({},1,U_[6])};end;else(CO)[0x01]=zO[U_[0x2]];BO=BO+0X00001;BO=BO+0X1;U_=Re[BO];BO=BO+1;if not(not CO[0X1])then else do BO=U_[6];end;end;end;end;else if b_>=4 then if b_~=5 then local Bl=(ve[0x0]);(CO)[0X00]=Bl[1][Bl[0x2]];BO=BO+0X0001;BO=BO+0x01;local Vl=(0);U_=Re[BO];do BO=BO+1;end;local Hl=(CO[0]);(CO)[Vl+0X1]=Hl;(CO)[Vl]=Hl[U_[0x5]];BO=BO+1;Vl=0X000;(CO)[Vl]=CO[Vl](CO[Vl+0x1]);cO=Vl;BO=BO+1;do BO=BO+0X1;end;U_=Re[BO];BO=BO+0X1;if not CO[0X0]then do BO=U_[6];end;end;else local Hi=U_[7];do for Lh=Hi,Hi+(U_[6]-1)do(CO)[Lh]=yO[he+(Lh-Hi)+1];end;end;end;else CO[U_[7]]=not CO[U_[6]];end;end;end;end;end;end;end);if not(FO)then if f(fO)=='\str\i\110\g'then if not(e(fO,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if e(fO,"^.-:%d+: ")then b("Luraph Script:"..(Ae[BO-1]or"(internal)")..": "..r(fO),0);else b(fO,0);end;else(b)(fO,0X000);end;else if fO then do if rO==1 then return CO[pO]();else do return CO[pO](I(CO,pO+1,cO));end;end;end;elseif pO then do return I(CO,pO,rO);end;end;end;end;end;else do fe=function(...)local bl,ql={},0X0;local xl=(1);local Rl=({[1]=ce,[0X2]=bl});local Gl=(m());local ol=((Gl==F and Le or Gl));local Jl,Ll=rC(...);Jl=Jl-0x1;for WJ=0,Jl do do if not(he>WJ)then break;else(bl)[WJ]=Ll[WJ+0x0001];end;end;end;do if not ge then do Ll=nil;end;elseif not(xe)then else bl[he]={n=Jl>=he and Jl-he+1 or 0,I(Ll,he+1,Jl+1)};end;end;if ol~=Gl then(i)(fe,ol);end;local dl,ul,El,Ql=j(function()while true do local e0=(Re[xl]);local G0=(e0[4]);do xl=xl+0X1;end;if not(G0>=8)then if G0<4 then if not(G0<2)then if G0==0x0003 then do bl[0x001]=ol[e0[0X2]];end;local Di=2;do xl=xl+0x0001;end;do ql=0X001;end;do(bl)[ql]=bl[ql]();end;xl=xl+0X001;xl=xl+1;e0=Re[xl];xl=xl+1;local si=(ve[0X1]);bl[0X0002]=ol[e0[0X002]];do e0=Re[xl];end;do xl=xl+1;end;do bl[3]=e0[0X0002];end;xl=xl+1;(bl)[Di]=bl[Di](bl[Di+0X0001]);ql=Di;e0=Re[xl];xl=xl+0X001;(bl)[2]=bl[0x00002][e0[0X5]];xl=xl+0X0001;do(si[0x1])[si[0X2]]=bl[0X2];end;xl=xl+1;si=ve[0X0000];(si[0X00001])[si[2]]=bl[1];e0=Re[xl];do xl=xl+0X01;end;xl=e0[6];else bl[e0[7]]=ol[e0[2]];end;else if G0==0X1 then bl[1]=ol[e0[0X002]];e0=Re[xl];xl=xl+1;bl[0X2]=bl[0][e0[5]];xl=xl+0X1;xl=xl+1;e0=Re[xl];xl=xl+0X1;(bl)[0x2]=bl[2][e0[5]];e0=Re[xl];xl=xl+1;(bl)[2]=bl[2][e0[5]];xl=xl+1;xl=xl+1;local f2=1;do xl=xl+0X1;end;(bl)[f2]=bl[f2](bl[f2+0X1]);do ql=f2;end;do e0=Re[xl];end;xl=xl+1;do if not(e0[2]<bl[0x01])then xl=e0[7];end;end;else bl[1]=ol[e0[0X2]];xl=xl+1;xl=xl+1;local Df=ve[0];xl=xl+0X1;do ql=0X1;end;do bl[ql]=bl[ql]();end;do xl=xl+1;end;xl=xl+1;xl=xl+0X00001;(bl)[0x2]=Df[0X01][Df[0X00002]];xl=xl+0X001;do xl=xl+0x1;end;xl=xl+1;bl[0x0001]=bl[0x01]-bl[2];e0=Re[xl];xl=xl+1;if not(e0[2]<bl[1])then xl=e0[7];end;end;end;else if not(G0<0X06)then if G0==7 then local rG=(e0[7]);local gG,sG=bl[rG]();do if not(gG)then else for ti=0x1,e0[0X00001]do(bl)[rG+ti]=sG[ti];end;do xl=e0[0X0006];end;end;end;else bl[e0[7]]=e0[0X2];end;else if G0==5 then do xl=e0[6];end;else for NH=e0[0X0007],e0[0X6]do(bl)[NH]=nil;end;end;end;end;else do if G0<0Xc then if not(G0<10)then if G0~=11 then repeat local eK,aK=De,(bl);if#eK>0X0 then local so={};for Zc,zc in D,eK do for TQ,uQ in D,zc do if not(uQ[0X00001]==aK and uQ[0X2]>=0)then else local k6=(uQ[0X00002]);if not(not so[k6])then else so[k6]={aK[k6]};end;uQ[0X1]=so[k6];(uQ)[2]=1;end;end;end;end;until true;return;else(bl)[e0[7]]=-bl[e0[0x6]];end;else if G0==9 then else local TC=(je[e0[0X0006]]);local kC=(nil);local OC=(TC[8]);local ZC=(#OC);if ZC>0x00000 then do kC={};end;for Ml=0X1,ZC do local Ul=OC[Ml];if Ul[0X1]==0X0000 then(kC)[Ml-0X1]={bl,Ul[2]};else(kC)[Ml-0x1]=ve[Ul[0X2]];end;end;(A)(De,kC);end;bl[e0[0x007]]=NC(kC,ol,TC);end;end;else if not(G0<14)then if G0~=0X00f then(bl)[1]=ol[e0[2]];do e0=Re[xl];end;xl=xl+0X1;do(bl)[2]=e0[0x02];end;e0=Re[xl];local xy=(1);xl=xl+1;do(bl)[3]=e0[0X2];end;do xl=xl+0X1;end;(bl[xy])(bl[xy+1],bl[xy+0X002]);do ql=xy-0X00001;end;do xl=xl+0X1;end;xl=xl+1;e0=Re[xl];xl=xl+1;xl=e0[0X6];else bl[e0[7]]={I({},1,e0[6])};end;else if G0==13 then Rl[e0[6]]=bl[e0[0X07]];else if bl[e0[0x6]]~=bl[e0[0X1]]then xl=e0[0X07];end;end;end;end;end;end;end;end);if dl then if ul then if Ql==1 then return bl[El]();else return bl[El](I(bl,El+0x1,ql));end;elseif not(El)then else return I(bl,El,Ql);end;else if f(ul)=="string"then do if not(e(ul,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if e(ul,"^.-:%d+: ")then(b)("Luraph Script:"..(Ae[xl-0X0001]or"(internal)")..'\058 '..r(ul),0);else(b)(ul,0X000);end;else b(ul,0);end;end;end;end;end;else if not(me>=15)then do fe=function(...)local wQ,oQ=1,({});local JQ=(m());local kQ,SQ=rC(...);local qQ={[0X2]=oQ,[1]=ce};kQ=kQ-0X1;for EF=0X00000,kQ do if he>EF then do(oQ)[EF]=SQ[EF+1];end;else do break;end;end;end;local gQ=(JQ==F and Le or JQ);local NQ=0;if not ge then SQ=nil;elseif xe then(oQ)[he]={n=kQ>=he and kQ-he+1 or 0,I(SQ,he+0X1,kQ+0X00001)};end;if gQ==JQ then else i(fe,gQ);end;local IQ,VQ,hQ,BQ=j(function()while true do local Mp=(Re[wQ]);local qp=(Mp[4]);do wQ=wQ+1;end;if qp>=10 then if qp<15 then if not(qp<0XC)then if qp>=0x0d then if qp~=0XE then do(oQ)[Mp[7]]={I({},0X1,Mp[0X0006])};end;else if oQ[Mp[0X00006]]==oQ[Mp[1]]then else wQ=Mp[7];end;end;else local xO=(ve[0]);oQ[1]=xO[0X001][xO[0X2]];do Mp=Re[wQ];end;wQ=wQ+1;oQ[1]=oQ[1][Mp[0x5]];local rO=1;wQ=wQ+1;(oQ)[0X00002]=oQ[0X0000];wQ=wQ+0X1;xO=ve[1];oQ[3]=xO[0X1][xO[2]];wQ=wQ+0X0001;wQ=wQ+1;wQ=wQ+1;(oQ[rO])(oQ[rO+1],oQ[rO+0X00002]);NQ=rO-0X1;wQ=wQ+1;wQ=wQ+0X1;do wQ=wQ+1;end;xO=ve[0x1];(oQ)[0X0001]=xO[1][xO[0X2]];local nO=(oQ[1]);do Mp=Re[wQ];end;wQ=wQ+1;rO=0X0001;(oQ)[rO+0x1]=nO;(oQ)[rO]=nO[Mp[5]];wQ=wQ+1;rO=0x1;(oQ[rO])(oQ[rO+1]);NQ=rO-1;Mp=Re[wQ];wQ=wQ+0X1;wQ=Mp[6];end;else if qp==0XB then(oQ)[Mp[7]]=gQ[Mp[0x2]];else oQ[Mp[7]]=k(oQ[Mp[6]],oQ[Mp[1]]);end;end;else if qp<0X11 then if qp==0X0010 then repeat local mO,KO=De,oQ;if#mO>0 then local QE=({});do for h0,v0 in D,mO do for TB,XB in D,v0 do if XB[0X1]==KO and XB[0X2]>=0 then local jp=(XB[2]);if not(not QE[jp])then else do QE[jp]={KO[jp]};end;end;(XB)[0X0001]=QE[jp];XB[2]=0X1;end;end;end;end;end;until true;return;else wQ=Mp[0X6];end;else if not(qp>=0x012)then oQ[Mp[7]]=oQ[Mp[6]]+oQ[Mp[0X1]];else if qp==0X13 then(oQ)[0X01]=gQ[Mp[2]];do Mp=Re[wQ];end;wQ=wQ+1;oQ[0X01]=oQ[1][Mp[0X5]];wQ=wQ+0X01;do wQ=wQ+0X1;end;do Mp=Re[wQ];end;wQ=wQ+0x1;if not(not oQ[0X1])then else wQ=Mp[6];end;else if oQ[Mp[0X6]]==oQ[Mp[1]]then wQ=Mp[7];end;end;end;end;end;else if qp<5 then do if qp>=2 then if qp<3 then else if qp==4 then oQ[0X0]=gQ[Mp[2]];Mp=Re[wQ];local VP=ve[0];do wQ=wQ+0x01;end;local HP=(0X000);(oQ)[0X1]=Mp[0X2];wQ=wQ+0X1;do oQ[HP]=oQ[HP](oQ[HP+1]);end;do NQ=HP;end;wQ=wQ+1;do oQ[0x01]=VP[1][VP[2]];end;wQ=wQ+1;wQ=wQ+0X1;Mp=Re[wQ];wQ=wQ+0X1;(oQ)[1]=oQ[0X1][Mp[0X5]];wQ=wQ+1;do(oQ)[2]=oQ[0X0000];end;do wQ=wQ+1;end;HP=1;(oQ)[HP]=oQ[HP](oQ[HP+0X1]);NQ=HP;wQ=wQ+0x1;wQ=wQ+0X01;Mp=Re[wQ];do wQ=wQ+1;end;if not(not oQ[0X1])then else do wQ=Mp[6];end;end;else do if oQ[Mp[6]]<=oQ[Mp[0x1]]then do wQ=Mp[0X7];end;end;end;end;end;else if qp~=0x1 then local So,ko=je[Mp[6]],(nil);local Oo=So[8];local Eo=#Oo;if Eo>0X0 then ko={};for P5=1,Eo do local t5=(Oo[P5]);if t5[0X1]~=0 then ko[P5-1]=ve[t5[2]];else(ko)[P5-1]={oQ,t5[0X002]};end;end;(A)(De,ko);end;oQ[Mp[0X0007]]=NC(ko,gQ,So);else local Tu=(Mp[0x00007]);local Yu,ou=oQ[Tu],(Mp[0X1]-1)*50;for WW=0X1,Mp[0X00006]do(Yu)[ou+WW]=oQ[Tu+WW];end;end;end;end;else do if qp>=7 then if not(qp<8)then if qp==0X9 then do oQ[Mp[0X0007]]=oQ[Mp[0x6]][oQ[Mp[0X001]]];end;else oQ[Mp[7]]=Mp[0X2];end;else for Zc=Mp[7],Mp[6]do(oQ)[Zc]=nil;end;end;else if qp==0x00006 then if not(not oQ[Mp[7]])then else wQ=Mp[0X06];end;else(gQ)[Mp[2]]=oQ[Mp[0X7]];end;end;end;end;end;end;end);if IQ then do if VQ then if BQ==0x1 then return oQ[hQ]();else return oQ[hQ](I(oQ,hQ+1,NQ));end;elseif not(hQ)then else return I(oQ,hQ,BQ);end;end;else if f(VQ)=="\115t\114\105\110\g"then if e(VQ,'\097t\116em\p\116 \116\111\ y\i\101\108\d\032\097\cr\o\s\s\ m\e\116a\109e\116h\111\d\047\067\%\-c\097\l\108\ b\o\117nd\097r\121')then return coroutine.yield();end;if not(e(VQ,'^\.\-\:\%\d\+\:\ '))then(b)(VQ,0x0);else(b)("Luraph Script:"..(Ae[wQ-1]or"(\105nte\114n\097\l\041").."\:\ "..r(VQ),0);end;else b(VQ,0X00);end;end;end;end;else if me==0X000010 then fe=function(...)local YF=({});local SF=(0x1);local WF=0x00;local HF=({[0X2]=YF,[1]=ce});local OF=(m());local tF,gF=rC(...);tF=tF-0X001;local IF=((OF==F and Le or OF));for O9=0X0,tF do do if he>O9 then YF[O9]=gF[O9+1];else break;end;end;end;if not ge then gF=nil;elseif xe then(YF)[he]={n=tF>=he and tF-he+1 or 0,I(gF,he+1,tF+1)};end;do if IF==OF then else i(fe,IF);end;end;local cF,NF,sF,MF=j(function()while true do local M3=Re[SF];local f3=(M3[0x0004]);do SF=SF+0X1;end;if f3>=17 then do if f3>=0X19 then do if f3<0x0001d then if not(f3<27)then do if f3==28 then do(YF)[0x1]=IF[M3[2]];end;M3=Re[SF];SF=SF+1;local Po=0x01;do(YF)[0X2]=M3[2];end;do M3=Re[SF];end;do SF=SF+1;end;do(YF)[0X3]=M3[2];end;local ho=3;SF=SF+1;(YF)[Po]=YF[Po](YF[Po+1],YF[Po+0X2]);WF=Po;SF=SF+1;SF=SF+1;M3=Re[SF];SF=SF+0X1;do(YF)[2]=IF[M3[0X00002]];end;SF=SF+0x1;SF=SF+1;do M3=Re[SF];end;SF=SF+1;(YF)[3]=M3[2];M3=Re[SF];SF=SF+0X00001;do(YF)[4]=IF[M3[0x2]];end;SF=SF+1;SF=SF+1;SF=SF+0x1;(YF)[0X5]=YF[1];do SF=SF+0X1;end;Po=4;(YF)[Po]=YF[Po](YF[Po+1]);WF=Po;SF=SF+0X1;do SF=SF+0X1;end;do SF=SF+0x1;end;do(YF)[0X3]=YF[ho]..YF[ho+1];end;do M3=Re[SF];end;SF=SF+0X00001;(YF[2])[M3[0X02]]=YF[0X3];SF=SF+0X1;YF[0X2]=YF[0X1];do M3=Re[SF];end;do SF=SF+0X0001;end;do if not(YF[2])then else SF=M3[0X6];end;end;else local XI=ve[0];local uI=2;YF[2]=XI[0X1][XI[0x2]];M3=Re[SF];SF=SF+0X1;local II=(YF[2]);do YF[uI+0X1]=II;end;(YF)[uI]=II[M3[5]];SF=SF+1;do uI=0X2;end;(YF[uI])(YF[uI+1]);WF=uI-0X1;M3=Re[SF];SF=SF+1;do SF=M3[6];end;end;end;else if f3~=0X1a then YF[M3[7]]=M3[2];else do repeat local kC,OC,SC=De,YF,(M3[7]);if not(#kC>0)then else local fS={};for j6,g6 in D,kC do for NN,hN in D,g6 do if not(hN[0X1]==OC and hN[2]>=SC)then else local v3=(hN[0X0002]);do if not(not fS[v3])then else do(fS)[v3]={OC[v3]};end;end;end;do hN[0X1]=fS[v3];end;(hN)[2]=1;end;end;end;end;until true;end;end;end;else do if not(f3>=31)then if f3~=30 then YF[M3[7]]=YF[M3[0X6]]>=YF[M3[1]];else(YF)[0x3]=IF[M3[2]];SF=SF+0X1;SF=SF+0X1;M3=Re[SF];SF=SF+0X0001;YF[0X003]=YF[3][M3[5]];M3=Re[SF];do SF=SF+0x1;end;if not(YF[0X3])then else do SF=M3[0X6];end;end;end;else if not(f3>=0X20)then else if f3==0X21 then for MA=M3[0X7],M3[6]do YF[MA]=nil;end;else do(YF)[0X0]=IF[M3[0X0002]];end;SF=SF+1;SF=SF+1;local Wp=(0);M3=Re[SF];SF=SF+1;do YF[1]=M3[0x0002];end;do M3=Re[SF];end;SF=SF+1;do(YF)[2]=M3[0x2];end;SF=SF+1;(YF)[Wp]=YF[Wp](YF[Wp+1],YF[Wp+0X0002]);WF=Wp;SF=SF+0X1;SF=SF+1;M3=Re[SF];SF=SF+0X0001;(YF)[0x001]=IF[M3[0X2]];SF=SF+0X1;SF=SF+0x1;do M3=Re[SF];end;SF=SF+1;(YF)[2]=M3[0X002];M3=Re[SF];SF=SF+1;YF[0X03]=IF[M3[2]];do SF=SF+0X1;end;do(YF)[0X4]=YF[0];end;do SF=SF+1;end;Wp=3;YF[Wp]=YF[Wp](YF[Wp+0X1]);WF=Wp;SF=SF+1;local xp=2;(YF)[2]=YF[xp]..YF[xp+0X1];M3=Re[SF];do SF=SF+1;end;YF[0X001][M3[2]]=YF[2];M3=Re[SF];SF=SF+1;SF=M3[0x006];end;end;end;end;end;end;else if not(f3<0X15)then if not(f3>=0X00017)then if f3==22 then local ZL=ve[0X01];YF[0x3]=ZL[0X1][ZL[2]];do M3=Re[SF];end;local EL=3;do SF=SF+0x01;end;local zL=(nil);YF[3]=YF[0X03][M3[0X005]];SF=SF+0x1;SF=SF+1;SF=SF+0X1;YF[4]=YF[0x0002];SF=SF+0X1;ZL=ve[0];(YF)[5]=ZL[1][ZL[0X00002]];SF=SF+1;do SF=SF+0X1;end;do SF=SF+1;end;do(YF)[0x6]=nil;end;SF=SF+1;do(YF)[7]={};end;M3=Re[SF];SF=SF+1;local kL=(je[M3[0x00006]]);local NL=(kL[0X00008]);local eL=#NL;do if eL>0 then zL={};for LK=0X001,eL do local tK=NL[LK];if tK[1]==0 then do(zL)[LK-1]={YF,tK[0x2]};end;else do zL[LK-0X1]=ve[tK[0X00002]];end;end;end;A(De,zL);end;end;YF[0X0008]=NC(zL,IF,kL);M3=Re[SF];SF=SF+1;YF[0X7][M3[0X2]]=YF[8];SF=SF+1;WF=EL+5-1;YF[EL](I(YF,EL+1,WF));WF=EL-0X01;SF=SF+0X00001;do ZL=ve[0X00000];end;do YF[0X3]=ZL[1][ZL[0X2]];end;SF=SF+1;SF=SF+0x001;M3=Re[SF];SF=SF+1;EL=3;local GL=(YF[3]);(YF)[EL+1]=GL;do YF[EL]=GL[M3[5]];end;do SF=SF+1;end;EL=3;YF[EL](YF[EL+0X1]);WF=EL-0x0001;SF=SF+1;do SF=SF+1;end;M3=Re[SF];SF=SF+1;SF=M3[6];else YF[1]=IF[M3[0X2]];SF=SF+0X1;do SF=SF+1;end;do M3=Re[SF];end;do SF=SF+1;end;(YF)[0X0001]=YF[1][M3[5]];SF=SF+1;SF=SF+1;M3=Re[SF];SF=SF+1;do if not(not YF[1])then else SF=M3[6];end;end;end;else if f3~=24 then local cr=(ve[0]);(YF)[1]=cr[1][cr[2]];M3=Re[SF];do SF=SF+1;end;local Yr,Nr=1,YF[1];(YF)[Yr+1]=Nr;YF[Yr]=Nr[M3[5]];do SF=SF+0X1;end;Yr=0X001;(YF[Yr])(YF[Yr+1]);WF=Yr-0X0001;SF=SF+1;do SF=SF+0X001;end;SF=SF+1;repeat local lO,DO=De,(YF);if#lO>0X000 then local q1={};for AV,qV in D,lO do for WO,nO in D,qV do do if nO[0X0001]==DO and nO[2]>=0 then local Mu=(nO[0x2]);if not q1[Mu]then q1[Mu]={DO[Mu]};end;(nO)[1]=q1[Mu];(nO)[0x2]=0x1;end;end;end;end;end;until true;return;else local E0=(ve[0X00000]);(YF)[2]=E0[1][E0[2]];do SF=SF+0X1;end;local B0=0x2;SF=SF+0X0001;M3=Re[SF];SF=SF+1;local S0=(YF[2]);YF[B0+1]=S0;(YF)[B0]=S0[M3[0X00005]];SF=SF+0X00001;YF[4]=true;SF=SF+1;B0=0X2;YF[B0](YF[B0+0X1],YF[B0+0X2]);WF=B0-0X001;M3=Re[SF];SF=SF+0X0001;do YF[2]=IF[M3[0X002]];end;M3=Re[SF];SF=SF+0x00001;YF[0X00003]=IF[M3[2]];SF=SF+0X1;do B0=0x2;end;YF[B0]=YF[B0](YF[B0+1]);WF=B0;SF=SF+1;E0=ve[1];(YF)[3]=E0[1][E0[0X2]];do M3=Re[SF];end;SF=SF+0X001;(YF)[0X3]=YF[0X3][M3[5]];do SF=SF+0x1;end;SF=SF+0X01;do SF=SF+0X1;end;YF[0X4]=YF[0X02];SF=SF+1;do B0=3;end;(YF)[B0]=YF[B0](YF[B0+1]);WF=B0;SF=SF+1;SF=SF+0X01;do M3=Re[SF];end;SF=SF+1;if not(not YF[0X3])then else do SF=M3[0x006];end;end;end;end;else if f3>=19 then if f3~=20 then(YF)[2]=IF[M3[0X2]];do SF=SF+1;end;SF=SF+0X1;local n2=(0X2);M3=Re[SF];SF=SF+0X1;(YF)[0X3]=M3[0X02];SF=SF+1;YF[n2]=YF[n2](YF[n2+0X001]);WF=n2;M3=Re[SF];SF=SF+0X00001;if not(YF[2])then else SF=M3[6];end;else(YF)[1]=IF[M3[0X2]];do SF=SF+1;end;SF=SF+0X0001;local BB=1;M3=Re[SF];SF=SF+0X00001;YF[0X1]=YF[1][M3[0X5]];M3=Re[SF];do SF=SF+0X1;end;do YF[2]=M3[2];end;SF=SF+0X001;(YF)[BB]=YF[BB](YF[BB+0X1]);WF=BB;M3=Re[SF];do SF=SF+0X1;end;if not(not YF[1])then else do SF=M3[0x6];end;end;end;else do if f3==0X0012 then local Mz=(ve[0X0]);do(YF)[0X0001]=Mz[1][Mz[0X002]];end;SF=SF+0x01;local Nz=1;do SF=SF+0X0001;end;do M3=Re[SF];end;do SF=SF+1;end;local uz=(YF[1]);YF[Nz+0X001]=uz;(YF)[Nz]=uz[M3[5]];SF=SF+1;Nz=1;do(YF)[Nz]=YF[Nz](YF[Nz+1]);end;WF=Nz;M3=Re[SF];do SF=SF+1;end;do if not YF[0X001]then do SF=M3[6];end;end;end;else(YF)[0x2]=IF[M3[0x2]];SF=SF+0X1;do SF=SF+0x1;end;do M3=Re[SF];end;SF=SF+0X1;(YF)[0X03]=M3[0X00002];local de=(0X0002);do SF=SF+0X1;end;YF[de](YF[de+1]);WF=de-0X1;SF=SF+0X1;SF=SF+0x1;M3=Re[SF];do SF=SF+0X1;end;SF=M3[0X00006];end;end;end;end;end;end;else if f3<0X8 then if not(f3>=4)then do if f3>=2 then if f3~=0x3 then local uH=M3[0X7];local LH,WH=YF[uH],((M3[0x1]-0X1)*50);for XU=0x0001,M3[0X00006]do do(LH)[WH+XU]=YF[uH+XU];end;end;else do(YF)[M3[7]]=IF[M3[2]];end;end;else if f3==1 then YF[0X3]=IF[M3[2]];M3=Re[SF];SF=SF+0X1;YF[0X0003]=YF[0X3][M3[0X5]];M3=Re[SF];SF=SF+0X1;if YF[0X3]then SF=M3[0X6];end;else(YF)[M3[0X07]]=YF[M3[0X6]]>YF[M3[0x00001]];end;end;end;else if f3<0X6 then if f3~=5 then do YF[M3[0X07]]=M3[0X2];end;else YF[M3[0X07]]=u(YF[M3[6]],YF[M3[0X0001]]);end;else if f3==0X7 then YF[0x2]=IF[M3[2]];SF=SF+1;SF=SF+0X1;M3=Re[SF];do SF=SF+0x01;end;(YF)[0X2]=YF[0X00002][M3[0x005]];do SF=SF+0x01;end;SF=SF+1;do M3=Re[SF];end;SF=SF+1;if not YF[2]then SF=M3[6];end;else do SF=M3[0X6];end;end;end;end;else if not(f3>=0XC)then if not(f3>=10)then if f3~=0X009 then YF[0X1]=IF[M3[0X2]];SF=SF+1;WF=0X1;do(YF)[WF]=YF[WF]();end;M3=Re[SF];SF=SF+1;if not(YF[0X0001])then else SF=M3[0x6];end;else repeat local Vv,Bv=De,(YF);do if not(#Vv>0)then else local lW=({});for pl,ml in D,Vv do do for l5,v5 in D,ml do do if v5[0X001]==Bv and v5[2]>=0X0 then local Ix=v5[0x2];do if not(not lW[Ix])then else lW[Ix]={Bv[Ix]};end;end;v5[1]=lW[Ix];(v5)[2]=0X1;end;end;end;end;end;end;end;until true;return;end;else if f3==11 then do YF[0X3]=IF[M3[0X2]];end;do SF=SF+1;end;SF=SF+1;M3=Re[SF];do SF=SF+0X001;end;if YF[0X3]then SF=M3[0X0006];end;else(YF)[1]=IF[M3[2]];M3=Re[SF];SF=SF+0X1;(YF)[1]=YF[0X1][M3[5]];SF=SF+1;SF=SF+1;M3=Re[SF];SF=SF+1;do if not YF[0X01]then SF=M3[0X6];end;end;end;end;else if not(f3>=14)then do if f3~=13 then local Kb=(je[M3[0x6]]);local mb=(Kb[0X00008]);local db,Nb=#mb,nil;do if not(db>0X0)then else Nb={};do for q1=1,db do local p1=mb[q1];if p1[1]==0X0 then(Nb)[q1-1]={YF,p1[0x0002]};else do Nb[q1-0x01]=ve[p1[2]];end;end;end;end;A(De,Nb);end;end;do YF[M3[7]]=NC(Nb,IF,Kb);end;else if YF[M3[0X7]]then do SF=M3[6];end;end;end;end;else if not(f3<0X00f)then if f3~=0X10 then local kq,Sq=2,YF[2];YF[kq+0X1]=Sq;do(YF)[kq]=Sq[M3[0X0005]];end;M3=Re[SF];SF=SF+0X1;YF[0X4]=M3[0X2];SF=SF+1;kq=2;(YF)[kq]=YF[kq](YF[kq+1],YF[kq+0X00002]);WF=kq;M3=Re[SF];SF=SF+0X1;if YF[0x2]then SF=M3[6];end;else(YF)[M3[0X7]]={I({},0x001,M3[0x6])};end;else if not(YF[M3[6]]<M3[0X0005])then SF=M3[7];end;end;end;end;end;end;end;end);if not(cF)then if f(NF)=='s\116r\i\110\103'then if e(NF,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(e(NF,"^.-:%d+: "))then(b)(NF,0x0);else(b)("Luraph Script:"..(Ae[SF-1]or'\(\105\110\116\ern\097\108\041')..": "..r(NF),0X0);end;else(b)(NF,0X00000);end;else if NF then if MF==1 then return YF[sF]();else return YF[sF](I(YF,sF+0X1,WF));end;elseif sF then return I(YF,sF,MF);end;end;end;else fe=function(...)local Pc=0X1;local qc={};local Yc=(m());local zc,kc=(Yc==F and Le or Yc),({[1]=ce,[0X2]=qc});local Oc,Fc=rC(...);do Oc=Oc-1;end;local ic=(0);for C9=0,Oc do if he>C9 then qc[C9]=Fc[C9+0X1];else break;end;end;if not ge then Fc=nil;elseif not(xe)then else(qc)[he]={n=Oc>=he and Oc-he+0X01 or 0X0,I(Fc,he+1,Oc+1)};end;if zc==Yc then else i(fe,zc);end;local Xc,oc,bc,ec=j(function()while true do local Iz=Re[Pc];local Qz=Iz[0x04];Pc=Pc+0x1;do if not(Qz<11)then if not(Qz>=0X011)then do if Qz>=14 then do if not(Qz>=0Xf)then do qc[Iz[0X7]]=qc[Iz[0x6]]>qc[Iz[1]];end;else if Qz~=16 then if qc[Iz[0X007]]then Pc=Iz[6];end;else qc[1]=zc[Iz[2]];do Pc=Pc+0X1;end;local fB=1;Pc=Pc+0X1;Iz=Re[Pc];Pc=Pc+0X01;do qc[0X02]=Iz[2];end;Pc=Pc+1;qc[fB]=qc[fB](qc[fB+1]);ic=fB;Pc=Pc+1;Pc=Pc+1;Iz=Re[Pc];do Pc=Pc+1;end;if not(not qc[0X1])then else Pc=Iz[0X6];end;end;end;end;else if Qz<12 then(qc)[Iz[0x7]]=qc[Iz[6]]<qc[Iz[1]];else if Qz==13 then qc[Iz[7]]=Iz[0X2];else do qc[0x000]=zc[Iz[0X2]];end;Iz=Re[Pc];Pc=Pc+1;do qc[0X1]=Iz[2];end;Pc=Pc+0x01;local YT=(0X00000);qc[YT]=qc[YT](qc[YT+1]);ic=YT;local gT=(ve[0X0]);Pc=Pc+0X001;do Pc=Pc+0x1;end;Pc=Pc+1;qc[1]=gT[1][gT[0X2]];Iz=Re[Pc];Pc=Pc+1;(qc)[1]=qc[0X1][Iz[5]];Pc=Pc+0X0001;qc[2]=qc[0];Pc=Pc+1;YT=0X1;qc[YT]=qc[YT](qc[YT+0X1]);ic=YT;Iz=Re[Pc];Pc=Pc+0X001;if not(not qc[0x1])then else do Pc=Iz[0X006];end;end;end;end;end;end;else if not(Qz<0x0014)then if Qz>=21 then if Qz==0X0016 then Pc=Iz[0X6];else end;else qc[1]=zc[Iz[2]];Iz=Re[Pc];do Pc=Pc+1;end;qc[0X2]=zc[Iz[0x2]];Pc=Pc+0X00001;Pc=Pc+0X1;Iz=Re[Pc];Pc=Pc+1;qc[0X2]=qc[0x002][Iz[0x00005]];do Iz=Re[Pc];end;Pc=Pc+0X1;(qc)[2]=qc[2][Iz[0X5]];Pc=Pc+0X001;do Pc=Pc+0X1;end;do Iz=Re[Pc];end;Pc=Pc+0X01;do(qc)[3]=zc[Iz[2]];end;Iz=Re[Pc];Pc=Pc+0X00001;(qc)[3]=qc[3][Iz[5]];Pc=Pc+1;local r2=(0X0001);Pc=Pc+1;do Iz=Re[Pc];end;do Pc=Pc+0X0001;end;qc[0X3]=qc[0X3][Iz[0X5]];Pc=Pc+0X1;Pc=Pc+1;Iz=Re[Pc];Pc=Pc+0X00001;(qc)[3]=qc[3][Iz[0x05]];Iz=Re[Pc];Pc=Pc+0X1;qc[0X003]=qc[3][Iz[0X005]];do Iz=Re[Pc];end;do Pc=Pc+1;end;qc[4]=Iz[0X2];do Pc=Pc+0x0001;end;ic=r2+0X4-1;(qc[r2])(I(qc,r2+1,ic));ic=r2-1;Iz=Re[Pc];Pc=Pc+0X1;do qc[1]=zc[Iz[0X2]];end;Pc=Pc+1;do Pc=Pc+0X1;end;Iz=Re[Pc];Pc=Pc+0X1;do(qc)[0x00002]=zc[Iz[2]];end;Pc=Pc+0X001;Pc=Pc+0X1;Iz=Re[Pc];Pc=Pc+0X1;qc[0X2]=qc[2][Iz[0X005]];Pc=Pc+1;Pc=Pc+0X01;Iz=Re[Pc];do Pc=Pc+0X1;end;(qc)[2]=qc[0x0002][Iz[0X05]];do Pc=Pc+1;end;do Pc=Pc+0X00001;end;Iz=Re[Pc];Pc=Pc+1;(qc)[3]=zc[Iz[0x2]];do Iz=Re[Pc];end;Pc=Pc+0x0001;(qc)[0X3]=qc[0X3][Iz[5]];Iz=Re[Pc];Pc=Pc+0X1;qc[3]=qc[3][Iz[0X0005]];Iz=Re[Pc];do Pc=Pc+1;end;do qc[3]=qc[0X00003][Iz[5]];end;Iz=Re[Pc];do Pc=Pc+1;end;qc[0X00003]=qc[3][Iz[0X5]];Iz=Re[Pc];Pc=Pc+0x1;(qc)[0X4]=Iz[0X00002];Pc=Pc+1;do r2=1;end;ic=r2+0x4-0X00001;(qc[r2])(I(qc,r2+0X1,ic));do ic=r2-1;end;Iz=Re[Pc];do Pc=Pc+0x01;end;Pc=Iz[6];end;else if Qz>=0X12 then if Qz==0X00013 then local Id=(nil);local nd=je[Iz[6]];local Md=(nd[8]);local xd=#Md;if xd>0x000 then do Id={};end;for Iy=0X1,xd do local gy=(Md[Iy]);if gy[1]==0X0000 then Id[Iy-1]={qc,gy[0x00002]};else Id[Iy-1]=ve[gy[2]];end;end;A(De,Id);end;qc[Iz[0x07]]=NC(Id,zc,nd);else qc[Iz[0X00007]]=qc[Iz[0X6]]/qc[Iz[1]];end;else qc[Iz[0X7]]=qc[Iz[0X0006]]<=qc[Iz[0x1]];end;end;end;else do if not(Qz>=5)then if not(Qz<0X0002)then do if Qz>=3 then do if Qz~=4 then local Yu=ve[0X0];(qc)[0X01]=Yu[1][Yu[0X2]];do Pc=Pc+1;end;do Pc=Pc+1;end;do Iz=Re[Pc];end;Pc=Pc+0X1;do(qc)[0X00001]=qc[0X1][Iz[0X5]];end;Pc=Pc+0X1;Pc=Pc+1;Pc=Pc+0x1;do qc[2]=qc[0];end;Pc=Pc+0x1;do Yu=ve[0X00001];end;local ku=(1);(qc)[3]=Yu[0X1][Yu[2]];Pc=Pc+0X1;(qc[ku])(qc[ku+0X1],qc[ku+0x2]);ic=ku-0X00001;Pc=Pc+1;Pc=Pc+1;Pc=Pc+0x1;do Yu=ve[0X0001];end;(qc)[1]=Yu[1][Yu[2]];do Iz=Re[Pc];end;Pc=Pc+1;ku=0X1;local Wu=qc[0X1];(qc)[ku+1]=Wu;do qc[ku]=Wu[Iz[0X5]];end;Pc=Pc+0X1;ku=0x1;qc[ku](qc[ku+1]);ic=ku-1;Iz=Re[Pc];Pc=Pc+1;do Pc=Iz[6];end;else do(qc)[0]=zc[Iz[2]];end;Pc=Pc+1;Pc=Pc+1;Pc=Pc+1;ic=0;qc[ic]=qc[ic]();Iz=Re[Pc];Pc=Pc+0X001;(qc)[0X001]=zc[Iz[2]];Pc=Pc+0X1;Pc=Pc+0X1;Pc=Pc+0X001;qc[0x0]=qc[0X0]-qc[1];do Iz=Re[Pc];end;Pc=Pc+0X01;do if not(Iz[2]<qc[0])then Pc=Iz[0X0007];end;end;end;end;else(qc)[Iz[7]]=k(qc[Iz[6]],qc[Iz[1]]);end;end;else if Qz==1 then repeat local Ge,Ie=De,qc;if not(#Ge>0)then else local Fh={};for xh,uh in D,Ge do for PA,fA in D,uh do if fA[0X1]==Ie and fA[2]>=0 then local c8=(fA[2]);if not Fh[c8]then(Fh)[c8]={Ie[c8]};end;fA[1]=Fh[c8];fA[0x2]=0X1;end;end;end;end;until true;do return;end;else qc[0X0001]=zc[Iz[0X02]];Iz=Re[Pc];Pc=Pc+0X1;do qc[0x0002]=Iz[2];end;do Iz=Re[Pc];end;do Pc=Pc+0X1;end;qc[3]=Iz[0x2];do Iz=Re[Pc];end;Pc=Pc+0X1;(qc)[4]=Iz[0x02];Iz=Re[Pc];local jF=(1);Pc=Pc+0x1;qc[5]=Iz[0x2];Pc=Pc+1;ic=jF+0x005-1;(qc[jF])(I(qc,jF+1,ic));ic=jF-1;Iz=Re[Pc];Pc=Pc+1;Pc=Iz[6];end;end;else if not(Qz<0X8)then do if Qz<9 then qc[Iz[0X00007]]=#qc[Iz[0x06]];else do if Qz==0x00a then qc[0X1]=zc[Iz[0X02]];Pc=Pc+0x00001;Pc=Pc+0X00001;Iz=Re[Pc];Pc=Pc+1;if qc[0X1]then Pc=Iz[0X006];end;else for ZJ=Iz[7],Iz[0X6]do(qc)[ZJ]=nil;end;end;end;end;end;else do if not(Qz>=0X006)then(qc)[Iz[0X007]]={I({},1,Iz[6])};else do if Qz==7 then(qc)[Iz[0X0007]]=qc[Iz[0X006]]-qc[Iz[1]];else qc[Iz[7]]=zc[Iz[2]];end;end;end;end;end;end;end;end;end;end;end);if Xc then if oc then do if ec==1 then return qc[bc]();else return qc[bc](I(qc,bc+0X1,ic));end;end;elseif bc then return I(qc,bc,ec);end;else if f(oc)~='stri\110g'then(b)(oc,0X00000);else if e(oc,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(oc,"^.-:%d+: ")then(b)("Luraph Script:"..(Ae[Pc-1]or"(internal)")..":\ "..r(oc),0x0000);else(b)(oc,0X0);end;end;end;end;end;end;end;else if me<20 then if not(me<0X0012)then if me==0x00013 then fe=function(...)local xa=({});local ya=(0X1);local ma=m();local Na=({[0X2]=xa,[1]=ce});local Xa,Ga=rC(...);local ua=0X00000;local Qa=((ma==F and Le or ma));Xa=Xa-0X1;for q5=0x0,Xa do if not(he>q5)then break;else xa[q5]=Ga[q5+1];end;end;if not ge then Ga=nil;elseif xe then(xa)[he]={n=Xa>=he and Xa-he+1 or 0x00,I(Ga,he+1,Xa+0x1)};end;if Qa==ma then else i(fe,Qa);end;local ga,ia,ca,za=j(function()do while true do local wb=Re[ya];local Lb=wb[0X004];ya=ya+1;if Lb>=7 then if Lb<0xB then do if Lb>=9 then if Lb==0XA then do if xa[wb[0X6]]~=xa[wb[0x00001]]then else do ya=wb[0x7];end;end;end;else end;else do if Lb==8 then ya=wb[0x6];else(xa)[wb[7]]=wb[0X00002];end;end;end;end;else do if Lb<0XD then if Lb~=12 then do(xa)[0X0002]=xa[0][wb[5]];end;do wb=Re[ya];end;ya=ya+1;do(xa)[3]=xa[1][wb[0X0005]];end;ya=ya+0X1;xa[0X2]=xa[0x0002]<xa[0X3];local e2=(2);ya=ya+0X1;repeat local dd,od=De,(xa);if not(#dd>0)then else local rz=({});do for cg,Gg in D,dd do for Bf,pf in D,Gg do do if pf[1]==od and pf[2]>=0x0 then local dm=pf[2];if not rz[dm]then rz[dm]={od[dm]};end;pf[1]=rz[dm];do(pf)[0X2]=0X1;end;end;end;end;end;end;end;until true;return false,e2,e2;else repeat local dX,UX=De,xa;do if not(#dX>0X000)then else local be=({});do for Er,wr in D,dX do for h4,o4 in D,wr do if not(o4[0X0001]==UX and o4[2]>=0X000)then else local qn=(o4[2]);do if not be[qn]then be[qn]={UX[qn]};end;end;o4[1]=be[qn];o4[0X00002]=0X1;end;end;end;end;end;end;until true;return;end;else if Lb~=14 then(xa)[wb[0x7]]=T(xa[wb[6]]);else do(xa)[wb[7]]=not xa[wb[0X6]];end;end;end;end;end;else if Lb<0X3 then if not(Lb<0x1)then if Lb~=2 then local XH=(wb[6]);local LH=(xa[XH]);for la=XH+1,wb[1]do do LH=LH..xa[la];end;end;xa[wb[0X7]]=LH;else local iF,MF=je[wb[0X6]],nil;local tF=iF[0X008];local kF=(#tF);do if kF>0x0 then do MF={};end;do for aL=0X00001,kF do local QL=(tF[aL]);if QL[0x1]~=0 then do(MF)[aL-0x001]=ve[QL[2]];end;else do MF[aL-0X00001]={xa,QL[0X0002]};end;end;end;end;A(De,MF);end;end;xa[wb[0X7]]=NC(MF,Qa,iF);end;else(xa)[wb[7]]={I({},1,wb[0X0006])};end;else if Lb>=5 then do if Lb~=0x0006 then do Qa[wb[0X2]]=xa[wb[0X00007]];end;else xa[wb[0x7]]=Qa[wb[2]];end;end;else do if Lb==0X4 then if not(xa[wb[6]]<=xa[wb[0x001]])then else ya=wb[7];end;else xa[wb[7]]=xa[wb[0x6]]%xa[wb[1]];end;end;end;end;end;end;end;end);do if not(ga)then do if f(ia)~="string"then b(ia,0X0);else if not(e(ia,"\097\116\116\101\m\p\116\ \116o \yi\e\108d \097\c\114\o\s\s m\e\116\097\109\e\116\104\o\d\/\C\037\045\c\097\108\l boun\100\097r\121"))then else return coroutine.yield();end;do if e(ia,"^.-:%d+: ")then(b)("Luraph Script:"..(Ae[ya-1]or"(internal)")..'\: '..r(ia),0);else(b)(ia,0X0);end;end;end;end;else if ia then if za~=0X1 then return xa[ca](I(xa,ca+0X1,ua));else return xa[ca]();end;elseif ca then return I(xa,ca,za);end;end;end;end;else fe=function(...)local Ay=({});local Vy=0;local Ky=0X001;local Ly=(m());local Hy=((Ly==F and Le or Ly));local sy=({[1]=ce,[0X2]=Ay});local By,iy=rC(...);By=By-1;for ds=0,By do if he>ds then Ay[ds]=iy[ds+1];else break;end;end;if not ge then do iy=nil;end;elseif xe then do(Ay)[he]={n=By>=he and By-he+1 or 0X000,I(iy,he+1,By+0x001)};end;end;if Hy==Ly then else(i)(fe,Hy);end;local Gy,yy,xy,Uy=j(function()while true do local OK=(Re[Ky]);local EK=OK[0X4];Ky=Ky+0x0001;if not(EK>=7)then if not(EK<3)then if not(EK<5)then if EK~=6 then(Ay)[OK[7]]=OK[2];else local cF=(OK[7]);for I7=cF,cF+(OK[6]-0X00001)do Ay[I7]=iy[he+(I7-cF)+0X1];end;end;else if EK~=0x4 then do(Ay)[OK[7]]=Ay[OK[6]]~=Ay[OK[0X1]];end;else Ay[OK[0X00007]]=Ay[OK[0X6]][Ay[OK[1]]];end;end;else if not(EK>=0X1)then Ky=OK[6];else if EK~=2 then Ay[0X00]=Hy[OK[0x02]];OK=Re[Ky];Ky=Ky+1;local HU=0;local DU=(Ay[0]);(Ay)[HU+0x01]=DU;Ay[HU]=DU[OK[0X05]];do OK=Re[Ky];end;Ky=Ky+0x1;(Ay)[2]=OK[2];local zU=(0X3);Ky=Ky+0X01;HU=0;Vy=HU+zU-0X1;do repeat local UE,WE=De,(Ay);if#UE>0X0 then local RV={};for jn,Dn in D,UE do for d7,c7 in D,Dn do if not(c7[0X0001]==WE and c7[0X2]>=0X0)then else local ZT=c7[2];if not(not RV[ZT])then else RV[ZT]={WE[ZT]};end;c7[0X1]=RV[ZT];c7[2]=1;end;end;end;end;until true;end;return true,HU,zU;else local NT,MT=je[OK[6]],(nil);local LT=NT[8];local WT=(#LT);if WT>0X000 then do MT={};end;for JT=1,WT do local tT=LT[JT];if tT[0X1]==0x0 then do MT[JT-1]={Ay,tT[0x00002]};end;else(MT)[JT-1]=ve[tT[0X2]];end;end;(A)(De,MT);end;Ay[OK[0X7]]=NC(MT,Hy,NT);end;end;end;else if EK<11 then if EK<0x9 then if EK~=8 then Ay[OK[7]]=Hy[OK[2]];else repeat local pN,HN=De,Ay;if#pN>0 then local yi=({});for HK,yK in D,pN do do for y4,Q4 in D,yK do if not(Q4[1]==HN and Q4[0X2]>=0)then else local L8=Q4[0x2];if not(not yi[L8])then else(yi)[L8]={HN[L8]};end;(Q4)[0x00001]=yi[L8];do(Q4)[2]=0X1;end;end;end;end;end;end;until true;return;end;else if EK==10 then(Ay)[OK[7]]={I({},1,OK[6])};else end;end;else if EK>=13 then if EK~=0X0000e then(Ay)[OK[7]]=Ay[OK[6]]==Ay[OK[0X1]];else repeat local Cc,ec=De,Ay;if#Cc>0 then local aw={};for ED,bD in D,Cc do do for h7,C7 in D,bD do if not(C7[0X001]==ec and C7[0x2]>=0X0)then else local bb=(C7[0x2]);do if not aw[bb]then(aw)[bb]={ec[bb]};end;end;C7[1]=aw[bb];do C7[0x2]=1;end;end;end;end;end;end;until true;return false,OK[7],Vy;end;else do if EK==12 then do if Ay[OK[6]]~=Ay[OK[1]]then else do Ky=OK[7];end;end;end;else local LV,UV,uV=OK[0x7],OK[0x6],OK[1];if UV==0 then else Vy=LV+UV-1;end;local JV,YV=nil,nil;do if UV~=0x1 then do JV,YV=rC(Ay[LV](I(Ay,LV+1,Vy)));end;else do JV,YV=rC(Ay[LV]());end;end;end;if uV==0X1 then do Vy=LV-0X1;end;else do if uV~=0 then JV=LV+uV-2;Vy=JV+1;else do JV=JV+LV-0X00001;end;Vy=JV;end;end;local Qb=0;for mO=LV,JV do Qb=Qb+0X001;do Ay[mO]=YV[Qb];end;end;end;end;end;end;end;end;end;end);if Gy then if yy then if Uy~=0X1 then return Ay[xy](I(Ay,xy+0X1,Vy));else return Ay[xy]();end;elseif not(xy)then else return I(Ay,xy,Uy);end;else do if f(yy)=="\s\116\114\in\103"then if e(yy,"\097t\116\e\m\112t\ to\ y\105e\108d\032\097\099\114o\115\s \109\101t\097\m\101th\111\100/\C%\-\cal\l\032bou\110\100\097\114\121")then return coroutine.yield();end;if e(yy,"^.-:%d+: ")then b("\L\117ra\p\h\032Sc\114\i\112t\:"..(Ae[Ky-0X1]or"(\105\110t\er\110al)")..":\ "..r(yy),0);else b(yy,0);end;else(b)(yy,0);end;end;end;end;end;else fe=function(...)local Gm,Lm=0x1,{};local cm={[1]=ce,[0X2]=Lm};local Hm=m();local Zm,im=rC(...);local gm=(0X0);Zm=Zm-0X1;for Q6=0,Zm do do if not(he>Q6)then break;else Lm[Q6]=im[Q6+0X1];end;end;end;local Jm=(Hm==F and Le or Hm);if not ge then im=nil;elseif xe then(Lm)[he]={n=Zm>=he and Zm-he+1 or 0,I(im,he+0X01,Zm+1)};end;if Jm==Hm then else i(fe,Jm);end;local Am,Mm,tm,Em=j(function()do while true do local SR=(Re[Gm]);local wR=(SR[4]);do Gm=Gm+1;end;if wR>=0X1F then do if wR>=0X2e then if not(wR<54)then if not(wR>=0X03A)then if wR>=56 then if wR~=57 then(Lm)[0X2]=Jm[SR[0X2]];SR=Re[Gm];Gm=Gm+1;do(Lm)[2]=Lm[0X0002][SR[5]];end;do SR=Re[Gm];end;Gm=Gm+0x1;do if not(not Lm[2])then else Gm=SR[6];end;end;else(Lm)[0X04]=Jm[SR[0X2]];Gm=Gm+0X1;Gm=Gm+0X1;do SR=Re[Gm];end;Gm=Gm+1;do(Lm)[4]=Lm[4][SR[0X5]];end;do SR=Re[Gm];end;Gm=Gm+1;if not Lm[0X4]then Gm=SR[0X6];end;end;else if wR~=0X37 then Lm[0X3]=true;do SR=Re[Gm];end;Gm=Gm+1;do(Jm)[SR[0x2]]=Lm[0X03];end;SR=Re[Gm];Gm=Gm+0X1;Gm=SR[0X6];else Lm[0X2]=Jm[SR[0X02]];Gm=Gm+0x1;do Gm=Gm+1;end;do SR=Re[Gm];end;Gm=Gm+1;do(Lm)[2]=Lm[0X2][SR[0x5]];end;Gm=Gm+0X1;do Gm=Gm+1;end;do SR=Re[Gm];end;Gm=Gm+0X1;if not(Lm[0x0002])then else Gm=SR[0X006];end;end;end;else do if not(wR>=0X3c)then if wR==0x3b then(Lm)[0x2]=Jm[SR[0X2]];SR=Re[Gm];Gm=Gm+0x1;(Lm)[2]=Lm[0X2][SR[5]];do Gm=Gm+0X1;end;Gm=Gm+1;SR=Re[Gm];Gm=Gm+1;if not(not Lm[2])then else Gm=SR[0X6];end;else do repeat local lu,ou=De,(Lm);if#lu>0 then local SE=({});for lT,fT in D,lu do do for lR,KR in D,fT do if not(KR[1]==ou and KR[0X2]>=0X0000)then else local zs=KR[2];if not SE[zs]then SE[zs]={ou[zs]};end;KR[1]=SE[zs];(KR)[2]=0X1;end;end;end;end;end;until true;end;local FT=(SR[0X07]);return false,FT,FT+SR[0X6]-2;end;else do if wR==61 then do if not(SR[2]<Lm[SR[0x01]])then Gm=SR[7];end;end;else Lm[0X5]=Jm[SR[2]];do Gm=Gm+0x0001;end;gm=0x5;(Lm)[gm]=Lm[gm]();do SR=Re[Gm];end;Gm=Gm+0X00001;if not(Lm[0X5])then else do Gm=SR[0X6];end;end;end;end;end;end;end;else do if not(wR>=50)then if not(wR<48)then if wR==0X31 then(Lm)[4]=Jm[SR[0x00002]];SR=Re[Gm];do Gm=Gm+1;end;Lm[4]=Lm[4][SR[5]];SR=Re[Gm];Gm=Gm+0X1;if not(not Lm[4])then else do Gm=SR[6];end;end;else(Lm)[0X004]=Jm[SR[2]];SR=Re[Gm];Gm=Gm+0X01;do(Lm)[5]=Jm[SR[0X002]];end;local VQ=4;local nQ=(0X3);SR=Re[Gm];do Gm=Gm+1;end;Lm[0X6]=SR[2];Gm=Gm+0x1;local tQ=0X0003;if tQ~=0 then do gm=VQ+tQ-1;end;end;local fQ,rQ=nil,nil;do if tQ~=1 then fQ,rQ=rC(Lm[VQ](I(Lm,VQ+1,gm)));else do fQ,rQ=rC(Lm[VQ]());end;end;end;if nQ==0X1 then do gm=VQ-1;end;else if nQ==0 then fQ=fQ+VQ-0X1;gm=fQ;else fQ=VQ+nQ-0x2;do gm=fQ+0x0001;end;end;local JG=0X0;do for ZS=VQ,fQ do JG=JG+0x1;Lm[ZS]=rQ[JG];end;end;end;do Gm=Gm+0X1;end;do(Lm)[3]=Lm[0X5];end;do Gm=Gm+1;end;Lm[0X0002]=Lm[4];do SR=Re[Gm];end;Gm=Gm+0x00001;Gm=SR[6];end;else if wR~=47 then local k4=je[SR[0X6]];local l4=(nil);local Q4=k4[8];local D4=(#Q4);if not(D4>0)then else do l4={};end;do for Tf=0X1,D4 do local xf=Q4[Tf];if xf[0x1]==0X0 then l4[Tf-1]={Lm,xf[2]};else l4[Tf-1]=ve[xf[2]];end;end;end;A(De,l4);end;Lm[SR[0X7]]=NC(l4,Jm,k4);else local DE,YE=ve[1],(0x0003);Lm[3]=DE[0X0001][DE[2]];Gm=Gm+1;Gm=Gm+1;SR=Re[Gm];Gm=Gm+0X0001;(Lm)[0X3]=Lm[3][SR[0X5]];do Gm=Gm+0X1;end;(Lm)[4]=Lm[2];Gm=Gm+1;do Lm[YE]=Lm[YE](Lm[YE+1]);end;gm=YE;Gm=Gm+0x1;Gm=Gm+1;SR=Re[Gm];Gm=Gm+0X1;if not(not Lm[3])then else Gm=SR[0X6];end;end;end;else if wR>=52 then if wR~=53 then(Lm)[5]=Jm[SR[0x002]];Gm=Gm+0X1;Gm=Gm+1;SR=Re[Gm];Gm=Gm+1;(Lm)[5]=Lm[0X5][SR[5]];SR=Re[Gm];Gm=Gm+1;if not(Lm[5])then else Gm=SR[6];end;else(Lm)[SR[7]]=Lm[SR[6]];end;else if wR==51 then do if Lm[SR[0X00006]]~=SR[5]then Gm=SR[0X07];end;end;else Lm[3]=Jm[SR[0X002]];SR=Re[Gm];Gm=Gm+1;do(Lm)[0x0003]=Lm[0X03][SR[0x5]];end;Gm=Gm+1;do Gm=Gm+0X1;end;SR=Re[Gm];Gm=Gm+0X00001;Lm[3]=Lm[3][SR[0x5]];SR=Re[Gm];Gm=Gm+1;if not(not(SR[0X00002]<Lm[3]))then else do Gm=SR[0X0007];end;end;end;end;end;end;end;else if not(wR>=38)then if not(wR>=0X000022)then do if wR<0X20 then(Lm)[4]=Jm[SR[0X02]];do SR=Re[Gm];end;Gm=Gm+1;(Lm)[0X4]=Lm[4][SR[5]];Gm=Gm+1;Gm=Gm+1;SR=Re[Gm];Gm=Gm+0x00001;Lm[4]=Lm[0X0004][SR[5]];Gm=Gm+1;do Gm=Gm+0x01;end;SR=Re[Gm];Gm=Gm+0X01;if not(SR[0X2]<=Lm[0X0004])then Gm=SR[0X07];end;else do if wR~=33 then if Lm[SR[7]]then Gm=SR[6];end;else do(Lm)[0X3]=Jm[SR[2]];end;SR=Re[Gm];do Gm=Gm+0x1;end;do Lm[0X04]=SR[0x2];end;do Gm=Gm+0x00001;end;local dt=3;Lm[dt](Lm[dt+0X1]);gm=dt-1;Gm=Gm+0x1;Gm=Gm+1;SR=Re[Gm];do Gm=Gm+1;end;Gm=SR[6];end;end;end;end;else if wR<36 then if wR~=35 then(Lm)[0X4]=Jm[SR[0X0002]];SR=Re[Gm];do Gm=Gm+0x01;end;(Lm)[0X4]=Lm[4][SR[5]];Gm=Gm+1;do Gm=Gm+1;end;do Gm=Gm+1;end;Lm[3]=Lm[4];SR=Re[Gm];Gm=Gm+1;Gm=SR[0X006];else do Lm[0X0003]=Jm[SR[2]];end;Gm=Gm+1;do Gm=Gm+1;end;SR=Re[Gm];do Gm=Gm+1;end;Lm[0X00003]=Lm[3][SR[0x5]];SR=Re[Gm];Gm=Gm+0x00001;if not Lm[3]then Gm=SR[6];end;end;else do if wR==37 then(Lm)[SR[7]]=Jm[SR[2]];else(Lm)[0X00004]=Jm[SR[2]];Gm=Gm+1;Lm[0X005]=Lm[0X3];local bu=0X4;Gm=Gm+1;Lm[bu]=Lm[bu](Lm[bu+0X1]);gm=bu;SR=Re[Gm];do Gm=Gm+1;end;if Lm[4]==SR[5]then else Gm=SR[0X07];end;end;end;end;end;else if wR<42 then if wR<0X28 then if wR~=0X00027 then do Lm[0X4]=false;end;local Ui=(4);SR=Re[Gm];Gm=Gm+0X1;Jm[SR[0x2]]=Lm[0X4];SR=Re[Gm];Gm=Gm+0X001;Lm[0x00004]=Jm[SR[2]];SR=Re[Gm];Gm=Gm+1;Lm[0X05]=SR[0x2];Gm=Gm+1;(Lm)[Ui]=Lm[Ui](Lm[Ui+0X1]);do gm=Ui;end;Gm=Gm+1;Gm=Gm+1;do SR=Re[Gm];end;Gm=Gm+0x0001;if not(not Lm[4])then else Gm=SR[0X006];end;else do(Lm)[0x2]=Jm[SR[2]];end;Gm=Gm+1;do Gm=Gm+1;end;SR=Re[Gm];Gm=Gm+1;(Lm[2])[SR[2]]=SR[0X5];SR=Re[Gm];Gm=Gm+0x1;Lm[2]=Jm[SR[2]];Gm=Gm+0x01;Gm=Gm+0X00001;Gm=Gm+1;do gm=2;end;(Lm[gm])();gm=gm-1;Gm=Gm+1;Gm=Gm+1;Gm=Gm+0X01;repeat local aK,NK=De,(Lm);if#aK>0x0 then local Od=({});for cv,Wv in D,aK do for KC,YC in D,Wv do if not(YC[0x1]==NK and YC[0X002]>=0)then else local GR=(YC[2]);if not(not Od[GR])then else Od[GR]={NK[GR]};end;YC[0X1]=Od[GR];YC[0x2]=0x1;end;end;end;end;until true;return;end;else if wR==0X029 then(Lm)[0X00003]=Jm[SR[0x002]];Gm=Gm+0X0001;Gm=Gm+1;SR=Re[Gm];Gm=Gm+0x1;if Lm[0X3]then Gm=SR[0X06];end;else Gm=SR[6];end;end;else if not(wR>=44)then if wR~=43 then do(Lm)[1]=Jm[SR[2]];end;Gm=Gm+1;Gm=Gm+0X1;SR=Re[Gm];Gm=Gm+0X1;(Lm)[2]=SR[0X2];SR=Re[Gm];local EF=(0X1);Gm=Gm+0x1;(Lm)[3]=Jm[SR[0X2]];do Gm=Gm+0X1;end;Gm=Gm+1;SR=Re[Gm];do Gm=Gm+1;end;Lm[0X003]=Lm[3][SR[5]];Gm=Gm+1;do Gm=Gm+0X01;end;do Gm=Gm+1;end;Lm[EF]=Lm[EF](Lm[EF+0X1],Lm[EF+0x2]);gm=EF;do Gm=Gm+1;end;Gm=Gm+1;SR=Re[Gm];do Gm=Gm+0x1;end;do if Lm[1]~=SR[5]then else Gm=SR[0X7];end;end;else local Os=ve[1];(Lm)[0X3]=Os[1][Os[0x2]];Gm=Gm+1;local Ss=0X3;Gm=Gm+0x0001;SR=Re[Gm];Gm=Gm+1;do(Lm)[3]=Lm[3][SR[0x5]];end;do Gm=Gm+0X1;end;Lm[4]=Lm[2];Gm=Gm+1;Os=ve[0X0];Lm[0X0005]=Os[0X0001][Os[2]];SR=Re[Gm];local vs=(je[SR[0X6]]);Gm=Gm+1;local zs=vs[8];local Ns=nil;local Js=(#zs);if not(Js>0)then else Ns={};do for jo=1,Js do local ao=(zs[jo]);if ao[0X1]==0X0000 then(Ns)[jo-1]={Lm,ao[2]};else Ns[jo-1]=ve[ao[0X00002]];end;end;end;A(De,Ns);end;(Lm)[0X0006]=NC(Ns,Jm,vs);do Gm=Gm+1;end;gm=Ss+0X004-0X001;(Lm[Ss])(I(Lm,Ss+1,gm));gm=Ss-0x1;Gm=Gm+0X00001;Os=ve[0X00000];(Lm)[0X03]=Os[0X0001][Os[0X2]];local Ps=Lm[3];Gm=Gm+0x1;Gm=Gm+0X1;SR=Re[Gm];do Gm=Gm+1;end;Ss=3;do(Lm)[Ss+0X001]=Ps;end;Lm[Ss]=Ps[SR[0x05]];do Gm=Gm+0X1;end;Ss=3;Lm[Ss](Lm[Ss+1]);do gm=Ss-0X1;end;Gm=Gm+0X1;Gm=Gm+1;SR=Re[Gm];Gm=Gm+1;do Gm=SR[0X0006];end;end;else if wR==45 then Lm[4]=true;do SR=Re[Gm];end;Gm=Gm+1;Jm[SR[0X00002]]=Lm[0X4];SR=Re[Gm];Gm=Gm+0X1;Gm=SR[0X6];else do(Lm)[4]=Jm[SR[2]];end;SR=Re[Gm];Gm=Gm+1;do(Lm)[5]=SR[0X2];end;Gm=Gm+0X1;Lm[6]=true;local Sa=0X004;Gm=Gm+0X001;(Lm)[Sa]=Lm[Sa](Lm[Sa+0x1],Lm[Sa+0X2]);gm=Sa;SR=Re[Gm];do Gm=Gm+0X001;end;if Lm[4]then Gm=SR[6];end;end;end;end;end;end;end;else if wR>=0X00F then do if not(wR>=23)then if wR<19 then if not(wR>=17)then if wR~=0x10 then for LV=SR[0x07],SR[6]do Lm[LV]=nil;end;else if not(not Lm[SR[7]])then else do Gm=SR[6];end;end;end;else if wR~=0x000012 then(Lm)[0X2]=Jm[SR[2]];do Gm=Gm+0X1;end;Gm=Gm+1;SR=Re[Gm];Gm=Gm+0X1;Lm[0X2]=Lm[0X002][SR[0X5]];SR=Re[Gm];do Gm=Gm+1;end;if Lm[2]then Gm=SR[6];end;else Lm[0X4]=Jm[SR[2]];SR=Re[Gm];Gm=Gm+1;do Lm[0X4][SR[0X2]]=SR[5];end;do SR=Re[Gm];end;Gm=Gm+1;Lm[4]=Jm[SR[2]];Gm=Gm+0X1;gm=0x004;(Lm[gm])();do gm=gm-1;end;SR=Re[Gm];local M_=(4);Gm=Gm+0X1;Lm[0X04]=Jm[SR[2]];SR=Re[Gm];Gm=Gm+0x1;do Lm[5]=Jm[SR[0X02]];end;Gm=Gm+0x001;do Gm=Gm+0X0001;end;Gm=Gm+0x1;Lm[M_](Lm[M_+0X1]);gm=M_-1;do SR=Re[Gm];end;Gm=Gm+0X1;Gm=SR[6];end;end;else do if wR>=0x15 then do if wR~=22 then(Lm)[0x4]=Jm[SR[0X2]];SR=Re[Gm];do Gm=Gm+0X1;end;(Lm[4])[SR[0X002]]=SR[0X00005];SR=Re[Gm];Gm=Gm+1;(Lm)[0X4]=Jm[SR[2]];Gm=Gm+0X1;Gm=Gm+1;do SR=Re[Gm];end;Gm=Gm+1;if not Lm[0X4]then Gm=SR[0x0006];end;else Lm[2]=Jm[SR[0X2]];do Gm=Gm+0X1;end;Gm=Gm+1;do SR=Re[Gm];end;Gm=Gm+0X0001;local QB=(2);Lm[3]=SR[2];Gm=Gm+1;do(Lm)[QB]=Lm[QB](Lm[QB+0X1]);end;gm=QB;SR=Re[Gm];Gm=Gm+0X01;do if not(not Lm[0X002])then else do Gm=SR[6];end;end;end;end;end;else if wR==20 then(Lm)[0X1]=Jm[SR[0X002]];do Gm=Gm+0X1;end;Gm=Gm+1;SR=Re[Gm];Gm=Gm+1;if not(Lm[1])then else do Gm=SR[6];end;end;else(Lm)[0X002]=Jm[SR[2]];SR=Re[Gm];Gm=Gm+0X1;do Lm[0x2]=Lm[2][SR[0X5]];end;SR=Re[Gm];Gm=Gm+1;do if Lm[2]then Gm=SR[6];end;end;end;end;end;end;else if not(wR>=27)then do if wR>=0X00019 then if wR~=0X1A then repeat local n4,O4=De,(Lm);if#n4>0X0 then local k8=({});do for yK,SK in D,n4 do for n2,N2 in D,SK do if not(N2[1]==O4 and N2[2]>=0x000)then else local UE=N2[0x2];if not k8[UE]then(k8)[UE]={O4[UE]};end;N2[1]=k8[UE];do(N2)[0X002]=1;end;end;end;end;end;end;until true;return;else(Lm)[4]=Jm[SR[0x00002]];Gm=Gm+1;Gm=Gm+1;SR=Re[Gm];do Gm=Gm+0X1;end;(Lm)[0X0004]=Lm[4][SR[0X0005]];Gm=Gm+1;do Gm=Gm+1;end;do SR=Re[Gm];end;do Gm=Gm+1;end;do(Lm)[4]=Lm[4][SR[5]];end;Gm=Gm+0X00001;do Gm=Gm+1;end;do SR=Re[Gm];end;Gm=Gm+1;Lm[0X0004]=Lm[0X4][SR[0X5]];SR=Re[Gm];do Gm=Gm+0X00001;end;if not(SR[2]<=Lm[4])then Gm=SR[0X07];end;end;else if wR==0X000018 then Lm[SR[7]]=Lm[SR[0X6]]%Lm[SR[1]];else(Lm)[2]=Jm[SR[2]];SR=Re[Gm];Gm=Gm+0x0001;Lm[2]=Lm[0X2][SR[0X5]];Gm=Gm+1;Gm=Gm+0x1;do SR=Re[Gm];end;Gm=Gm+1;if not Lm[0x2]then Gm=SR[6];end;end;end;end;else if not(wR<0X001D)then if wR==30 then local ak,Uk=ve[0],0X0002;do(Lm)[0x2]=ak[1][ak[2]];end;Gm=Gm+1;Gm=Gm+0X1;do SR=Re[Gm];end;Gm=Gm+0X00001;local Zk=(Lm[2]);do(Lm)[Uk+0X1]=Zk;end;do(Lm)[Uk]=Zk[SR[0X00005]];end;Gm=Gm+1;do Uk=0X2;end;(Lm[Uk])(Lm[Uk+0X0001]);gm=Uk-1;do Gm=Gm+1;end;Gm=Gm+1;SR=Re[Gm];Gm=Gm+0X1;Lm[0X0002]=Jm[SR[2]];do Gm=Gm+1;end;Gm=Gm+1;SR=Re[Gm];Gm=Gm+1;do Lm[3]=SR[2];end;Gm=Gm+0X001;Uk=2;Lm[Uk]=Lm[Uk](Lm[Uk+0x01]);do gm=Uk;end;Gm=Gm+0x1;Gm=Gm+0X1;Gm=Gm+1;do(Lm)[0]=Lm[0X00002];end;Gm=Gm+0X0001;do(Lm)[2]=Lm[0x0];end;SR=Re[Gm];Gm=Gm+0X01;Jm[SR[0X2]]=Lm[0X2];SR=Re[Gm];Gm=Gm+0X1;Lm[2]=Jm[SR[0x00002]];do SR=Re[Gm];end;Gm=Gm+1;Lm[0X3]=SR[0X2];Gm=Gm+1;do Uk=2;end;(Lm)[Uk]=Lm[Uk](Lm[Uk+1]);do gm=Uk;end;do Gm=Gm+0X1;end;Gm=Gm+1;SR=Re[Gm];do Gm=Gm+0X1;end;if Lm[0X00002]then Gm=SR[0X0006];end;else if Lm[SR[0x6]]~=SR[0X00005]then else Gm=SR[7];end;end;else if wR~=0x1C then Lm[SR[7]]=Lm[SR[0X06]]*Lm[SR[1]];else(Lm)[4]=Jm[SR[0X2]];SR=Re[Gm];Gm=Gm+1;(Lm)[0X00004]=Lm[0X00004][SR[5]];SR=Re[Gm];do Gm=Gm+0X00001;end;if not Lm[0X00004]then Gm=SR[0X6];end;end;end;end;end;end;else if wR>=0X7 then if not(wR>=0xb)then if wR>=0X9 then if wR~=10 then else Lm[0X3]=Jm[SR[2]];Gm=Gm+1;local CK=0X3;Gm=Gm+1;do SR=Re[Gm];end;Gm=Gm+1;Lm[4]=SR[2];Gm=Gm+1;Lm[CK]=Lm[CK](Lm[CK+0X1]);gm=CK;do Gm=Gm+0X01;end;Lm[0]=Lm[0X3];do SR=Re[Gm];end;Gm=Gm+0X0001;Gm=SR[6];end;else do if wR==0X8 then(Lm)[2]=Jm[SR[0x2]];do Gm=Gm+0X0001;end;do Gm=Gm+0X1;end;SR=Re[Gm];do Gm=Gm+0X0001;end;if not Lm[2]then Gm=SR[0X06];end;else(Lm)[4]=Jm[SR[2]];Gm=Gm+1;Gm=Gm+1;SR=Re[Gm];Gm=Gm+0x1;Lm[0X00004][SR[2]]=SR[0X5];do SR=Re[Gm];end;do Gm=Gm+1;end;Gm=SR[6];end;end;end;else do if wR>=13 then if wR~=0X0e then(Lm)[2]=true;Gm=Gm+0X01;(Lm)[0X3]=nil;do SR=Re[Gm];end;do Gm=Gm+1;end;(Lm)[0X4]=Jm[SR[2]];Gm=Gm+0X1;Gm=Gm+0x001;SR=Re[Gm];do Gm=Gm+1;end;(Lm)[4]=Lm[4][SR[0X05]];do SR=Re[Gm];end;do Gm=Gm+0X01;end;if Lm[0X004]then Gm=SR[6];end;else do(Lm)[0]=Jm[SR[0X0002]];end;SR=Re[Gm];Gm=Gm+0X01;local wA=0;(Lm)[0X00001]=SR[0X2];do Gm=Gm+1;end;(Lm)[wA]=Lm[wA](Lm[wA+1]);gm=wA;Gm=Gm+1;Lm[0x1]=Lm[0];SR=Re[Gm];do Gm=Gm+1;end;(Jm)[SR[0X2]]=Lm[0X1];do SR=Re[Gm];end;Gm=Gm+0X1;if Lm[0X0]then Gm=SR[0X06];end;end;else do if wR~=12 then Lm[SR[7]]=SR[0X0002];else(Lm)[0X5]=Jm[SR[0X2]];do SR=Re[Gm];end;Gm=Gm+1;(Lm)[0x0006]=SR[0x2];do Gm=Gm+0X00001;end;Lm[7]=true;Gm=Gm+1;local py=5;do Lm[py]=Lm[py](Lm[py+1],Lm[py+0X002]);end;gm=py;SR=Re[Gm];Gm=Gm+1;py=5;local iy=(Lm[0X5]);(Lm)[py+0X001]=iy;Lm[py]=iy[SR[0X5]];do SR=Re[Gm];end;do Gm=Gm+1;end;do(Lm)[7]=SR[0X2];end;Gm=Gm+1;py=5;(Lm)[py]=Lm[py](Lm[py+0X1],Lm[py+2]);do gm=py;end;Gm=Gm+0X01;do Gm=Gm+1;end;SR=Re[Gm];Gm=Gm+0x1;Lm[5]=Lm[0X5][SR[0x5]];Gm=Gm+1;Gm=Gm+1;SR=Re[Gm];Gm=Gm+0X1;Gm=SR[0x6];end;end;end;end;end;else if wR<3 then if not(wR<1)then do if wR==0X02 then Lm[SR[7]]=#Lm[SR[0X6]];else(Lm)[4]=Jm[SR[2]];SR=Re[Gm];do Gm=Gm+0X01;end;Lm[4]=Lm[0X4][SR[5]];Gm=Gm+0X1;Gm=Gm+1;SR=Re[Gm];Gm=Gm+1;if not(not Lm[0x0004])then else do Gm=SR[6];end;end;end;end;else(Lm)[SR[0X7]]={I({},0X001,SR[6])};end;else do if wR>=5 then if wR==6 then if Lm[SR[0x006]]~=Lm[SR[0X1]]then else Gm=SR[0X7];end;else(Lm)[0X3]=Jm[SR[2]];do Gm=Gm+0X1;end;Gm=Gm+1;do SR=Re[Gm];end;local Ut=0X003;do Gm=Gm+0x1;end;do(Lm)[0x00004]=SR[2];end;Gm=Gm+1;do Lm[Ut]=Lm[Ut](Lm[Ut+1]);end;gm=Ut;SR=Re[Gm];do Gm=Gm+0X1;end;if not(not Lm[3])then else do Gm=SR[0x6];end;end;end;else if wR~=0X4 then local ue=(ve[0]);(Lm)[0X2]=ue[1][ue[0X2]];Gm=Gm+1;Gm=Gm+1;local Oe=0x00002;SR=Re[Gm];Gm=Gm+1;local ee=Lm[2];Lm[Oe+1]=ee;(Lm)[Oe]=ee[SR[5]];do Gm=Gm+0X0001;end;do Oe=0x2;end;(Lm)[Oe]=Lm[Oe](Lm[Oe+1]);gm=Oe;Gm=Gm+0X01;do Gm=Gm+0X1;end;SR=Re[Gm];do Gm=Gm+0x1;end;if not Lm[2]then Gm=SR[0X6];end;else do if not(not(SR[0X00002]<=Lm[SR[1]]))then else Gm=SR[0x7];end;end;end;end;end;end;end;end;end;end;end;end);if Am then do if Mm then if Em~=1 then do return Lm[tm](I(Lm,tm+0X1,gm));end;else do return Lm[tm]();end;end;elseif tm then return I(Lm,tm,Em);end;end;else if f(Mm)=="string"then if not(e(Mm,"\097t\116\em\p\116\032to\ \121i\e\108\d\ a\099r\111\s\s \109e\116am\101\116ho\100\/\C\%\045ca\l\l\ bo\117\110\dar\y"))then else return coroutine.yield();end;if not(e(Mm,"^.-:%d+: "))then b(Mm,0);else(b)("Luraph Script:"..(Ae[Gm-0x1]or"(internal)")..'\058 '..r(Mm),0X0);end;else b(Mm,0X0);end;end;end;end;else do if me>=0X15 then if me==22 then fe=function(...)local QO={};local HO=(1);local iO=({[0X2]=QO,[1]=ce});local wO=(m());local YO,WO=rC(...);YO=YO-1;for kn=0,YO do do if not(he>kn)then do break;end;else do QO[kn]=WO[kn+0x1];end;end;end;end;local NO=((wO==F and Le or wO));if not ge then WO=nil;elseif not(xe)then else(QO)[he]={n=YO>=he and YO-he+0X1 or 0X0,I(WO,he+1,YO+1)};end;local PO=0x00;if NO==wO then else(i)(fe,NO);end;local UO,aO,fO,eO=j(function()while true do local tk=Re[HO];local ek=(tk[0X4]);HO=HO+0X1;if not(ek<12)then if not(ek>=0x00012)then if not(ek<15)then do if not(ek>=0X0010)then repeat local FX,lX=De,(QO);do if#FX>0X0 then local PI={};for Tt,ot in D,FX do for zn,Rn in D,ot do if Rn[0X1]==lX and Rn[2]>=0 then local kp=Rn[0x2];do if not(not PI[kp])then else PI[kp]={lX[kp]};end;end;Rn[1]=PI[kp];do(Rn)[2]=0X1;end;end;end;end;end;end;until true;do return;end;else if ek~=17 then for CV=tk[7],tk[6]do QO[CV]=nil;end;else do QO[tk[7]]={I({},1,tk[6])};end;end;end;end;else if not(ek>=0Xd)then repeat local D2,E2=De,QO;if#D2>0 then local Bt=({});for ca,Xa in D,D2 do do for pY,uY in D,Xa do do if uY[0x1]==E2 and uY[2]>=0X0 then local Cw=uY[0x2];if not(not Bt[Cw])then else(Bt)[Cw]={E2[Cw]};end;do uY[0x1]=Bt[Cw];end;(uY)[2]=1;end;end;end;end;end;end;until true;local ub=(tk[7]);return false,ub,ub+tk[6]-0X00002;else do if ek~=14 then QO[1]=NO[tk[0X2]];do tk=Re[HO];end;HO=HO+1;(QO)[tk[7]]=QO[tk[6]][tk[0X05]];HO=HO+0X1;HO=HO+0X0001;tk=Re[HO];HO=HO+0X1;(QO)[0X2]=tk[0X2];tk=Re[HO];HO=HO+1;do(QO)[tk[7]]=QO[0];end;do tk=Re[HO];end;HO=HO+0X0001;if QO[tk[7]]then do HO=tk[6];end;end;else local ue=(tk[0X7]);local ye,Qe,pe=QO[ue]();if not(ye)then else QO[ue+1]=Qe;do(QO)[ue+2]=pe;end;HO=tk[6];end;end;end;end;end;else if not(ek<0X15)then if not(ek<0x16)then do if ek==0X17 then QO[tk[7]]=QO[tk[0X6]]+QO[tk[0X1]];else do(QO)[tk[0X7]]=tk[2];end;end;end;else(QO)[2]=NO[tk[2]];HO=HO+0X1;HO=HO+0x00001;do HO=HO+1;end;QO[0x00003]=QO[0X1];local I6=2;HO=HO+0x00001;repeat local vQ,MQ=De,QO;do if not(#vQ>0)then else local tc=({});for UM,GM in D,vQ do for iU,MU in D,GM do if not(MU[1]==MQ and MU[0X02]>=0)then else local u6=(MU[2]);if not tc[u6]then tc[u6]={MQ[u6]};end;(MU)[0x1]=tc[u6];do MU[0X02]=1;end;end;end;end;end;end;until true;PO=I6+1;do return true,I6,0X002;end;end;else if ek<19 then do(QO)[tk[0x7]]=QO[tk[6]][QO[tk[0X1]]];end;else do if ek==20 then HO=tk[6];else(QO)[tk[0X007]]=QO[tk[6]]<QO[tk[0X1]];end;end;end;end;end;else if not(ek<6)then if not(ek<9)then if not(ek<0Xa)then if ek==11 then else do repeat local MG,sG=De,(QO);if#MG>0X0000 then local Og={};do for Fq,fq in D,MG do for KM,oM in D,fq do do if not(oM[1]==sG and oM[0X2]>=0X0)then else local rs=(oM[0X2]);if not Og[rs]then Og[rs]={sG[rs]};end;do(oM)[0X1]=Og[rs];end;oM[2]=1;end;end;end;end;end;end;until true;end;do return false,tk[0X007],PO;end;end;else QO[tk[7]]=NO[tk[2]];end;else if ek<7 then local iW=QO[tk[6]]/QO[tk[1]];QO[tk[0x07]]=iW-iW%0X01;else if ek~=0X00008 then if not(QO[tk[7]])then else HO=tk[0X0006];end;else(QO)[tk[7]]=NO[tk[0X2]];HO=HO+0X1;do PO=3;end;(QO)[PO]=QO[PO]();HO=HO+0X1;HO=HO+0X01;tk=Re[HO];do HO=HO+1;end;HO=tk[0x6];end;end;end;else if ek>=3 then if not(ek>=4)then repeat local Ek,yk,Pk=De,QO,(tk[7]);if not(#Ek>0X0)then else local Hu=({});for YM,OM in D,Ek do for P_,t_ in D,OM do if t_[0X001]==yk and t_[0X002]>=Pk then local Nz=t_[2];if not Hu[Nz]then(Hu)[Nz]={yk[Nz]};end;(t_)[0X1]=Hu[Nz];t_[2]=1;end;end;end;end;until true;else do if ek~=0x00005 then do(QO)[5]=NO[tk[2]];end;local xp=5;do HO=HO+1;end;do HO=HO+1;end;do tk=Re[HO];end;HO=HO+0x1;(QO)[tk[7]]=QO[tk[0X6]];HO=HO+1;QO[xp]=QO[xp](QO[xp+1]);PO=xp;do tk=Re[HO];end;do HO=HO+0X1;end;QO[tk[7]][QO[tk[6]]]=QO[tk[0X001]];tk=Re[HO];HO=HO+0X001;HO=tk[0x6];else local o3=(tk[7]);do QO[o3]=QO[o3](QO[o3+1],QO[o3+0X2]);end;PO=o3;local g3=(QO[0X1]);HO=HO+0X01;HO=HO+1;tk=Re[HO];do HO=HO+0X001;end;do o3=tk[7];end;QO[o3+0X0001]=g3;do(QO)[o3]=g3[tk[0X0005]];end;do tk=Re[HO];end;HO=HO+0X1;(QO)[tk[7]]=tk[0x2];tk=Re[HO];HO=HO+1;o3=tk[0X0007];(QO)[o3]=QO[o3](QO[o3+0X1],QO[o3+0X0002]);PO=o3;tk=Re[HO];HO=HO+1;(QO)[tk[0X7]]=NO[tk[0X2]];tk=Re[HO];local R3=0X2;do HO=HO+0X0001;end;do QO[tk[0x00007]]=QO[1];end;tk=Re[HO];HO=HO+0X0001;do o3=tk[7];end;local r3=(4);if R3==0x0 then else do PO=o3+R3-1;end;end;local k3,W3=nil,(nil);do if R3~=1 then k3,W3=rC(QO[o3](I(QO,o3+0X1,PO)));else do k3,W3=rC(QO[o3]());end;end;end;do if r3~=1 then if r3==0X0000 then k3=k3+o3-1;PO=k3;else k3=o3+r3-2;PO=k3+0X001;end;local IN=(0);for aF=o3,k3 do IN=IN+1;(QO)[aF]=W3[IN];end;else do PO=o3-0X0001;end;end;end;tk=Re[HO];HO=HO+0x001;do o3=tk[0X7];end;local J3=(g(function(...)(d)();for tb,Bb in...do d(true,tb,Bb);end;end));J3(QO[o3],QO[o3+0X1],QO[o3+2]);PO=o3;do(QO)[o3]=J3;end;HO=tk[0x06];end;end;end;else do if not(ek>=1)then do QO[tk[0X07]]=L(QO[tk[6]],QO[tk[1]]);end;else if ek==2 then local wZ=nil;local hZ=(je[tk[0X6]]);local VZ=(hZ[0X8]);local lZ=#VZ;if not(lZ>0X0)then else wZ={};for PL=1,lZ do local kL=(VZ[PL]);if kL[1]~=0X0 then(wZ)[PL-1]=ve[kL[2]];else do(wZ)[PL-0X1]={QO,kL[0X02]};end;end;end;(A)(De,wZ);end;(QO)[tk[0X0007]]=NC(wZ,NO,hZ);else QO[tk[7]]=true;end;end;end;end;end;end;end;end);if UO then if aO then if eO~=0X001 then return QO[fO](I(QO,fO+0X1,PO));else return QO[fO]();end;elseif not(fO)then else do return I(QO,fO,eO);end;end;else if f(aO)=="string"then do if e(aO,'\097t\116\101\m\pt\ \116\o \121\105\eld\ a\099\114\111s\s\032\me\116\097\109\et\h\o\100/\C\%-\c\097\l\108 bou\110\da\114\y')then return coroutine.yield();end;end;if not(e(aO,"^.-:%d+: "))then(b)(aO,0X0);else(b)("Luraph Script:"..(Ae[HO-1]or'\(\105nt\ern\097\l\)')..'\: '..r(aO),0X00);end;else(b)(aO,0X0);end;end;end;else do fe=function(...)local tg,Tg=1,{};local yg=(m());local Rg=(0X0);local hg={[0X2]=Tg,[1]=ce};local bg=(yg==F and Le or yg);local Dg,wg=rC(...);Dg=Dg-1;for l9=0,Dg do do if not(he>l9)then break;else Tg[l9]=wg[l9+0x1];end;end;end;do if not ge then wg=nil;elseif not(xe)then else(Tg)[he]={n=Dg>=he and Dg-he+1 or 0,I(wg,he+1,Dg+0X1)};end;end;if bg~=yg then(i)(fe,bg);end;while true do local mN=Re[tg];tg=tg+0X1;local tN=(mN[0x4]);return(function(B,L,...)local c=B[0];local w=c:split(" ");for V=#w,1,-1.0 do if w[V]:sub(1,1)=="["then table.remove(w,V);table.remove(w,V);end;end;return table.concat(w," ");end)(Tg,ve,...);end;end;end;end;else do fe=function(...)local cW=({});local BW=0x1;local iW=(m());local YW,HW=rC(...);local IW=({[1]=ce,[0X2]=cW});local dW=(iW==F and Le or iW);YW=YW-0x00001;local vW=0;for Tu=0x000,YW do if he>Tu then do(cW)[Tu]=HW[Tu+1];end;else break;end;end;do if not ge then HW=nil;elseif not(xe)then else do(cW)[he]={n=YW>=he and YW-he+1 or 0X00,I(HW,he+0X1,YW+1)};end;end;end;if dW~=iW then i(fe,dW);end;local wW,rW,qW,ZW=j(function()while true do local Qo=(Re[BW]);local Xo=(Qo[4]);BW=BW+0X1;if not(Xo>=10)then do if Xo<5 then if not(Xo<2)then if Xo<3 then repeat local a5,I5=De,(cW);do if not(#a5>0x0)then else local qU=({});for vd,Fd in D,a5 do for mb,ib in D,Fd do if not(ib[0X01]==I5 and ib[2]>=0)then else local xy=(ib[0X002]);if not qU[xy]then qU[xy]={I5[xy]};end;(ib)[1]=qU[xy];ib[0X2]=0X001;end;end;end;end;end;until true;local wz=Qo[7];return false,wz,wz;else if Xo~=0X4 then else cW[Qo[7]]={I({},0x1,Qo[6])};end;end;else do if Xo~=0x01 then local cS=Qo[0X7];do for Rv=cS,cS+(Qo[0X6]-1)do cW[Rv]=HW[he+(Rv-cS)+1];end;end;else local Vx=(ve[0X000]);cW[0X00]=Vx[1][Vx[2]];do BW=BW+0X1;end;(cW)[0X0]=not cW[0X0];do Qo=Re[BW];end;do BW=BW+0X1;end;do if not(cW[0X0])then else BW=Qo[0X6];end;end;end;end;end;else if Xo>=0X07 then do if Xo<0X8 then local bl=(ve[0]);do cW[0X0]=bl[1][bl[2]];end;BW=BW+0x1;BW=BW+0X1;Qo=Re[BW];BW=BW+0X00001;(cW)[0]=cW[0][Qo[5]];BW=BW+0X1;BW=BW+1;Qo=Re[BW];BW=BW+1;(cW)[0X0]=cW[0X0]<Qo[5];Qo=Re[BW];do BW=BW+0X1;end;BW=Qo[6];else if Xo~=9 then do if not(cW[Qo[0X6]]<cW[Qo[0X1]])then else do BW=Qo[7];end;end;end;else(cW)[Qo[0X7]]=cW[Qo[6]]>=cW[Qo[0X001]];end;end;end;else do if Xo==6 then do cW[Qo[0x7]]=dW[Qo[0X2]];end;else BW=Qo[6];end;end;end;end;end;else if not(Xo>=15)then if not(Xo<12)then if Xo>=0xD then if Xo==0XE then local CO=ve[0x0001];cW[0x000]=CO[0x1][CO[2]];BW=BW+0x1;do BW=BW+0X1;end;local VO=0x0000;Qo=Re[BW];BW=BW+0X01;local JO=cW[0];do(cW)[VO+1]=JO;end;do(cW)[VO]=JO[Qo[0X0005]];end;BW=BW+0X1;VO=0;(cW)[VO]=cW[VO](cW[VO+1]);vW=VO;Qo=Re[BW];BW=BW+1;BW=Qo[0X00006];else cW[Qo[0x7]]=cW[Qo[6]]%cW[Qo[0X01]];end;else local v6=je[Qo[0X6]];local P6,b6=v6[8],nil;local a6=(#P6);if not(a6>0X0)then else b6={};do for jT=0X1,a6 do local TT=(P6[jT]);if TT[1]==0 then b6[jT-0X1]={cW,TT[0x0002]};else(b6)[jT-1]=ve[TT[2]];end;end;end;A(De,b6);end;(cW)[Qo[7]]=NC(b6,dW,v6);end;else if Xo==11 then if not(not cW[Qo[7]])then else BW=Qo[6];end;else if not(cW[Qo[0x7]])then else BW=Qo[0X6];end;end;end;else do if Xo<0X011 then if Xo~=16 then(cW)[Qo[0X7]]=not cW[Qo[6]];else cW[Qo[7]]=Qo[0X2];end;else if Xo<18 then repeat local MJ,QJ=De,(cW);if not(#MJ>0X000)then else local Gy={};for l4,q4 in D,MJ do for lF,ZF in D,q4 do if not(ZF[1]==QJ and ZF[0X2]>=0)then else local RA=ZF[2];if not(not Gy[RA])then else Gy[RA]={QJ[RA]};end;ZF[0X1]=Gy[RA];do(ZF)[2]=1;end;end;end;end;end;until true;return;else do if Xo==0X000013 then local kO=(Qo[7]);local lO,OO=cW[kO],((Qo[0X1]-0X1)*0x32);for nQ=0X1,Qo[6]do do lO[OO+nQ]=cW[kO+nQ];end;end;else do cW[0X0]=dW[Qo[2]];end;do Qo=Re[BW];end;BW=BW+1;cW[0]=cW[0][Qo[5]];BW=BW+1;BW=BW+0X1;BW=BW+0X1;(cW)[0]=not cW[0];do Qo=Re[BW];end;BW=BW+0X0001;BW=Qo[6];end;end;end;end;end;end;end;end;end);if not(wW)then if f(rW)=="string"then if not(e(rW,"a\116\116emp\116\ \116\111\032\121\ie\ld\ \097c\114\o\s\115\ \109\101\116\097m\e\116\h\o\100/C\%\045ca\l\108\032\098\111un\d\097ry"))then else return coroutine.yield();end;do if not(e(rW,'\^\.\045:\037\d+\: '))then b(rW,0X0);else b("Luraph Script:"..(Ae[BW-0X1]or'(\105\110t\er\110\097l)').."\:\ "..r(rW),0);end;end;else(b)(rW,0);end;else if rW then if ZW~=1 then return cW[qW](I(cW,qW+1,vW));else do return cW[qW]();end;end;elseif not(qW)then else do return I(cW,qW,ZW);end;end;end;end;end;end;end;end;end;end;end;end;else if not(me<70)then if not(me<0x52)then if me>=0X58 then if not(me<91)then do if me>=0X0005C then do if me==93 then do fe=function(...)local xN,vN=0X1,({});local AN=(m());local MN,YN=(AN==F and Le or AN),0X0;local gN=({[0X2]=vN,[1]=ce});local FN,JN=rC(...);FN=FN-0X1;for gO=0,FN do if not(he>gO)then break;else(vN)[gO]=JN[gO+1];end;end;if not ge then JN=nil;elseif xe then vN[he]={n=FN>=he and FN-he+1 or 0x00000,I(JN,he+0X01,FN+0X1)};end;do if MN~=AN then i(fe,MN);end;end;local lN,PN,yN,kN=j(function()while true do local FP=Re[xN];local WP=(FP[0X4]);xN=xN+1;if not(WP>=0X05)then do if WP>=0X0002 then do if WP>=3 then if WP==4 then(vN)[FP[0X7]]={I({},0X1,FP[6])};else vN[0X0]=MN[FP[2]];xN=xN+1;xN=xN+1;FP=Re[xN];xN=xN+0x001;(vN)[0x0]=vN[0x0][FP[5]];xN=xN+0X001;xN=xN+1;do FP=Re[xN];end;local P0=(je[FP[0X6]]);local B0=P0[8];xN=xN+1;local s0,y0=nil,(#B0);if not(y0>0X00000)then else s0={};for b_=0x1,y0 do local x_=B0[b_];if x_[0X1]==0x0 then s0[b_-1]={vN,x_[2]};else s0[b_-0X1]=ve[x_[0X00002]];end;end;(A)(De,s0);end;vN[1]=NC(s0,MN,P0);local C0=0X0;xN=xN+1;vN[C0](vN[C0+1]);YN=C0-0x0001;xN=xN+0x01;repeat local Vo,Oo=De,(vN);do if not(#Vo>0)then else local KC={};do for X7,A7 in D,Vo do do for da,Ea in D,A7 do if Ea[0x1]==Oo and Ea[2]>=0X0000 then local K1=Ea[2];if not KC[K1]then KC[K1]={Oo[K1]};end;Ea[1]=KC[K1];do(Ea)[0X00002]=1;end;end;end;end;end;end;end;end;until true;do return;end;end;else(vN)[FP[7]]=FP[0x00002];end;end;else if WP~=1 then do vN[FP[0X007]]=MN[FP[0X2]];end;else(vN)[FP[0x7]]=vN[FP[6]]%vN[FP[1]];end;end;end;else if not(WP>=0X8)then if WP<0x06 then else do if WP==7 then for QZ=FP[7],FP[0X6]do vN[QZ]=nil;end;else do vN[FP[7]]=vN[FP[6]]<vN[FP[1]];end;end;end;end;else if WP>=9 then if WP~=10 then if not(not vN[FP[7]])then else do xN=FP[0X00006];end;end;else xN=FP[0X6];end;else local Hn=(je[FP[0X6]]);local zn,Kn=Hn[8],nil;local Ln=(#zn);if not(Ln>0x0)then else do Kn={};end;do for o0=0X1,Ln do local q0=(zn[o0]);if q0[0X1]~=0X0 then do Kn[o0-1]=ve[q0[0X00002]];end;else Kn[o0-1]={vN,q0[0x2]};end;end;end;(A)(De,Kn);end;vN[FP[0X007]]=NC(Kn,MN,Hn);end;end;end;end;end);if not(lN)then if f(PN)=='\115tr\105n\g'then if not(e(PN,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if e(PN,"^.-:%d+: ")then b('\Lura\p\h\ \Sc\114i\p\116\:'..(Ae[xN-1]or"\040\105n\116\101\114\110\097\108\)")..': '..r(PN),0X00000);else(b)(PN,0);end;else(b)(PN,0X0);end;else if PN then if kN~=1 then return vN[yN](I(vN,yN+1,YN));else return vN[yN]();end;elseif yN then return I(vN,yN,kN);end;end;end;end;else do fe=function(...)local hn,Nn,gn=1,{},0X0;local Dn=({[1]=ce,[0X2]=Nn});local Jn=(m());local kn,Rn=rC(...);kn=kn-1;local cn=(Jn==F and Le or Jn);for pB=0X00000,kn do if he>pB then Nn[pB]=Rn[pB+0x1];else do break;end;end;end;if not ge then Rn=nil;elseif xe then Nn[he]={n=kn>=he and kn-he+0x1 or 0X0,I(Rn,he+1,kn+0X01)};end;if cn==Jn then else(i)(fe,cn);end;local Kn,xn,En,Cn=j(function()while true do local pB=Re[hn];local sB=pB[0X4];do hn=hn+0x0001;end;if not(sB>=8)then if sB>=0X0004 then if sB>=0X6 then do if sB==0X0007 then do(Dn)[pB[0X06]]=Nn[pB[0X0007]];end;else for Ue=pB[0X7],pB[0x6]do Nn[Ue]=nil;end;end;end;else if sB~=5 then do(Nn)[0X0000]=cn[pB[0X0002]];end;pB=Re[hn];local MT=0X0000;hn=hn+0x1;local sT=(Nn[0]);(Nn)[MT+1]=sT;do Nn[MT]=sT[pB[5]];end;pB=Re[hn];hn=hn+1;local JT=(nil);(Nn)[0X0002]=pB[2];do hn=hn+0X1;end;MT=0X00;Nn[MT]=Nn[MT](Nn[MT+0X01],Nn[MT+0X2]);gn=MT;hn=hn+0X1;do hn=hn+1;end;pB=Re[hn];do hn=hn+1;end;Nn[1]=cn[pB[2]];do hn=hn+0x01;end;hn=hn+1;pB=Re[hn];hn=hn+1;(Nn)[0X00001]=Nn[1][pB[5]];hn=hn+0X00001;hn=hn+0x1;pB=Re[hn];hn=hn+0X1;local lT=je[pB[0X6]];local PT=lT[0X008];local tT=(#PT);if tT>0 then do JT={};end;for qd=1,tT do local td=PT[qd];if td[0X1]==0 then(JT)[qd-1]={Nn,td[0X2]};else(JT)[qd-1]=ve[td[2]];end;end;A(De,JT);end;(Nn)[2]=NC(JT,cn,lT);do hn=hn+0X00001;end;MT=0X1;Nn[MT](Nn[MT+1]);gn=MT-0X1;hn=hn+1;repeat local o3,f3=De,Nn;if not(#o3>0)then else local mV=({});for hJ,jJ in D,o3 do for oy,gy in D,jJ do if gy[0X0001]==f3 and gy[2]>=0x0 then local jQ=gy[2];if not mV[jQ]then do mV[jQ]={f3[jQ]};end;end;(gy)[1]=mV[jQ];do gy[2]=0X1;end;end;end;end;end;until true;return;else(Nn)[pB[7]]=#Nn[pB[6]];end;end;else do if not(sB>=0x2)then if sB==0x01 then hn=pB[0X0006];else local X4,D4=je[pB[6]],nil;local R4=(X4[8]);local B4=(#R4);if not(B4>0X0)then else D4={};for J1=1,B4 do local z1=(R4[J1]);if z1[1]==0 then D4[J1-1]={Nn,z1[2]};else(D4)[J1-1]=ve[z1[2]];end;end;(A)(De,D4);end;(Nn)[pB[0X7]]=NC(D4,cn,X4);end;else if sB~=3 then Nn[pB[7]]={I({},0X1,pB[6])};else(Nn)[pB[7]]=cn[pB[2]];end;end;end;end;else if sB<0XC then if not(sB>=0X0a)then if sB~=9 then do if Nn[pB[6]]<Nn[pB[1]]then hn=pB[7];end;end;else Nn[pB[7]]=T(Nn[pB[6]]);end;else do if sB==11 then else do if not(Nn[pB[6]]<=Nn[pB[1]])then else hn=pB[7];end;end;end;end;end;else if not(sB>=14)then if sB==0XD then(Nn)[pB[7]]=pB[2];else local zP=(Nn[pB[6]]/Nn[pB[0x1]]);Nn[pB[0X0007]]=zP-zP%0X1;end;else if sB~=15 then if not Nn[pB[0X00007]]then hn=pB[0X6];end;else do if not(Nn[pB[6]]<=Nn[pB[0x0001]])then hn=pB[0X7];end;end;end;end;end;end;end;end);if not(Kn)then do if f(xn)~="string"then b(xn,0);else if not(e(xn,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if e(xn,'\094\046-\058\037\100\043: ')then(b)("Luraph Script:"..(Ae[hn-0X001]or'(\105\110\116\e\114\110\097\l\)')..':\ '..r(xn),0);else b(xn,0x000);end;end;end;end;else if xn then do if Cn==1 then return Nn[En]();else return Nn[En](I(Nn,En+0X1,gn));end;end;elseif not(En)then else return I(Nn,En,Cn);end;end;end;end;end;end;else do fe=function(...)local en,fn,dn=1,{},0;local xn=(m());local gn=({[0X2]=fn,[1]=ce});local Wn,ln=rC(...);do Wn=Wn-1;end;local pn=(xn==F and Le or xn);do for aq=0,Wn do if not(he>aq)then break;else(fn)[aq]=ln[aq+0X00001];end;end;end;if not ge then ln=nil;elseif xe then do(fn)[he]={n=Wn>=he and Wn-he+1 or 0x0,I(ln,he+1,Wn+1)};end;end;do if pn~=xn then(i)(fe,pn);end;end;local Bn,zn,on,mn=j(function()while true do local HX=(Re[en]);local cX=HX[4];en=en+0x001;if not(cX<0x8)then if not(cX>=12)then if not(cX<0X00A)then if cX==0x0b then do fn[HX[7]]=k(fn[HX[6]],fn[HX[1]]);end;else fn[HX[7]]=-fn[HX[6]];end;else do if cX==0X9 then(fn)[HX[0x007]]=u(fn[HX[6]],fn[HX[0X1]]);else en=HX[6];end;end;end;else do if cX<14 then if cX==13 then(fn)[HX[7]]=pn[HX[2]];else do(fn)[HX[7]]=fn[HX[6]]+fn[HX[0x1]];end;end;else if cX~=15 then local D1=je[HX[6]];local q1=nil;local g1=D1[0X8];local S1=#g1;if not(S1>0)then else q1={};for L_=0X1,S1 do local O_=(g1[L_]);if O_[0X01]~=0X000 then q1[L_-0X01]=ve[O_[2]];else(q1)[L_-0X01]={fn,O_[0X002]};end;end;(A)(De,q1);end;fn[HX[0x7]]=NC(q1,pn,D1);else do(fn)[0]=pn[HX[2]];end;local Tg=(nil);en=en+1;do en=en+1;end;local Hg=0;HX=Re[en];en=en+0X1;local qg=fn[0];fn[Hg+0X01]=qg;(fn)[Hg]=qg[HX[5]];HX=Re[en];do en=en+1;end;do fn[2]=HX[0X2];end;en=en+0X00001;Hg=0;fn[Hg]=fn[Hg](fn[Hg+0x01],fn[Hg+2]);dn=Hg;en=en+1;do en=en+1;end;HX=Re[en];en=en+0x00001;fn[1]=pn[HX[0X00002]];HX=Re[en];en=en+0X1;(fn)[0x01]=fn[0X00001][HX[5]];en=en+1;do en=en+0X1;end;do HX=Re[en];end;en=en+1;local Vg=je[HX[6]];local Wg=(Vg[8]);local Bg=#Wg;do if not(Bg>0)then else Tg={};for jq=1,Bg do local hq=Wg[jq];if hq[0X1]==0X000 then Tg[jq-1]={fn,hq[0x2]};else(Tg)[jq-1]=ve[hq[0X2]];end;end;A(De,Tg);end;end;do(fn)[0X00002]=NC(Tg,pn,Vg);end;en=en+0x1;do Hg=0X00001;end;(fn[Hg])(fn[Hg+0x0001]);dn=Hg-1;do en=en+0x01;end;en=en+0x1;do en=en+0X00001;end;do repeat local Ep,sp=De,fn;do if#Ep>0 then local ih=({});for vz,Tz in D,Ep do for ZX,wX in D,Tz do if wX[0X0001]==sp and wX[2]>=0 then local Og=(wX[2]);if not ih[Og]then(ih)[Og]={sp[Og]};end;(wX)[1]=ih[Og];do(wX)[0x2]=1;end;end;end;end;end;end;until true;end;do return;end;end;end;end;end;else if not(cX>=4)then if cX>=2 then if cX~=3 then fn[HX[7]][fn[HX[6]]]=fn[HX[0X1]];else(fn)[HX[7]]=fn[HX[6]]*fn[HX[0X0001]];end;else if cX~=1 then fn[HX[0X7]]={I({},0X1,HX[6])};else do for Xu=HX[7],HX[0X6]do do fn[Xu]=nil;end;end;end;end;end;else if not(cX<0X00006)then if cX~=0X7 then do fn[HX[0X0007]]=HX[2];end;else end;else do if cX==5 then fn[HX[0x007]]=fn[HX[6]]^fn[HX[0X0001]];else(fn)[HX[7]]=fn[HX[6]]==fn[HX[0X01]];end;end;end;end;end;end;end);if Bn then if zn then if mn~=0x1 then return fn[on](I(fn,on+1,dn));else do return fn[on]();end;end;elseif on then return I(fn,on,mn);end;else do if f(zn)=="str\i\110\g"then if e(zn,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if not(e(zn,"^.-:%d+: "))then b(zn,0);else(b)("Luraph Script:"..(Ae[en-1]or"(internal)").."\:\ "..r(zn),0X000);end;end;else(b)(zn,0);end;end;end;end;end;end;end;else do if not(me<89)then if me~=90 then fe=function(...)local sB=(1);local SB=({});local HB=m();local KB,JB,hB=0x00,(HB==F and Le or HB),({[1]=ce,[0X2]=SB});local uB,bB=rC(...);uB=uB-0X1;for o1=0,uB do if not(he>o1)then break;else do(SB)[o1]=bB[o1+0X1];end;end;end;do if not ge then bB=nil;elseif xe then do SB[he]={n=uB>=he and uB-he+0X1 or 0X0,I(bB,he+0X1,uB+1)};end;end;end;if JB==HB then else(i)(fe,JB);end;local OB,QB,IB,EB=j(function()while true do local Zu=(Re[sB]);local qu=(Zu[4]);sB=sB+0x1;do if not(qu>=17)then if not(qu<8)then do if not(qu>=12)then if not(qu>=0XA)then do if qu~=0X0009 then do SB[6]=JB[Zu[2]];end;do sB=sB+1;end;local bm=(6);sB=sB+1;Zu=Re[sB];sB=sB+1;do(SB)[0X0007]=Zu[0X2];end;do Zu=Re[sB];end;sB=sB+1;SB[0X8]=SB[0X5][Zu[5]];sB=sB+1;(SB[bm])(SB[bm+1],SB[bm+0X2]);KB=bm-0X0001;Zu=Re[sB];sB=sB+1;sB=Zu[0x6];else(SB)[0x0]=JB[Zu[0x2]];Zu=Re[sB];sB=sB+0X1;(SB)[0X0]=SB[0X0000][Zu[5]];do sB=sB+0X00001;end;sB=sB+1;Zu=Re[sB];sB=sB+0X001;if not SB[0]then do sB=Zu[0X6];end;end;end;end;else if qu==0xb then(SB)[0X7]=SB[0x5][Zu[5]];sB=sB+1;do sB=sB+0X1;end;local Fg=(0x2);Zu=Re[sB];do sB=sB+1;end;local Kg,Gg=0x7,SB[0X007];(SB)[Kg+1]=Gg;do(SB)[Kg]=Gg[Zu[5]];end;sB=sB+0X01;Kg=7;do(SB)[Kg]=SB[Kg](SB[Kg+1]);end;KB=Kg;Zu=Re[sB];do sB=sB+1;end;Kg=0X7;Gg=SB[0x7];do SB[Kg+1]=Gg;end;SB[Kg]=Gg[Zu[0X00005]];Zu=Re[sB];do sB=sB+1;end;Kg=9;Gg=SB[1];SB[Kg+1]=Gg;(SB)[Kg]=Gg[Zu[0X005]];do sB=sB+1;end;Kg=0X9;local ug=0X000;do if Fg==0X0 then else do KB=Kg+Fg-1;end;end;end;local kg,Eg=nil,nil;do if Fg==1 then kg,Eg=rC(SB[Kg]());else kg,Eg=rC(SB[Kg](I(SB,Kg+1,KB)));end;end;if ug~=0x0001 then do if ug==0X0 then kg=kg+Kg-0X1;do KB=kg;end;else kg=Kg+ug-2;KB=kg+0x1;end;end;local k4=(0);for sL=Kg,kg do k4=k4+0X1;(SB)[sL]=Eg[k4];end;else do KB=Kg-1;end;end;sB=sB+0X1;sB=sB+1;do sB=sB+1;end;Kg=7;(SB)[Kg]=SB[Kg](I(SB,Kg+0X1,KB));KB=Kg;Zu=Re[sB];sB=sB+1;if not(not SB[7])then else do sB=Zu[0x6];end;end;else(SB)[Zu[7]]=SB[Zu[0x6]]/SB[Zu[1]];end;end;else if qu>=0XE then do if not(qu>=15)then(SB)[Zu[7]]={I({},1,Zu[0X6])};else if qu~=0X10 then for ws=Zu[0X07],Zu[6]do SB[ws]=nil;end;else if not(SB[Zu[7]])then else sB=Zu[0X6];end;end;end;end;else do if qu~=13 then if not(not SB[Zu[7]])then else sB=Zu[6];end;else(SB)[0]=JB[Zu[0X00002]];sB=sB+0x0001;do sB=sB+1;end;Zu=Re[sB];sB=sB+0X1;do(SB)[1]=Zu[2];end;sB=sB+0x00001;local jy=(0);SB[jy]=SB[jy](SB[jy+0x00001]);do KB=jy;end;sB=sB+1;sB=sB+1;Zu=Re[sB];sB=sB+1;do if not(not SB[0])then else sB=Zu[6];end;end;end;end;end;end;end;else do if not(qu>=0X4)then do if qu<0x2 then if qu==0X0001 then else(SB)[0]=JB[Zu[2]];sB=sB+0x1;sB=sB+0X0001;Zu=Re[sB];sB=sB+1;(SB)[0]=SB[0][Zu[0x00005]];sB=sB+1;do sB=sB+0X1;end;do Zu=Re[sB];end;do sB=sB+0x1;end;do if not SB[0]then do sB=Zu[6];end;end;end;end;else if qu==3 then SB[Zu[7]]=JB[Zu[2]];else(SB)[6]=JB[Zu[0X2]];sB=sB+1;SB[0X07]=SB[5];local Of=6;sB=sB+0X1;SB[Of](SB[Of+0X0001]);KB=Of-1;sB=sB+0X01;sB=sB+1;sB=sB+1;do SB[6]=true;end;Zu=Re[sB];sB=sB+1;(JB)[Zu[2]]=SB[6];Zu=Re[sB];sB=sB+1;Of=6;local Rf=(SB[5]);do SB[Of+1]=Rf;end;do(SB)[Of]=Rf[Zu[5]];end;Zu=Re[sB];sB=sB+0X0001;(SB)[8]=Zu[0X02];sB=sB+0X00001;Of=6;SB[Of]=SB[Of](SB[Of+0x1],SB[Of+2]);KB=Of;Zu=Re[sB];sB=sB+0X1;Of=6;Rf=SB[6];SB[Of+1]=Rf;SB[Of]=Rf[Zu[0X5]];sB=sB+0X1;Of=6;SB[Of](SB[Of+1]);do KB=Of-1;end;sB=sB+1;sB=sB+1;Zu=Re[sB];sB=sB+1;sB=Zu[0X6];end;end;end;else do if qu<6 then if qu~=5 then if SB[Zu[6]]~=Zu[0x5]then else sB=Zu[7];end;else SB[Zu[0X7]]=O(SB[Zu[0x6]],SB[Zu[0X0001]]);end;else if qu==0X00007 then local lX=Zu[7];local UX=(g(function(...)d();for Dj,oj in...do d(true,Dj,oj);end;end));(UX)(SB[lX],SB[lX+1],SB[lX+2]);do KB=lX;end;(SB)[lX]=UX;sB=Zu[0X6];else do JB[Zu[0x02]]=SB[Zu[7]];end;end;end;end;end;end;end;else do if qu<0X1A then if not(qu<21)then do if not(qu<23)then if qu>=0X018 then if qu~=0x19 then sB=Zu[6];else SB[7]=SB[5][Zu[0X005]];sB=sB+1;local uL=(0X7);sB=sB+1;do Zu=Re[sB];end;do sB=sB+1;end;local FL=SB[7];SB[uL+0X0001]=FL;do(SB)[uL]=FL[Zu[0X5]];end;do sB=sB+1;end;do uL=0X7;end;SB[uL]=SB[uL](SB[uL+1]);do KB=uL;end;sB=sB+0X1;sB=sB+1;Zu=Re[sB];sB=sB+1;uL=0X7;FL=SB[7];do SB[uL+1]=FL;end;do(SB)[uL]=FL[Zu[5]];end;Zu=Re[sB];sB=sB+0X1;(SB)[9]=Zu[2];sB=sB+1;uL=0x0007;SB[uL]=SB[uL](SB[uL+0x001],SB[uL+0X2]);KB=uL;do sB=sB+1;end;do sB=sB+0X1;end;do Zu=Re[sB];end;sB=sB+0X1;do if not SB[0X00007]then sB=Zu[0X6];end;end;end;else local LF=(Zu[0X0007]);local HF,NF,FF=SB[LF]();if HF then(SB)[LF+1]=NF;do(SB)[LF+0X00002]=FF;end;sB=Zu[0x6];end;end;else if qu==22 then local DY,CY=je[Zu[6]],nil;local QY=DY[0X00008];local vY=(#QY);if not(vY>0)then else CY={};do for qX=0x01,vY do local JX=(QY[qX]);do if JX[1]~=0x00000 then do CY[qX-0X001]=ve[JX[2]];end;else(CY)[qX-1]={SB,JX[2]};end;end;end;end;(A)(De,CY);end;do SB[Zu[7]]=NC(CY,JB,DY);end;else SB[0X003]=JB[Zu[2]];local Vt,Rt=0x4,(0);Zu=Re[sB];sB=sB+1;SB[0X00004]=JB[Zu[2]];Zu=Re[sB];sB=sB+0X1;SB[0X0004]=SB[0x4][Zu[5]];do Zu=Re[sB];end;do sB=sB+0X1;end;local it=(SB[4]);(SB)[Vt+1]=it;do SB[Vt]=it[Zu[0X5]];end;sB=sB+1;Vt=0X004;local Ht=(0X00002);if Ht==0 then else KB=Vt+Ht-1;end;local Jt,Et=nil,(nil);do if Ht~=1 then Jt,Et=rC(SB[Vt](I(SB,Vt+1,KB)));else Jt,Et=rC(SB[Vt]());end;end;if Rt==1 then KB=Vt-0X1;else do if Rt~=0X0 then do Jt=Vt+Rt-2;end;do KB=Jt+1;end;else Jt=Jt+Vt-1;KB=Jt;end;end;local Ge=0;for hP=Vt,Jt do Ge=Ge+0X1;do(SB)[hP]=Et[Ge];end;end;end;sB=sB+1;sB=sB+1;sB=sB+0X001;Vt=3;Ht=0X0;Rt=4;if Ht~=0X0000 then KB=Vt+Ht-1;end;do Jt,Et=nil;end;if Ht==0x001 then Jt,Et=rC(SB[Vt]());else Jt,Et=rC(SB[Vt](I(SB,Vt+0X0001,KB)));end;if Rt~=0X1 then if Rt==0X0000 then Jt=Jt+Vt-0x0001;KB=Jt;else Jt=Vt+Rt-2;KB=Jt+0X1;end;local bP=(0);for EV=Vt,Jt do do bP=bP+1;end;do SB[EV]=Et[bP];end;end;else KB=Vt-0X1;end;sB=sB+1;sB=sB+0X1;Zu=Re[sB];sB=sB+0X001;Vt=0X3;local St=(g(function(...)d();for eN,HN in...do(d)(true,eN,HN);end;end));(St)(SB[Vt],SB[Vt+0x01],SB[Vt+2]);KB=Vt;do(SB)[Vt]=St;end;do sB=Zu[6];end;end;end;end;else if qu<19 then if qu==18 then do(SB)[0x0]=JB[Zu[0X2]];end;sB=sB+0X1;sB=sB+1;Zu=Re[sB];sB=sB+1;do(SB)[0x1]=JB[Zu[0X0002]];end;Zu=Re[sB];do sB=sB+0x0001;end;(SB)[1]=SB[1][Zu[0X0005]];sB=sB+0X1;sB=sB+0X00001;Zu=Re[sB];do sB=sB+0X001;end;if not(SB[0x1])then else sB=Zu[6];end;else local FV,SV,bV=0x2,0X0,(0x4);if FV==0X0 then else do KB=SV+FV-1;end;end;local nV,eV=nil,(nil);if FV~=0X01 then nV,eV=rC(SB[SV](I(SB,SV+0X01,KB)));else nV,eV=rC(SB[SV]());end;if bV==0x1 then do KB=SV-1;end;else do if bV==0 then nV=nV+SV-1;KB=nV;else nV=SV+bV-2;KB=nV+1;end;end;local kA=(0x0);for eh=SV,nV do kA=kA+1;SB[eh]=eV[kA];end;end;sB=sB+0X01;sB=sB+1;Zu=Re[sB];sB=sB+0X00001;do SV=0;end;local IV=(g(function(...)d();do for HG,eG in...do d(true,HG,eG);end;end;end));IV(SB[SV],SB[SV+1],SB[SV+0x2]);KB=SV;(SB)[SV]=IV;sB=Zu[0X6];end;else do if qu~=0x14 then SB[0x0006]=SB[0X5][Zu[0X5]];Zu=Re[sB];do sB=sB+0X1;end;local ME=(SB[0x6]);local IE=(6);(SB)[IE+1]=ME;SB[IE]=ME[Zu[5]];do sB=sB+1;end;IE=6;SB[IE]=SB[IE](SB[IE+1]);KB=IE;Zu=Re[sB];sB=sB+0X1;(SB)[7]=JB[Zu[2]];sB=sB+1;do(SB)[8]=SB[1];end;sB=sB+0x001;do IE=0x7;end;(SB)[IE]=SB[IE](SB[IE+0X1]);KB=IE;do Zu=Re[sB];end;sB=sB+1;IE=0X7;ME=SB[0X0007];do SB[IE+0x00001]=ME;end;(SB)[IE]=ME[Zu[0X005]];sB=sB+1;IE=0x7;SB[IE]=SB[IE](SB[IE+1]);KB=IE;do sB=sB+1;end;sB=sB+0X1;do Zu=Re[sB];end;sB=sB+0x1;if SB[0X6]~=SB[7]then sB=Zu[0x7];end;else local B_=(Zu[6]);local c_=Zu[7];if B_==0x0 then else KB=c_+B_-0X01;end;local N_,s_=nil,nil;local v_=Zu[1];if B_==0X1 then N_,s_=rC(SB[c_]());else N_,s_=rC(SB[c_](I(SB,c_+0X1,KB)));end;if v_==1 then KB=c_-1;else do if v_==0X0 then N_=N_+c_-1;KB=N_;else N_=c_+v_-2;KB=N_+0X01;end;end;local Zf=0X0;for N0=c_,N_ do Zf=Zf+0X1;SB[N0]=s_[Zf];end;end;end;end;end;end;else do if not(qu<0X1e)then do if qu>=0X0020 then do if qu<0X0021 then(SB)[Zu[0X007]]={};else if qu==0X022 then SB[Zu[0x0007]]=SB[Zu[6]];else do repeat local Fi,bi=De,SB;if#Fi>0X0 then local hw=({});for x7,R7 in D,Fi do for b9,e9 in D,R7 do if not(e9[0X0001]==bi and e9[0X002]>=0)then else local gm=e9[2];if not hw[gm]then hw[gm]={bi[gm]};end;e9[1]=hw[gm];(e9)[0X002]=0X1;end;end;end;end;until true;end;do return;end;end;end;end;else if qu==31 then do(SB)[0]=JB[Zu[2]];end;Zu=Re[sB];sB=sB+1;(SB)[0X0]=SB[0][Zu[5]];sB=sB+1;do sB=sB+1;end;Zu=Re[sB];do sB=sB+1;end;(SB)[0]=SB[0][Zu[5]];Zu=Re[sB];sB=sB+0x01;if SB[0X00000]~=Zu[0X5]then sB=Zu[7];end;else(SB)[Zu[7]]=SB[Zu[6]][Zu[0X05]];end;end;end;else if not(qu>=28)then do if qu==0X001B then local kM=Zu[7];local AM=SB[Zu[0X6]];do SB[kM+0x0001]=AM;end;(SB)[kM]=AM[Zu[0X5]];else SB[Zu[7]]=Zu[0X2];end;end;else do if qu==29 then(SB)[0X03]=JB[Zu[2]];Zu=Re[sB];sB=sB+0X00001;(SB)[0X004]=JB[Zu[0X002]];local jc=(4);Zu=Re[sB];sB=sB+0X1;(SB)[5]=Zu[2];sB=sB+0x1;(SB)[jc]=SB[jc](SB[jc+0X1]);KB=jc;Zu=Re[sB];sB=sB+0X1;if not(SB[0X4])then else sB=Zu[6];end;else SB[Zu[7]]=SB[Zu[6]]^SB[Zu[1]];end;end;end;end;end;end;end;end;end;end;end);if not(OB)then if f(QB)~='\115tr\ing'then(b)(QB,0);else if not(e(QB,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if e(QB,"^.-:%d+: ")then(b)("\076u\114a\p\h\032\S\c\114i\p\116\:"..(Ae[sB-1]or"(internal)").."\: "..r(QB),0);else(b)(QB,0);end;end;else if QB then do if EB~=1 then return SB[IB](I(SB,IB+1,KB));else return SB[IB]();end;end;elseif IB then return I(SB,IB,EB);end;end;end;else fe=function(...)local GW,AW,HW=0X000,0X1,{};local vW=m();local wW={[1]=ce,[0X2]=HW};local rW,lW=rC(...);rW=rW-0x1;for r2=0x0000,rW do if not(he>r2)then do break;end;else HW[r2]=lW[r2+1];end;end;local kW=(vW==F and Le or vW);if not ge then do lW=nil;end;elseif xe then HW[he]={n=rW>=he and rW-he+0X00001 or 0,I(lW,he+0X00001,rW+0x1)};end;if kW~=vW then(i)(fe,kW);end;local jW,oW,gW,yW=j(function()do while true do local l5=Re[AW];local T5=(l5[4]);AW=AW+0X1;if T5<13 then if T5>=0X006 then if T5<9 then if T5>=7 then if T5==0X08 then HW[l5[7]]=l5[0x2];else(HW)[l5[7]]=HW[l5[6]]^HW[l5[0X00001]];end;else(HW[6])[l5[2]]=l5[0X5];l5=Re[AW];AW=AW+1;HW[6][l5[0x02]]=l5[0x005];l5=Re[AW];AW=AW+1;do HW[0X07]=kW[l5[2]];end;AW=AW+1;HW[8]=HW[6];AW=AW+0x00001;(HW)[0X9]={};l5=Re[AW];local de=(je[l5[6]]);do AW=AW+0X001;end;local ye,qe=nil,de[0x00008];local te=#qe;if te>0X000 then ye={};for K5=1,te do local S5=(qe[K5]);do if S5[0X00001]==0 then(ye)[K5-1]={HW,S5[0x2]};else do(ye)[K5-1]=ve[S5[0X02]];end;end;end;end;(A)(De,ye);end;do HW[10]=NC(ye,kW,de);end;do l5=Re[AW];end;AW=AW+1;(HW[0X0009])[l5[2]]=HW[10];l5=Re[AW];AW=AW+1;do de=je[l5[0X6]];end;ye=nil;qe=de[8];local We=(0X0007);te=#qe;do if te>0X0 then ye={};for f_=0x001,te do local r_=qe[f_];do if r_[1]~=0 then ye[f_-0x01]=ve[r_[2]];else ye[f_-0X001]={HW,r_[0X0002]};end;end;end;(A)(De,ye);end;end;(HW)[10]=NC(ye,kW,de);do l5=Re[AW];end;AW=AW+0X00001;(HW[0X9])[l5[0x2]]=HW[10];AW=AW+1;HW[We](HW[We+1],HW[We+0X0002]);do GW=We-0X0001;end;do l5=Re[AW];end;do AW=AW+0X1;end;AW=l5[6];end;else if T5>=11 then if T5==12 then for ZL=l5[7],l5[0x00006]do HW[ZL]=nil;end;else do if HW[l5[0x006]]<HW[l5[1]]then AW=l5[0x7];end;end;end;else if T5==0XA then do HW[l5[0X7]]=kW[l5[0X2]];end;else local GP=l5[6];local CP=(HW[GP]);for NS=GP+0X1,l5[0X00001]do do CP=CP..HW[NS];end;end;(HW)[l5[7]]=CP;end;end;end;else if T5>=0X3 then if not(T5<0x4)then do if T5~=5 then else(HW)[4]=kW[l5[0X02]];local RY=0X000;AW=AW+0X001;do AW=AW+1;end;do l5=Re[AW];end;do AW=AW+0X1;end;HW[0X5]=kW[l5[2]];AW=AW+0X1;HW[0x6]=HW[2];local bY=5;AW=AW+1;local BY=0X00002;do if BY==0 then else do GW=bY+BY-1;end;end;end;local vY,CY=nil,nil;do if BY==1 then vY,CY=rC(HW[bY]());else vY,CY=rC(HW[bY](I(HW,bY+0x0001,GW)));end;end;if RY==0X001 then GW=bY-1;else do if RY==0 then vY=vY+bY-1;GW=vY;else vY=bY+RY-0X002;GW=vY+1;end;end;local xO=0X000;do for o4=bY,vY do do xO=xO+0X001;end;HW[o4]=CY[xO];end;end;end;AW=AW+1;bY=0X4;BY=0;RY=4;if BY==0 then else GW=bY+BY-0X01;end;vY,CY=nil;do if BY~=1 then do vY,CY=rC(HW[bY](I(HW,bY+1,GW)));end;else vY,CY=rC(HW[bY]());end;end;if RY==1 then GW=bY-1;else if RY==0X0 then vY=vY+bY-1;GW=vY;else vY=bY+RY-2;GW=vY+0X1;end;local JL=(0);for OB=bY,vY do JL=JL+1;HW[OB]=CY[JL];end;end;do AW=AW+0x1;end;AW=AW+1;l5=Re[AW];AW=AW+1;do bY=0X4;end;local rY=g(function(...)(d)();for Sy,Vy in...do(d)(true,Sy,Vy);end;end);rY(HW[bY],HW[bY+0X01],HW[bY+2]);GW=bY;HW[bY]=rY;AW=l5[6];end;end;else(HW)[0]=kW[l5[2]];do l5=Re[AW];end;AW=AW+0X1;HW[1]=kW[l5[2]];AW=AW+0x01;local gk,Kk=1,0x1;local Xk=0X00000;if gk==0 then else GW=Kk+gk-1;end;local Uk,pk=nil,(nil);if gk==0X001 then Uk,pk=rC(HW[Kk]());else Uk,pk=rC(HW[Kk](I(HW,Kk+0X1,GW)));end;if Xk==1 then GW=Kk-0X1;else if Xk~=0X00 then do Uk=Kk+Xk-0X00002;end;GW=Uk+1;else Uk=Uk+Kk-1;GW=Uk;end;local ts=0;for ot=Kk,Uk do ts=ts+1;do(HW)[ot]=pk[ts];end;end;end;AW=AW+1;do AW=AW+1;end;AW=AW+1;Kk=0;gk=0;Xk=4;do if gk==0x0 then else GW=Kk+gk-0x1;end;end;Uk,pk=nil;if gk~=1 then do Uk,pk=rC(HW[Kk](I(HW,Kk+1,GW)));end;else Uk,pk=rC(HW[Kk]());end;if Xk~=0X01 then if Xk==0X0 then Uk=Uk+Kk-0X0001;GW=Uk;else Uk=Kk+Xk-0X02;GW=Uk+1;end;local n2=(0X0);do for N2=Kk,Uk do n2=n2+0X1;HW[N2]=pk[n2];end;end;else GW=Kk-1;end;AW=AW+0X1;AW=AW+1;do l5=Re[AW];end;do AW=AW+0X1;end;Kk=0x000;local qk=(g(function(...)(d)();for M3,u3 in...do d(true,M3,u3);end;end));qk(HW[Kk],HW[Kk+1],HW[Kk+2]);do GW=Kk;end;do HW[Kk]=qk;end;AW=l5[6];end;else if T5<0X1 then HW[7]=kW[l5[2]];AW=AW+0X1;AW=AW+1;local Mm=0X00000;l5=Re[AW];AW=AW+1;(kW)[l5[2]]=HW[0X00007];l5=Re[AW];AW=AW+0X1;HW[0X007]=kW[l5[2]];l5=Re[AW];do AW=AW+1;end;(HW)[7]=HW[0x7][l5[0X5]];AW=AW+0X1;HW[8]=HW[0X00002];do l5=Re[AW];end;local pm=(10);AW=AW+1;(HW)[0x0009]=l5[0X02];l5=Re[AW];AW=AW+1;HW[0XA]=kW[l5[0x002]];AW=AW+1;do AW=AW+0X00001;end;l5=Re[AW];AW=AW+1;do(HW)[10]=HW[10][l5[0x5]];end;do AW=AW+0X1;end;AW=AW+1;l5=Re[AW];AW=AW+0x1;HW[0X0b]=l5[0X02];l5=Re[AW];do AW=AW+1;end;do HW[0X00C]=l5[2];end;l5=Re[AW];do AW=AW+0x0001;end;HW[0xD]=l5[2];AW=AW+0X001;local km=(4);if km~=0X0 then GW=pm+km-0x00001;end;local Lm,Gm=nil,nil;do if km~=1 then do Lm,Gm=rC(HW[pm](I(HW,pm+0x1,GW)));end;else Lm,Gm=rC(HW[pm]());end;end;do if Mm==1 then GW=pm-0X00001;else if Mm~=0x0 then do Lm=pm+Mm-2;end;do GW=Lm+1;end;else Lm=Lm+pm-1;GW=Lm;end;local Em=0;do for rJ=pm,Lm do do Em=Em+0X1;end;HW[rJ]=Gm[Em];end;end;end;end;do AW=AW+1;end;AW=AW+1;AW=AW+0x1;pm=7;HW[pm](I(HW,pm+1,GW));GW=pm-1;AW=AW+0X1;AW=AW+0X00001;do l5=Re[AW];end;do AW=AW+1;end;AW=l5[0X006];else if T5~=0X2 then repeat local KR,IR=De,HW;if not(#KR>0)then else local JP={};for Y6,s6 in D,KR do do for bw,Kw in D,s6 do if not(Kw[1]==IR and Kw[0X2]>=0X0)then else local Pm=Kw[2];if not(not JP[Pm])then else JP[Pm]={IR[Pm]};end;(Kw)[0X01]=JP[Pm];(Kw)[2]=1;end;end;end;end;end;until true;return;else local TA=(HW[l5[6]]);local gA=(l5[0x00007]);HW[gA+1]=TA;(HW)[gA]=TA[l5[5]];end;end;end;end;else do if not(T5>=0x13)then if not(T5<0X10)then if not(T5>=17)then do HW[0X008]=kW[l5[2]];end;l5=Re[AW];AW=AW+0X1;(HW)[0X9]=kW[l5[0X00002]];AW=AW+0x0001;AW=AW+0X00001;l5=Re[AW];AW=AW+1;do if HW[0X8]~=HW[9]then else AW=l5[0X7];end;end;else do if T5==0x000012 then(HW)[l5[7]]={I({},1,l5[0X006])};else wW[l5[6]]=HW[l5[0X7]];end;end;end;else if not(T5<0X0000e)then if T5==0Xf then local Vc=(l5[0X7]);local oc,qc,Bc=HW[Vc]();if oc then do HW[Vc+1]=qc;end;(HW)[Vc+0X2]=Bc;AW=l5[0X6];end;else(HW)[4]=HW[3][l5[0X05]];do l5=Re[AW];end;AW=AW+0X1;HW[0X00005]=kW[l5[0X002]];l5=Re[AW];do AW=AW+0X1;end;if HW[4]~=HW[5]then AW=l5[0X7];end;end;else HW[0X007]=kW[l5[0x02]];do AW=AW+1;end;AW=AW+0X01;AW=AW+0X1;(HW)[0X08]=HW[6];AW=AW+0X1;local MV=0X7;HW[MV]=HW[MV](HW[MV+1]);GW=MV;do l5=Re[AW];end;do AW=AW+0X0001;end;do if HW[0X7]==l5[0x00005]then else AW=l5[7];end;end;end;end;else do if T5>=0X016 then if T5>=0X18 then if T5==25 then(HW)[3]=kW[l5[0X2]];AW=AW+1;local ul=0X3;HW[4]=HW[2];AW=AW+1;do HW[ul]=HW[ul](HW[ul+1]);end;GW=ul;AW=AW+0X1;AW=AW+0x1;do l5=Re[AW];end;AW=AW+1;do HW[0x3]=HW[3][l5[5]];end;l5=Re[AW];AW=AW+1;do if not(not HW[3])then else AW=l5[6];end;end;else HW[l5[0x00007]]=HW[l5[6]]*HW[l5[0X1]];end;else if T5==23 then AW=l5[6];else(HW)[0x7]=HW[0X0003][l5[5]];do AW=AW+0x1;end;AW=AW+1;l5=Re[AW];AW=AW+0X1;do if HW[7]~=l5[5]then AW=l5[0X7];end;end;end;end;else do if T5>=20 then if T5==0X15 then do(HW)[3]=kW[l5[0x02]];end;AW=AW+0X01;AW=AW+0X0001;AW=AW+1;HW[4]=HW[0X02];AW=AW+0X1;local FE=0X3;do(HW)[FE]=HW[FE](HW[FE+1]);end;GW=FE;do l5=Re[AW];end;AW=AW+1;do if HW[3]==l5[0x00005]then else AW=l5[7];end;end;else HW[8]=kW[l5[0X2]];AW=AW+0X1;do HW[9]=HW[0X6];end;l5=Re[AW];AW=AW+0X001;local Cl=(8);HW[0Xa]=l5[2];do AW=AW+0X1;end;(HW)[Cl]=HW[Cl](HW[Cl+0X1],HW[Cl+0X0002]);GW=Cl;l5=Re[AW];AW=AW+1;if not HW[8]then AW=l5[6];end;end;else local pc=(je[l5[0x6]]);local Gc=pc[8];local Nc=nil;local dc=(#Gc);if dc>0 then Nc={};for mw=1,dc do local Kw=(Gc[mw]);if Kw[1]==0 then Nc[mw-0X1]={HW,Kw[0x2]};else(Nc)[mw-1]=ve[Kw[2]];end;end;A(De,Nc);end;HW[l5[7]]=NC(Nc,kW,pc);end;end;end;end;end;end;end;end;end;end);do if jW then if oW then if yW==1 then do return HW[gW]();end;else return HW[gW](I(HW,gW+0X1,GW));end;elseif gW then do return I(HW,gW,yW);end;end;else if f(oW)~="string"then(b)(oW,0);else do if not(e(oW,'at\116\101\mpt\032\116o\032\121\i\el\d\032a\cr\o\s\s \m\e\116a\m\et\104o\d/\067%\-c\097\108l\ bo\117ndar\y'))then else return coroutine.yield();end;end;if e(oW,"^.-:%d+: ")then b("\Lur\097p\104\ \083\099\114i\pt:"..(Ae[AW-1]or"(\i\110t\er\110\097l)")..": "..r(oW),0);else(b)(oW,0);end;end;end;end;end;end;else fe=function(...)local iH=({});local qH=(0X1);local XH=(0);local oH=m();local cH,xH=(oH==F and Le or oH),({[1]=ce,[0X2]=iH});local CH,mH=rC(...);CH=CH-0X1;for bs=0x0000,CH do do if not(he>bs)then break;else do iH[bs]=mH[bs+1];end;end;end;end;do if not ge then mH=nil;elseif xe then iH[he]={n=CH>=he and CH-he+1 or 0x0,I(mH,he+1,CH+0x1)};end;end;do if cH==oH then else i(fe,cH);end;end;local GH,YH,kH,eH=j(function()while true do local N3=Re[qH];local y3=N3[4];do qH=qH+1;end;if y3<0X6 then if y3<0x3 then if not(y3<0X1)then do if y3==2 then iH[0]=cH[N3[2]];local Ci=0;N3=Re[qH];qH=qH+1;local ki=iH[0X0];iH[Ci+0X1]=ki;iH[Ci]=ki[N3[5]];N3=Re[qH];qH=qH+1;iH[0X2]=N3[2];local Qi=(nil);qH=qH+1;Ci=0;do iH[Ci]=iH[Ci](iH[Ci+1],iH[Ci+0X02]);end;XH=Ci;qH=qH+0x00001;qH=qH+0x1;do N3=Re[qH];end;do qH=qH+0x001;end;iH[0x1]=cH[N3[0X2]];qH=qH+1;qH=qH+1;N3=Re[qH];do qH=qH+0X1;end;(iH)[0x0001]=iH[0x0001][N3[5]];N3=Re[qH];do qH=qH+0X00001;end;local Hi=je[N3[0X6]];local Fi=(Hi[8]);local li=(#Fi);do if li>0 then Qi={};do for pA=1,li do local yA=Fi[pA];if yA[0x1]==0 then do Qi[pA-0X1]={iH,yA[0x2]};end;else(Qi)[pA-0x001]=ve[yA[0x2]];end;end;end;A(De,Qi);end;end;(iH)[2]=NC(Qi,cH,Hi);qH=qH+0X1;do Ci=0X1;end;(iH[Ci])(iH[Ci+0X01]);XH=Ci-0X0001;qH=qH+1;repeat local X2,S2=De,iH;if not(#X2>0X000)then else local JT=({});do for p_,m_ in D,X2 do do for oG,MG in D,m_ do if MG[0X001]==S2 and MG[0X00002]>=0 then local GW=(MG[2]);if not(not JT[GW])then else JT[GW]={S2[GW]};end;(MG)[1]=JT[GW];MG[0X002]=1;end;end;end;end;end;end;until true;return;else do(iH)[N3[0x7]]=N3[2];end;end;end;else local Mr=(je[N3[0X006]]);local Rr=Mr[0x8];local vr=(nil);local Gr=#Rr;if Gr>0 then vr={};for ha=1,Gr do local va=Rr[ha];if va[0X00001]==0 then(vr)[ha-0x1]={iH,va[2]};else(vr)[ha-0x001]=ve[va[2]];end;end;A(De,vr);end;(iH)[N3[0X00007]]=NC(vr,cH,Mr);end;else do if not(y3<4)then do if y3==5 then if not iH[N3[0x7]]then qH=N3[6];end;else iH[N3[7]]=-iH[N3[0X6]];end;end;else end;end;end;else if not(y3<9)then if y3<11 then if y3~=10 then iH[N3[7]]=cH[N3[0X2]];else if iH[N3[6]]==iH[N3[0X1]]then else do qH=N3[0X7];end;end;end;else if y3==0xC then for nq=N3[0X7],N3[6]do do(iH)[nq]=nil;end;end;else do(iH)[N3[7]]=iH[N3[6]]*iH[N3[1]];end;end;end;else do if y3<0x7 then qH=N3[6];else do if y3~=8 then(iH[N3[7]])[iH[N3[0X6]]]=iH[N3[1]];else iH[N3[7]]={I({},0X1,N3[6])};end;end;end;end;end;end;end;end);if GH then if YH then do if eH==1 then return iH[kH]();else return iH[kH](I(iH,kH+1,XH));end;end;elseif not(kH)then else do return I(iH,kH,eH);end;end;else if f(YH)~="\115\116\114\in\103"then(b)(YH,0);else if e(YH,"\097tt\e\mpt\ \116\o\ \y\105\e\ld\ a\c\114\o\s\s\ \109\101tamet\104\o\100\/C\%-\ca\108l\032b\111u\110\d\097\114\121")then return coroutine.yield();end;do if e(YH,"\^.\045\058%\d+\:\032")then b("Luraph Script:"..(Ae[qH-1]or"(internal)").."\:\032"..r(YH),0);else b(YH,0x00);end;end;end;end;end;end;end;end;else if not(me<85)then if me>=86 then if me~=0X57 then fe=function(...)local nD=0X00001;local jD,hD={},(0);local FD={[0X2]=jD,[1]=ce};local CD=(m());local aD,lD=rC(...);local vD=(CD==F and Le or CD);aD=aD-0x00001;for Db=0X0,aD do do if not(he>Db)then break;else(jD)[Db]=lD[Db+1];end;end;end;if not ge then lD=nil;elseif not(xe)then else do jD[he]={n=aD>=he and aD-he+1 or 0,I(lD,he+1,aD+1)};end;end;if vD==CD then else(i)(fe,vD);end;local UD,LD,MD,pD=j(function()while true do local Uk=(Re[nD]);local Mk=Uk[0X4];do nD=nD+1;end;do if not(Mk<0Xa)then if Mk>=0XF then if Mk>=18 then if Mk>=0x13 then do if Mk==20 then jD[Uk[0X7]]=vD[Uk[0x2]];else(jD)[Uk[0X7]]={I({},1,Uk[6])};end;end;else repeat local NV,hV=De,(jD);if not(#NV>0)then else local Ks={};do for Hd,md in D,NV do for tF,GF in D,md do if not(GF[0x0001]==hV and GF[2]>=0X000)then else local Ty=GF[0X2];if not Ks[Ty]then(Ks)[Ty]={hV[Ty]};end;(GF)[1]=Ks[Ty];do GF[2]=1;end;end;end;end;end;end;until true;do return;end;end;else do if Mk<0x10 then local D_=(ve[0]);jD[0X1]=D_[0x0001][D_[2]];do nD=nD+1;end;nD=nD+1;Uk=Re[nD];local N_=0X01;nD=nD+1;local Z_=jD[0X1];(jD)[N_+0x0001]=Z_;(jD)[N_]=Z_[Uk[5]];do nD=nD+1;end;N_=1;(jD[N_])(jD[N_+0X0001]);hD=N_-0X01;do nD=nD+1;end;nD=nD+1;do Uk=Re[nD];end;do nD=nD+1;end;do jD[1]=vD[Uk[2]];end;nD=nD+1;nD=nD+0x00001;nD=nD+1;do D_=ve[0x1];end;jD[2]=D_[0X1][D_[2]];nD=nD+0X00001;nD=nD+0X1;Uk=Re[nD];nD=nD+1;(jD)[2]=jD[2][Uk[0x5]];nD=nD+1;do nD=nD+1;end;Uk=Re[nD];nD=nD+0x1;do jD[0X2]=jD[0x002][Uk[5]];end;nD=nD+0X1;nD=nD+0X01;Uk=Re[nD];local m_=(je[Uk[0X6]]);nD=nD+0X01;local a_,P_=nil,(m_[8]);local C_=(#P_);if not(C_>0)then else a_={};do for pp=0X1,C_ do local Dp=P_[pp];do if Dp[1]~=0 then a_[pp-0X00001]=ve[Dp[2]];else a_[pp-0x0001]={jD,Dp[2]};end;end;end;end;A(De,a_);end;(jD)[3]=NC(a_,vD,m_);nD=nD+1;do(jD)[4]=true;end;do nD=nD+0x1;end;jD[0X5]=false;nD=nD+1;D_=ve[0];jD[0X06]=D_[1][D_[0X02]];nD=nD+1;nD=nD+1;nD=nD+0X1;N_=1;do hD=N_+0x6-0X1;end;(jD[N_])(I(jD,N_+1,hD));hD=N_-0X00001;do Uk=Re[nD];end;nD=nD+1;(jD)[0X1]=vD[Uk[2]];nD=nD+1;D_=ve[0X1];(jD)[0X02]=D_[0X1][D_[0X2]];nD=nD+0X00001;nD=nD+0X00001;do Uk=Re[nD];end;nD=nD+1;(jD)[0X00002]=jD[2][Uk[5]];Uk=Re[nD];nD=nD+1;do(jD)[0x2]=jD[2][Uk[5]];end;nD=nD+0x1;nD=nD+0x1;nD=nD+1;N_=0X1;do(jD)[N_]=jD[N_](jD[N_+1]);end;do hD=N_;end;Uk=Re[nD];nD=nD+0X1;do if not(jD[1]<Uk[0X0005])then do nD=Uk[7];end;end;end;else if Mk==17 then jD[Uk[7]]=jD[Uk[0X06]]+jD[Uk[1]];else local tz=Uk[0X7];local Kz,Pz=jD[tz]();if Kz then for k4=1,Uk[0X00001]do do jD[tz+k4]=Pz[k4];end;end;do nD=Uk[6];end;end;end;end;end;end;else if not(Mk>=0xC)then if Mk~=11 then jD[0x01]=vD[Uk[2]];Uk=Re[nD];local Ee=(ve[1]);do nD=nD+0X1;end;(jD)[0X002]=vD[Uk[0X0002]];nD=nD+1;(jD)[0x3]=Ee[0X1][Ee[2]];Uk=Re[nD];do nD=nD+0X00001;end;(jD)[3]=jD[3][Uk[0X5]];nD=nD+1;nD=nD+1;Uk=Re[nD];nD=nD+1;jD[4]=Uk[2];do nD=nD+0X01;end;local re=(1);hD=re+4-0X1;(jD[re])(I(jD,re+1,hD));do hD=re-0x1;end;Uk=Re[nD];nD=nD+0X001;do nD=Uk[0X06];end;else(jD)[1]=vD[Uk[2]];do nD=nD+0X1;end;local vG=ve[0X1];hD=0x1;jD[hD]();do hD=hD-0X1;end;nD=nD+0X1;nD=nD+1;Uk=Re[nD];nD=nD+0X1;local IG=(0x1);(jD)[0X01]=vD[Uk[0X2]];do nD=nD+0x00001;end;nD=nD+0X1;do Uk=Re[nD];end;nD=nD+1;jD[0X2]=vD[Uk[0x00002]];nD=nD+1;jD[0X03]=vG[0X1][vG[2]];nD=nD+1;do nD=nD+0X1;end;do Uk=Re[nD];end;nD=nD+0X00001;do jD[0X3]=jD[3][Uk[0x05]];end;Uk=Re[nD];nD=nD+1;(jD)[0X4]=Uk[0X00002];nD=nD+1;hD=IG+0X4-1;(jD[IG])(I(jD,IG+0X1,hD));hD=IG-0X001;nD=nD+1;do jD[0X1]=jD[0X0];end;Uk=Re[nD];nD=nD+1;jD[0X0002]=Uk[0X0002];nD=nD+0x1;IG=0X1;do jD[IG]=jD[IG](jD[IG+0x1]);end;hD=IG;do nD=nD+0X01;end;nD=nD+1;do Uk=Re[nD];end;do nD=nD+1;end;if not(jD[0X1])then else do nD=Uk[6];end;end;end;else if Mk>=0Xd then if Mk==0Xe then do nD=Uk[6];end;else(jD)[Uk[0X7]]=O(jD[Uk[0x6]],jD[Uk[0x1]]);end;else do(jD)[Uk[0X0007]]=Uk[0x02];end;end;end;end;else if Mk<0X05 then if not(Mk<0x0002)then if not(Mk>=0x3)then local yg=(je[Uk[0X6]]);local ag=(nil);local tg=(yg[0x08]);local Fg=(#tg);do if not(Fg>0)then else ag={};do for Ql=0X001,Fg do local fl=(tg[Ql]);do if fl[1]~=0 then do ag[Ql-0X1]=ve[fl[2]];end;else(ag)[Ql-1]={jD,fl[0X2]};end;end;end;end;A(De,ag);end;end;jD[Uk[7]]=NC(ag,vD,yg);else do if Mk==0X4 then jD[Uk[0X7]]=jD[Uk[6]]^jD[Uk[0X01]];else jD[1]=vD[Uk[0X00002]];do Uk=Re[nD];end;nD=nD+0x1;local Y0=(ve[1]);do jD[2]=vD[Uk[0X2]];end;nD=nD+1;do jD[0X3]=Y0[0X1][Y0[2]];end;Uk=Re[nD];local g0=1;nD=nD+1;do(jD)[3]=jD[3][Uk[5]];end;nD=nD+1;nD=nD+0X001;Uk=Re[nD];nD=nD+1;(jD)[0x0004]=Uk[0X2];nD=nD+0x001;hD=g0+0X4-1;(jD[g0])(I(jD,g0+1,hD));hD=g0-1;Uk=Re[nD];nD=nD+1;nD=Uk[6];end;end;end;else do if Mk==1 then jD[0X00001]=vD[Uk[2]];local MR,pR=1,ve[1];nD=nD+0X01;do nD=nD+0x01;end;nD=nD+0X001;hD=1;(jD[hD])();do hD=hD-0X001;end;Uk=Re[nD];nD=nD+1;jD[1]=vD[Uk[0X2]];nD=nD+0x1;nD=nD+0X1;do Uk=Re[nD];end;nD=nD+1;jD[0X2]=vD[Uk[0x2]];nD=nD+1;jD[0X3]=pR[1][pR[0X0002]];Uk=Re[nD];nD=nD+1;(jD)[0x003]=jD[0X003][Uk[0x5]];Uk=Re[nD];nD=nD+0X01;jD[0X0004]=Uk[2];nD=nD+1;do hD=MR+0X04-1;end;(jD[MR])(I(jD,MR+0x1,hD));do hD=MR-0X00001;end;nD=nD+1;do nD=nD+1;end;nD=nD+0X1;(jD)[0X0001]=jD[0];Uk=Re[nD];nD=nD+0x1;(jD)[2]=Uk[0X2];nD=nD+1;MR=1;(jD)[MR]=jD[MR](jD[MR+0x1]);hD=MR;nD=nD+1;nD=nD+1;Uk=Re[nD];do nD=nD+1;end;if jD[0X1]then nD=Uk[6];end;else for Sy=Uk[7],Uk[6]do jD[Sy]=nil;end;end;end;end;else if Mk<0x7 then if Mk==6 then repeat local yO,KO=De,jD;if not(#yO>0)then else local cO={};do for NQ,fQ in D,yO do for ab,Gb in D,fQ do if not(Gb[0X01]==KO and Gb[2]>=0)then else local HU=(Gb[0X00002]);if not cO[HU]then cO[HU]={KO[HU]};end;Gb[0X00001]=cO[HU];(Gb)[2]=0X1;end;end;end;end;end;until true;local W5=Uk[0X7];do return false,W5,W5+Uk[0X6]-0X00002;end;else end;else if Mk>=8 then do if Mk~=0x00009 then local bl=jD[Uk[0x6]]/jD[Uk[1]];(jD)[Uk[7]]=bl-bl%1;else(jD)[0X00001]=vD[Uk[0X0002]];nD=nD+0x1;hD=0x001;local dv=(0X00001);jD[hD]();do hD=hD-0X01;end;local Ov=ve[0];do nD=nD+0X1;end;local Jv=nil;do nD=nD+0x1;end;nD=nD+1;do(jD)[0X1]=Ov[0X00001][Ov[2]];end;do nD=nD+1;end;nD=nD+1;do Uk=Re[nD];end;nD=nD+0X00001;local Iv=(jD[1]);(jD)[dv+1]=Iv;do jD[dv]=Iv[Uk[5]];end;nD=nD+1;dv=0X00001;(jD[dv])(jD[dv+0X1]);do hD=dv-0X1;end;do Uk=Re[nD];end;nD=nD+0x1;jD[1]=vD[Uk[2]];do nD=nD+0X1;end;nD=nD+0x1;do nD=nD+0X1;end;do Ov=ve[1];end;(jD)[2]=Ov[0X1][Ov[2]];Uk=Re[nD];nD=nD+0X1;(jD)[2]=jD[2][Uk[0X0005]];nD=nD+0X1;do nD=nD+0x1;end;Uk=Re[nD];nD=nD+0x0001;jD[2]=jD[0X2][Uk[0X5]];Uk=Re[nD];do nD=nD+1;end;local Xv=(je[Uk[0X6]]);local Dv=Xv[8];local wv=#Dv;do if wv>0 then Jv={};for QK=1,wv do local cK=Dv[QK];if cK[1]==0 then Jv[QK-0x1]={jD,cK[2]};else(Jv)[QK-0X1]=ve[cK[2]];end;end;(A)(De,Jv);end;end;(jD)[0X00003]=NC(Jv,vD,Xv);nD=nD+0X1;do jD[0X4]=true;end;nD=nD+1;do(jD)[0X0005]=false;end;nD=nD+1;Ov=ve[0];(jD)[0X06]=Ov[0X1][Ov[2]];nD=nD+0X00001;dv=0X001;do hD=dv+6-0X1;end;(jD[dv])(I(jD,dv+0x1,hD));hD=dv-0X01;Uk=Re[nD];nD=nD+1;do jD[0X1]=vD[Uk[0x00002]];end;do nD=nD+1;end;do nD=nD+0X001;end;nD=nD+1;Ov=ve[1];do(jD)[0x02]=Ov[0X001][Ov[2]];end;Uk=Re[nD];nD=nD+0X1;do jD[2]=jD[2][Uk[0X5]];end;nD=nD+1;nD=nD+1;Uk=Re[nD];nD=nD+0X1;jD[2]=jD[2][Uk[5]];do nD=nD+1;end;do nD=nD+1;end;nD=nD+0X01;dv=0X1;(jD)[dv]=jD[dv](jD[dv+1]);hD=dv;Uk=Re[nD];do nD=nD+1;end;do if not(not(jD[1]<Uk[0X005]))then else nD=Uk[0x0007];end;end;end;end;else jD[Uk[7]]=jD[Uk[6]]<=jD[Uk[1]];end;end;end;end;end;end;end);do if UD then if LD then if pD==0x1 then return jD[MD]();else do return jD[MD](I(jD,MD+1,hD));end;end;elseif MD then return I(jD,MD,pD);end;else do if f(LD)~='\s\116\114ing'then b(LD,0x0);else do if not(e(LD,"\097tt\101\m\112t \116\111\032\y\i\e\108d a\c\114\o\ss\ \109et\097\m\101\116\ho\d\047C\%-\c\097\108l\032\098ou\110\dary"))then else return coroutine.yield();end;end;if not(e(LD,"^.-:%d+: "))then(b)(LD,0X00);else b('\076\117ra\p\h\ \S\099r\ip\116\:'..(Ae[nD-1]or'\(in\116\e\114na\l\041')..": "..r(LD),0X0);end;end;end;end;end;end;else do fe=function(...)local UK=1;local pK,FK={},0x000;local CK=({[1]=ce,[0X2]=pK});local yK=m();local ZK,oK=rC(...);do ZK=ZK-1;end;local nK=(yK==F and Le or yK);for Tl=0X0,ZK do do if not(he>Tl)then break;else pK[Tl]=oK[Tl+0X1];end;end;end;if not ge then do oK=nil;end;elseif xe then do(pK)[he]={n=ZK>=he and ZK-he+0X01 or 0,I(oK,he+0X1,ZK+1)};end;end;if nK~=yK then i(fe,nK);end;local WK,KK,SK,BK=j(function()while true do local SZ=(Re[UK]);local uZ=(SZ[0X00004]);UK=UK+1;if not(uZ>=9)then if not(uZ>=0x004)then if uZ>=2 then do if uZ==3 then(pK)[SZ[0X00007]]={I({},1,SZ[6])};else pK[0X001]=nK[SZ[0x002]];do UK=UK+0X1;end;local oH=(1);UK=UK+1;do SZ=Re[UK];end;UK=UK+0X1;do(pK)[0X2]=SZ[0x02];end;UK=UK+0x00001;pK[oH](pK[oH+1]);FK=oH-0X1;SZ=Re[UK];UK=UK+1;UK=SZ[6];end;end;else if uZ~=0X1 then UK=SZ[0x6];else(pK)[0x1]=nK[SZ[0X2]];do UK=UK+0x1;end;do FK=1;end;(pK[FK])();FK=FK-0X1;do SZ=Re[UK];end;do UK=UK+0X1;end;do(pK)[1]=nK[SZ[0X2]];end;do UK=UK+0x1;end;UK=UK+0X01;SZ=Re[UK];UK=UK+1;pK[1]=pK[0X01][SZ[0x5]];UK=UK+0x1;do UK=UK+0X1;end;SZ=Re[UK];UK=UK+0X1;do pK[1]=pK[1][SZ[5]];end;UK=UK+1;UK=UK+1;SZ=Re[UK];do UK=UK+1;end;do pK[1]=pK[0x1][SZ[0X5]];end;UK=UK+1;UK=UK+1;SZ=Re[UK];UK=UK+0X00001;if not(not pK[0X0001])then else do UK=SZ[6];end;end;end;end;else if uZ<6 then if uZ==0X5 then repeat local Kv,dv=De,pK;if not(#Kv>0)then else local fu=({});for ys,ts in D,Kv do for xs,Gs in D,ts do if not(Gs[1]==dv and Gs[0X2]>=0)then else local T8=Gs[2];if not fu[T8]then do fu[T8]={dv[T8]};end;end;Gs[0X1]=fu[T8];Gs[0X0002]=1;end;end;end;end;until true;local HI=(SZ[7]);return false,HI,HI+SZ[6]-2;else(pK)[SZ[0X00007]]=nK[SZ[2]];end;else if uZ>=7 then if uZ==8 then repeat local yH,TH=De,pK;do if not(#yH>0X0)then else local SA=({});for pR,yR in D,yH do for D8,f8 in D,yR do if f8[0X1]==TH and f8[2]>=0X0 then local i5=(f8[2]);if not(not SA[i5])then else SA[i5]={TH[i5]};end;f8[0X1]=SA[i5];f8[2]=1;end;end;end;end;end;until true;do return;end;else do pK[SZ[7]]=L(pK[SZ[6]],pK[SZ[1]]);end;end;else pK[SZ[7]]=pK[SZ[6]]>pK[SZ[0X01]];end;end;end;else if not(uZ>=14)then if uZ>=11 then if not(uZ<12)then if uZ==13 then if not pK[SZ[7]]then UK=SZ[6];end;else end;else do(pK)[1]=nK[SZ[2]];end;UK=UK+0X01;FK=1;pK[FK]();FK=FK-0X0001;SZ=Re[UK];do UK=UK+1;end;pK[0X1]=nK[SZ[0X2]];UK=UK+0X001;UK=UK+0X001;UK=UK+0X0001;FK=0X1;pK[FK]();FK=FK-1;SZ=Re[UK];UK=UK+1;do(pK)[1]=nK[SZ[2]];end;SZ=Re[UK];local LK=0X001;UK=UK+0X00001;do pK[2]=SZ[2];end;do UK=UK+1;end;pK[LK](pK[LK+1]);do FK=LK-1;end;UK=UK+1;do UK=UK+0X001;end;SZ=Re[UK];UK=UK+1;do if not pK[0]then UK=SZ[6];end;end;end;else do if uZ~=10 then local Bj=(SZ[7]);local ij=(SZ[1]-1)*50;local xj=pK[Bj];for zB=1,SZ[0X6]do(xj)[ij+zB]=pK[Bj+zB];end;else do(pK)[0X01]=nK[SZ[0x2]];end;do UK=UK+0X1;end;UK=UK+0X00001;UK=UK+0X1;do FK=1;end;pK[FK]();FK=FK-1;SZ=Re[UK];UK=UK+0x00001;pK[1]=nK[SZ[0X002]];UK=UK+1;FK=1;pK[FK]=pK[FK]();SZ=Re[UK];do UK=UK+0x00001;end;if not(pK[1])then else UK=SZ[6];end;end;end;end;else if uZ<0X10 then if uZ==15 then if pK[SZ[6]]==pK[SZ[0x1]]then else do UK=SZ[0X007];end;end;else do(pK)[SZ[0x7]]=SZ[0X2];end;end;else if not(uZ<0X11)then do if uZ==18 then do repeat local dx,Cx,Ax=De,pK,(SZ[0X0007]);if#dx>0X00 then local Xw={};for Nt,Vt in D,dx do do for h9,j9 in D,Vt do if not(j9[0x1]==Cx and j9[0X2]>=Ax)then else local Ez=(j9[2]);if not(not Xw[Ez])then else Xw[Ez]={Cx[Ez]};end;do(j9)[1]=Xw[Ez];end;j9[0X2]=1;end;end;end;end;end;until true;end;else local AL=(je[SZ[0X0006]]);local vL=(nil);local VL=AL[0x8];local dL=(#VL);if dL>0 then vL={};do for aH=1,dL do local DH=VL[aH];if DH[0X1]~=0 then vL[aH-0X1]=ve[DH[0X002]];else vL[aH-1]={pK,DH[0X2]};end;end;end;A(De,vL);end;pK[SZ[0x7]]=NC(vL,nK,AL);end;end;else for Gz=SZ[0X7],SZ[0X00006]do pK[Gz]=nil;end;end;end;end;end;end;end);if not(WK)then if f(KK)=="\st\114\i\110\103"then if e(KK,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(KK,"\^\.-\:\037d\+\058\032")then b('\Lu\114\097\ph\ \083\c\114ip\116:'..(Ae[UK-1]or"(\105n\116\e\114na\l\)")..'\:\ '..r(KK),0X00000);else(b)(KK,0X0000);end;else(b)(KK,0);end;else do if KK then do if BK~=0x1 then do return pK[SK](I(pK,SK+1,FK));end;else do return pK[SK]();end;end;end;elseif not(SK)then else return I(pK,SK,BK);end;end;end;end;end;end;else fe=function(...)local Gv=0X1;local mv=({});local Nv=m();local Hv,Iv=rC(...);local iv,pv,Kv=0X0,{[0X2]=mv,[1]=ce},(Nv==F and Le or Nv);Hv=Hv-1;for jF=0,Hv do do if he>jF then(mv)[jF]=Iv[jF+1];else break;end;end;end;do if not ge then Iv=nil;elseif not(xe)then else mv[he]={n=Hv>=he and Hv-he+0X1 or 0,I(Iv,he+0X1,Hv+1)};end;end;if Kv~=Nv then(i)(fe,Kv);end;local ev,yv,Wv,jv=j(function()while true do local kB=(Re[Gv]);local vB=kB[4];Gv=Gv+0X0001;if not(vB<0Xd)then if vB<0x000013 then if not(vB>=16)then do if not(vB>=14)then(mv[0X0003])[kB[0X2]]=kB[5];kB=Re[Gv];Gv=Gv+1;(mv[0X3])[kB[2]]=kB[5];kB=Re[Gv];Gv=Gv+0X01;Gv=kB[6];else if vB==0XF then(mv)[kB[7]]=mv[kB[0x6]][mv[kB[1]]];else local yb=kB[7];local Yb,Jb,ub=mv[yb]();if Yb then(mv)[yb+1]=Jb;mv[yb+0X2]=ub;Gv=kB[0x6];end;end;end;end;else if vB>=17 then do if vB~=18 then(mv)[kB[7]]=Kv[kB[2]];else(Kv)[kB[0X2]]=mv[kB[7]];end;end;else(mv)[kB[7]]=O(mv[kB[6]],mv[kB[0X1]]);end;end;else if not(vB>=22)then if not(vB<0X014)then if vB~=21 then mv[kB[0X7]]=kB[2];else end;else mv[0X5]=mv[0X0003][kB[0X5]];Gv=Gv+0X001;Gv=Gv+0X1;do kB=Re[Gv];end;Gv=Gv+0X01;if not(not mv[0X00005])then else Gv=kB[6];end;end;else if vB>=24 then if vB==25 then(mv)[0X0000]=Kv[kB[0x2]];Gv=Gv+0X1;Gv=Gv+1;kB=Re[Gv];Gv=Gv+0X1;do if not(not mv[0X0])then else Gv=kB[0X6];end;end;else if mv[kB[6]]==mv[kB[0X0001]]then do Gv=kB[7];end;end;end;else do if vB==23 then(mv)[kB[0X07]]={I({},1,kB[6])};else(mv)[0X0000]=Kv[kB[0X00002]];do Gv=Gv+0x00001;end;do iv=0X0;end;(mv)[iv]=mv[iv]();Gv=Gv+0X1;do Gv=Gv+1;end;kB=Re[Gv];Gv=Gv+1;if not mv[0X0]then Gv=kB[6];end;end;end;end;end;end;else do if vB>=0X0006 then if vB<9 then do if not(vB<7)then if vB==8 then Gv=kB[0X6];else local jV=(kB[7]);local nV=g(function(...)d();do for T3,N3,m3,i3,F3,w3,y3,o3,G3,r3 in...do(d)(true,{T3,N3,m3,i3,F3,w3,y3,o3,G3,r3});end;end;end);(nV)(mv[jV],mv[jV+1],mv[jV+2]);do iv=jV;end;mv[jV]=nV;Gv=kB[0X6];end;else local dZ=(0X3);local zZ=(mv[0X0002]);(mv)[dZ+1]=zZ;do mv[dZ]=zZ[kB[5]];end;kB=Re[Gv];Gv=Gv+0X00001;do mv[5]=kB[2];end;Gv=Gv+0X0001;do dZ=0X00003;end;(mv)[dZ]=mv[dZ](mv[dZ+1],mv[dZ+0X2]);iv=dZ;kB=Re[Gv];Gv=Gv+0x00001;if not(not mv[3])then else do Gv=kB[0X06];end;end;end;end;else if not(vB>=11)then if vB~=0Xa then local TP=je[kB[6]];local rP=TP[8];local yP=nil;local xP=(#rP);if not(xP>0X0)then else yP={};for vP=0X1,xP do local UP=(rP[vP]);do if UP[1]==0X000 then yP[vP-0X1]={mv,UP[2]};else yP[vP-1]=ve[UP[0X2]];end;end;end;(A)(De,yP);end;do(mv)[kB[7]]=NC(yP,Kv,TP);end;else mv[0]=Kv[kB[2]];do Gv=Gv+1;end;iv=0X0;mv[iv]=mv[iv]();Gv=Gv+1;Gv=Gv+0X1;kB=Re[Gv];do Gv=Gv+0X1;end;if not(not mv[0])then else Gv=kB[0x6];end;end;else if vB~=0XC then(mv)[kB[7]]=mv[kB[6]][kB[5]];else do mv[0]=Kv[kB[0X002]];end;local f5=1;do Gv=Gv+1;end;Gv=Gv+0X001;do kB=Re[Gv];end;Gv=Gv+1;local a5=0X2;(mv)[1]=Kv[kB[0x2]];Gv=Gv+0X01;Gv=Gv+1;kB=Re[Gv];Gv=Gv+1;do(mv)[0X001]=mv[1][kB[0X5]];end;kB=Re[Gv];Gv=Gv+1;local F5=(mv[0X1]);mv[f5+1]=F5;do mv[f5]=F5[kB[0x0005]];end;Gv=Gv+0X0001;do f5=1;end;local y5=(0);if a5~=0 then do iv=f5+a5-0X1;end;end;local z5,e5=nil,nil;if a5~=1 then z5,e5=rC(mv[f5](I(mv,f5+1,iv)));else do z5,e5=rC(mv[f5]());end;end;if y5~=1 then if y5==0 then z5=z5+f5-1;iv=z5;else z5=f5+y5-2;iv=z5+1;end;local oy=(0);for XS=f5,z5 do do oy=oy+1;end;mv[XS]=e5[oy];end;else iv=f5-0x1;end;do Gv=Gv+1;end;Gv=Gv+0X1;Gv=Gv+1;f5=0x000;a5=0x0;y5=4;if a5~=0 then iv=f5+a5-1;end;z5,e5=nil;do if a5~=1 then z5,e5=rC(mv[f5](I(mv,f5+0x1,iv)));else z5,e5=rC(mv[f5]());end;end;if y5~=0X1 then if y5==0 then z5=z5+f5-1;iv=z5;else z5=f5+y5-2;iv=z5+1;end;local V5=0;for Ad=f5,z5 do do V5=V5+1;end;do(mv)[Ad]=e5[V5];end;end;else do iv=f5-0X1;end;end;kB=Re[Gv];Gv=Gv+1;f5=0;local J5=(g(function(...)d();for nk,qk in...do(d)(true,nk,qk);end;end));J5(mv[f5],mv[f5+0X1],mv[f5+2]);iv=f5;mv[f5]=J5;Gv=kB[0x6];end;end;end;else if vB>=0x03 then do if not(vB<0X4)then do if vB~=5 then if not(not(kB[2]<mv[kB[0X00001]]))then else Gv=kB[0X7];end;else do(mv)[0x00000]=Kv[kB[0X2]];end;do kB=Re[Gv];end;Gv=Gv+0X1;mv[0X0]=mv[0][kB[0X5]];Gv=Gv+0X1;Gv=Gv+1;kB=Re[Gv];do Gv=Gv+1;end;if not mv[0]then do Gv=kB[0X06];end;end;end;end;else repeat local z2,G2=De,(mv);do if#z2>0X0 then local gh={};do for FZ,GZ in D,z2 do for iL,RL in D,GZ do if not(RL[0X1]==G2 and RL[2]>=0X00000)then else local w3=RL[0x02];do if not(not gh[w3])then else do(gh)[w3]={G2[w3]};end;end;end;do RL[0x1]=gh[w3];end;RL[2]=0X00001;end;end;end;end;end;end;until true;return;end;end;else if vB<1 then for fp=kB[7],kB[0x06]do(mv)[fp]=nil;end;else if vB~=2 then do mv[4]=Kv[kB[2]];end;Gv=Gv+1;Gv=Gv+1;local mp=(0X4);kB=Re[Gv];Gv=Gv+0x00001;mv[5]=mv[0X3][kB[5]];do Gv=Gv+0x1;end;mv[mp]=mv[mp](mv[mp+1]);do iv=mp;end;kB=Re[Gv];Gv=Gv+0x001;if not mv[4]then Gv=kB[0X06];end;else mv[kB[7]]=true;end;end;end;end;end;end;end;end);if ev then if yv then do if jv~=0X1 then do return mv[Wv](I(mv,Wv+1,iv));end;else do return mv[Wv]();end;end;end;elseif not(Wv)then else return I(mv,Wv,jv);end;else if f(yv)~="string"then(b)(yv,0x000);else if e(yv,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(e(yv,"\094.-\:\037\100\+:\ "))then(b)(yv,0);else b("Luraph Script:"..(Ae[Gv-1]or"\(\105\110t\erna\108\041").."\:\ "..r(yv),0);end;end;end;end;end;else if me<0x53 then fe=function(...)local Ek=0X1;local Hk={};local Wk=(m());local Ak={[1]=ce,[0X2]=Hk};local Jk,xk=rC(...);Jk=Jk-0x00001;local Nk=(Wk==F and Le or Wk);do for mY=0X000,Jk do if not(he>mY)then break;else Hk[mY]=xk[mY+1];end;end;end;if not ge then xk=nil;elseif not(xe)then else Hk[he]={n=Jk>=he and Jk-he+1 or 0,I(xk,he+0X1,Jk+0X1)};end;if Nk==Wk then else(i)(fe,Nk);end;local Pk=(0x00);while true do local Xw=(Re[Ek]);local ow=(Xw[4]);Ek=Ek+0X001;return(function(f,E,...)local t=f[0];local h=t;while true do local j,g=string.gsub(h,"^(-?%d+)(%d%d%d)","%1,%2");h=j;if g==0 then break;end;end;return h;end)(Hk,ve,...);end;end;else if me~=0X54 then fe=function(...)local qB=0;local VB=({});local FB=0X001;local CB=m();local hB=((CB==F and Le or CB));local fB,iB=rC(...);local vB={[1]=ce,[0X2]=VB};fB=fB-0X1;for Vo=0X0,fB do do if not(he>Vo)then break;else(VB)[Vo]=iB[Vo+1];end;end;end;if not ge then do iB=nil;end;elseif xe then VB[he]={n=fB>=he and fB-he+0X1 or 0x0,I(iB,he+0X1,fB+1)};end;if hB==CB then else i(fe,hB);end;local YB,zB,xB,oB=j(function()while true do local tk=Re[FB];local sk=tk[0X4];FB=FB+1;if sk<0xc then if not(sk>=6)then if not(sk>=0x3)then if sk<0X0001 then(VB)[0X2]=hB[tk[0x00002]];FB=FB+0x1;qB=2;VB[qB]=VB[qB]();FB=FB+1;do FB=FB+1;end;local U1=(0X2);tk=Re[FB];FB=FB+1;do(hB)[tk[0x2]]=VB[2];end;do tk=Re[FB];end;do FB=FB+1;end;VB[2]=hB[tk[0X00002]];tk=Re[FB];FB=FB+0X1;VB[2]=VB[2][tk[5]];do FB=FB+1;end;FB=FB+0X1;tk=Re[FB];FB=FB+0X1;VB[0X2]=VB[0x2][tk[5]];do FB=FB+0x0001;end;FB=FB+1;tk=Re[FB];do FB=FB+0X0001;end;VB[2]=VB[0X02][tk[5]];tk=Re[FB];local y1=ve[0x000];FB=FB+0x001;local C1=(VB[2]);(VB)[U1+1]=C1;(VB)[U1]=C1[tk[5]];FB=FB+1;(VB)[0X004]=y1[0X1][y1[2]];FB=FB+0X0001;U1=0X00002;VB[U1](VB[U1+1],VB[U1+0X2]);do qB=U1-0X001;end;FB=FB+1;FB=FB+0X1;tk=Re[FB];do FB=FB+1;end;FB=tk[6];else if sk~=0X002 then local wW=(je[tk[6]]);local dW,AW=wW[0X8],(nil);local nW=#dW;if nW>0 then AW={};for cw=0X1,nW do local aw=dW[cw];if aw[1]==0 then do AW[cw-1]={VB,aw[0X2]};end;else(AW)[cw-1]=ve[aw[2]];end;end;A(De,AW);end;(VB)[tk[0x007]]=NC(AW,hB,wW);else do if not(VB[tk[7]])then else do FB=tk[6];end;end;end;end;end;else if sk<0x4 then local zQ=ve[tk[0X6]];VB[tk[0X7]]=zQ[0X00001][zQ[2]];else if sk~=0x005 then do VB[0X2]=hB[tk[0X2]];end;FB=FB+0X1;qB=0X2;(VB)[qB]=VB[qB]();FB=FB+0X001;FB=FB+0X1;tk=Re[FB];FB=FB+0X1;VB[3]=hB[tk[0X2]];do FB=FB+1;end;FB=FB+1;FB=FB+0X01;VB[2]=VB[2]-VB[3];tk=Re[FB];FB=FB+1;do if not(tk[2]<VB[0x2])then FB=tk[7];end;end;else local TC=ve[2];(VB)[2]=TC[1][TC[0X002]];FB=FB+1;FB=FB+0X1;FB=FB+1;do qB=0x2;end;VB[qB]=VB[qB]();do FB=FB+0x1;end;do FB=FB+1;end;tk=Re[FB];do FB=FB+0X01;end;if not(not VB[0X2])then else FB=tk[0X6];end;end;end;end;else if sk<0X9 then if sk>=7 then if sk==0x8 then(VB)[tk[0X00007]]=T(VB[tk[6]]);else VB[tk[7]]=tk[0X0002];end;else local Qh=tk[7];local hh=((tk[1]-1)*50);local Lh=VB[Qh];for OO=0X1,tk[6]do(Lh)[hh+OO]=VB[Qh+OO];end;end;else if not(sk>=10)then FB=tk[6];else if sk~=0xb then local r8=(VB[tk[0X6]]/VB[tk[1]]);(VB)[tk[0X007]]=r8-r8%1;else do VB[tk[0X7]]=hB[tk[2]];end;end;end;end;end;else if not(sk<0x0012)then do if sk>=21 then if not(sk<23)then if sk==24 then local ia=tk[0X7];local Ea,Aa=VB[ia]();do if not(Ea)then else FB=tk[6];VB[ia+0X3]=Aa;end;end;else do for XT=tk[0X7],tk[6]do do(VB)[XT]=nil;end;end;end;end;else do if sk==0X16 then local db=(ve[0X00]);VB[0x1]=db[0X01][db[0X2]];do tk=Re[FB];end;FB=FB+1;(VB)[0X2]=hB[tk[0x002]];do FB=FB+0X1;end;do FB=FB+0X00001;end;tk=Re[FB];do FB=FB+0X0001;end;VB[0X2]=VB[2][tk[5]];FB=FB+1;VB[0X1]=VB[1]==VB[0x00002];do tk=Re[FB];end;FB=FB+1;FB=tk[6];else do VB[tk[0X07]]=not VB[tk[6]];end;end;end;end;else if not(sk>=19)then do(VB)[tk[0x7]]=VB[tk[6]]>VB[tk[1]];end;else if sk==20 then local Xo=tk[0X00007];local Yo,no=VB[Xo+0X1],(VB[Xo+0X2]);local xo=(VB[Xo]);VB[Xo]=g(function()for Rd=xo,Yo,no do d(true,Rd);end;end);FB=tk[0X6];else do(VB)[tk[0X7]]=VB[tk[0X6]]<VB[tk[0X1]];end;end;end;end;end;else if sk>=15 then if not(sk<0X10)then do if sk==0X011 then repeat local U1,R1=De,(VB);if#U1>0 then local Yk=({});for dA,WA in D,U1 do for YC,LC in D,WA do if not(LC[1]==R1 and LC[0X00002]>=0X0)then else local uC=(LC[0X2]);if not(not Yk[uC])then else Yk[uC]={R1[uC]};end;do(LC)[1]=Yk[uC];end;do(LC)[0x02]=1;end;end;end;end;end;until true;do return;end;else(VB)[2]=true;do tk=Re[FB];end;do FB=FB+0X1;end;local kw=(ve[0]);(hB)[tk[0X2]]=VB[0x2];do tk=Re[FB];end;FB=FB+0X01;do(VB)[2]=hB[tk[0X02]];end;local Iw=nil;do FB=FB+0X01;end;FB=FB+0X1;FB=FB+0X00001;VB[3]=kw[1][kw[0X2]];FB=FB+1;FB=FB+0X1;local vw=(4);tk=Re[FB];do FB=FB+0X1;end;(VB)[3]=VB[3][tk[5]];tk=Re[FB];FB=FB+1;do VB[4]=hB[tk[2]];end;tk=Re[FB];FB=FB+1;do(VB)[0X004]=VB[0X4][tk[5]];end;do FB=FB+1;end;do FB=FB+0X1;end;do tk=Re[FB];end;FB=FB+0X001;VB[5]=tk[2];tk=Re[FB];do FB=FB+1;end;VB[0X6]=tk[0X2];do tk=Re[FB];end;FB=FB+1;VB[7]=tk[2];FB=FB+1;do qB=vw+4-0X1;end;VB[vw]=VB[vw](I(VB,vw+1,qB));qB=vw;FB=FB+0X1;(VB)[0X3]=VB[3]+VB[0X004];tk=Re[FB];FB=FB+0X1;local ow=(je[tk[6]]);local Ow=ow[8];local Uw=(#Ow);do if Uw>0x000 then Iw={};for eM=0X1,Uw do local PM=Ow[eM];do if PM[1]==0X0 then(Iw)[eM-1]={VB,PM[2]};else Iw[eM-1]=ve[PM[2]];end;end;end;(A)(De,Iw);end;end;VB[4]=NC(Iw,hB,ow);do FB=FB+0x1;end;vw=0X02;VB[vw](VB[vw+1],VB[vw+2]);qB=vw-0X1;FB=FB+1;(VB)[0X2]=false;tk=Re[FB];FB=FB+1;do hB[tk[0X2]]=VB[2];end;tk=Re[FB];FB=FB+0X1;do FB=tk[0x06];end;end;end;else end;else if not(sk>=0X0000D)then(VB)[tk[7]]={I({},1,tk[6])};else do if sk~=0XE then repeat local px,sx,Bx=De,VB,tk[7];if#px>0 then local vZ={};do for Q4,h4 in D,px do for Hm,lm in D,h4 do if not(lm[1]==sx and lm[0X002]>=Bx)then else local B4=lm[2];if not(not vZ[B4])then else do(vZ)[B4]={sx[B4]};end;end;do(lm)[0X1]=vZ[B4];end;do lm[0x2]=1;end;end;end;end;end;end;until true;else if not VB[tk[7]]then do FB=tk[0x006];end;end;end;end;end;end;end;end;end;end);if not(YB)then if f(zB)=="str\in\g"then if not(e(zB,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(e(zB,"^.-:%d+: "))then b(zB,0x0);else(b)("Luraph Script:"..(Ae[FB-1]or'\(\105nter\110a\108\)')..": "..r(zB),0x0000);end;else b(zB,0);end;else if zB then if oB==0X00001 then return VB[xB]();else return VB[xB](I(VB,xB+1,qB));end;elseif not(xB)then else return I(VB,xB,oB);end;end;end;else fe=function(...)local NO,jO={},(0);local KO=(0X1);local hO=m();local BO={[1]=ce,[0X2]=NO};local DO,ZO=rC(...);DO=DO-1;for xm=0,DO do do if not(he>xm)then break;else(NO)[xm]=ZO[xm+1];end;end;end;local QO=((hO==F and Le or hO));do if not ge then ZO=nil;elseif not(xe)then else do NO[he]={n=DO>=he and DO-he+1 or 0X0,I(ZO,he+1,DO+1)};end;end;end;do if QO~=hO then i(fe,QO);end;end;local tO,EO,rO,IO=j(function()do while true do local Oz=(Re[KO]);local Iz=Oz[0X4];KO=KO+1;do if Iz>=0X3b then if Iz>=0X58 then do if Iz>=103 then if not(Iz<110)then do if not(Iz<114)then if Iz<0X00074 then do if Iz~=115 then(NO)[0X2]=QO[Oz[2]];do Oz=Re[KO];end;local kN=2;KO=KO+0X1;NO[2]=NO[0x2][Oz[0X5]];KO=KO+0X1;KO=KO+0X01;Oz=Re[KO];KO=KO+1;NO[0X00003]=Oz[2];KO=KO+0X1;(NO[kN])(NO[kN+1]);jO=kN-0X1;Oz=Re[KO];KO=KO+1;NO[0X2]=QO[Oz[2]];KO=KO+0X0001;do KO=KO+0X1;end;Oz=Re[KO];do KO=KO+1;end;do if not NO[0X2]then KO=Oz[0X00006];end;end;else NO[0x3]=false;Oz=Re[KO];KO=KO+0X1;QO[Oz[0x2]]=NO[3];do Oz=Re[KO];end;do KO=KO+1;end;KO=Oz[6];end;end;else do if Iz==117 then(NO)[0x2]=QO[Oz[0X2]];Oz=Re[KO];local S1=2;KO=KO+0X1;(NO)[0x3]=Oz[2];KO=KO+0X1;NO[S1]=NO[S1](NO[S1+1]);do jO=S1;end;KO=KO+0x1;KO=KO+1;Oz=Re[KO];do KO=KO+1;end;do if not(not NO[2])then else do KO=Oz[6];end;end;end;else do(NO)[4]=QO[Oz[2]];end;KO=KO+1;KO=KO+0X1;KO=KO+1;(NO)[5]=NO[0X3];local Tf=4;KO=KO+0X00001;(NO)[Tf]=NO[Tf](NO[Tf+1]);jO=Tf;KO=KO+1;KO=KO+0X1;Oz=Re[KO];KO=KO+0X1;do if NO[0X4]==Oz[0X5]then else KO=Oz[7];end;end;end;end;end;else do if Iz>=0X70 then if Iz==0X071 then NO[Oz[7]]=NO[Oz[0x6]]<NO[Oz[1]];else do(NO)[0X7]=NO[0X00006][Oz[0x05]];end;local VJ=(7);Oz=Re[KO];KO=KO+1;local GJ=(NO[0X7]);do(NO)[VJ+0X1]=GJ;end;NO[VJ]=GJ[Oz[0X5]];Oz=Re[KO];do KO=KO+0x0001;end;(NO)[0X0009]=Oz[0X2];KO=KO+0X1;VJ=0X7;NO[VJ]=NO[VJ](NO[VJ+1],NO[VJ+0x002]);jO=VJ;Oz=Re[KO];do KO=KO+1;end;if not(not NO[0X7])then else do KO=Oz[0x6];end;end;end;else if Iz~=111 then(NO)[3]=QO[Oz[2]];KO=KO+1;do jO=0X3;end;NO[jO]=NO[jO]();Oz=Re[KO];KO=KO+1;if not(NO[0X03])then else KO=Oz[0x6];end;else NO[4]=false;Oz=Re[KO];KO=KO+0X01;(QO)[Oz[0X2]]=NO[0X00004];Oz=Re[KO];do KO=KO+1;end;do NO[4]=QO[Oz[0x02]];end;KO=KO+0X00001;KO=KO+1;KO=KO+1;jO=0X004;NO[jO]=NO[jO]();KO=KO+1;KO=KO+1;Oz=Re[KO];KO=KO+1;if not NO[0X0004]then KO=Oz[6];end;end;end;end;end;end;else if not(Iz>=106)then if not(Iz>=104)then do(NO)[0X4]=QO[Oz[0X2]];end;do Oz=Re[KO];end;local xq=(4);do KO=KO+0X01;end;(NO)[5]=Oz[2];KO=KO+0x1;(NO[xq])(NO[xq+0X0001]);do jO=xq-0X1;end;Oz=Re[KO];KO=KO+1;KO=Oz[0X6];else if Iz~=0X69 then NO[9]=QO[Oz[0x2]];Oz=Re[KO];do KO=KO+0X1;end;NO[0X009]=NO[0X009][Oz[0X5]];Oz=Re[KO];KO=KO+1;KO=Oz[6];else do(NO)[0X02]=true;end;do Oz=Re[KO];end;do KO=KO+0X1;end;QO[Oz[0x2]]=NO[0X2];Oz=Re[KO];do KO=KO+1;end;NO[0X2]=QO[Oz[2]];local sg=(2);KO=KO+0X1;do KO=KO+0X1;end;Oz=Re[KO];KO=KO+1;local ig=(NO[2]);NO[sg+1]=ig;(NO)[sg]=ig[Oz[5]];Oz=Re[KO];KO=KO+1;NO[0X04]=Oz[0X02];KO=KO+0X00001;sg=2;NO[sg](NO[sg+0X1],NO[sg+0x2]);do jO=sg-1;end;KO=KO+1;KO=KO+0X0001;Oz=Re[KO];do KO=KO+1;end;KO=Oz[6];end;end;else if Iz>=0x06C then if Iz~=109 then if not(not(NO[Oz[6]]<NO[Oz[1]]))then else KO=Oz[7];end;else NO[0X5]=QO[Oz[2]];Oz=Re[KO];KO=KO+1;NO[5]=NO[0x005][Oz[5]];KO=KO+1;do KO=KO+1;end;Oz=Re[KO];KO=KO+1;if not(not NO[5])then else KO=Oz[0X0006];end;end;else if Iz~=107 then NO[4]=QO[Oz[0X0002]];Oz=Re[KO];do KO=KO+0X1;end;NO[0X4]=NO[4][Oz[5]];KO=KO+0X0001;KO=KO+1;Oz=Re[KO];do KO=KO+0X00001;end;do if NO[0X4]then KO=Oz[0X6];end;end;else(NO)[3]=QO[Oz[2]];KO=KO+0X01;KO=KO+1;do Oz=Re[KO];end;local lb=3;KO=KO+1;NO[0X4]=Oz[2];KO=KO+0X1;(NO)[lb]=NO[lb](NO[lb+1]);do jO=lb;end;KO=KO+1;do(NO)[4]={};end;Oz=Re[KO];KO=KO+0x1;NO[0X005]=Oz[0X2]/Oz[0X5];Oz=Re[KO];KO=KO+1;(NO[4])[Oz[2]]=NO[5];Oz=Re[KO];KO=KO+0x001;NO[5]=QO[Oz[0X2]];KO=KO+0x0001;(NO)[6]=NO[0x00003];do Oz=Re[KO];end;KO=KO+0X1;do if not(NO[6])then else KO=Oz[6];end;end;end;end;end;end;else if Iz<95 then do if not(Iz<91)then if Iz<93 then if Iz~=0x5c then(NO)[0X4]=QO[Oz[0x00002]];do KO=KO+1;end;do KO=KO+0X1;end;do KO=KO+0X1;end;jO=4;NO[jO]=NO[jO]();do KO=KO+0X1;end;do KO=KO+1;end;KO=KO+1;NO[0X03]=NO[0x00004];Oz=Re[KO];local c5=(4);do KO=KO+1;end;local M5=(NO[1]);NO[c5+0x00001]=M5;do(NO)[c5]=M5[Oz[5]];end;KO=KO+1;do c5=4;end;NO[c5](NO[c5+1]);jO=c5-0X1;Oz=Re[KO];KO=KO+0x1;(NO)[4]=QO[Oz[0X02]];Oz=Re[KO];KO=KO+0X01;(NO)[0X4]=NO[0X4][Oz[5]];do Oz=Re[KO];end;KO=KO+0X1;NO[0X05]=Oz[0X00002];do KO=KO+0X01;end;c5=4;NO[c5](NO[c5+1]);jO=c5-0X1;Oz=Re[KO];KO=KO+0X001;NO[0X4]=NO[3][Oz[5]];KO=KO+1;KO=KO+0X001;do Oz=Re[KO];end;KO=KO+1;if NO[4]then KO=Oz[6];end;else(NO)[Oz[7]]={};end;else if Iz~=94 then else(NO)[3]=QO[Oz[2]];Oz=Re[KO];KO=KO+0X1;(NO)[4]=Oz[2];Oz=Re[KO];KO=KO+1;(NO)[5]=Oz[2];KO=KO+1;local Nc=(3);do NO[Nc]=NO[Nc](NO[Nc+1],NO[Nc+2]);end;jO=Nc;do KO=KO+0X01;end;KO=KO+1;do Oz=Re[KO];end;KO=KO+1;if NO[0X3]==Oz[5]then KO=Oz[0X007];end;end;end;else if Iz<89 then NO[6]=NO[0x03][Oz[0X05]];Oz=Re[KO];KO=KO+1;NO[0X6]=NO[6][Oz[0X05]];KO=KO+1;KO=KO+1;Oz=Re[KO];do KO=KO+0X1;end;if not NO[0X6]then KO=Oz[0x006];end;else if Iz~=0x00005a then(NO)[0X00007]=QO[Oz[0X02]];Oz=Re[KO];local ym=(0X7);KO=KO+1;NO[0X8]=QO[Oz[2]];Oz=Re[KO];KO=KO+0X01;(NO)[0X8]=NO[8][Oz[5]];do KO=KO+0X1;end;do KO=KO+1;end;KO=KO+0X1;(NO)[ym]=NO[ym](NO[ym+1]);jO=ym;KO=KO+1;do(NO)[6]=NO[7];end;Oz=Re[KO];KO=KO+0x1;local im=NO[0x1];do ym=0X7;end;NO[ym+1]=im;do NO[ym]=im[Oz[0X5]];end;KO=KO+0x1;do ym=0x7;end;NO[ym](NO[ym+1]);jO=ym-1;KO=KO+1;do KO=KO+0X001;end;Oz=Re[KO];KO=KO+1;NO[7]=QO[Oz[2]];do Oz=Re[KO];end;KO=KO+0X01;(NO)[0X8]=Oz[0X2];KO=KO+0X1;ym=0X07;NO[ym](NO[ym+0x1]);jO=ym-1;do KO=KO+0X0001;end;KO=KO+1;Oz=Re[KO];KO=KO+0X0001;if not NO[0x6]then KO=Oz[0X6];end;else NO[0X7]=QO[Oz[2]];local O2=7;KO=KO+1;KO=KO+1;Oz=Re[KO];KO=KO+0x00001;do NO[0X7]=NO[7][Oz[5]];end;Oz=Re[KO];KO=KO+1;local b2=(NO[0X07]);(NO)[O2+0X00001]=b2;NO[O2]=b2[Oz[0x00005]];Oz=Re[KO];KO=KO+1;(NO)[0X9]=Oz[0X2];do Oz=Re[KO];end;KO=KO+0X1;do(NO)[10]=Oz[2];end;KO=KO+1;O2=0X07;jO=O2+4-0x1;NO[O2](I(NO,O2+0X1,jO));do jO=O2-1;end;KO=KO+1;KO=KO+0x0001;Oz=Re[KO];KO=KO+1;KO=Oz[0X006];end;end;end;end;else if not(Iz<99)then do if Iz<101 then do if Iz~=0X64 then(NO)[0X8]=QO[Oz[0X2]];do Oz=Re[KO];end;do KO=KO+1;end;(NO)[0x9]=QO[Oz[2]];KO=KO+0X001;KO=KO+1;do Oz=Re[KO];end;KO=KO+1;NO[0x9]=NO[0X9][Oz[0X05]];KO=KO+0X1;KO=KO+0X00001;Oz=Re[KO];do KO=KO+0x00001;end;do(NO)[9]=NO[9]~=Oz[5];end;Oz=Re[KO];do KO=KO+0X0001;end;if not NO[0X009]then do KO=Oz[6];end;end;else do(NO)[2]=QO[Oz[0x2]];end;Oz=Re[KO];KO=KO+0X00001;NO[2]=NO[0x2][Oz[5]];do Oz=Re[KO];end;KO=KO+0X1;do NO[0X2]=NO[0X002][Oz[5]];end;Oz=Re[KO];KO=KO+1;if not(NO[0X2]<Oz[5])then KO=Oz[7];end;end;end;else do if Iz~=0X0066 then local BH=Oz[7];local sH,gH,CH=NO[BH]();do if not(sH)then else NO[BH+0x1]=gH;NO[BH+0X2]=CH;KO=Oz[6];end;end;else(NO)[4]=QO[Oz[2]];do KO=KO+1;end;do KO=KO+1;end;do Oz=Re[KO];end;KO=KO+1;do NO[5]=Oz[2];end;local Uj=0X4;KO=KO+1;(NO[Uj])(NO[Uj+1]);jO=Uj-1;KO=KO+1;KO=KO+1;do Oz=Re[KO];end;KO=KO+0X1;do(NO)[0X4]=QO[Oz[0x002]];end;KO=KO+0x001;KO=KO+1;Oz=Re[KO];KO=KO+1;do NO[0X0004]=NO[4][Oz[5]];end;do Oz=Re[KO];end;do KO=KO+1;end;if NO[4]then KO=Oz[6];end;end;end;end;end;else if Iz<0X00061 then if Iz==0x60 then(NO)[4]=QO[Oz[2]];do KO=KO+1;end;KO=KO+1;do Oz=Re[KO];end;KO=KO+1;if not(NO[0X04])then else KO=Oz[6];end;else local km,nm=0X0006,(NO[0X5]);(NO)[km+1]=nm;NO[km]=nm[Oz[0X005]];Oz=Re[KO];KO=KO+0X1;NO[8]=Oz[2];do KO=KO+0x001;end;km=0X6;(NO)[km]=NO[km](NO[km+1],NO[km+2]);jO=km;KO=KO+0X00001;KO=KO+0X001;Oz=Re[KO];KO=KO+1;if not(not NO[6])then else KO=Oz[6];end;end;else if Iz~=0X62 then NO[0X5]=QO[Oz[0X00002]];do KO=KO+1;end;do KO=KO+0X001;end;do KO=KO+1;end;jO=5;(NO)[jO]=NO[jO]();Oz=Re[KO];KO=KO+0X1;if not(NO[5])then else KO=Oz[0X6];end;else if not(NO[Oz[7]])then else do KO=Oz[6];end;end;end;end;end;end;end;end;else if not(Iz>=73)then if not(Iz>=0X42)then if not(Iz<0X03E)then if Iz>=64 then do if Iz~=65 then(NO)[0X0002]=QO[Oz[0X2]];KO=KO+0x01;jO=0X02;(NO)[jO]=NO[jO]();KO=KO+0X1;KO=KO+0X1;Oz=Re[KO];KO=KO+1;do KO=Oz[0x6];end;else local FY=(0x5);jO=FY+0X4-0X1;do NO[FY]=NO[FY](I(NO,FY+0X001,jO));end;do jO=FY;end;do KO=KO+1;end;NO[3]=NO[5];Oz=Re[KO];KO=KO+1;KO=Oz[6];end;end;else do if Iz~=63 then local Jd,Yd=0x003,(NO[0X00001]);NO[Jd+1]=Yd;NO[Jd]=Yd[Oz[5]];KO=KO+1;Jd=3;NO[Jd](NO[Jd+1]);jO=Jd-1;Oz=Re[KO];do KO=KO+0x1;end;do NO[3]=QO[Oz[2]];end;KO=KO+1;KO=KO+0X001;KO=KO+1;jO=0X3;NO[jO]=NO[jO]();Oz=Re[KO];KO=KO+0X0001;KO=Oz[6];else(NO)[5]=QO[Oz[0X00002]];do KO=KO+1;end;KO=KO+1;Oz=Re[KO];KO=KO+1;if NO[0X05]then do KO=Oz[0x006];end;end;end;end;end;else if not(Iz<0X3c)then do if Iz==0X00003D then NO[3]=QO[Oz[0X0002]];local hG=0x0003;Oz=Re[KO];do KO=KO+1;end;local KG=NO[3];NO[hG+0X1]=KG;(NO)[hG]=KG[Oz[5]];Oz=Re[KO];KO=KO+1;(NO)[0X5]=Oz[0X0002];do KO=KO+1;end;hG=0X3;NO[hG]=NO[hG](NO[hG+1],NO[hG+0X0002]);jO=hG;KO=KO+0X0001;KO=KO+1;Oz=Re[KO];KO=KO+1;if NO[0x03]then KO=Oz[6];end;else do NO[0x4]=QO[Oz[2]];end;do KO=KO+1;end;KO=KO+0X1;Oz=Re[KO];local Lr=4;KO=KO+0X1;NO[0x005]=Oz[2];KO=KO+0x01;NO[Lr](NO[Lr+0X00001]);jO=Lr-0x1;Oz=Re[KO];KO=KO+1;if NO[0X02]then do KO=Oz[6];end;end;end;end;else local ui=(Oz[0x7]);local pi=(Oz[6]);jO=ui+pi-0X01;repeat local xi,si=De,(NO);do if#xi>0x00 then local cy=({});for Vq,Fq in D,xi do for pe,Ze in D,Fq do if not(Ze[0X1]==si and Ze[2]>=0X0000)then else local Ti=Ze[0x00002];do if not cy[Ti]then do(cy)[Ti]={si[Ti]};end;end;end;(Ze)[1]=cy[Ti];Ze[2]=1;end;end;end;end;end;until true;return true,ui,pi;end;end;else if Iz>=0x000045 then do if Iz<71 then if Iz==0X46 then(NO)[3]=QO[Oz[0X2]];local V6=(3);KO=KO+0X1;NO[4]=NO[1];KO=KO+1;do(NO)[V6]=NO[V6](NO[V6+0x0001]);end;jO=V6;KO=KO+0X1;KO=KO+0X1;Oz=Re[KO];do KO=KO+1;end;do if not(NO[3])then else KO=Oz[6];end;end;else if NO[Oz[6]]~=Oz[0X0005]then else KO=Oz[0X7];end;end;else if Iz==72 then NO[0X3]=QO[Oz[2]];KO=KO+1;jO=0x0003;(NO)[jO]=NO[jO]();KO=KO+1;KO=KO+1;Oz=Re[KO];KO=KO+0X00001;do if NO[3]then KO=Oz[0X0006];end;end;else NO[Oz[0X007]]=T(NO[Oz[0X6]]);end;end;end;else if Iz<0X0043 then(NO)[8]=NO[7];KO=KO+1;(NO)[0X4]=NO[0X8];do Oz=Re[KO];end;KO=KO+1;KO=Oz[0X6];else if Iz==0x44 then(NO)[3]=QO[Oz[2]];do Oz=Re[KO];end;KO=KO+1;do NO[0X03]=NO[3][Oz[5]];end;KO=KO+1;do KO=KO+1;end;Oz=Re[KO];KO=KO+1;(NO)[3]=NO[0X3][Oz[5]];KO=KO+0X1;KO=KO+1;Oz=Re[KO];KO=KO+0X01;NO[0X3]=NO[3][Oz[0X5]];Oz=Re[KO];KO=KO+1;do NO[0X004]=QO[Oz[0X0002]];end;do KO=KO+1;end;do KO=KO+0X001;end;do Oz=Re[KO];end;KO=KO+1;NO[4]=NO[4][Oz[5]];Oz=Re[KO];KO=KO+1;NO[0X5]=QO[Oz[0X0002]];KO=KO+1;KO=KO+1;do Oz=Re[KO];end;KO=KO+0x1;NO[0X0005]=NO[0x5][Oz[5]];Oz=Re[KO];KO=KO+0X1;if not(NO[5])then else KO=Oz[0X6];end;else NO[3]=QO[Oz[2]];do Oz=Re[KO];end;KO=KO+1;NO[0x3]=NO[0X3][Oz[0x5]];Oz=Re[KO];KO=KO+0X1;do if not(NO[0X3])then else KO=Oz[6];end;end;end;end;end;end;else if not(Iz>=80)then if Iz>=76 then if Iz>=78 then if Iz~=79 then local sB=2;local hB=NO[0X1];(NO)[sB+0X1]=hB;do(NO)[sB]=hB[Oz[0X0005]];end;KO=KO+1;sB=0X2;do NO[sB]=NO[sB](NO[sB+1]);end;do jO=sB;end;KO=KO+0x001;do KO=KO+1;end;Oz=Re[KO];do KO=KO+1;end;if not(NO[0X2])then else do KO=Oz[0x00006];end;end;else local lF,zF=3,(NO[1]);(NO)[lF+0X1]=zF;(NO)[lF]=zF[Oz[0X005]];KO=KO+1;lF=3;NO[lF]=NO[lF](NO[lF+1]);jO=lF;Oz=Re[KO];KO=KO+0X1;if not(not NO[0X00003])then else KO=Oz[6];end;end;else if Iz==0X00004D then(NO)[2]=QO[Oz[2]];KO=KO+0X1;do KO=KO+0X1;end;do Oz=Re[KO];end;KO=KO+1;if not NO[0X0002]then KO=Oz[6];end;else do NO[4]=QO[Oz[2]];end;KO=KO+1;KO=KO+1;Oz=Re[KO];KO=KO+1;NO[0x0004]=NO[4][Oz[5]];KO=KO+1;KO=KO+1;Oz=Re[KO];do KO=KO+1;end;do if NO[0X4]then KO=Oz[6];end;end;end;end;else do if not(Iz<74)then do if Iz~=75 then(NO)[8]=QO[Oz[2]];Oz=Re[KO];KO=KO+1;NO[8]=NO[0x0008][Oz[5]];Oz=Re[KO];KO=KO+0X1;(NO)[0X8]=NO[0X8][Oz[0X5]];KO=KO+1;KO=KO+0X1;Oz=Re[KO];do KO=KO+1;end;NO[8]=NO[0X8][Oz[5]];do Oz=Re[KO];end;KO=KO+1;do(NO)[0X8]=NO[8]~=Oz[0X5];end;Oz=Re[KO];do KO=KO+1;end;KO=Oz[6];else do(NO)[7]=QO[Oz[2]];end;KO=KO+0X1;do KO=KO+0X1;end;KO=KO+1;jO=0X7;local jv=0X00007;NO[jO]();jO=jO-0X1;Oz=Re[KO];KO=KO+1;do NO[0X0007]=QO[Oz[2]];end;Oz=Re[KO];KO=KO+1;(NO)[7]=NO[7][Oz[0X5]];Oz=Re[KO];KO=KO+0X1;local dv=(NO[0X7]);(NO)[jv+1]=dv;NO[jv]=dv[Oz[5]];Oz=Re[KO];do KO=KO+1;end;do(NO)[0X9]=Oz[0X2];end;do KO=KO+0x00001;end;jv=0X0007;NO[jv]=NO[jv](NO[jv+0x1],NO[jv+0X2]);jO=jv;KO=KO+0X1;KO=KO+0X1;do Oz=Re[KO];end;KO=KO+1;do if not(NO[0x7])then else KO=Oz[6];end;end;end;end;else NO[Oz[7]]=NO[Oz[6]][Oz[0X5]];end;end;end;else if Iz<84 then if Iz>=82 then do if Iz==83 then NO[4]=QO[Oz[0X2]];Oz=Re[KO];KO=KO+0X1;do(NO)[4]=NO[4][Oz[0X005]];end;KO=KO+0X1;KO=KO+0X00001;Oz=Re[KO];KO=KO+0X1;(NO)[0x004]=NO[4][Oz[0X5]];KO=KO+1;do KO=KO+0x1;end;Oz=Re[KO];KO=KO+1;if not(not(NO[0X04]<Oz[5]))then else KO=Oz[7];end;else NO[4]=QO[Oz[0X0002]];KO=KO+1;KO=KO+0x01;do Oz=Re[KO];end;do KO=KO+1;end;if NO[4]then do KO=Oz[0X06];end;end;end;end;else if Iz==81 then NO[0x05]=QO[Oz[0X2]];Oz=Re[KO];KO=KO+1;(NO)[6]=Oz[0X2];Oz=Re[KO];KO=KO+0X1;local dz=(5);(NO)[0X7]=NO[0X004][Oz[5]];KO=KO+1;NO[dz](NO[dz+0X1],NO[dz+0X2]);jO=dz-0X1;KO=KO+0X001;do KO=KO+1;end;do Oz=Re[KO];end;KO=KO+1;KO=Oz[6];else local TN,NN=0X4,NO[0X0001];do(NO)[TN+0X0001]=NN;end;(NO)[TN]=NN[Oz[5]];KO=KO+0X00001;do NO[0X6]=true;end;KO=KO+1;do TN=0X004;end;(NO[TN])(NO[TN+0X1],NO[TN+2]);do jO=TN-1;end;do Oz=Re[KO];end;do KO=KO+1;end;(NO)[0X04]=QO[Oz[2]];KO=KO+0X01;do KO=KO+0X1;end;Oz=Re[KO];KO=KO+1;do NO[0X5]=QO[Oz[0X0002]];end;Oz=Re[KO];do KO=KO+1;end;do NO[5]=NO[5][Oz[0x5]];end;do KO=KO+0X1;end;KO=KO+0x1;do Oz=Re[KO];end;do KO=KO+0X1;end;do TN=5;end;NN=NO[0X5];do NO[TN+1]=NN;end;do NO[TN]=NN[Oz[0X005]];end;Oz=Re[KO];KO=KO+0X1;NO[7]=Oz[0X2];KO=KO+1;NO[0x8]=true;KO=KO+0X01;TN=5;do jO=TN+0X4-1;end;(NO)[TN]=NO[TN](I(NO,TN+1,jO));jO=TN;Oz=Re[KO];KO=KO+0X1;NO[5]=NO[0X05][Oz[5]];do Oz=Re[KO];end;KO=KO+1;(NO)[0X5]=NO[5][Oz[0X5]];Oz=Re[KO];KO=KO+0x00001;(NO)[0X5]=NO[0X00005][Oz[5]];KO=KO+0X0001;TN=4;NO[TN](NO[TN+1]);jO=TN-0X00001;Oz=Re[KO];do KO=KO+0X001;end;(NO)[4]=QO[Oz[0x2]];Oz=Re[KO];KO=KO+1;TN=4;NN=NO[4];(NO)[TN+1]=NN;(NO)[TN]=NN[Oz[5]];do Oz=Re[KO];end;do KO=KO+0X001;end;do(NO)[6]=Oz[2];end;KO=KO+1;TN=0X4;NO[TN]=NO[TN](NO[TN+0X00001],NO[TN+0X002]);do jO=TN;end;Oz=Re[KO];KO=KO+0x1;TN=4;NN=NO[0x4];NO[TN+1]=NN;(NO)[TN]=NN[Oz[0X5]];KO=KO+0X1;TN=0X4;NO[TN]=NO[TN](NO[TN+0X1]);jO=TN;KO=KO+0X1;KO=KO+1;KO=KO+0x1;NO[0X00005]=NO[0X4];KO=KO+0x01;do NO[0]=NO[0x5];end;KO=KO+1;(NO)[0X5]=true;Oz=Re[KO];KO=KO+1;QO[Oz[0X002]]=NO[5];Oz=Re[KO];KO=KO+1;do NO[5]=QO[Oz[0x2]];end;KO=KO+1;KO=KO+0X1;do Oz=Re[KO];end;KO=KO+1;do NO[0X0005]=NO[5][Oz[0x05]];end;do Oz=Re[KO];end;KO=KO+0X00001;(NO)[6]=Oz[0X002];Oz=Re[KO];local oN=(je[Oz[6]]);local QN=oN[8];do KO=KO+0X1;end;local PN=(nil);local wN=(#QN);if wN>0 then PN={};for Nx=0X1,wN do local tx=(QN[Nx]);if tx[1]~=0X0 then do PN[Nx-1]=ve[tx[2]];end;else PN[Nx-0X01]={NO,tx[0x0002]};end;end;(A)(De,PN);end;do NO[7]=NC(PN,QO,oN);end;KO=KO+1;TN=0X5;(NO[TN])(NO[TN+1],NO[TN+0X2]);jO=TN-1;KO=KO+1;repeat local Yr,fr=De,(NO);do if#Yr>0X0000 then local iK=({});for NB,wB in D,Yr do do for ON,DN in D,wB do if not(DN[1]==fr and DN[0X2]>=4)then else local XB=(DN[0X2]);do if not iK[XB]then(iK)[XB]={fr[XB]};end;end;(DN)[0X1]=iK[XB];do DN[0X002]=1;end;end;end;end;end;end;end;until true;Oz=Re[KO];KO=KO+1;KO=Oz[6];end;end;else do if not(Iz>=86)then do if Iz~=0X55 then NO[0X0003]=QO[Oz[0X2]];local Gz=(0X3);Oz=Re[KO];KO=KO+0X1;(NO)[4]=Oz[2];KO=KO+1;NO[Gz](NO[Gz+1]);jO=Gz-0x0001;KO=KO+1;NO[0x3]=nil;Oz=Re[KO];KO=KO+0X1;do(NO)[0X4]=QO[Oz[2]];end;Oz=Re[KO];KO=KO+1;do if not NO[0x4]then KO=Oz[6];end;end;else NO[0X7]=QO[Oz[0X0002]];KO=KO+0x1;do KO=KO+0X1;end;KO=KO+1;jO=0X0007;do NO[jO]=NO[jO]();end;KO=KO+0x1;KO=KO+1;Oz=Re[KO];KO=KO+1;if not(NO[0X7])then else KO=Oz[0x06];end;end;end;else if Iz==0x57 then local Wo=(Oz[7]);local eo=g(function(...)(d)();do for RL,EL in...do(d)(true,RL,EL);end;end;end);eo(NO[Wo],NO[Wo+1],NO[Wo+2]);do jO=Wo;end;(NO)[Wo]=eo;KO=Oz[0x6];else do(NO)[0x6]=QO[Oz[2]];end;do Oz=Re[KO];end;local lP=(0X6);KO=KO+0x1;do NO[0X00007]=QO[Oz[0x2]];end;Oz=Re[KO];KO=KO+1;(NO)[0X00007]=NO[7][Oz[5]];do KO=KO+1;end;KO=KO+1;do KO=KO+0X1;end;do NO[lP]=NO[lP](NO[lP+1]);end;jO=lP;Oz=Re[KO];do KO=KO+0X001;end;KO=Oz[0x6];end;end;end;end;end;end;end;else if not(Iz<29)then if not(Iz>=44)then if Iz<0X24 then if not(Iz>=32)then do if not(Iz<0x001E)then do if Iz~=31 then do NO[0X02]=QO[Oz[0X002]];end;do Oz=Re[KO];end;KO=KO+1;NO[0X2]=NO[0X0002][Oz[0x05]];do Oz=Re[KO];end;KO=KO+1;if not(not NO[2])then else do KO=Oz[0X00006];end;end;else NO[0X00003]=QO[Oz[0x2]];KO=KO+1;KO=KO+1;KO=KO+1;do jO=0X003;end;(NO)[jO]=NO[jO]();do Oz=Re[KO];end;do KO=KO+0X1;end;if not(not NO[3])then else KO=Oz[0x6];end;end;end;else local tZ=je[Oz[0X0006]];local NZ=tZ[0x8];local PZ=(nil);local YZ=#NZ;if not(YZ>0)then else PZ={};do for tN=1,YZ do local BN=NZ[tN];if BN[1]==0X0 then PZ[tN-0x00001]={NO,BN[2]};else PZ[tN-0x0001]=ve[BN[0X2]];end;end;end;(A)(De,PZ);end;(NO)[Oz[7]]=NC(PZ,QO,tZ);end;end;else if not(Iz>=0X22)then do if Iz==33 then local Ln,un=4,(NO[0X1]);NO[Ln+0X1]=un;(NO)[Ln]=un[Oz[5]];do KO=KO+1;end;Ln=0X4;NO[Ln]=NO[Ln](NO[Ln+0x0001]);jO=Ln;Oz=Re[KO];do KO=KO+0X1;end;if not(not NO[4])then else KO=Oz[0X6];end;else NO[0X8]=QO[Oz[0X2]];Oz=Re[KO];do KO=KO+0X0001;end;NO[0X8]=NO[8][Oz[5]];KO=KO+0X1;local ls=(0X8);KO=KO+1;Oz=Re[KO];KO=KO+0X001;NO[9]=QO[Oz[2]];KO=KO+1;KO=KO+0x1;KO=KO+0x1;do NO[0X0a]=NO[4];end;KO=KO+0X00001;(NO)[ls]=NO[ls](NO[ls+1],NO[ls+2]);jO=ls;KO=KO+1;do KO=KO+1;end;Oz=Re[KO];KO=KO+0X1;KO=Oz[0X06];end;end;else if Iz==0x23 then(NO)[2]=QO[Oz[2]];KO=KO+0X1;do KO=KO+1;end;KO=KO+1;do jO=2;end;do NO[jO]=NO[jO]();end;KO=KO+0X00001;do KO=KO+1;end;Oz=Re[KO];do KO=KO+0x1;end;(NO)[3]=QO[Oz[0x2]];KO=KO+0X1;(NO)[2]=NO[2]-NO[3];Oz=Re[KO];KO=KO+1;NO[2]=NO[2]>Oz[0X5];Oz=Re[KO];KO=KO+1;do if not(not NO[2])then else KO=Oz[0X6];end;end;else NO[2]=QO[Oz[2]];local OC=0x2;do Oz=Re[KO];end;KO=KO+1;local ZC=NO[2];NO[OC+1]=ZC;NO[OC]=ZC[Oz[5]];do Oz=Re[KO];end;KO=KO+0X1;do NO[4]=Oz[0X2];end;KO=KO+1;OC=0X2;NO[OC]=NO[OC](NO[OC+0X0001],NO[OC+2]);jO=OC;Oz=Re[KO];KO=KO+1;do if NO[2]then KO=Oz[6];end;end;end;end;end;else if not(Iz<0X28)then do if not(Iz<0X2a)then if Iz~=43 then repeat local Q0,S0=De,(NO);if#Q0>0 then local sz={};for Yz,fz in D,Q0 do for Dk,lk in D,fz do if not(lk[1]==S0 and lk[0X2]>=0X0)then else local gx=(lk[2]);if not sz[gx]then sz[gx]={S0[gx]};end;lk[1]=sz[gx];lk[2]=1;end;end;end;end;until true;return;else NO[4]=QO[Oz[2]];KO=KO+0x01;KO=KO+1;do Oz=Re[KO];end;do KO=KO+1;end;if not NO[0X4]then KO=Oz[0X00006];end;end;else if Iz==41 then do NO[0x0]=nil;end;do Oz=Re[KO];end;KO=KO+1;(NO)[1]=QO[Oz[2]];KO=KO+0X1;local Sg=NO[1];do KO=KO+1;end;Oz=Re[KO];KO=KO+1;local hg=1;(NO)[hg+0x01]=Sg;NO[hg]=Sg[Oz[0X5]];Oz=Re[KO];KO=KO+0X01;(NO)[3]=Oz[0X002];do KO=KO+1;end;do hg=1;end;(NO)[hg]=NO[hg](NO[hg+1],NO[hg+0X2]);do jO=hg;end;do KO=KO+0X1;end;NO[0x2]=false;Oz=Re[KO];KO=KO+0X1;do(QO)[Oz[0x2]]=NO[0x00002];end;Oz=Re[KO];KO=KO+0X001;do KO=Oz[6];end;else NO[0X4]=QO[Oz[2]];KO=KO+1;KO=KO+1;KO=KO+1;jO=0X4;NO[jO]=NO[jO]();KO=KO+0X1;do KO=KO+1;end;Oz=Re[KO];KO=KO+1;if NO[0X4]then KO=Oz[0X6];end;end;end;end;else if not(Iz>=0X000026)then if Iz~=0X25 then NO[4]=QO[Oz[0X2]];KO=KO+0X1;KO=KO+1;Oz=Re[KO];KO=KO+1;(NO)[4]=NO[0X04][Oz[5]];do KO=KO+0x1;end;KO=KO+0X1;Oz=Re[KO];KO=KO+1;do NO[4]=NO[4][Oz[0X5]];end;do KO=KO+0X1;end;KO=KO+0X1;do Oz=Re[KO];end;KO=KO+0X1;QO[Oz[2]]=NO[0X04];local He=4;Oz=Re[KO];do KO=KO+1;end;local we=(NO[1]);do(NO)[He+1]=we;end;NO[He]=we[Oz[0X00005]];do KO=KO+0x001;end;(NO)[0X06]=true;KO=KO+1;do He=4;end;(NO[He])(NO[He+1],NO[He+0X2]);jO=He-0X1;Oz=Re[KO];do KO=KO+1;end;KO=Oz[0X6];else do(NO)[0X2]=QO[Oz[2]];end;Oz=Re[KO];KO=KO+1;NO[0x2]=NO[0x002][Oz[0X5]];Oz=Re[KO];KO=KO+0X1;if not NO[2]then do KO=Oz[6];end;end;end;else if Iz==39 then do(NO)[Oz[0x00007]]=Oz[0X2];end;else(NO)[3]=true;Oz=Re[KO];KO=KO+0x1;QO[Oz[2]]=NO[3];do Oz=Re[KO];end;KO=KO+1;do NO[0X0003]=QO[Oz[2]];end;Oz=Re[KO];KO=KO+0X1;if not(not NO[3])then else KO=Oz[6];end;end;end;end;end;else do if Iz>=0x033 then if Iz>=0x37 then if Iz>=0X39 then if Iz==58 then do(NO)[6]=NO[0X0003][Oz[5]];end;KO=KO+1;KO=KO+1;KO=KO+1;jO=6;(NO[jO])();do jO=jO-0x001;end;Oz=Re[KO];do KO=KO+0X1;end;do(NO)[0X6]=QO[Oz[2]];end;KO=KO+1;do KO=KO+1;end;do KO=KO+1;end;jO=0X6;(NO[jO])();jO=jO-1;KO=KO+1;KO=KO+1;do Oz=Re[KO];end;KO=KO+0X1;do NO[0X006]=NO[0X03][Oz[0X0005]];end;KO=KO+0x01;do KO=KO+1;end;do Oz=Re[KO];end;KO=KO+0X1;if not NO[0X0006]then KO=Oz[6];end;else do NO[0X6]=QO[Oz[2]];end;KO=KO+1;local Mu=(6);do KO=KO+0X0001;end;Oz=Re[KO];do KO=KO+0x1;end;do(NO)[7]=Oz[0X00002];end;KO=KO+0X01;(NO)[8]=NO[5];do KO=KO+0x1;end;NO[Mu](NO[Mu+0X1],NO[Mu+0X2]);jO=Mu-1;KO=KO+0X1;KO=KO+0X1;Oz=Re[KO];KO=KO+1;KO=Oz[6];end;else if Iz==0X0038 then(NO)[4]=QO[Oz[0x0002]];do KO=KO+1;end;KO=KO+1;do Oz=Re[KO];end;do KO=KO+1;end;NO[5]=QO[Oz[0x0002]];Oz=Re[KO];do KO=KO+1;end;(NO)[0X005]=NO[5][Oz[5]];KO=KO+1;KO=KO+1;Oz=Re[KO];KO=KO+1;NO[0X5]=NO[0x005][Oz[0X5]];Oz=Re[KO];local eN=(0X4);KO=KO+0X1;(NO)[0X00005]=NO[5][Oz[5]];KO=KO+0x0001;KO=KO+1;KO=KO+0x0001;(NO)[eN]=NO[eN](NO[eN+1]);jO=eN;KO=KO+0x1;KO=KO+0x00001;do Oz=Re[KO];end;KO=KO+1;(NO)[0X0005]=QO[Oz[0X2]];KO=KO+1;KO=KO+1;Oz=Re[KO];do KO=KO+0X1;end;(NO)[6]=Oz[2];Oz=Re[KO];do KO=KO+1;end;do NO[7]=Oz[2];end;do Oz=Re[KO];end;KO=KO+1;NO[0X8]=QO[Oz[2]];Oz=Re[KO];KO=KO+1;do(NO)[0x8]=NO[8][Oz[5]];end;do Oz=Re[KO];end;KO=KO+0X001;do NO[8]=NO[0X00008]==Oz[0X005];end;do Oz=Re[KO];end;KO=KO+0X1;if not(not NO[0X0008])then else KO=Oz[0X6];end;else local Nz=NO[3];local tz=(0X5);NO[tz+1]=Nz;NO[tz]=Nz[Oz[0X5]];do Oz=Re[KO];end;do KO=KO+0x01;end;do NO[0X7]=Oz[2];end;KO=KO+0X1;tz=0x5;(NO)[tz]=NO[tz](NO[tz+1],NO[tz+0X2]);jO=tz;KO=KO+1;KO=KO+0x01;Oz=Re[KO];do KO=KO+0x1;end;if NO[5]then KO=Oz[0x06];end;end;end;else if not(Iz<0X035)then if Iz~=54 then NO[Oz[7]]=O(NO[Oz[0X6]],NO[Oz[0x001]]);else do(NO)[4]=QO[Oz[2]];end;do Oz=Re[KO];end;do KO=KO+0X0001;end;NO[0X4]=NO[4][Oz[0x05]];Oz=Re[KO];KO=KO+1;(NO)[4]=NO[4][Oz[0X5]];Oz=Re[KO];KO=KO+1;NO[0x4]=NO[4][Oz[5]];KO=KO+0x1;KO=KO+0X1;Oz=Re[KO];do KO=KO+0X1;end;do if NO[0x4]~=Oz[5]then else do KO=Oz[0X7];end;end;end;end;else if Iz==0X34 then local WY,EY=Oz[7],Oz[0X6];if EY==0 then else jO=WY+EY-1;end;local QY=(Oz[0X1]);local jY,oY=nil,nil;if EY==1 then jY,oY=rC(NO[WY]());else jY,oY=rC(NO[WY](I(NO,WY+1,jO)));end;if QY~=0X1 then if QY==0 then jY=jY+WY-1;do jO=jY;end;else jY=WY+QY-2;jO=jY+1;end;local Wp=(0);for kC=WY,jY do Wp=Wp+0X1;NO[kC]=oY[Wp];end;else jO=WY-0x1;end;else do(NO)[4]=QO[Oz[0x2]];end;KO=KO+0x1;KO=KO+0X1;do Oz=Re[KO];end;KO=KO+0x1;NO[4]=NO[0x00004][Oz[5]];Oz=Re[KO];KO=KO+0X1;do NO[4]=NO[0X4][Oz[5]];end;KO=KO+1;KO=KO+0X00001;Oz=Re[KO];KO=KO+0x0001;if not(NO[4]<Oz[5])then do KO=Oz[0X007];end;end;end;end;end;else if Iz>=0X0002F then if not(Iz>=0x31)then if Iz==0X00030 then(NO)[Oz[0X7]]=NO[Oz[0x6]];else NO[0x2]=QO[Oz[2]];do KO=KO+1;end;KO=KO+1;Oz=Re[KO];KO=KO+0X1;NO[0x2]=NO[0x2][Oz[0X00005]];KO=KO+0x1;KO=KO+1;Oz=Re[KO];KO=KO+0x001;do NO[2]=NO[2][Oz[5]];end;KO=KO+0X0001;KO=KO+1;Oz=Re[KO];KO=KO+0X1;(NO)[2]=NO[2][Oz[5]];Oz=Re[KO];do KO=KO+0X00001;end;(NO)[3]=QO[Oz[2]];Oz=Re[KO];KO=KO+1;NO[0X0003]=NO[3][Oz[0X05]];Oz=Re[KO];do KO=KO+1;end;if not(NO[3]<=NO[0X2])then do KO=Oz[0X7];end;end;end;else if Iz==0X32 then(NO)[3]=QO[Oz[0X002]];do KO=KO+0X1;end;KO=KO+1;local UR=(0X4);Oz=Re[KO];do KO=KO+1;end;NO[4]=QO[Oz[2]];Oz=Re[KO];do KO=KO+0x1;end;local nR=(NO[4]);(NO)[UR+0X1]=nR;local KR=0X2;NO[UR]=nR[Oz[0X5]];KO=KO+1;do UR=0x0004;end;local AR=0x0;if KR==0 then else jO=UR+KR-0X00001;end;local mR,vR=nil,nil;if KR~=0X001 then mR,vR=rC(NO[UR](I(NO,UR+1,jO)));else do mR,vR=rC(NO[UR]());end;end;if AR==0X01 then jO=UR-0X0001;else if AR~=0X0 then mR=UR+AR-0x2;jO=mR+1;else mR=mR+UR-1;jO=mR;end;local Sg=(0);for T4=UR,mR do do Sg=Sg+0x001;end;(NO)[T4]=vR[Sg];end;end;KO=KO+0X01;UR=0X3;KR=0;AR=4;if KR==0X00000 then else jO=UR+KR-1;end;mR,vR=nil;do if KR~=1 then mR,vR=rC(NO[UR](I(NO,UR+1,jO)));else do mR,vR=rC(NO[UR]());end;end;end;if AR==1 then jO=UR-0X1;else do if AR==0X0 then mR=mR+UR-0X1;jO=mR;else mR=UR+AR-2;jO=mR+0x1;end;end;local vD=(0X000);do for Ee=UR,mR do vD=vD+0X001;NO[Ee]=vR[vD];end;end;end;do Oz=Re[KO];end;KO=KO+1;UR=0X3;local fR=g(function(...)d();for HH,rH in...do(d)(true,HH,rH);end;end);(fR)(NO[UR],NO[UR+0x1],NO[UR+2]);do jO=UR;end;NO[UR]=fR;KO=Oz[0X6];else(NO)[Oz[0X07]]={I({},0X00001,Oz[0X6])};end;end;else if Iz<45 then do NO[0X3]=QO[Oz[2]];end;do KO=KO+1;end;KO=KO+1;Oz=Re[KO];KO=KO+0X1;NO[0X00003]=NO[0X3][Oz[5]];do KO=KO+0X00001;end;KO=KO+0x001;Oz=Re[KO];do KO=KO+1;end;NO[0X0003]=NO[0X3][Oz[5]];Oz=Re[KO];KO=KO+1;do if not(NO[3]<Oz[0X5])then KO=Oz[0X7];end;end;else if Iz==46 then(NO)[0X5]=QO[Oz[2]];KO=KO+1;jO=0X5;(NO)[jO]=NO[jO]();Oz=Re[KO];KO=KO+1;if not(NO[0X5])then else KO=Oz[6];end;else(NO)[2]=QO[Oz[2]];KO=KO+0X1;KO=KO+1;Oz=Re[KO];KO=KO+0X1;if not(not NO[2])then else do KO=Oz[0X06];end;end;end;end;end;end;end;end;else if Iz>=14 then if Iz<21 then if Iz<0X11 then if Iz<0XF then KO=Oz[6];else if Iz~=16 then local wE,QE=4,(NO[1]);(NO)[wE+0X1]=QE;NO[wE]=QE[Oz[0X05]];KO=KO+0X0001;do wE=0X04;end;(NO[wE])(NO[wE+0X1]);do jO=wE-0X00001;end;KO=KO+0X00001;KO=KO+0X001;do Oz=Re[KO];end;KO=KO+1;do KO=Oz[6];end;else local NF=(0x08);NO[NF]=NO[NF](NO[NF+1]);jO=NF;KO=KO+0X0001;KO=KO+0X1;do Oz=Re[KO];end;do KO=KO+0X1;end;KO=Oz[6];end;end;else if Iz<19 then if Iz==0X00012 then NO[3]=QO[Oz[0X2]];do KO=KO+1;end;KO=KO+1;do Oz=Re[KO];end;KO=KO+1;NO[3]=NO[3][Oz[0X5]];KO=KO+0X1;do KO=KO+0X1;end;Oz=Re[KO];KO=KO+1;if not(NO[0X3])then else KO=Oz[6];end;else NO[4]=QO[Oz[2]];KO=KO+0X1;jO=4;NO[jO]=NO[jO]();Oz=Re[KO];KO=KO+0X1;if NO[4]then KO=Oz[0X6];end;end;else if Iz~=0x0014 then(NO)[0x4]=QO[Oz[0X2]];local eZ=nil;do Oz=Re[KO];end;do KO=KO+0X01;end;local vZ=(je[Oz[6]]);local mZ=vZ[0X8];local cZ=(#mZ);if cZ>0X00000 then eZ={};for km=0X001,cZ do local Fm=(mZ[km]);if Fm[0X1]==0X0 then(eZ)[km-0X01]={NO,Fm[0X02]};else eZ[km-0X1]=ve[Fm[2]];end;end;A(De,eZ);end;NO[0X5]=NC(eZ,QO,vZ);KO=KO+1;local IZ=0x0003;local nZ=4;local sZ=(2);if sZ~=0X0000 then do jO=nZ+sZ-0x1;end;end;local kZ,LZ=nil,(nil);if sZ~=0X01 then do kZ,LZ=rC(NO[nZ](I(NO,nZ+0X01,jO)));end;else do kZ,LZ=rC(NO[nZ]());end;end;if IZ~=1 then if IZ~=0x0 then kZ=nZ+IZ-2;do jO=kZ+1;end;else kZ=kZ+nZ-0X01;jO=kZ;end;local vH=(0);for yL=nZ,kZ do vH=vH+0X001;(NO)[yL]=LZ[vH];end;else do jO=nZ-1;end;end;Oz=Re[KO];do KO=KO+1;end;if NO[0X0004]then KO=Oz[6];end;else local LC,ZC=0X4,NO[1];NO[LC+0X01]=ZC;NO[LC]=ZC[Oz[0X5]];KO=KO+0X1;do LC=4;end;do NO[LC]=NO[LC](NO[LC+1]);end;jO=LC;Oz=Re[KO];do KO=KO+0x01;end;if not NO[0X004]then KO=Oz[6];end;end;end;end;else if Iz<25 then if Iz<0x0017 then do if Iz~=0X0016 then do if not NO[Oz[0X7]]then KO=Oz[6];end;end;else local UY=NO[1];local YY=0X0005;(NO)[YY+1]=UY;NO[YY]=UY[Oz[0X5]];KO=KO+0X1;do YY=0X5;end;(NO)[YY]=NO[YY](NO[YY+0x0001]);jO=YY;Oz=Re[KO];KO=KO+0X1;if not(not NO[0X05])then else do KO=Oz[6];end;end;end;end;else if Iz==24 then(NO)[4]=QO[Oz[2]];local Xl=(4);Oz=Re[KO];KO=KO+1;do(NO)[0x005]=Oz[0X002];end;do KO=KO+1;end;NO[Xl](NO[Xl+0X1]);do jO=Xl-1;end;KO=KO+1;do KO=KO+0X1;end;Oz=Re[KO];KO=KO+0x0001;(NO)[0X4]=QO[Oz[0X2]];Oz=Re[KO];KO=KO+1;if not(not NO[4])then else KO=Oz[0X6];end;else NO[0X03]=QO[Oz[0X2]];Oz=Re[KO];do KO=KO+1;end;(NO)[3]=NO[0X00003][Oz[0X5]];Oz=Re[KO];KO=KO+0X00001;if not(NO[0X03])then else KO=Oz[6];end;end;end;else if not(Iz<0X1b)then if Iz==0X1C then NO[5]=QO[Oz[2]];KO=KO+0X0001;jO=0X05;NO[jO]=NO[jO]();KO=KO+0X1;do KO=KO+1;end;Oz=Re[KO];KO=KO+0X1;if not(NO[0x05])then else do KO=Oz[6];end;end;else do(NO)[0X6]=QO[Oz[0X2]];end;do Oz=Re[KO];end;KO=KO+0X1;do(NO[5])[Oz[2]]=NO[6];end;do Oz=Re[KO];end;KO=KO+1;KO=Oz[6];end;else if Iz==0X1a then local bP=(Oz[7]);local NP=(NO[Oz[6]]);do(NO)[bP+1]=NP;end;(NO)[bP]=NP[Oz[0X00005]];else for Lb=Oz[7],Oz[6]do do(NO)[Lb]=nil;end;end;end;end;end;end;else if not(Iz<7)then if Iz>=10 then if Iz>=12 then if Iz~=13 then do(NO)[4]=QO[Oz[0x2]];end;KO=KO+1;do KO=KO+0X01;end;do KO=KO+0x1;end;jO=4;NO[jO]=NO[jO]();KO=KO+0x1;KO=KO+0x0001;do Oz=Re[KO];end;do KO=KO+0X1;end;if NO[0X00004]then KO=Oz[0x0006];end;else NO[4]=QO[Oz[0x2]];KO=KO+1;jO=0X0004;NO[jO]=NO[jO]();do Oz=Re[KO];end;KO=KO+1;if not(NO[0X4])then else KO=Oz[0x6];end;end;else do if Iz~=0X0B then(NO)[0X2]=QO[Oz[2]];KO=KO+1;KO=KO+0X1;Oz=Re[KO];KO=KO+1;NO[2]=NO[0X2][Oz[5]];KO=KO+0x01;KO=KO+1;Oz=Re[KO];KO=KO+0X1;(NO)[2]=NO[0X2][Oz[5]];KO=KO+0X1;KO=KO+0X1;Oz=Re[KO];do KO=KO+0x1;end;if not(NO[0X2]<Oz[5])then do KO=Oz[7];end;end;else(NO)[3]=QO[Oz[0X0002]];KO=KO+1;jO=0x03;NO[jO]=NO[jO]();Oz=Re[KO];KO=KO+0X1;if not(NO[0X3])then else KO=Oz[0X0006];end;end;end;end;else if not(Iz<8)then if Iz==0X00009 then do NO[10]=NO[0X7][Oz[5]];end;KO=KO+1;KO=KO+1;do Oz=Re[KO];end;KO=KO+1;NO[0X0B]=NO[0X0004][Oz[5]];KO=KO+0x1;KO=KO+1;Oz=Re[KO];KO=KO+0X1;do if not(NO[0XA]<NO[0xb])then KO=Oz[7];end;end;else(NO)[0X4]=QO[Oz[0X2]];Oz=Re[KO];KO=KO+0x0001;do(NO)[5]=Oz[2];end;Oz=Re[KO];KO=KO+0X1;(NO)[6]=Oz[2];do Oz=Re[KO];end;do KO=KO+1;end;(NO)[7]=Oz[0X002];local gG=(4);KO=KO+1;jO=gG+4-1;NO[gG]=NO[gG](I(NO,gG+0X001,jO));jO=gG;KO=KO+1;do NO[0X3]=NO[0X04];end;Oz=Re[KO];KO=KO+0x001;do KO=Oz[0X6];end;end;else NO[4]=QO[Oz[2]];KO=KO+0X1;do KO=KO+0X1;end;KO=KO+0X1;do jO=4;end;NO[jO]=NO[jO]();Oz=Re[KO];KO=KO+0X001;if NO[4]then KO=Oz[6];end;end;end;else if Iz<0X3 then if not(Iz<0X1)then if Iz~=0X02 then do NO[8]=NO[0x7][Oz[0X5]];end;local gL=0X0009;KO=KO+1;KO=KO+1;do Oz=Re[KO];end;KO=KO+1;NO[9]=QO[Oz[0X2]];Oz=Re[KO];KO=KO+1;(NO)[10]=QO[Oz[0X0002]];KO=KO+1;KO=KO+0x1;do Oz=Re[KO];end;KO=KO+0X1;(NO)[10]=NO[10][Oz[0X5]];KO=KO+0X1;do KO=KO+0X001;end;KO=KO+1;do NO[gL]=NO[gL](NO[gL+1]);end;jO=gL;do KO=KO+0X00001;end;do KO=KO+0x1;end;Oz=Re[KO];do KO=KO+0X001;end;if NO[9]then KO=Oz[6];end;else NO[7]=false;Oz=Re[KO];KO=KO+0x1;QO[Oz[0X2]]=NO[0X007];do KO=KO+0X0001;end;(NO)[0x07]=false;Oz=Re[KO];KO=KO+0X1;(QO)[Oz[2]]=NO[7];Oz=Re[KO];local Tb=(0X7);KO=KO+1;local xb=NO[1];do(NO)[Tb+1]=xb;end;do NO[Tb]=xb[Oz[0x5]];end;do KO=KO+1;end;Tb=0X07;(NO[Tb])(NO[Tb+1]);jO=Tb-0X01;KO=KO+0X0001;repeat local p2,n2=De,NO;if#p2>0 then local Du={};do for rV,uV in D,p2 do for NL,dL in D,uV do do if dL[0X1]==n2 and dL[2]>=3 then local yP=(dL[2]);if not(not Du[yP])then else do(Du)[yP]={n2[yP]};end;end;do dL[0X0001]=Du[yP];end;dL[2]=0x1;end;end;end;end;end;end;until true;Oz=Re[KO];do KO=KO+0X1;end;KO=Oz[6];end;else do NO[0X06]=QO[Oz[2]];end;do KO=KO+0X01;end;do jO=6;end;(NO)[jO]=NO[jO]();do KO=KO+1;end;KO=KO+0X0001;Oz=Re[KO];KO=KO+0X1;if NO[0X006]then KO=Oz[6];end;end;else if not(Iz>=5)then if Iz~=0X4 then local NK=Oz[6];local PK=(NO[NK]);for h7=NK+0X1,Oz[1]do do PK=PK..NO[h7];end;end;(NO)[Oz[0x7]]=PK;else NO[Oz[7]]=QO[Oz[2]];end;else if Iz~=0X6 then NO[6]=Oz[0X02];local xn=0X4;Oz=Re[KO];KO=KO+0X1;(NO)[0X7]=Oz[0X0002]/Oz[0X5];KO=KO+1;do jO=xn+4-1;end;do NO[xn]=NO[xn](I(NO,xn+0X1,jO));end;jO=xn;do Oz=Re[KO];end;KO=KO+0X0001;if not(not(NO[0x03]<NO[0X4]))then else KO=Oz[0X7];end;else do BO[Oz[0X6]]=NO[Oz[7]];end;end;end;end;end;end;end;end;end;end;end;end);if tO then if EO then if IO~=0X001 then do return NO[rO](I(NO,rO+0x1,jO));end;else return NO[rO]();end;elseif rO then return I(NO,rO,IO);end;else do if f(EO)=='\115\116rin\g'then if e(EO,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(EO,"\^\.\-\058\037d\+\058\032")then(b)("\Lura\112\h \S\cr\i\112\116:"..(Ae[KO-1]or"(internal)")..'\058\ '..r(EO),0);else(b)(EO,0X0000);end;else b(EO,0);end;end;end;end;end;end;end;end;else if not(me>=76)then if not(me>=0X000049)then do if me<71 then fe=function(...)local OC,LC=0x00,{};local KC=1;local uC=m();local SC=({[0X2]=LC,[1]=ce});local YC,kC=rC(...);local ZC=((uC==F and Le or uC));YC=YC-1;do for Rm=0X0,YC do if not(he>Rm)then break;else(LC)[Rm]=kC[Rm+1];end;end;end;if not ge then kC=nil;elseif xe then LC[he]={n=YC>=he and YC-he+1 or 0,I(kC,he+1,YC+1)};end;if ZC==uC then else(i)(fe,ZC);end;local TC,Go,Vo,Xo=j(function()while true do local Rl=Re[KC];local Al=(Rl[4]);do KC=KC+1;end;do if Al<12 then do if Al>=6 then if Al<9 then do if Al<0X007 then do(LC)[0X0]=ZC[Rl[2]];end;do Rl=Re[KC];end;KC=KC+1;(LC)[0x0]=LC[0][Rl[0x0005]];Rl=Re[KC];KC=KC+1;local vR=0x0;LC[0X1]=Rl[0X2];KC=KC+0X1;(LC)[vR]=LC[vR](LC[vR+1]);OC=vR;KC=KC+0X0001;KC=KC+0X1;do Rl=Re[KC];end;KC=KC+1;if not LC[0X0000]then KC=Rl[6];end;else do if Al==8 then(LC)[Rl[0X0007]]=L(LC[Rl[6]],LC[Rl[1]]);else do LC[Rl[7]]=ZC[Rl[2]];end;end;end;end;end;else do if not(Al>=0XA)then(LC)[Rl[7]]={I({},1,Rl[0X0006])};else if Al==11 then LC[Rl[7]]=LC[Rl[0X6]]==LC[Rl[0X1]];else LC[0]=ZC[Rl[2]];KC=KC+1;KC=KC+0x1;local tT=(0);Rl=Re[KC];KC=KC+0x1;do LC[0X1]=Rl[2];end;KC=KC+1;(LC)[tT]=LC[tT](LC[tT+0X1]);OC=tT;do Rl=Re[KC];end;do KC=KC+1;end;if not(not LC[0X000])then else KC=Rl[0x6];end;end;end;end;end;else if Al>=0X03 then do if not(Al>=0X0004)then(LC)[0]=ZC[Rl[2]];Rl=Re[KC];do KC=KC+0X1;end;local Vd=je[Rl[0x00006]];local Id=(nil);local Ed=(0X0);local cd=(Vd[8]);local Nd=(#cd);if Nd>0 then Id={};do for Qw=1,Nd do local ww=cd[Qw];do if ww[1]~=0 then(Id)[Qw-1]=ve[ww[0X2]];else(Id)[Qw-1]={LC,ww[0X2]};end;end;end;end;(A)(De,Id);end;LC[0X1]=NC(Id,ZC,Vd);KC=KC+1;LC[Ed](LC[Ed+0X1]);do OC=Ed-1;end;KC=KC+1;do KC=KC+0x0001;end;Rl=Re[KC];KC=KC+0X1;do LC[0X0]=ZC[Rl[2]];end;Rl=Re[KC];do KC=KC+0X00001;end;LC[1]=Rl[2];KC=KC+0X00001;do Ed=0;end;do LC[Ed]=LC[Ed](LC[Ed+0X0001]);end;OC=Ed;Rl=Re[KC];KC=KC+1;if not LC[0]then do KC=Rl[0X6];end;end;else if Al==0X5 then LC[0X0]=ZC[Rl[0X2]];do Rl=Re[KC];end;KC=KC+1;do(LC)[0x0]=LC[0][Rl[0x00005]];end;do KC=KC+0x001;end;KC=KC+0X0001;do Rl=Re[KC];end;KC=KC+0X1;if not LC[0X000]then KC=Rl[6];end;else local Fa=(Rl[0X6]);local Xa=(LC[Fa]);for V3=Fa+1,Rl[1]do Xa=Xa..LC[V3];end;(LC)[Rl[0X007]]=Xa;end;end;end;else if not(Al<0x1)then if Al==2 then local YT=ve[0];(LC)[0]=YT[0X0001][YT[0X02]];local vT=0X00;Rl=Re[KC];do KC=KC+1;end;local yT=(LC[0]);LC[vT+0X001]=yT;do LC[vT]=yT[Rl[0X00005]];end;KC=KC+0x01;vT=0X0;(LC[vT])(LC[vT+1]);OC=vT-0X01;do KC=KC+1;end;repeat local Qq,fq=De,(LC);if not(#Qq>0)then else local kt=({});do for B7,m7 in D,Qq do for Nw,kw in D,m7 do if not(kw[1]==fq and kw[2]>=0)then else local jt=(kw[0X00002]);if not(not kt[jt])then else do kt[jt]={fq[jt]};end;end;do(kw)[1]=kt[jt];end;do kw[2]=0X1;end;end;end;end;end;end;until true;return;else repeat local x2,L2=De,LC;if#x2>0X0 then local gg=({});for S6,r6 in D,x2 do for D4,t4 in D,r6 do if not(t4[1]==L2 and t4[0x2]>=0)then else local ny=t4[0X2];if not gg[ny]then gg[ny]={L2[ny]};end;t4[0X1]=gg[ny];t4[0x2]=1;end;end;end;end;until true;return;end;else do(LC)[Rl[7]]=Rl[0X002];end;end;end;end;end;else if Al>=18 then if not(Al>=21)then if Al>=0X13 then if Al~=0X14 then LC[1]=ZC[Rl[2]];KC=KC+0x1;KC=KC+0X00001;Rl=Re[KC];KC=KC+0X001;if not LC[0X1]then KC=Rl[0X006];end;else(LC)[0X0000]=ZC[Rl[0X02]];KC=KC+1;KC=KC+1;Rl=Re[KC];do KC=KC+1;end;if LC[0X0]then KC=Rl[6];end;end;else for Bd=Rl[7],Rl[6]do do LC[Bd]=nil;end;end;end;else if Al>=22 then if Al~=0X17 then LC[0]=ZC[Rl[0X2]];Rl=Re[KC];KC=KC+1;do LC[0]=LC[0][Rl[0X5]];end;KC=KC+1;KC=KC+1;Rl=Re[KC];KC=KC+1;do if not(not LC[0X0])then else KC=Rl[0X6];end;end;else local GM=Rl[0X7];local MM,BM=LC[GM]();if MM then KC=Rl[0x6];(LC)[GM+0X3]=BM;end;end;else local M7=(nil);local u7=je[Rl[0X6]];local C7=u7[8];local Y7=(#C7);if Y7>0 then do M7={};end;do for lr=0X1,Y7 do local sr=C7[lr];if sr[1]~=0x0 then(M7)[lr-1]=ve[sr[2]];else M7[lr-1]={LC,sr[0x2]};end;end;end;A(De,M7);end;LC[Rl[0x7]]=NC(M7,ZC,u7);end;end;else if Al>=0X000F then do if Al>=0x00010 then if Al~=0x11 then KC=Rl[0x6];else LC[0X0]=ZC[Rl[2]];KC=KC+1;do KC=KC+0X1;end;do KC=KC+0x1;end;OC=0x0;do LC[OC]=LC[OC]();end;do Rl=Re[KC];end;KC=KC+1;if not(LC[0X00000])then else KC=Rl[0X00006];end;end;else end;end;else if not(Al<0xD)then if Al~=14 then local Hu,zu=ve[0X0],0X0;do LC[0]=Hu[1][Hu[2]];end;Rl=Re[KC];KC=KC+0X1;local Au=(LC[0X000]);(LC)[zu+1]=Au;do(LC)[zu]=Au[Rl[0X05]];end;KC=KC+0x1;zu=0X00;LC[zu]=LC[zu](LC[zu+1]);OC=zu;do KC=KC+0X01;end;KC=KC+1;Rl=Re[KC];KC=KC+0X1;if not LC[0X0]then KC=Rl[0X6];end;else if LC[Rl[6]]~=LC[Rl[1]]then KC=Rl[7];end;end;else(LC)[0x0000]=ZC[Rl[2]];KC=KC+1;OC=0;(LC)[OC]=LC[OC]();Rl=Re[KC];do KC=KC+0X001;end;do if not(LC[0]<Rl[5])then else KC=Rl[7];end;end;end;end;end;end;end;end;end);do if TC then if Go then if Xo==1 then return LC[Vo]();else return LC[Vo](I(LC,Vo+1,OC));end;elseif not(Vo)then else return I(LC,Vo,Xo);end;else if f(Go)=="\st\114i\110\g"then do if e(Go,'\097tte\109pt\ t\o\ \121\105\101\l\100 acr\111ss\ \m\etam\101t\ho\100\047\C%-\099a\ll \098\111\117\110\d\097r\y')then return coroutine.yield();end;end;if not(e(Go,"\^\.-\:%\100+:\ "))then(b)(Go,0X00000);else b("Luraph Script:"..(Ae[KC-0x1]or"(internal)")..": "..r(Go),0X0);end;else b(Go,0);end;end;end;end;else if me~=72 then fe=function(...)local M9=(0X1);local B9={};local S9=0;local o9=({[0X2]=B9,[1]=ce});local V9=m();local y9,l9=rC(...);local b9=(V9==F and Le or V9);do y9=y9-0X001;end;for LE=0,y9 do if not(he>LE)then break;else B9[LE]=l9[LE+1];end;end;if not ge then l9=nil;elseif xe then do B9[he]={n=y9>=he and y9-he+0X01 or 0,I(l9,he+0x001,y9+0X1)};end;end;do if b9~=V9 then(i)(fe,b9);end;end;local h9,r9,D9,a9=j(function()while true do local AI=(Re[M9]);local NI=(AI[4]);do M9=M9+0x1;end;if not(NI>=0X7)then if NI<3 then do if not(NI>=0x1)then(B9)[AI[7]]=b9[AI[2]];else if NI~=2 then local z4=(ve[0]);(B9)[0]=z4[1][z4[2]];M9=M9+1;M9=M9+1;do AI=Re[M9];end;M9=M9+1;do B9[1]=AI[0X00002];end;do M9=M9+0X1;end;repeat local SG,JG=De,(B9);if not(#SG>0X000)then else local Lg=({});for wp,ap in D,SG do for JK,fK in D,ap do do if not(fK[1]==JG and fK[0X2]>=0X0)then else local Vi=fK[0X2];if not(not Lg[Vi])then else(Lg)[Vi]={JG[Vi]};end;fK[1]=Lg[Vi];fK[0X2]=1;end;end;end;end;end;until true;local F4=0X00;S9=F4+1;do return true,F4,2;end;else B9[AI[0x7]]=B9[AI[6]]/B9[AI[0x1]];end;end;end;else if NI>=5 then if NI==6 then do if B9[AI[0X6]]==B9[AI[1]]then else M9=AI[7];end;end;else local Sz=je[AI[0X6]];local Fz=Sz[8];local hz=nil;local Pz=#Fz;if not(Pz>0x0)then else hz={};for Ev=1,Pz do local hv=Fz[Ev];if hv[0x1]==0X0000 then do hz[Ev-1]={B9,hv[2]};end;else do(hz)[Ev-1]=ve[hv[0X2]];end;end;end;(A)(De,hz);end;B9[AI[7]]=NC(hz,b9,Sz);end;else do if NI~=4 then if not B9[AI[0X0007]]then do M9=AI[6];end;end;else(B9)[AI[0X007]]=B9[AI[6]]^B9[AI[1]];end;end;end;end;else if NI>=10 then if not(NI<12)then do if NI~=0xd then repeat local z0,E0=De,(B9);do if not(#z0>0X0000)then else local wO=({});do for ee,Ge in D,z0 do for rc,Gc in D,Ge do if not(Gc[0X00001]==E0 and Gc[2]>=0x0)then else local B_=(Gc[2]);if not wO[B_]then do wO[B_]={E0[B_]};end;end;(Gc)[0x01]=wO[B_];Gc[2]=0X0001;end;end;end;end;end;end;until true;do return false,AI[0X007],S9;end;else end;end;else if NI~=0X0b then B9[AI[7]]={I({},0x1,AI[0x0006])};else(B9)[AI[7]]=AI[0x2];end;end;else if NI<8 then M9=AI[6];else do if NI~=9 then for M7=AI[0x007],AI[6]do B9[M7]=nil;end;else repeat local yu,nu=De,(B9);do if not(#yu>0)then else local mQ={};for Ru,su in D,yu do for Za,ea in D,su do if not(ea[0x1]==nu and ea[0X2]>=0X00)then else local dF=ea[0X2];if not mQ[dF]then mQ[dF]={nu[dF]};end;ea[1]=mQ[dF];(ea)[2]=1;end;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end);if h9 then if r9 then do if a9~=1 then return B9[D9](I(B9,D9+1,S9));else return B9[D9]();end;end;elseif D9 then do return I(B9,D9,a9);end;end;else do if f(r9)~="string"then(b)(r9,0);else do if not(e(r9,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(e(r9,"^.\-\058%\100\043\058\ "))then(b)(r9,0X0);else(b)('L\117rap\h \Scr\ip\116:'..(Ae[M9-0X00001]or"\(in\116er\110\097\l\)")..":\ "..r(r9),0X00);end;end;end;end;end;else fe=function(...)local vT,XT=1,({});local xT=(m());local jT,LT=rC(...);local TT={[0X2]=XT,[1]=ce};jT=jT-1;for g5=0,jT do if not(he>g5)then break;else do(XT)[g5]=LT[g5+1];end;end;end;local VT=(xT==F and Le or xT);if not ge then LT=nil;elseif xe then do XT[he]={n=jT>=he and jT-he+1 or 0,I(LT,he+0X01,jT+0X00001)};end;end;local AT=0;if VT~=xT then i(fe,VT);end;local pT,BT,dT,rT=j(function()while true do local dF=Re[vT];local sF=dF[0x00004];vT=vT+1;do if sF>=15 then do if not(sF>=0X000016)then if not(sF<0x012)then if not(sF<0x14)then if sF==0x15 then do(XT)[0X2]=VT[dF[2]];end;local JH=2;do dF=Re[vT];end;vT=vT+0X1;XT[0X3]=dF[2];vT=vT+0X1;do XT[JH]=XT[JH](XT[JH+0X00001]);end;do AT=JH;end;dF=Re[vT];vT=vT+0X1;if not XT[2]then vT=dF[6];end;else do vT=dF[0X6];end;end;else if sF~=19 then(XT)[2]=VT[dF[0X2]];vT=vT+0X1;vT=vT+1;dF=Re[vT];vT=vT+1;XT[0x2][dF[2]]=dF[0X05];do vT=vT+1;end;XT[2]=false;do dF=Re[vT];end;do vT=vT+0X1;end;(VT)[dF[2]]=XT[0x0002];vT=vT+1;repeat local e0,w0=De,XT;if#e0>0X000 then local Jv=({});for tN,hN in D,e0 do do for r1,v1 in D,hN do do if v1[1]==w0 and v1[0x2]>=0 then local ef=v1[2];if not(not Jv[ef])then else Jv[ef]={w0[ef]};end;do v1[1]=Jv[ef];end;v1[2]=1;end;end;end;end;end;end;until true;return;else XT[2]=VT[dF[2]];vT=vT+0X1;do vT=vT+1;end;do dF=Re[vT];end;do vT=vT+1;end;(XT[2])[dF[0X2]]=dF[0X0005];vT=vT+0X1;repeat local vI,XI=De,(XT);if#vI>0x0 then local EX={};for v1,i1 in D,vI do for Kx,Zx in D,i1 do do if Zx[1]==XI and Zx[0X002]>=0 then local XB=Zx[2];do if not EX[XB]then EX[XB]={XI[XB]};end;end;Zx[0x1]=EX[XB];Zx[0X2]=0X1;end;end;end;end;end;until true;return;end;end;else if sF<16 then XT[2]=VT[dF[2]];vT=vT+1;vT=vT+1;dF=Re[vT];vT=vT+1;XT[3]=dF[0X02];local ll=0X02;dF=Re[vT];vT=vT+1;do XT[0x0004]=dF[2];end;vT=vT+1;XT[ll]=XT[ll](XT[ll+0X001],XT[ll+0X02]);AT=ll;dF=Re[vT];vT=vT+0x00001;if not(XT[2])then else vT=dF[6];end;else if sF==0X11 then XT[dF[7]]=XT[dF[6]]+XT[dF[0X1]];else XT[dF[7]]=true;end;end;end;else if not(sF<26)then if sF<28 then if sF==27 then do XT[2]=VT[dF[2]];end;dF=Re[vT];vT=vT+0X1;local J9=2;XT[0X3]=dF[0X2];dF=Re[vT];vT=vT+1;do XT[4]=dF[2];end;vT=vT+1;(XT)[J9]=XT[J9](XT[J9+1],XT[J9+0x0002]);AT=J9;vT=vT+1;do vT=vT+0x1;end;do dF=Re[vT];end;vT=vT+1;do if not(XT[2])then else vT=dF[0X6];end;end;else do XT[2]=VT[dF[2]];end;do dF=Re[vT];end;vT=vT+0X01;XT[0X3]=dF[0X2];local KZ=(2);do dF=Re[vT];end;do vT=vT+0X001;end;(XT)[0x4]=dF[0X02];vT=vT+1;XT[KZ]=XT[KZ](XT[KZ+0X01],XT[KZ+0X2]);AT=KZ;dF=Re[vT];vT=vT+1;if not(XT[0X2])then else do vT=dF[6];end;end;end;else do if sF~=0X01d then local xa=je[dF[0X6]];local ua=(nil);local va=xa[8];local Ka=#va;do if not(Ka>0)then else ua={};for q5=1,Ka do local s5=va[q5];if s5[1]~=0 then do ua[q5-0X001]=ve[s5[2]];end;else ua[q5-1]={XT,s5[2]};end;end;(A)(De,ua);end;end;(XT)[dF[0X07]]=NC(ua,VT,xa);else do XT[0X00]=VT[dF[2]];end;local dj=(0x0);dF=Re[vT];local Ij=(3);do vT=vT+0x1;end;(XT)[0X1]=VT[dF[0X2]];do dF=Re[vT];end;vT=vT+0X1;do XT[0X002]=dF[2];end;dF=Re[vT];vT=vT+1;(XT)[0X3]=VT[dF[2]];dF=Re[vT];vT=vT+0X001;do XT[3]=XT[3][dF[0X0005]];end;vT=vT+0X1;local oj=0X0004;if oj~=0X0 then AT=dj+oj-0X1;end;local Wj,uj=nil,nil;do if oj~=0X1 then do Wj,uj=rC(XT[dj](I(XT,dj+0x01,AT)));end;else Wj,uj=rC(XT[dj]());end;end;if Ij~=0X1 then if Ij~=0x0 then Wj=dj+Ij-0x2;AT=Wj+1;else Wj=Wj+dj-0x001;AT=Wj;end;local Xe=(0);for hg=dj,Wj do do Xe=Xe+0X00001;end;do XT[hg]=uj[Xe];end;end;else do AT=dj-0X001;end;end;do dF=Re[vT];end;vT=vT+1;do if XT[0X00001]==dF[0X05]then vT=dF[7];end;end;end;end;end;else if sF<24 then if sF==0X17 then do XT[dF[7]]=XT[dF[0X06]]<XT[dF[1]];end;else(XT)[dF[0X007]]={I({},1,dF[6])};end;else if sF==0X19 then do XT[dF[7]]=XT[dF[6]]/XT[dF[1]];end;else end;end;end;end;end;else if not(sF<0x00007)then if not(sF>=11)then do if not(sF<0x09)then if sF==0xA then do repeat local AB,EB=De,(XT);if not(#AB>0X0)then else local Cn={};for q1,c1 in D,AB do do for iT,aT in D,c1 do do if aT[1]==EB and aT[2]>=0X0 then local eQ=aT[0x2];if not(not Cn[eQ])then else(Cn)[eQ]={EB[eQ]};end;do aT[1]=Cn[eQ];end;do aT[2]=1;end;end;end;end;end;end;end;until true;end;do return;end;else do XT[0X2]=VT[dF[2]];end;dF=Re[vT];vT=vT+1;(XT)[0X3]=dF[0X002];dF=Re[vT];local ik=0x00002;vT=vT+1;do XT[4]=dF[0X2];end;vT=vT+1;XT[ik]=XT[ik](XT[ik+1],XT[ik+0x002]);AT=ik;vT=vT+1;do vT=vT+1;end;dF=Re[vT];vT=vT+0x1;if XT[0X00002]then vT=dF[6];end;end;else if sF==0X00008 then XT[2]=VT[dF[2]];vT=vT+0x1;vT=vT+0X00001;dF=Re[vT];vT=vT+0X1;XT[2]=XT[0X2][dF[5]];vT=vT+0x0001;vT=vT+1;dF=Re[vT];vT=vT+1;(XT)[2]=XT[2][dF[0X5]];do vT=vT+1;end;do vT=vT+1;end;dF=Re[vT];do vT=vT+1;end;if not(not(XT[2]<dF[0X5]))then else vT=dF[7];end;else XT[0X2]=false;dF=Re[vT];vT=vT+0X00001;(VT)[dF[0X2]]=XT[2];dF=Re[vT];vT=vT+0X1;(XT)[0X0002]=VT[dF[0x2]];dF=Re[vT];vT=vT+1;(XT)[2]=XT[2][dF[0x5]];vT=vT+1;vT=vT+1;do dF=Re[vT];end;vT=vT+1;(XT)[2]=XT[2][dF[5]];dF=Re[vT];vT=vT+0x1;if not(dF[2]<=XT[2])then vT=dF[7];end;end;end;end;else if sF>=0Xd then if sF~=0x0e then if XT[dF[6]]~=dF[5]then do vT=dF[0X7];end;end;else for ZH=dF[0X00007],dF[6]do(XT)[ZH]=nil;end;end;else if sF==0X000C then(XT)[0x3]=VT[dF[0x2]];vT=vT+1;vT=vT+1;do dF=Re[vT];end;vT=vT+0x1;do(XT)[0X0003]=XT[3][dF[0X5]];end;vT=vT+0X1;vT=vT+1;do dF=Re[vT];end;vT=vT+0X01;if XT[3]then vT=dF[0X0006];end;else XT[dF[7]]=XT[dF[0x6]]~=XT[dF[1]];end;end;end;else if not(sF<0x03)then if not(sF>=0X5)then if sF==4 then(XT)[2]=VT[dF[0X2]];do vT=vT+0X1;end;vT=vT+1;do dF=Re[vT];end;vT=vT+1;(XT)[0X2]=XT[2][dF[0X5]];do vT=vT+1;end;do vT=vT+0X1;end;do dF=Re[vT];end;vT=vT+0X1;if not XT[2]then vT=dF[6];end;else XT[2]=true;dF=Re[vT];do vT=vT+0x01;end;(VT)[dF[0X2]]=XT[2];dF=Re[vT];do vT=vT+1;end;vT=dF[0X0006];end;else if sF==6 then XT[0X2]=VT[dF[0x002]];vT=vT+0X01;vT=vT+1;dF=Re[vT];vT=vT+1;XT[0X3]=dF[2];do vT=vT+1;end;local cv=(2);(XT)[cv]=XT[cv](XT[cv+0x1]);AT=cv;vT=vT+0X01;(XT)[2]=not XT[0X2];dF=Re[vT];do vT=vT+0X00001;end;(VT)[dF[0X02]]=XT[0X00002];dF=Re[vT];vT=vT+0X1;vT=dF[6];else do(XT)[dF[0X7]]=XT[dF[0x6]]*XT[dF[1]];end;end;end;else do if not(sF<1)then if sF==0X2 then XT[dF[0X7]]=VT[dF[2]];else(XT)[2]=VT[dF[2]];local Qp=(0X00002);dF=Re[vT];do vT=vT+0X1;end;do XT[0X03]=dF[0x2];end;do vT=vT+0x1;end;XT[Qp]=XT[Qp](XT[Qp+0X001]);do AT=Qp;end;do dF=Re[vT];end;vT=vT+0x1;if not XT[2]then vT=dF[0X6];end;end;else(XT)[dF[0X00007]]=dF[0X2];end;end;end;end;end;end;end;end);if not(pT)then if f(BT)~="string"then(b)(BT,0);else if e(BT,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(BT,"^\.\-:\%\d+\:\ ")then(b)("L\117\114\097\112\h\ \Scr\i\p\116\058"..(Ae[vT-1]or"(internal)")..'\058 '..r(BT),0);else b(BT,0);end;end;else if BT then if rT~=1 then do return XT[dT](I(XT,dT+1,AT));end;else return XT[dT]();end;elseif dT then return I(XT,dT,rT);end;end;end;end;end;end;else if not(me>=0X0004A)then do fe=function(...)local np={};local xp=1;local Vp=(m());local ep,Qp=rC(...);local Ep={[1]=ce,[0X2]=np};ep=ep-1;local fp=(Vp==F and Le or Vp);for Do=0,ep do if he>Do then(np)[Do]=Qp[Do+1];else break;end;end;if not ge then Qp=nil;elseif xe then do np[he]={n=ep>=he and ep-he+1 or 0X0,I(Qp,he+0X1,ep+1)};end;end;local Rp=(0X0);if fp~=Vp then i(fe,fp);end;local kp,Ap,pp,wp=j(function()while true do local I4=Re[xp];local D4=I4[4];xp=xp+1;if D4<0X007 then if not(D4>=3)then do if not(D4<1)then if D4==0x2 then(np)[I4[7]]={I({},1,I4[0X6])};else np[I4[0X07]]=np[I4[0X6]][np[I4[0X1]]];end;else do xp=I4[0x6];end;end;end;else if D4<0X5 then if D4==0x00004 then else local QK,wK=I4[7],np[I4[6]];np[QK+0x1]=wK;(np)[QK]=wK[I4[0X5]];end;else if D4==6 then do np[I4[0x0007]]=-np[I4[0X006]];end;else local Fx=je[I4[6]];local fx=Fx[8];local Sx,Jx=#fx,(nil);if not(Sx>0)then else Jx={};do for t7=0X1,Sx do local d7=fx[t7];do if d7[0X1]==0X0 then Jx[t7-0x00001]={np,d7[0X2]};else Jx[t7-1]=ve[d7[0X0002]];end;end;end;end;(A)(De,Jx);end;np[I4[0X7]]=NC(Jx,fp,Fx);end;end;end;else if D4>=0X0000B then if not(D4<13)then if D4==0x000E then(Ep)[I4[0X6]]=np[I4[7]];else(np)[I4[0X7]]=I4[0x2];end;else if D4~=12 then do for wb=I4[0X00007],I4[0x6]do np[wb]=nil;end;end;else(np)[0]=fp[I4[2]];local AD=(0);do I4=Re[xp];end;xp=xp+1;local DD=(np[0]);(np)[AD+1]=DD;do np[AD]=DD[I4[5]];end;I4=Re[xp];xp=xp+0X1;(np)[0x2]=I4[0X2];do xp=xp+1;end;do AD=0;end;np[AD]=np[AD](np[AD+0x1],np[AD+2]);do Rp=AD;end;do I4=Re[xp];end;xp=xp+0X001;np[1]=fp[I4[2]];I4=Re[xp];xp=xp+0X01;do(np)[1]=np[0X1][I4[5]];end;xp=xp+1;xp=xp+0X00001;do I4=Re[xp];end;local UD=(je[I4[0X6]]);local cD=(UD[8]);xp=xp+0X1;local SD=(nil);local fD=(#cD);if not(fD>0x0000)then else SD={};do for Lb=1,fD do local rb=cD[Lb];do if rb[0X00001]==0 then do SD[Lb-0X0001]={np,rb[2]};end;else(SD)[Lb-0X001]=ve[rb[0X2]];end;end;end;end;A(De,SD);end;np[2]=NC(SD,fp,UD);xp=xp+0X001;AD=0x1;np[AD](np[AD+1]);do Rp=AD-1;end;xp=xp+0X001;xp=xp+1;xp=xp+0X1;repeat local ab,qb=De,(np);if#ab>0 then local dD=({});for l9,f9 in D,ab do for o4,v4 in D,f9 do if v4[1]==qb and v4[2]>=0 then local nw=(v4[0x002]);do if not dD[nw]then do(dD)[nw]={qb[nw]};end;end;end;v4[1]=dD[nw];v4[0X2]=0x01;end;end;end;end;until true;return;end;end;else if D4>=0X9 then if D4==10 then local tS=I4[7];for R7=tS,tS+(I4[6]-1)do(np)[R7]=Qp[he+(R7-tS)+0X01];end;else(np)[I4[7]]=T(np[I4[6]]);end;else do if D4~=0X8 then do np[I4[0x00007]]=np[I4[0X6]]%np[I4[0X1]];end;else(np)[I4[0X7]]=fp[I4[2]];end;end;end;end;end;end;end);if not(kp)then do if f(Ap)=='str\105\110\g'then if e(Ap,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if e(Ap,"^.-:%d+: ")then b("\L\117r\097\ph\032S\c\114i\p\116\:"..(Ae[xp-0X1]or"(internal)")..": "..r(Ap),0);else b(Ap,0);end;end;else(b)(Ap,0);end;end;else if Ap then if wp==0X1 then return np[pp]();else do return np[pp](I(np,pp+1,Rp));end;end;elseif not(pp)then else return I(np,pp,wp);end;end;end;end;else if me==0X04B then fe=function(...)local nY=(0);local ZY={};local GY=(m());local XY,eY=rC(...);XY=XY-1;local iY,SY={[0X2]=ZY,[1]=ce},1;local oY=((GY==F and Le or GY));for oc=0X00000,XY do do if he>oc then ZY[oc]=eY[oc+1];else do break;end;end;end;end;do if not ge then eY=nil;elseif not(xe)then else(ZY)[he]={n=XY>=he and XY-he+1 or 0,I(eY,he+0x1,XY+1)};end;end;do if oY~=GY then(i)(fe,oY);end;end;local TY,wY,sY,uY=j(function()do while true do local cP=Re[SY];local RP=cP[0X004];SY=SY+1;if not(RP>=8)then if RP<4 then if RP<0X00002 then do if RP~=0X1 then ZY[cP[0X7]]=ZY[cP[0X6]]*ZY[cP[0X1]];else(ZY)[cP[7]]=cP[2];end;end;else if RP~=3 then local SP=ve[0];local JP=0X0;do(ZY)[0]=SP[0X00001][SP[2]];end;do SY=SY+0X01;end;(ZY)[0X000]=not ZY[0];SY=SY+0x1;repeat local fE,qE=De,(ZY);if#fE>0 then local A1=({});for j4,q4 in D,fE do for rm,Hm in D,q4 do if Hm[0X0001]==qE and Hm[0X2]>=0X0 then local on=(Hm[2]);do if not A1[on]then(A1)[on]={qE[on]};end;end;Hm[0x1]=A1[on];Hm[2]=0X1;end;end;end;end;until true;return false,JP,JP;else(ZY)[cP[7]]=ZY[cP[6]]==ZY[cP[1]];end;end;else if not(RP<0x06)then if RP==7 then ZY[cP[7]]={I({},0x1,cP[0X6])};else end;else if RP~=0X005 then ZY[cP[0x07]]=L(ZY[cP[0X6]],ZY[cP[0X0001]]);else iY[cP[6]]=ZY[cP[7]];end;end;end;else if not(RP>=0XC)then if RP>=0x0000a then if RP~=0x000B then(ZY)[cP[0x7]]=not ZY[cP[6]];else do(ZY)[cP[7]]=ZY[cP[0X6]]~=ZY[cP[0x1]];end;end;else if RP==9 then local QA=je[cP[6]];local pA=(nil);local PA=(QA[8]);local AA=(#PA);do if not(AA>0)then else pA={};for jX=1,AA do local tX=PA[jX];do if tX[0x00001]~=0X0 then pA[jX-1]=ve[tX[2]];else do pA[jX-1]={ZY,tX[2]};end;end;end;end;A(De,pA);end;end;ZY[cP[0X07]]=NC(pA,oY,QA);else repeat local SB,OB=De,(ZY);if not(#SB>0)then else local UI={};do for zx,Ax in D,SB do for g9,M9 in D,Ax do do if not(M9[0X1]==OB and M9[0X2]>=0X0)then else local lb=(M9[0x02]);if not UI[lb]then UI[lb]={OB[lb]};end;do M9[1]=UI[lb];end;M9[2]=1;end;end;end;end;end;end;until true;local b3=cP[7];return false,b3,b3+cP[6]-2;end;end;else if not(RP<0Xe)then if not(RP>=0XF)then SY=cP[0x6];else do if RP~=16 then repeat local BL,HL=De,(ZY);if#BL>0X00000 then local Dw={};for U2,l2 in D,BL do do for OG,jG in D,l2 do do if jG[0x1]==HL and jG[0X02]>=0X0 then local r1=(jG[0X2]);if not(not Dw[r1])then else Dw[r1]={HL[r1]};end;(jG)[0X1]=Dw[r1];jG[2]=1;end;end;end;end;end;end;until true;return;else do(ZY)[cP[0X07]]=oY[cP[2]];end;end;end;end;else if RP==13 then do ZY[cP[7]]=k(ZY[cP[6]],ZY[cP[1]]);end;else if ZY[cP[0X6]]==ZY[cP[0X001]]then else SY=cP[0X7];end;end;end;end;end;end;end;end);do if TY then if wY then if uY~=1 then do return ZY[sY](I(ZY,sY+0X01,nY));end;else return ZY[sY]();end;elseif sY then return I(ZY,sY,uY);end;else if f(wY)=="\s\116r\i\110g"then if e(wY,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(wY,'\094.\045\:\037\d\+\:\ ')then b("L\117r\097\112\h\ \083\c\114\i\pt\:"..(Ae[SY-0X00001]or"(internal)").."\:\ "..r(wY),0X0);else(b)(wY,0);end;else b(wY,0);end;end;end;end;else do fe=function(...)local MV=(0X00000);local WV,NV=0X1,({});local UV=(m());local zV=(UV==F and Le or UV);local PV={[0X2]=NV,[1]=ce};local gV,xV=rC(...);gV=gV-0X1;for Vl=0,gV do if not(he>Vl)then break;else NV[Vl]=xV[Vl+1];end;end;if not ge then xV=nil;elseif xe then NV[he]={n=gV>=he and gV-he+1 or 0X00,I(xV,he+0X0001,gV+0X001)};end;if zV~=UV then(i)(fe,zV);end;local aV,XV,SV,iV=j(function()do while true do local TH=Re[WV];local KH=TH[0X4];do WV=WV+1;end;if KH<18 then if not(KH>=9)then do if not(KH<4)then do if KH<6 then if KH~=5 then if NV[TH[0X6]]==NV[TH[0X00001]]then WV=TH[7];end;else NV[0X4]=zV[TH[0X002]];do WV=WV+0X1;end;WV=WV+0x1;TH=Re[WV];WV=WV+1;local P8=4;NV[0x05]=NV[3][TH[5]];WV=WV+1;(NV)[P8]=NV[P8](NV[P8+1]);MV=P8;WV=WV+0X1;do WV=WV+1;end;do TH=Re[WV];end;do WV=WV+1;end;do if not(NV[0X0004])then else do WV=TH[6];end;end;end;end;else if not(KH<7)then if KH==8 then(NV)[5]=NV[2][TH[0X5]];WV=WV+0X001;WV=WV+0X1;TH=Re[WV];WV=WV+0X0001;do NV[0X006]=zV[TH[2]];end;WV=WV+0X1;do WV=WV+1;end;do TH=Re[WV];end;do WV=WV+0X00001;end;(NV)[0x00006]=NV[6][TH[5]];TH=Re[WV];WV=WV+0X00001;if NV[0X5]~=NV[6]then WV=TH[0X007];end;else(NV)[0X007]=zV[TH[0X2]];do WV=WV+0x1;end;local LJ=(7);do WV=WV+1;end;TH=Re[WV];WV=WV+0X1;do(NV)[8]=NV[3][TH[5]];end;WV=WV+1;do WV=WV+1;end;WV=WV+0X01;NV[LJ]=NV[LJ](NV[LJ+0X1]);MV=LJ;WV=WV+1;do WV=WV+0X1;end;TH=Re[WV];do WV=WV+1;end;do if not(not NV[0X00007])then else WV=TH[6];end;end;end;else local Pi=ve[0x1];NV[7]=Pi[0X1][Pi[2]];TH=Re[WV];local ai=(0X007);WV=WV+0X1;local li=NV[0X7];NV[ai+0x1]=li;(NV)[ai]=li[TH[5]];WV=WV+1;ai=0X7;do NV[ai]=NV[ai](NV[ai+0X0001]);end;MV=ai;do TH=Re[WV];end;do WV=WV+1;end;if NV[7]then WV=TH[0X6];end;end;end;end;else if KH<0X0002 then if KH==0X1 then do if not(not NV[TH[7]])then else WV=TH[6];end;end;else end;else do if KH==0x3 then for wX=TH[7],TH[0X6]do(NV)[wX]=nil;end;else do WV=TH[0X0006];end;end;end;end;end;end;else do if KH>=13 then if KH<0XF then if KH~=0X0000E then local ZC=(NV[TH[6]]);local uC=(TH[7]);do NV[uC+1]=ZC;end;NV[uC]=ZC[TH[0X5]];else local zb=(ve[0X001]);do(NV)[4]=zb[1][zb[0X0002]];end;local Hb=(4);WV=WV+0X0001;do WV=WV+1;end;TH=Re[WV];do WV=WV+0x001;end;local Lb=NV[4];do NV[Hb+1]=Lb;end;NV[Hb]=Lb[TH[5]];WV=WV+0x1;Hb=0X0004;NV[Hb](NV[Hb+1]);MV=Hb-0x01;TH=Re[WV];WV=WV+1;NV[0X4]=zV[TH[2]];WV=WV+0x1;do WV=WV+1;end;WV=WV+0X1;MV=0X4;(NV[MV])();MV=MV-1;TH=Re[WV];WV=WV+0x1;NV[0X4]=NV[3][TH[5]];WV=WV+0X1;WV=WV+0X0001;TH=Re[WV];WV=WV+0X001;NV[4]=NV[0x4][TH[5]];do TH=Re[WV];end;do WV=WV+1;end;NV[5]=zV[TH[0X2]];do WV=WV+1;end;WV=WV+1;TH=Re[WV];WV=WV+1;local Vb=(0X3);NV[6]=zV[TH[0x2]];WV=WV+0X001;do WV=WV+0x00001;end;TH=Re[WV];WV=WV+0x1;NV[6]=NV[6][TH[5]];TH=Re[WV];WV=WV+1;(NV)[0X0007]=NV[0X00004][TH[5]];TH=Re[WV];WV=WV+1;NV[0X8]=zV[TH[2]];TH=Re[WV];WV=WV+0x1;(NV)[0X0008]=NV[8][TH[5]];WV=WV+0X1;WV=WV+0X1;TH=Re[WV];do WV=WV+0X0001;end;(NV)[9]=NV[0X4][TH[0X5]];TH=Re[WV];WV=WV+0X1;do(NV)[0X00a]=TH[0x2];end;TH=Re[WV];WV=WV+0x1;do(NV)[11]=TH[2]/TH[0X05];end;WV=WV+0X1;Hb=0x8;MV=Hb+0x4-1;NV[Hb]=NV[Hb](I(NV,Hb+1,MV));MV=Hb;do TH=Re[WV];end;WV=WV+1;NV[9]=NV[0X4][TH[0X5]];do WV=WV+0x01;end;Hb=6;MV=Hb+4-0x1;NV[Hb]=NV[Hb](I(NV,Hb+1,MV));MV=Hb;WV=WV+0x1;do WV=WV+1;end;do TH=Re[WV];end;WV=WV+1;NV[0X00007]=zV[TH[0X2]];WV=WV+1;WV=WV+0x1;TH=Re[WV];WV=WV+0X1;(NV)[0X07]=NV[0X00007][TH[0x00005]];do WV=WV+1;end;WV=WV+1;TH=Re[WV];WV=WV+0X1;(NV)[8]=zV[TH[2]];TH=Re[WV];WV=WV+1;(NV)[0x08]=NV[0X8][TH[5]];TH=Re[WV];WV=WV+1;do NV[0x009]=TH[2];end;TH=Re[WV];do WV=WV+0X1;end;(NV)[0xA]=TH[0X2];WV=WV+1;Hb=0X08;(NV)[Hb]=NV[Hb](NV[Hb+0X1],NV[Hb+2]);do MV=Hb;end;TH=Re[WV];WV=WV+0X001;(NV)[9]=TH[0X2];TH=Re[WV];do WV=WV+0X00001;end;do NV[10]=zV[TH[0X00002]];end;TH=Re[WV];WV=WV+1;do NV[10]=NV[0Xa][TH[5]];end;TH=Re[WV];WV=WV+1;NV[0XB]=TH[2];do TH=Re[WV];end;WV=WV+1;NV[12]=TH[0X02];do WV=WV+1;end;Hb=10;local wb=(0);do if Vb~=0 then MV=Hb+Vb-0X1;end;end;local kb,cb=nil,(nil);if Vb==1 then do kb,cb=rC(NV[Hb]());end;else kb,cb=rC(NV[Hb](I(NV,Hb+0X1,MV)));end;do if wb~=0X1 then if wb==0X0 then do kb=kb+Hb-1;end;MV=kb;else kb=Hb+wb-0x2;do MV=kb+1;end;end;local C_=0;for T_=Hb,kb do C_=C_+0x1;(NV)[T_]=cb[C_];end;else MV=Hb-1;end;end;WV=WV+0x1;do Hb=0X7;end;do(NV)[Hb]=NV[Hb](I(NV,Hb+1,MV));end;do MV=Hb;end;WV=WV+0X00001;do WV=WV+0X1;end;WV=WV+0X1;do NV[6]=NV[6]*NV[0X7];end;TH=Re[WV];local Db=(je[TH[0X00006]]);WV=WV+0X001;local eb=Db[8];local pb=(nil);local ob=(#eb);if ob>0 then pb={};for nN=0x001,ob do local mN=(eb[nN]);if mN[1]~=0 then do(pb)[nN-0X00001]=ve[mN[0X002]];end;else(pb)[nN-1]={NV,mN[0X2]};end;end;(A)(De,pb);end;(NV)[7]=NC(pb,zV,Db);WV=WV+0X1;(NV)[0x008]=true;WV=WV+1;(NV)[0X09]=true;WV=WV+0X1;zb=ve[0x001];do NV[10]=zb[1][zb[0X00002]];end;WV=WV+0X1;do Hb=5;end;do MV=Hb+0X6-1;end;(NV[Hb])(I(NV,Hb+1,MV));MV=Hb-0X001;do WV=WV+1;end;WV=WV+0X001;WV=WV+1;(NV)[0X05]=true;do TH=Re[WV];end;do WV=WV+1;end;zV[TH[2]]=NV[0X005];TH=Re[WV];WV=WV+0x1;(NV)[0X005]=zV[TH[0x2]];TH=Re[WV];do WV=WV+1;end;(NV)[0X00006]=zV[TH[0x2]];WV=WV+1;WV=WV+0X001;TH=Re[WV];WV=WV+1;NV[7]=zV[TH[2]];TH=Re[WV];WV=WV+0X1;(NV)[0X7]=NV[7][TH[0x5]];WV=WV+1;WV=WV+1;do WV=WV+0X1;end;Hb=0x6;Vb=2;wb=0;if Vb==0 then else do MV=Hb+Vb-1;end;end;kb,cb=nil;if Vb~=0X1 then kb,cb=rC(NV[Hb](I(NV,Hb+0X00001,MV)));else do kb,cb=rC(NV[Hb]());end;end;if wb==1 then MV=Hb-0X1;else if wb==0X00 then do kb=kb+Hb-1;end;MV=kb;else kb=Hb+wb-0X002;MV=kb+0X00001;end;local Es=(0X000);for ZZ=Hb,kb do Es=Es+1;(NV)[ZZ]=cb[Es];end;end;do WV=WV+0X01;end;do WV=WV+0X01;end;WV=WV+0X001;Hb=5;NV[Hb](I(NV,Hb+0x1,MV));do MV=Hb-1;end;WV=WV+0X1;WV=WV+0x1;TH=Re[WV];WV=WV+0X1;NV[5]=zV[TH[0X02]];do TH=Re[WV];end;WV=WV+1;(NV)[0x00005]=NV[0X5][TH[0X00005]];TH=Re[WV];WV=WV+0x1;NV[0X6]=TH[0X0002];WV=WV+1;Hb=0X0005;(NV[Hb])(NV[Hb+1]);do MV=Hb-0X1;end;TH=Re[WV];do WV=WV+0x1;end;if not(not NV[3])then else do WV=TH[0X6];end;end;end;else if not(KH>=0X10)then local xr=(ve[0X1]);(NV)[1]=xr[1][xr[2]];local sr=NV[1];WV=WV+1;do WV=WV+0X1;end;do TH=Re[WV];end;WV=WV+1;local pr=0X00001;NV[pr+0X1]=sr;NV[pr]=sr[TH[5]];WV=WV+0X1;pr=0X1;(NV)[pr]=NV[pr](NV[pr+0x1]);do MV=pr;end;TH=Re[WV];WV=WV+1;if not(NV[1])then else WV=TH[6];end;else do if KH==17 then(NV)[TH[0x0007]]={I({},1,TH[0X6])};else(NV)[TH[7]]=TH[2];end;end;end;end;else do if KH<11 then if KH==0x0a then local XJ=(NV[0X2]);local oJ=0X03;do(NV)[oJ+1]=XJ;end;do NV[oJ]=XJ[TH[5]];end;TH=Re[WV];WV=WV+0X1;(NV)[0X5]=TH[0X00002];WV=WV+1;oJ=0X003;do(NV)[oJ]=NV[oJ](NV[oJ+0X1],NV[oJ+0x0002]);end;MV=oJ;TH=Re[WV];do WV=WV+1;end;if not NV[0X3]then WV=TH[6];end;else local GD=TH[0X7];local ID,vD,WD=NV[GD]();if ID then do NV[GD+0x1]=vD;end;do(NV)[GD+2]=WD;end;WV=TH[0X6];end;end;else do if KH~=12 then local Eq=(TH[7]);do for cS=Eq,Eq+(TH[6]-0X00001)do NV[cS]=xV[he+(cS-Eq)+1];end;end;else(NV)[4]=zV[TH[2]];TH=Re[WV];do WV=WV+0x1;end;NV[0X04]=NV[4][TH[5]];do WV=WV+1;end;do WV=WV+1;end;do TH=Re[WV];end;WV=WV+1;if not(not NV[0X4])then else WV=TH[6];end;end;end;end;end;end;end;end;else do if not(KH<0x1B)then if KH>=0X001F then do if KH>=0X21 then do if KH>=34 then if KH==35 then zV[TH[0X002]]=NV[TH[0X00007]];else local aL=(nil);local yL=(je[TH[0x0006]]);local TL=yL[8];local bL=(#TL);if bL>0X0 then do aL={};end;do for Qo=0X001,bL do local Mo=(TL[Qo]);do if Mo[0x1]~=0X00000 then aL[Qo-1]=ve[Mo[2]];else do aL[Qo-1]={NV,Mo[2]};end;end;end;end;end;A(De,aL);end;(NV)[TH[7]]=NC(aL,zV,yL);end;else(NV)[0X07]=zV[TH[0X2]];do WV=WV+0X1;end;do WV=WV+0X1;end;TH=Re[WV];do WV=WV+1;end;do(NV)[7]=NV[7][TH[5]];end;WV=WV+0X1;WV=WV+0x1;do TH=Re[WV];end;WV=WV+0X0001;if not(NV[0X7])then else WV=TH[6];end;end;end;else do if KH~=32 then NV[4]=zV[TH[0X2]];TH=Re[WV];do WV=WV+0X1;end;do NV[0X00005]=NV[0X3][TH[5]];end;do TH=Re[WV];end;WV=WV+0X001;(NV)[0x0005]=NV[5][TH[5]];local fc=0X04;WV=WV+0X00001;NV[fc]=NV[fc](NV[fc+1]);MV=fc;TH=Re[WV];WV=WV+0X1;if not(not(NV[0X004]<=TH[0X00005]))then else WV=TH[0X7];end;else do(NV)[TH[7]]=NV[TH[6]]~=NV[TH[0X1]];end;end;end;end;end;else do if KH>=29 then if KH~=0X1E then NV[0x0]=zV[TH[2]];WV=WV+1;WV=WV+0X1;WV=WV+0x001;MV=0;(NV)[MV]=NV[MV]();TH=Re[WV];do WV=WV+0X1;end;if not(not NV[0X00000])then else do WV=TH[0X6];end;end;else(NV)[TH[7]]=NV[TH[0X6]][TH[5]];end;else if KH==28 then(NV)[0]=true;do TH=Re[WV];end;local yZ=ve[0];WV=WV+0x1;zV[TH[2]]=NV[0];do WV=WV+1;end;(NV)[0X0]=yZ[0X1][yZ[0x0002]];local gZ=0;WV=WV+1;WV=WV+1;do TH=Re[WV];end;do WV=WV+1;end;NV[0]=NV[0][TH[0X05]];WV=WV+0X00001;WV=WV+0X1;do WV=WV+1;end;MV=0x0;NV[MV]();do MV=MV-0X01;end;do WV=WV+1;end;yZ=ve[0X1];do(NV)[0x0]=yZ[1][yZ[0X2]];end;do TH=Re[WV];end;WV=WV+1;local FZ=(NV[0X0]);(NV)[gZ+0X1]=FZ;(NV)[gZ]=FZ[TH[5]];do WV=WV+0X00001;end;gZ=0X00;NV[gZ](NV[gZ+0X00001]);MV=gZ-0X1;WV=WV+0x1;WV=WV+0X1;do WV=WV+0X1;end;yZ=ve[0];(NV)[0X000]=yZ[0X1][yZ[0X02]];WV=WV+1;WV=WV+0X0001;do TH=Re[WV];end;WV=WV+0X00001;(NV)[0]=NV[0X0][TH[5]];WV=WV+1;WV=WV+1;TH=Re[WV];WV=WV+0X1;if not NV[0x0]then WV=TH[0X6];end;else do(NV)[TH[0X7]]=false;end;end;end;end;end;else do if not(KH<0X16)then do if KH<24 then if KH==0X00017 then(NV)[0X0]=zV[TH[0X00002]];WV=WV+1;WV=WV+0X1;TH=Re[WV];WV=WV+0X1;NV[0]=NV[0X0][TH[5]];WV=WV+0X0001;do WV=WV+1;end;do TH=Re[WV];end;WV=WV+0X1;(NV)[0x0]=NV[0][TH[0X5]];WV=WV+1;WV=WV+1;do TH=Re[WV];end;WV=WV+1;do NV[0X0000]=NV[0][TH[5]];end;TH=Re[WV];WV=WV+0x1;if NV[0]<=TH[0x5]then WV=TH[7];end;else do if not(TH[2]<NV[TH[1]])then WV=TH[0X7];end;end;end;else if not(KH<0X0019)then do if KH==0X0001a then do(NV)[5]=NV[3][TH[0x00005]];end;WV=WV+0X1;WV=WV+0X1;TH=Re[WV];do WV=WV+0X1;end;if not(not NV[5])then else WV=TH[6];end;else local Ws=(TH[0X07]);local ys=(g(function(...)(d)();do for OQ,RQ,wQ,XQ,EQ,kQ,uQ,LQ,QQ,hQ in...do(d)(true,{OQ,RQ,wQ,XQ,EQ,kQ,uQ,LQ,QQ,hQ});end;end;end));ys(NV[Ws],NV[Ws+0x1],NV[Ws+0X2]);MV=Ws;do(NV)[Ws]=ys;end;do WV=TH[6];end;end;end;else NV[0]=zV[TH[0X2]];do WV=WV+1;end;WV=WV+1;local Ss=ve[0];WV=WV+0X0001;NV[0X1]=Ss[1][Ss[0x2]];do TH=Re[WV];end;do WV=WV+1;end;NV[0X1]=NV[0X00001][TH[5]];WV=WV+0X1;WV=WV+0X001;TH=Re[WV];WV=WV+0x1;NV[1]=NV[1][TH[0X5]];TH=Re[WV];WV=WV+1;(NV)[0x2]=zV[TH[2]];do TH=Re[WV];end;WV=WV+0X1;NV[2]=NV[2][TH[5]];WV=WV+0X1;WV=WV+1;TH=Re[WV];WV=WV+1;NV[3]=TH[2];TH=Re[WV];WV=WV+0X1;(NV)[0X004]=TH[0X0002];TH=Re[WV];WV=WV+1;local Gs=2;NV[5]=TH[0X00002];WV=WV+0x1;MV=Gs+4-0X001;NV[Gs]=NV[Gs](I(NV,Gs+0X1,MV));MV=Gs;do WV=WV+1;end;NV[0x1]=NV[1]*NV[0x2];TH=Re[WV];local ks=je[TH[6]];local ns=(ks[0X8]);WV=WV+1;local es,Us=nil,#ns;if not(Us>0)then else es={};for wk=0X01,Us do local Jk=(ns[wk]);if Jk[0X001]==0X00 then es[wk-1]={NV,Jk[0x2]};else(es)[wk-1]=ve[Jk[2]];end;end;(A)(De,es);end;(NV)[2]=NC(es,zV,ks);WV=WV+0X1;do(NV)[3]=true;end;WV=WV+1;NV[0X4]=true;WV=WV+1;Ss=ve[0X1];(NV)[0X05]=Ss[0x1][Ss[0X02]];WV=WV+1;WV=WV+0X1;WV=WV+0x0001;do Gs=0;end;MV=Gs+0X6-1;NV[Gs](I(NV,Gs+1,MV));local ss=(0x2);do MV=Gs-1;end;TH=Re[WV];WV=WV+0X1;(NV)[0]=zV[TH[2]];do WV=WV+1;end;WV=WV+1;TH=Re[WV];WV=WV+0X001;NV[1]=zV[TH[0X0002]];WV=WV+1;do WV=WV+0x1;end;TH=Re[WV];do WV=WV+1;end;do(NV)[0X1]=NV[0X1][TH[5]];end;do WV=WV+0x1;end;WV=WV+0X1;TH=Re[WV];WV=WV+0X1;Gs=0X1;local Ws=NV[1];(NV)[Gs+0X01]=Ws;(NV)[Gs]=Ws[TH[0x5]];do WV=WV+1;end;do Gs=0x00001;end;local Zs=(0);if ss~=0 then MV=Gs+ss-1;end;local Rs,Ks=nil,(nil);if ss~=1 then Rs,Ks=rC(NV[Gs](I(NV,Gs+0X1,MV)));else Rs,Ks=rC(NV[Gs]());end;if Zs==0x1 then MV=Gs-0x1;else if Zs==0x000 then Rs=Rs+Gs-0x0001;MV=Rs;else do Rs=Gs+Zs-2;end;MV=Rs+1;end;local Jo=(0X0);do for UI=Gs,Rs do Jo=Jo+1;(NV)[UI]=Ks[Jo];end;end;end;WV=WV+0X1;do WV=WV+0x00001;end;WV=WV+1;do Gs=0;end;ss=0X00000;Zs=4;if ss~=0 then MV=Gs+ss-1;end;do Rs,Ks=nil;end;if ss==0X1 then Rs,Ks=rC(NV[Gs]());else Rs,Ks=rC(NV[Gs](I(NV,Gs+1,MV)));end;do if Zs~=0X00001 then if Zs==0X0 then Rs=Rs+Gs-0X1;MV=Rs;else Rs=Gs+Zs-2;MV=Rs+1;end;local Mv=0;for I9=Gs,Rs do Mv=Mv+1;(NV)[I9]=Ks[Mv];end;else MV=Gs-0X1;end;end;WV=WV+1;WV=WV+0X1;TH=Re[WV];WV=WV+1;Gs=0;local os=(g(function(...)d();for Ee,Ne in...do(d)(true,Ee,Ne);end;end));(os)(NV[Gs],NV[Gs+1],NV[Gs+0X02]);MV=Gs;NV[Gs]=os;WV=TH[6];end;end;end;else if not(KH>=0X014)then if KH==0X13 then repeat local DK,VK=De,NV;if#DK>0 then local ON={};for zf,Wf in D,DK do do for XH,fH in D,Wf do if fH[1]==VK and fH[2]>=0 then local eO=fH[0x2];if not(not ON[eO])then else ON[eO]={VK[eO]};end;(fH)[1]=ON[eO];fH[0X2]=1;end;end;end;end;end;until true;do return;end;else(NV)[0X0]=zV[TH[2]];TH=Re[WV];local ht=0;do WV=WV+0X0001;end;NV[0X0]=NV[0X0][TH[0X005]];WV=WV+1;WV=WV+1;do TH=Re[WV];end;WV=WV+1;do(NV)[1]=TH[2];end;WV=WV+1;(NV[ht])(NV[ht+1]);MV=ht-0X01;TH=Re[WV];WV=WV+1;do(NV)[0]=zV[TH[0X02]];end;do TH=Re[WV];end;WV=WV+0X0001;(NV)[0X0]=NV[0][TH[5]];WV=WV+0X1;WV=WV+0X1;TH=Re[WV];WV=WV+1;if not(NV[0])then else do WV=TH[0x06];end;end;end;else if KH==0X000015 then(PV)[TH[0X6]]=NV[TH[0X007]];else(NV)[TH[0X7]]=zV[TH[0X2]];end;end;end;end;end;end;end;end;end;end);if aV then if XV then if iV~=1 then return NV[SV](I(NV,SV+0x1,MV));else return NV[SV]();end;elseif not(SV)then else do return I(NV,SV,iV);end;end;else do if f(XV)=='\115t\114\i\110\103'then if e(XV,'at\116e\m\p\116\ to \121\105\101\108d\ \097\c\114\o\s\s\ \109\et\097\109\101\116\ho\d\/C\%-\c\097\l\l\032\098\ou\110\da\114y')then return coroutine.yield();end;do if e(XV,"^.-:%d+: ")then b('\Lu\114\097\p\h\032\083\cr\i\p\116\058'..(Ae[WV-1]or"(\i\110\116\e\114n\097\l\)")..": "..r(XV),0x000);else b(XV,0);end;end;else b(XV,0);end;end;end;end;end;end;end;end;else do if me<0X04F then if me<0X4d then fe=function(...)local X2,i2=0X1,{};local J2=(m());local n2,D2=rC(...);local x2=(J2==F and Le or J2);local M2=({[0X2]=i2,[1]=ce});do n2=n2-1;end;for ZA=0,n2 do if he>ZA then(i2)[ZA]=D2[ZA+0x1];else break;end;end;local E2=(0);if not ge then D2=nil;elseif xe then(i2)[he]={n=n2>=he and n2-he+1 or 0X000,I(D2,he+1,n2+1)};end;if x2==J2 then else i(fe,x2);end;do while true do local IK=(Re[X2]);local FK=IK[0x0004];X2=X2+1;return(function(z,Q,...)local M,e=z[0],z[1];local r,H;if M=="DragonClaw"then r,H=pcall(_C,"BlackbeardReward","DragonClaw","2");else r,H=pcall(_C,"Buy"..M,e);end;return r and(H==1 or H==2);end)(i2,ve,...);end;end;end;else if me~=0X4e then do fe=function(...)local Pt,ht=0,({});local Ft=({[1]=ce,[0X2]=ht});local It=(m());local Yt,ft=(It==F and Le or It),(0X1);local ct,Zt=rC(...);ct=ct-0X1;for ot=0x0,ct do do if not(he>ot)then break;else do(ht)[ot]=Zt[ot+0x1];end;end;end;end;if not ge then Zt=nil;elseif xe then ht[he]={n=ct>=he and ct-he+1 or 0,I(Zt,he+0X0001,ct+1)};end;if Yt~=It then i(fe,Yt);end;while true do local z3=Re[ft];local e3=(z3[4]);ft=ft+0X001;return(function(A,i,...)local V=A[0];Client.Character.Humanoid:UnequipTools(V);end)(ht,ve,...);end;end;end;else fe=function(...)local FD=0X0;local uD,bD=0X00001,({});local AD=m();local RD,fD=(AD==F and Le or AD),{[0X2]=bD,[1]=ce};local iD,mD=rC(...);iD=iD-0X01;for j8=0X0,iD do if he>j8 then(bD)[j8]=mD[j8+1];else do break;end;end;end;if not ge then mD=nil;elseif not(xe)then else(bD)[he]={n=iD>=he and iD-he+1 or 0X00000,I(mD,he+0X1,iD+0X0001)};end;if RD==AD then else i(fe,RD);end;local jD,eD,ZD,rD=j(function()while true do local CZ=Re[uD];local kZ=(CZ[4]);uD=uD+0X1;if not(kZ>=0x00013)then if not(kZ<9)then if not(kZ>=0xE)then if kZ<0x0000B then if kZ==10 then uD=CZ[6];else(bD)[CZ[0X7]]=CZ[2];end;else do if not(kZ<0Xc)then if kZ~=13 then(bD)[0X1]={I({},1,0X1)};CZ=Re[uD];do uD=uD+1;end;bD[0X2]=RD[CZ[0x02]];uD=uD+0X1;uD=uD+1;CZ=Re[uD];local LR=2;uD=uD+1;local aR=(0x1-1)*50;local XR=bD[2];(bD)[LR+0X00001]=XR;(bD)[LR]=XR[CZ[5]];do CZ=Re[uD];end;local PR=(0X0003);uD=uD+0X1;do bD[0X00004]=CZ[2];end;uD=uD+0X1;do LR=2;end;do bD[LR]=bD[LR](bD[LR+1],bD[LR+0X2]);end;FD=LR;do CZ=Re[uD];end;do uD=uD+0X1;end;do bD[0x00003]=RD[CZ[0X002]];end;CZ=Re[uD];uD=uD+0X1;LR=0X0003;XR=bD[3];do(bD)[LR+0X1]=XR;end;bD[LR]=XR[CZ[5]];CZ=Re[uD];do uD=uD+0X1;end;bD[5]=CZ[2];do uD=uD+0X001;end;LR=0X00003;local RR=0x0;if PR~=0x0 then FD=LR+PR-1;end;local qR,dR=nil,(nil);if PR==0X0001 then do qR,dR=rC(bD[LR]());end;else qR,dR=rC(bD[LR](I(bD,LR+0X1,FD)));end;do if RR~=0X1 then if RR==0 then do qR=qR+LR-1;end;do FD=qR;end;else qR=LR+RR-0X2;FD=qR+1;end;local RJ=(0);do for zf=LR,qR do RJ=RJ+0X1;(bD)[zf]=dR[RJ];end;end;else do FD=LR-1;end;end;end;uD=uD+0x1;uD=uD+1;uD=uD+1;LR=0X1;local lR=bD[LR];for xM=1,FD-LR do do lR[aR+xM]=bD[LR+xM];end;end;do CZ=Re[uD];end;do uD=uD+0X1;end;do(bD)[2]=RD[CZ[0x2]];end;CZ=Re[uD];do uD=uD+0X1;end;bD[0x00003]=CZ[0X2];CZ=Re[uD];uD=uD+1;do bD[0x00004]=CZ[0X2];end;uD=uD+0x1;LR=0X00002;bD[LR](bD[LR+1],bD[LR+0X2]);FD=LR-1;CZ=Re[uD];do uD=uD+1;end;(bD)[0X2]=bD[0X1][CZ[0X5]];uD=uD+1;uD=uD+1;CZ=Re[uD];uD=uD+0X00001;if not(not bD[0X2])then else uD=CZ[0X006];end;else do bD[CZ[7]]=bD[CZ[0X6]]/bD[CZ[1]];end;end;else local vr=(CZ[0X00007]);local gr=(g(function(...)(d)();do for PK,rK,WK,QK,wK,xK,kK,uK,CK,mK in...do d(true,{PK,rK,WK,QK,wK,xK,kK,uK,CK,mK});end;end;end));gr(bD[vr],bD[vr+0X00001],bD[vr+0x002]);do FD=vr;end;bD[vr]=gr;uD=CZ[0X00006];end;end;end;else if kZ<0X10 then if kZ==0X0F then bD[2]=true;CZ=Re[uD];uD=uD+0x1;(RD)[CZ[2]]=bD[0X2];CZ=Re[uD];do uD=uD+0X01;end;bD[2]=RD[CZ[0X00002]];do CZ=Re[uD];end;uD=uD+0x0001;local hh=2;bD[3]=CZ[0X00002];do uD=uD+0X1;end;do bD[hh]=bD[hh](bD[hh+1]);end;FD=hh;uD=uD+1;uD=uD+1;do CZ=Re[uD];end;do uD=uD+0x1;end;if not bD[2]then uD=CZ[0x6];end;else do for Af=CZ[0x07],CZ[0X6]do(bD)[Af]=nil;end;end;end;else if kZ<17 then local Zc=ve[0];bD[0x0002]=Zc[1][Zc[2]];do CZ=Re[uD];end;local rc=(2);uD=uD+0X001;local nc=(bD[2]);bD[rc+0X1]=nc;(bD)[rc]=nc[CZ[0X5]];uD=uD+1;do rc=2;end;(bD[rc])(bD[rc+0X0001]);FD=rc-1;uD=uD+1;do uD=uD+0X1;end;uD=uD+0X01;repeat local zQ,vQ=De,bD;if not(#zQ>0X0)then else local TQ={};do for LP,DP in D,zQ do do for pl,Pl in D,DP do if Pl[0X1]==vQ and Pl[0X2]>=1 then local ZC=(Pl[2]);if not(not TQ[ZC])then else TQ[ZC]={vQ[ZC]};end;Pl[0X00001]=TQ[ZC];Pl[2]=0X00001;end;end;end;end;end;end;until true;do CZ=Re[uD];end;uD=uD+0x01;uD=CZ[6];else if kZ==0X12 then(bD)[2]=bD[0x1][CZ[5]];do uD=uD+1;end;do uD=uD+0x00001;end;CZ=Re[uD];uD=uD+0X1;if not(not bD[2])then else uD=CZ[6];end;else end;end;end;end;else if kZ<4 then if not(kZ<0X00002)then if kZ~=3 then bD[0X2]=bD[1][CZ[5]];CZ=Re[uD];uD=uD+1;bD[0x2]=bD[0x002][CZ[0X5]];uD=uD+0X1;uD=uD+0X1;CZ=Re[uD];do uD=uD+0X1;end;do if bD[2]==CZ[0X5]then uD=CZ[0X7];end;end;else do(bD)[2]=RD[CZ[2]];end;uD=uD+0x1;do uD=uD+0X1;end;CZ=Re[uD];do uD=uD+0X1;end;bD[0x0002]=bD[0x2][CZ[0X0005]];uD=uD+1;uD=uD+1;CZ=Re[uD];do uD=uD+0X01;end;bD[2]=bD[0X0002][CZ[5]];do uD=uD+1;end;uD=uD+0X00001;CZ=Re[uD];uD=uD+1;if not(bD[2]<CZ[0x5])then uD=CZ[7];end;end;else if kZ==1 then if bD[CZ[0X6]]<=bD[CZ[1]]then uD=CZ[0x007];end;else do(bD)[0x0]=RD[CZ[2]];end;uD=uD+0X1;uD=uD+1;CZ=Re[uD];uD=uD+0X1;do bD[0x000]=bD[0][CZ[0x5]];end;uD=uD+1;uD=uD+1;local nA=0X000;CZ=Re[uD];uD=uD+1;do(bD)[1]=CZ[2];end;uD=uD+0X1;(bD)[nA]=bD[nA](bD[nA+1]);FD=nA;CZ=Re[uD];uD=uD+1;if not(not bD[0X000])then else uD=CZ[0x6];end;end;end;else do if kZ<0X006 then if kZ==0x5 then(bD)[0X0]=RD[CZ[0x00002]];CZ=Re[uD];uD=uD+1;do bD[0]=bD[0][CZ[5]];end;CZ=Re[uD];do uD=uD+1;end;do if not(not bD[0])then else uD=CZ[0X6];end;end;else bD[0X02]=RD[CZ[0x0002]];uD=uD+1;uD=uD+1;CZ=Re[uD];local Rl=je[CZ[6]];do uD=uD+1;end;local Xl=(Rl[8]);local al=nil;local Dl,Tl=#Xl,0X2;if Dl>0 then al={};for Pe=0X0001,Dl do local ke=Xl[Pe];if ke[0X01]~=0 then al[Pe-1]=ve[ke[0X2]];else al[Pe-1]={bD,ke[2]};end;end;A(De,al);end;bD[0x03]=NC(al,RD,Rl);do uD=uD+1;end;bD[Tl](bD[Tl+1]);FD=Tl-1;uD=uD+0X0001;uD=uD+0X01;CZ=Re[uD];uD=uD+1;bD[2]=RD[CZ[0X2]];uD=uD+0x1;do uD=uD+1;end;CZ=Re[uD];uD=uD+1;Tl=2;local Pl=(bD[2]);bD[Tl+1]=Pl;do(bD)[Tl]=Pl[CZ[0x5]];end;CZ=Re[uD];uD=uD+1;(bD)[0X0004]=CZ[0X0002];do CZ=Re[uD];end;uD=uD+0X001;(bD)[5]=CZ[0X2];CZ=Re[uD];uD=uD+1;do(bD)[6]=CZ[0x2];end;uD=uD+1;Tl=2;FD=Tl+5-1;bD[Tl](I(bD,Tl+1,FD));FD=Tl-0X1;CZ=Re[uD];uD=uD+0X00001;do uD=CZ[0x06];end;end;else if kZ>=0X007 then if kZ==0X8 then do(bD)[CZ[0X7]]=bD[CZ[6]]%bD[CZ[0X1]];end;else repeat local hj,bj=De,bD;if not(#hj>0X0)then else local ue={};for S0,b0 in D,hj do do for wD,yD in D,b0 do if yD[0X1]==bj and yD[2]>=0X000 then local kD=(yD[2]);if not(not ue[kD])then else ue[kD]={bj[kD]};end;yD[1]=ue[kD];do(yD)[2]=0x1;end;end;end;end;end;end;until true;return;end;else(bD)[CZ[7]]={I({},1,CZ[6])};end;end;end;end;end;else if kZ>=0X00001D then if kZ>=34 then if not(kZ>=0X24)then if kZ~=0X23 then local hj=(je[CZ[6]]);local Qj=hj[0X8];local kj=(nil);local Zj=#Qj;do if not(Zj>0)then else kj={};for j7=0X001,Zj do local M7=Qj[j7];do if M7[1]~=0x0000 then kj[j7-1]=ve[M7[2]];else kj[j7-1]={bD,M7[2]};end;end;end;A(De,kj);end;end;bD[CZ[0X0007]]=NC(kj,RD,hj);else(bD)[0]=RD[CZ[2]];uD=uD+1;uD=uD+1;do CZ=Re[uD];end;uD=uD+1;local mb=0;do(bD)[1]=CZ[0X2];end;do CZ=Re[uD];end;uD=uD+1;do(bD)[2]=CZ[2];end;uD=uD+0X1;(bD)[mb]=bD[mb](bD[mb+0X1],bD[mb+0x2]);FD=mb;CZ=Re[uD];uD=uD+0X1;if not(not bD[0X0])then else uD=CZ[0X006];end;end;else if kZ>=0X25 then if kZ==0x26 then bD[3]=RD[CZ[2]];CZ=Re[uD];uD=uD+1;do(bD)[0X3]=bD[0X3][CZ[0X5]];end;do uD=uD+0x1;end;uD=uD+0X1;CZ=Re[uD];uD=uD+0X00001;bD[3]=bD[0x3][CZ[5]];uD=uD+0X001;uD=uD+0X1;CZ=Re[uD];uD=uD+0X001;do if not(CZ[2]<bD[0X3])then do uD=CZ[7];end;end;end;else bD[0]=RD[CZ[0x02]];uD=uD+1;do uD=uD+1;end;do CZ=Re[uD];end;uD=uD+0X1;do(bD)[0]=bD[0][CZ[0X00005]];end;do CZ=Re[uD];end;do uD=uD+1;end;if not(not bD[0])then else uD=CZ[0X6];end;end;else bD[1]=RD[CZ[2]];CZ=Re[uD];uD=uD+1;bD[1]=bD[0X1][CZ[0x00005]];uD=uD+1;uD=uD+1;CZ=Re[uD];do uD=uD+1;end;(bD)[0x01]=bD[1][CZ[0X5]];do CZ=Re[uD];end;uD=uD+0X1;if bD[1]<CZ[0X5]then do uD=CZ[7];end;end;end;end;else if not(kZ<0X0001f)then do if not(kZ>=0x20)then(bD)[2]=false;CZ=Re[uD];uD=uD+1;(RD)[CZ[2]]=bD[2];do CZ=Re[uD];end;uD=uD+0X00001;do uD=CZ[0X06];end;else if kZ==33 then(bD)[CZ[0X7]]=fD[CZ[6]];else(bD)[CZ[0X7]]=RD[CZ[2]];end;end;end;else if kZ~=30 then bD[CZ[7]]=bD[CZ[0x006]]<bD[CZ[1]];else(bD)[0X1]=RD[CZ[0X2]];CZ=Re[uD];local C5=1;do uD=uD+1;end;(bD)[0X0001]=bD[1][CZ[0X00005]];do uD=uD+1;end;uD=uD+0X1;CZ=Re[uD];uD=uD+1;local U5=bD[1];(bD)[C5+0x01]=U5;do(bD)[C5]=U5[CZ[5]];end;CZ=Re[uD];uD=uD+1;(bD)[0X00003]=CZ[0X2];uD=uD+0X00001;C5=1;(bD)[C5]=bD[C5](bD[C5+0X1],bD[C5+2]);do FD=C5;end;uD=uD+1;uD=uD+1;CZ=Re[uD];uD=uD+0x1;if not(bD[1])then else do uD=CZ[6];end;end;end;end;end;else if kZ<24 then if not(kZ>=21)then do if kZ~=20 then do bD[0X0000]=RD[CZ[0x2]];end;uD=uD+1;uD=uD+0x0001;uD=uD+0x1;do FD=0;end;(bD)[FD]=bD[FD]();uD=uD+0X1;uD=uD+1;CZ=Re[uD];uD=uD+0X0001;if not(bD[0]<CZ[0X00005])then else uD=CZ[0x7];end;else(bD)[0X3]=bD[1][CZ[0X5]];do CZ=Re[uD];end;uD=uD+1;do bD[0x00003]=bD[0x3][CZ[0X005]];end;uD=uD+1;do uD=uD+0X1;end;CZ=Re[uD];uD=uD+1;do if bD[3]==CZ[5]then uD=CZ[0X00007];end;end;end;end;else if not(kZ>=22)then bD[CZ[7]]=O(bD[CZ[0x006]],bD[CZ[0X1]]);else do if kZ==0X17 then local gt,Et=1,bD[0];bD[gt+0X1]=Et;bD[gt]=Et[CZ[5]];do CZ=Re[uD];end;uD=uD+1;bD[0X3]=CZ[0X2];uD=uD+1;gt=0X0001;bD[gt]=bD[gt](bD[gt+0X1],bD[gt+0X2]);FD=gt;do uD=uD+0X0001;end;uD=uD+1;CZ=Re[uD];uD=uD+1;do if not bD[1]then do uD=CZ[6];end;end;end;else if bD[CZ[0X00006]]~=bD[CZ[0X001]]then else uD=CZ[0x00007];end;end;end;end;end;else if kZ>=0X1A then do if kZ<0X01B then bD[CZ[0x7]]=L(bD[CZ[6]],bD[CZ[0x1]]);else if kZ~=0X00001c then if not(bD[CZ[6]]<=bD[CZ[1]])then uD=CZ[0x07];end;else do if not(not bD[CZ[7]])then else uD=CZ[0X0006];end;end;end;end;end;else if kZ~=0X19 then local NT=(ve[0x0]);bD[0X001]=NT[1][NT[2]];CZ=Re[uD];local cT=0X1;uD=uD+1;local qT=(bD[1]);(bD)[cT+1]=qT;do bD[cT]=qT[CZ[0x5]];end;uD=uD+1;cT=0X1;do(bD)[cT]=bD[cT](bD[cT+0X1]);end;FD=cT;do CZ=Re[uD];end;do uD=uD+0X1;end;if not bD[0X0001]then uD=CZ[0X6];end;else bD[0X02]=RD[CZ[0X2]];CZ=Re[uD];do uD=uD+1;end;(bD)[0X3]=CZ[2];do uD=uD+0X1;end;local uM=0X00002;bD[uM](bD[uM+0X1]);do FD=uM-1;end;CZ=Re[uD];uD=uD+1;uD=CZ[6];end;end;end;end;end;end;end);if not(jD)then if f(eD)~="string"then b(eD,0X0);else if e(eD,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(e(eD,'^\046\045:%d\043: '))then(b)(eD,0);else(b)("Lur\097p\h\ S\cri\p\116\:"..(Ae[uD-1]or"\040\i\110te\114\110\097\108\)")..": "..r(eD),0X0);end;end;else if eD then if rD~=0X01 then do return bD[ZD](I(bD,ZD+0X1,FD));end;else return bD[ZD]();end;elseif ZD then return I(bD,ZD,rD);end;end;end;end;end;else if me>=80 then if me~=81 then do fe=function(...)local ai=0;local Oi={};local Ki=(0x1);local si=({[0X2]=Oi,[1]=ce});local Yi=(m());local Xi,Ci=rC(...);Xi=Xi-0X1;for N_=0,Xi do if he>N_ then Oi[N_]=Ci[N_+1];else break;end;end;local Ii=((Yi==F and Le or Yi));if not ge then Ci=nil;elseif xe then(Oi)[he]={n=Xi>=he and Xi-he+0X1 or 0X0000,I(Ci,he+1,Xi+1)};end;if Ii==Yi then else i(fe,Ii);end;local Mi,Hi,zi,Ji=j(function()do while true do local q4=(Re[Ki]);local c4=(q4[4]);Ki=Ki+0X1;if c4<7 then do if not(c4>=0x003)then if c4<1 then Oi[q4[7]]=L(Oi[q4[0X6]],Oi[q4[0X001]]);else if c4==2 then else if not(Oi[q4[6]]<Oi[q4[1]])then Ki=q4[7];end;end;end;else if c4>=5 then if c4~=0x6 then Oi[q4[7]]=q4[2];else do for jP=q4[0x0007],q4[0X6]do Oi[jP]=nil;end;end;end;else if c4==0x4 then(Oi)[q4[0X7]]=Ii[q4[2]];else local B4=q4[0X07];for wa=B4,B4+(q4[0x00006]-0X001)do do Oi[wa]=Ci[he+(wa-B4)+1];end;end;end;end;end;end;else if not(c4>=0XB)then if c4>=0X9 then if c4~=10 then Oi[q4[7]]={I({},0X01,q4[0X0006])};else local Ja=je[q4[0x00006]];local ka=nil;local Ya=Ja[0X0008];local aa=#Ya;if not(aa>0)then else do ka={};end;for Fm=1,aa do local gm=(Ya[Fm]);if gm[0X1]~=0X00 then ka[Fm-0X00001]=ve[gm[2]];else(ka)[Fm-1]={Oi,gm[2]};end;end;A(De,ka);end;do(Oi)[q4[7]]=NC(ka,Ii,Ja);end;end;else if c4~=8 then(Oi)[q4[7]]=Oi[q4[0X006]]-Oi[q4[0X1]];else local Nk=(q4[0x7]);local Hk,dk=Oi[Nk],(q4[0X01]-1)*50;for mX=0x1,q4[0X6]do(Hk)[dk+mX]=Oi[Nk+mX];end;end;end;else if c4<0xD then if c4~=12 then repeat local g3,U3,o3=De,Oi,q4[7];if not(#g3>0)then else local cX=({});for Qp,op in D,g3 do for PU,BU in D,op do if not(BU[0X1]==U3 and BU[0X00002]>=o3)then else local Pc=BU[2];if not cX[Pc]then cX[Pc]={U3[Pc]};end;BU[1]=cX[Pc];BU[2]=1;end;end;end;end;until true;else Oi[0x0]=Ii[q4[2]];Ki=Ki+0X001;do Ki=Ki+1;end;local Gv=(0X0);q4=Re[Ki];Ki=Ki+1;local iv=(Oi[0X0]);(Oi)[Gv+1]=iv;(Oi)[Gv]=iv[q4[0X0005]];q4=Re[Ki];Ki=Ki+0X1;Oi[2]=q4[2];do Ki=Ki+1;end;Gv=0;do(Oi)[Gv]=Oi[Gv](Oi[Gv+0X1],Oi[Gv+0X00002]);end;ai=Gv;Ki=Ki+1;Ki=Ki+1;q4=Re[Ki];Ki=Ki+1;Oi[1]=Ii[q4[0X2]];Ki=Ki+0X001;do Ki=Ki+0X001;end;q4=Re[Ki];Ki=Ki+0X1;(Oi)[1]=Oi[1][q4[5]];q4=Re[Ki];local Tv=je[q4[6]];do Ki=Ki+1;end;local pv=nil;local Ev=Tv[0x0008];local xv=#Ev;if xv>0 then pv={};for ql=1,xv do local Gl=Ev[ql];do if Gl[0X001]~=0 then do(pv)[ql-1]=ve[Gl[0x2]];end;else(pv)[ql-1]={Oi,Gl[2]};end;end;end;(A)(De,pv);end;(Oi)[0X2]=NC(pv,Ii,Tv);do Ki=Ki+0X1;end;Gv=0x001;(Oi[Gv])(Oi[Gv+0X1]);do ai=Gv-1;end;Ki=Ki+1;Ki=Ki+1;Ki=Ki+1;repeat local Je,Oe=De,(Oi);if not(#Je>0)then else local U0=({});for YQ,NQ in D,Je do do for WU,BU in D,NQ do if not(BU[0x1]==Oe and BU[0X2]>=0)then else local fs=(BU[2]);if not U0[fs]then U0[fs]={Oe[fs]};end;BU[0X1]=U0[fs];BU[2]=0X1;end;end;end;end;end;until true;return;end;else if c4==14 then Ki=q4[6];else(Oi)[q4[7]]=Oi[q4[6]]%Oi[q4[1]];end;end;end;end;end;end;end);if Mi then if Hi then do if Ji~=0X0001 then return Oi[zi](I(Oi,zi+0X00001,ai));else return Oi[zi]();end;end;elseif zi then return I(Oi,zi,Ji);end;else if f(Hi)=="s\116\114i\110\g"then do if not(e(Hi,'\097\116t\e\m\112\116 t\111\ \y\i\101\l\100\032\097\cr\o\s\s\ \m\e\116\097m\101t\h\o\d\047\C\037-ca\l\l \098\oun\da\114\y'))then else return coroutine.yield();end;end;if e(Hi,"^.-\:\037\100+:\ ")then(b)("\L\117\114\097p\104\ \S\cr\105\112\116\058"..(Ae[Ki-0X1]or"(internal)")..": "..r(Hi),0x0);else b(Hi,0);end;else(b)(Hi,0);end;end;end;end;else fe=function(...)local J5=(1);local L5={};local Z5=({[0X2]=L5,[1]=ce});local n5=m();local o5=((n5==F and Le or n5));local P5,D5=rC(...);P5=P5-1;for L3=0,P5 do do if not(he>L3)then break;else(L5)[L3]=D5[L3+1];end;end;end;local b5=(0X00000);if not ge then do D5=nil;end;elseif xe then do(L5)[he]={n=P5>=he and P5-he+0X1 or 0,I(D5,he+0x1,P5+1)};end;end;if o5==n5 then else i(fe,o5);end;while true do local P3=Re[J5];J5=J5+0X1;local N3=P3[0X4];do return(function(o,Z,...)local A=o[0];local n=A or Priority:get("AutoCollectFruit");if not n:check()then return;end;local G=Client.Character;if not Client.Team then _C("SetTeam",Client.Team.Name);end;if not G then return;end;if not G:FindFirstChild("Humanoid")then return;end;if G:FindFirstChild("Humanoid").Health<=0 then return;end;if not Root then return;end;if#FruitInServer<=0 then return;end;local n=Priority:get("AutoCollectFruit");local function x(g)if g.Name=="Fruit "and Settings.TweenCollectFruit then n:set();if G:FindFirstChild("Humanoid").Health<=0 or not g:FindFirstChild("Handle")then return;end;n:set();repeat tp(g:WaitForChild("Handle").CFrame,function()return n:check()and g.Parent==workspace and Settings[Priority.Activity];end);until g.Parent~=workspace or not n:check()or not Settings[Priority.Activity];n:clear();end;if g:IsA("Tool")and g:FindFirstChild("Handle")then if dist(g.Handle.Position)<=5000 then if tick()-RecentCollected<15 then return;end;RecentCollected=tick();firetouchinterest(g.Handle,G.HumanoidRootPart,0);firetouchinterest(g.Handle,G.HumanoidRootPart,1);end;end;end;for B,b in pairs(FruitInServer)do if b then x(b);if b.Name=="Fruit "or b:IsA("Tool")then break;end;end;end;n:clear();end)(L5,ve,...);end;end;end;end;else do fe=function(...)local xA,mA=0X1,{};local yA=m();local oA={[0X2]=mA,[1]=ce};local zA=(yA==F and Le or yA);local QA,UA=rC(...);QA=QA-0x1;local ZA=(0);for Wc=0x0,QA do if not(he>Wc)then do break;end;else do(mA)[Wc]=UA[Wc+0x1];end;end;end;if not ge then do UA=nil;end;elseif not(xe)then else(mA)[he]={n=QA>=he and QA-he+0X1 or 0,I(UA,he+1,QA+0X00001)};end;do if zA==yA then else i(fe,zA);end;end;while true do local Ht=(Re[xA]);xA=xA+1;local lt=Ht[0X4];return(function(G,V,...)if not Client.Character:FindFirstChild("HasBuso")then task.spawn(_C,"Buso");end;end)(mA,ve,...);end;end;end;end;end;end;end;end;else if me>=58 then do if me>=0X040 then if not(me>=67)then if me<0X41 then fe=function(...)local qk,sk,Vk=0x1,{},0X0;local Fk=m();local Gk,yk=rC(...);local Xk,kk={[0X2]=sk,[1]=ce},((Fk==F and Le or Fk));Gk=Gk-1;for se=0X0,Gk do if he>se then sk[se]=yk[se+0X0001];else break;end;end;do if not ge then yk=nil;elseif not(xe)then else(sk)[he]={n=Gk>=he and Gk-he+0X1 or 0X00000,I(yk,he+1,Gk+0x1)};end;end;if kk==Fk then else(i)(fe,kk);end;local ck,gk,Sk,jk=j(function()do while true do local IM=(Re[qk]);local nM=(IM[0X4]);qk=qk+0X1;if nM<0X7 then do if not(nM<0x00003)then if nM<5 then if nM==0X4 then for Qe=IM[7],IM[6]do(sk)[Qe]=nil;end;else local nw=(je[IM[6]]);local Iw,yw=nw[0X08],nil;local Gw=(#Iw);do if Gw>0X0 then yw={};do for Sh=0X1,Gw do local eh=Iw[Sh];do if eh[0X1]==0 then do yw[Sh-0X1]={sk,eh[0X02]};end;else(yw)[Sh-1]=ve[eh[0X00002]];end;end;end;end;(A)(De,yw);end;end;do sk[IM[0X00007]]=NC(yw,kk,nw);end;end;else if nM==6 then else do(sk)[IM[7]]=kk[IM[0x00002]];end;end;end;else if nM<0X1 then sk[IM[7]]=IM[2];else if nM==0X2 then sk[IM[0X007]]={I({},1,IM[6])};else(sk)[IM[0X7]]=sk[IM[6]]<=sk[IM[1]];end;end;end;end;else do if not(nM<0Xa)then if not(nM>=0Xc)then if nM~=0xb then qk=IM[0X06];else(sk)[IM[0X7]]=sk[IM[0X6]]^sk[IM[1]];end;else if nM~=0x00D then(Xk)[IM[0X00006]]=sk[IM[7]];else local Nk=IM[7];local Jk=(sk[Nk]);local nk=(IM[0X1]-0X001)*50;for Yv=1,IM[6]do(Jk)[nk+Yv]=sk[Nk+Yv];end;end;end;else if nM<8 then sk[IM[0x7]]=true;else if nM~=9 then(sk)[IM[7]]=sk[IM[0X6]]>=sk[IM[0X0001]];else do(sk)[0]=kk[IM[0x2]];end;local kI=0;qk=qk+1;do qk=qk+0X1;end;IM=Re[qk];qk=qk+0X01;local CI=(sk[0]);sk[kI+1]=CI;sk[kI]=CI[IM[5]];do IM=Re[qk];end;do qk=qk+0x1;end;do(sk)[0X2]=IM[2];end;do qk=qk+1;end;kI=0X0;(sk)[kI]=sk[kI](sk[kI+0X1],sk[kI+0X0002]);Vk=kI;qk=qk+0X0001;qk=qk+1;do IM=Re[qk];end;qk=qk+1;(sk)[1]=kk[IM[2]];IM=Re[qk];qk=qk+1;do(sk)[1]=sk[1][IM[0X5]];end;qk=qk+0X1;qk=qk+1;IM=Re[qk];local fI=je[IM[0X0006]];qk=qk+1;local oI=nil;local hI=fI[0X8];local YI=#hI;if not(YI>0x0)then else oI={};for aN=1,YI do local UN=(hI[aN]);if UN[1]~=0 then do(oI)[aN-1]=ve[UN[2]];end;else oI[aN-0x00001]={sk,UN[2]};end;end;(A)(De,oI);end;do(sk)[0X0002]=NC(oI,kk,fI);end;qk=qk+0X1;kI=1;(sk[kI])(sk[kI+1]);Vk=kI-0x1;do qk=qk+1;end;do repeat local ym,Jm=De,sk;do if#ym>0x00 then local gi=({});for Dg,eg in D,ym do for GG,cG in D,eg do do if cG[1]==Jm and cG[2]>=0 then local Z5=cG[0x2];if not(not gi[Z5])then else do(gi)[Z5]={Jm[Z5]};end;end;cG[0x1]=gi[Z5];(cG)[0x2]=1;end;end;end;end;end;end;until true;end;return;end;end;end;end;end;end;end;end);if ck then do if gk then do if jk==0X001 then do return sk[Sk]();end;else do return sk[Sk](I(sk,Sk+0X001,Vk));end;end;end;elseif not(Sk)then else do return I(sk,Sk,jk);end;end;end;else if f(gk)=='st\114\i\110g'then if e(gk,'at\116\e\109pt\ to\ \y\ie\l\100\ a\cr\o\s\s \m\101ta\m\101t\ho\100/C\%\-\ca\l\l bo\117nd\097\114\121')then return coroutine.yield();end;do if e(gk,"\^.-:\037\d\+\: ")then b("Luraph Script:"..(Ae[qk-1]or'\(\in\116\e\114n\097l)')..": "..r(gk),0X00);else(b)(gk,0X0);end;end;else(b)(gk,0X0);end;end;end;else if me==0X42 then fe=function(...)local Sp,Op=1,({});local rp=(0);local fp=m();local mp={[1]=ce,[0X2]=Op};local Zp,kp=rC(...);do Zp=Zp-0X1;end;for ER=0,Zp do if he>ER then(Op)[ER]=kp[ER+1];else break;end;end;local bp=((fp==F and Le or fp));do if not ge then kp=nil;elseif not(xe)then else(Op)[he]={n=Zp>=he and Zp-he+1 or 0,I(kp,he+0X1,Zp+0x1)};end;end;if bp==fp then else(i)(fe,bp);end;local qp,Np,Ap,hp=j(function()while true do local t5=(Re[Sp]);local X5=t5[0X4];Sp=Sp+1;if X5>=0X009 then if not(X5<0XD)then do if X5<0xf then do if X5~=14 then local Ud=(je[t5[6]]);local bd,Id=Ud[0X8],nil;local jd=(#bd);do if not(jd>0X00000)then else Id={};for wv=1,jd do local rv=bd[wv];do if rv[1]==0X0 then do(Id)[wv-1]={Op,rv[0x2]};end;else do(Id)[wv-1]=ve[rv[2]];end;end;end;end;A(De,Id);end;end;do(Op)[t5[0x7]]=NC(Id,bp,Ud);end;else if Op[t5[0X00006]]<Op[t5[1]]then Sp=t5[0X7];end;end;end;else do if X5>=16 then if X5==0x11 then local uC=(Op[t5[0X0006]]/Op[t5[1]]);do Op[t5[7]]=uC-uC%1;end;else for o5=t5[0X7],t5[0x006]do do Op[o5]=nil;end;end;end;else end;end;end;end;else do if X5>=11 then if X5~=12 then repeat local vX,wX=De,Op;if#vX>0 then local mw={};do for Zh,ih in D,vX do for HU,RU in D,ih do if not(RU[1]==wX and RU[2]>=0X0)then else local gl=(RU[0X002]);do if not(not mw[gl])then else(mw)[gl]={wX[gl]};end;end;(RU)[0X1]=mw[gl];(RU)[0X002]=1;end;end;end;end;end;until true;return;else Op[0X2]=bp[t5[0X2]];Sp=Sp+0X00001;Sp=Sp+1;local of=2;Sp=Sp+1;(Op)[0X3]=Op[1];do Sp=Sp+1;end;(Op)[of]=Op[of](Op[of+1]);do rp=of;end;Sp=Sp+1;do Sp=Sp+1;end;do t5=Re[Sp];end;do Sp=Sp+1;end;if Op[2]then Sp=t5[0x6];end;end;else do if X5==10 then repeat local Zn,fn=De,Op;if#Zn>0 then local IZ=({});for CG,xG in D,Zn do for MY,eY in D,xG do if not(eY[0X00001]==fn and eY[2]>=0x0)then else local tG=(eY[2]);if not IZ[tG]then IZ[tG]={fn[tG]};end;do(eY)[0X00001]=IZ[tG];end;do eY[0X002]=0X00001;end;end;end;end;end;until true;local zG=(t5[7]);return false,zG,zG;else(Op)[t5[0X7]]=bp[t5[2]];end;end;end;end;end;else if not(X5<0x4)then if not(X5>=0X6)then if X5~=5 then local Qx,Wx=t5[0X7],Op[t5[0X006]];Op[Qx+1]=Wx;do(Op)[Qx]=Wx[t5[0x5]];end;else Op[t5[7]]={I({},1,t5[6])};end;else if not(X5>=7)then local yZ,hZ=1,(Op[0X0]);(Op)[yZ+1]=hZ;do Op[yZ]=hZ[t5[0X5]];end;do t5=Re[Sp];end;Sp=Sp+0X1;Op[0X0003]=t5[0X2];Sp=Sp+0x1;yZ=0X1;do Op[yZ]=Op[yZ](Op[yZ+0X1],Op[yZ+0X2]);end;rp=yZ;t5=Re[Sp];Sp=Sp+1;do(Op)[0X1]=Op[1][t5[5]];end;t5=Re[Sp];do Sp=Sp+1;end;if not Op[1]then Sp=t5[6];end;else if X5~=8 then local dj=2;local Rj=(Op[0X1]);Op[dj+1]=Rj;(Op)[dj]=Rj[t5[5]];do t5=Re[Sp];end;do Sp=Sp+1;end;do Op[4]=t5[2];end;Sp=Sp+1;do Op[0X5]=#Op[1];end;do t5=Re[Sp];end;Sp=Sp+1;Op[5]=Op[5]-t5[0X5];Sp=Sp+0X001;dj=2;rp=dj+0X4-0X01;(Op)[dj]=Op[dj](I(Op,dj+0X0001,rp));rp=dj;Sp=Sp+1;Sp=Sp+1;Sp=Sp+0X00001;Op[0x1]=Op[0X2];t5=Re[Sp];do Sp=Sp+0X1;end;Sp=t5[0X6];else local xg=(t5[7]);local Qg=g(function(...)(d)();do for qm,Fm,Tm,Pm,am,um,pm,Im,mm,km in...do(d)(true,{qm,Fm,Tm,Pm,am,um,pm,Im,mm,km});end;end;end);(Qg)(Op[xg],Op[xg+0X00001],Op[xg+2]);rp=xg;(Op)[xg]=Qg;Sp=t5[0X06];end;end;end;else if not(X5>=2)then if X5~=0x00001 then Sp=t5[0X6];else local QP,hP=0x2,(Op[1]);(Op)[QP+1]=hP;(Op)[QP]=hP[t5[0X5]];t5=Re[Sp];Sp=Sp+1;Op[4]=t5[0x00002];Sp=Sp+0x1;Op[5]=#Op[0X1];t5=Re[Sp];Sp=Sp+1;Op[0x5]=Op[5]-t5[0x00005];do Sp=Sp+1;end;QP=0X2;rp=QP+4-1;(Op)[QP]=Op[QP](I(Op,QP+0x0001,rp));do rp=QP;end;Sp=Sp+0X1;do(Op)[1]=Op[0X00002];end;do t5=Re[Sp];end;Sp=Sp+1;do QP=0X2;end;hP=Op[0X1];(Op)[QP+0X1]=hP;(Op)[QP]=hP[t5[0X005]];t5=Re[Sp];Sp=Sp+0X1;(Op)[0X00004]=t5[2];Sp=Sp+0X1;QP=2;do Op[QP]=Op[QP](Op[QP+0X1],Op[QP+0X2]);end;rp=QP;t5=Re[Sp];Sp=Sp+0x1;if not Op[2]then Sp=t5[0X0006];end;end;else if X5==0X3 then local Xe,Be=t5[7],(t5[0x6]);rp=Xe+Be-0x1;repeat local r4,c4=De,(Op);if not(#r4>0)then else local ne={};for vw,lw in D,r4 do do for lN,cN in D,lw do do if cN[0x1]==c4 and cN[0X2]>=0 then local iL=cN[2];if not ne[iL]then ne[iL]={c4[iL]};end;do cN[1]=ne[iL];end;(cN)[2]=0X00001;end;end;end;end;end;end;until true;return true,Xe,Be;else(Op)[t5[7]]=t5[2];end;end;end;end;end;end);if qp then if Np then if hp==1 then return Op[Ap]();else return Op[Ap](I(Op,Ap+1,rp));end;elseif not(Ap)then else return I(Op,Ap,hp);end;else if f(Np)~="\s\116r\i\110\103"then b(Np,0);else do if not(e(Np,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;do if e(Np,"^.-:%d+: ")then b("Luraph Script:"..(Ae[Sp-0x01]or'\040\105\110t\ernal\)').."\:\032"..r(Np),0);else b(Np,0X0);end;end;end;end;end;else fe=function(...)local SR={};local tR=1;local gR={[1]=ce,[0X2]=SR};local nR=(m());local NR,xR=0,(nR==F and Le or nR);local mR,qR=rC(...);mR=mR-0X01;for oi=0,mR do if not(he>oi)then break;else SR[oi]=qR[oi+0X0001];end;end;if not ge then qR=nil;elseif not(xe)then else(SR)[he]={n=mR>=he and mR-he+1 or 0,I(qR,he+0X1,mR+1)};end;if xR==nR then else i(fe,xR);end;local iR,bR,aR,RR=j(function()while true do local O2=Re[tR];local e2=O2[0X4];tR=tR+0X1;if not(e2>=0X00a)then if e2<0X5 then if not(e2>=0X00002)then if e2~=1 then local le=(je[O2[6]]);local be,Ce=le[0x8],(nil);local ke=#be;if ke>0X0 then Ce={};for sy=1,ke do local my=be[sy];if my[1]~=0 then do Ce[sy-1]=ve[my[2]];end;else(Ce)[sy-0X1]={SR,my[0X2]};end;end;(A)(De,Ce);end;(SR)[O2[7]]=NC(Ce,xR,le);else(SR)[2]=xR[O2[0X2]];O2=Re[tR];local fb=je[O2[0X6]];tR=tR+0X1;local pb,Ob=fb[0X00008],(2);local db=(nil);local Ib=(#pb);if not(Ib>0X0)then else db={};for kk=1,Ib do local tk=(pb[kk]);if tk[1]==0X0 then(db)[kk-1]={SR,tk[2]};else(db)[kk-1]=ve[tk[2]];end;end;(A)(De,db);end;SR[0X03]=NC(db,xR,fb);tR=tR+1;(SR[Ob])(SR[Ob+0X1]);NR=Ob-0X1;tR=tR+1;tR=tR+0x01;local Eb=ve[1];do tR=tR+1;end;SR[0X2]=Eb[1][Eb[2]];O2=Re[tR];tR=tR+0x1;local nb=(SR[0X02]);Ob=0x002;(SR)[Ob+1]=nb;SR[Ob]=nb[O2[5]];tR=tR+0X1;Ob=2;(SR[Ob])(SR[Ob+1]);do NR=Ob-0X0001;end;do tR=tR+0X1;end;do tR=tR+1;end;tR=tR+1;repeat local gT,RT=De,(SR);do if#gT>0 then local QT=({});do for PQ,MQ in D,gT do do for E2,p2 in D,MQ do if p2[1]==RT and p2[2]>=1 then local oa=p2[2];do if not QT[oa]then QT[oa]={RT[oa]};end;end;do(p2)[0X01]=QT[oa];end;do p2[2]=0X1;end;end;end;end;end;end;end;end;until true;do O2=Re[tR];end;do tR=tR+0X1;end;tR=O2[6];end;else if e2>=3 then do if e2~=4 then(SR)[O2[0X7]]=xR[O2[2]];else SR[1]=xR[O2[2]];tR=tR+1;tR=tR+1;O2=Re[tR];tR=tR+0X1;do SR[0X1]=SR[1][O2[0X5]];end;tR=tR+1;tR=tR+1;O2=Re[tR];tR=tR+1;if not SR[0X1]then tR=O2[6];end;end;end;else do SR[O2[7]]=SR[O2[6]]>=SR[O2[0X1]];end;end;end;else if not(e2>=0X007)then do if e2==6 then(SR)[0]=xR[O2[0x2]];O2=Re[tR];tR=tR+0X1;local ol=(0);do SR[1]=O2[2];end;tR=tR+0X1;(SR)[ol]=SR[ol](SR[ol+0X01]);NR=ol;O2=Re[tR];tR=tR+0X0001;(SR)[1]=SR[0][O2[5]];O2=Re[tR];tR=tR+0X1;if SR[0x1]then tR=O2[6];end;else if not(SR[O2[0X7]])then else tR=O2[0x6];end;end;end;else if e2>=0X8 then if e2~=9 then(SR)[O2[7]]=O2[2];else SR[1]=xR[O2[0X002]];do tR=tR+1;end;tR=tR+0X1;O2=Re[tR];tR=tR+0X1;if SR[0X1]then tR=O2[6];end;end;else do repeat local nZ,uZ=De,SR;do if not(#nZ>0x00)then else local pg=({});for Gp,Mp in D,nZ do for GU,hU in D,Mp do do if hU[0X001]==uZ and hU[0X2]>=0 then local C5=hU[2];if not pg[C5]then pg[C5]={uZ[C5]};end;(hU)[0X001]=pg[C5];hU[0x2]=1;end;end;end;end;end;end;until true;end;return;end;end;end;else if e2>=15 then if not(e2<0X0011)then do if e2<0X012 then for Z1=O2[7],O2[0x6]do do(SR)[Z1]=nil;end;end;else if e2==19 then tR=O2[0x6];else SR[O2[0X7]]={I({},0X0001,O2[6])};end;end;end;else do if e2==0X00010 then(SR)[0X00001]=xR[O2[0X2]];do O2=Re[tR];end;tR=tR+1;SR[1]=SR[0X1][O2[5]];tR=tR+0X1;tR=tR+0X1;O2=Re[tR];tR=tR+0X00001;if not(not SR[1])then else tR=O2[0X6];end;else SR[1]=xR[O2[2]];O2=Re[tR];do tR=tR+1;end;do SR[0X1]=SR[1][O2[5]];end;O2=Re[tR];tR=tR+1;(SR)[2]=O2[0X0002];tR=tR+1;local uc=1;(SR)[uc]=SR[uc](SR[uc+0x001]);NR=uc;tR=tR+1;tR=tR+0X001;O2=Re[tR];tR=tR+0X00001;if not SR[1]then tR=O2[6];end;end;end;end;else do if e2<0XC then if e2~=11 then do(SR)[0X001]=xR[O2[0x2]];end;tR=tR+0X001;do tR=tR+0X1;end;O2=Re[tR];tR=tR+1;SR[2]=O2[2];local Ek=0x01;do tR=tR+1;end;SR[Ek]=SR[Ek](SR[Ek+1]);do NR=Ek;end;tR=tR+0X1;tR=tR+1;O2=Re[tR];tR=tR+0X1;SR[0X2]=SR[0X001][O2[5]];tR=tR+0X001;tR=tR+0X1;O2=Re[tR];do tR=tR+1;end;if not SR[2]then do tR=O2[0X6];end;end;else end;else if e2<13 then SR[O2[0X00007]]=G(SR[O2[6]],SR[O2[1]]);else do if e2~=14 then do(SR)[1]=xR[O2[2]];end;O2=Re[tR];local ol=0x1;do tR=tR+1;end;local dl=SR[1];do SR[ol+1]=dl;end;SR[ol]=dl[O2[5]];O2=Re[tR];do tR=tR+1;end;SR[0X3]=O2[0x2];tR=tR+0X1;do ol=1;end;do SR[ol]=SR[ol](SR[ol+0X00001],SR[ol+0X2]);end;NR=ol;O2=Re[tR];do tR=tR+1;end;do if not(not SR[0X001])then else tR=O2[6];end;end;else repeat local Es,vs=De,(SR);if not(#Es>0X00000)then else local u1=({});for ho,xo in D,Es do for FK,iK in D,xo do if not(iK[0X1]==vs and iK[2]>=0)then else local B0=(iK[0X002]);do if not(not u1[B0])then else u1[B0]={vs[B0]};end;end;iK[0x001]=u1[B0];do(iK)[0x0002]=0x00001;end;end;end;end;end;until true;local cO=(O2[7]);return false,cO,cO+O2[0x6]-2;end;end;end;end;end;end;end;end;end);if iR then if bR then do if RR~=1 then do return SR[aR](I(SR,aR+1,NR));end;else do return SR[aR]();end;end;end;elseif not(aR)then else do return I(SR,aR,RR);end;end;else if f(bR)=="\s\116r\i\110g"then do if e(bR,"a\116tem\112\116\ \116o\ y\105el\100 \097cr\111\115\115\032\109et\097\109\101t\h\111d\/\C\%-\c\097ll\ b\ound\097ry")then return coroutine.yield();end;end;do if e(bR,"^.-:%d+: ")then(b)('\076\117ra\112h\ \S\cri\112t\:'..(Ae[tR-1]or'\(i\110tern\097\l\)')..'\:\ '..r(bR),0);else b(bR,0X0);end;end;else(b)(bR,0);end;end;end;end;end;else if me<0X00044 then fe=function(...)local vy=1;local hy=({});local Ty={[0X2]=hy,[1]=ce};local Py=m();local Ry=((Py==F and Le or Py));local fy,Qy=rC(...);fy=fy-0X1;for w4=0,fy do do if not(he>w4)then break;else do hy[w4]=Qy[w4+0x1];end;end;end;end;if not ge then Qy=nil;elseif not(xe)then else hy[he]={n=fy>=he and fy-he+0X1 or 0X0,I(Qy,he+1,fy+1)};end;local Uy=(0);do if Ry==Py then else i(fe,Ry);end;end;local Jy,Iy,py,Ly=j(function()do while true do local FB=Re[vy];local JB=FB[0X4];do vy=vy+0X1;end;if JB<6 then do if JB>=3 then if JB<0X4 then local ji=(FB[0X7]);local Xi,di=hy[ji]();do if not(Xi)then else for pO=1,FB[0X1]do hy[ji+pO]=di[pO];end;vy=FB[6];end;end;else if JB==5 then if not(hy[FB[6]]<=hy[FB[1]])then vy=FB[0x7];end;else local uX=FB[7];local LX=g(function(...)(d)();do for iN,vN,VN,sN,fN,SN,hN,lN,QN,FN in...do(d)(true,{iN,vN,VN,sN,fN,SN,hN,lN,QN,FN});end;end;end);(LX)(hy[uX],hy[uX+0X1],hy[uX+2]);Uy=uX;hy[uX]=LX;vy=FB[0x6];end;end;else if JB<0X1 then hy[0]=Ry[FB[0x02]];local e7=(0);do vy=vy+1;end;vy=vy+1;do FB=Re[vy];end;vy=vy+0x1;local M7=hy[0];do hy[e7+1]=M7;end;(hy)[e7]=M7[FB[0X5]];do FB=Re[vy];end;vy=vy+1;hy[0X0002]=FB[0X2];vy=vy+0x001;do e7=0;end;do hy[e7]=hy[e7](hy[e7+0X1],hy[e7+2]);end;Uy=e7;vy=vy+0x1;vy=vy+0X00001;FB=Re[vy];do vy=vy+0X001;end;do(hy)[1]=Ry[FB[0X00002]];end;do FB=Re[vy];end;do vy=vy+1;end;(hy)[1]=hy[1][FB[5]];FB=Re[vy];local W7=je[FB[6]];local B7=W7[0x08];vy=vy+1;local A7=nil;local P7=(#B7);do if P7>0 then do A7={};end;do for Sl=1,P7 do local Ul=B7[Sl];if Ul[0X01]~=0 then(A7)[Sl-1]=ve[Ul[2]];else(A7)[Sl-1]={hy,Ul[0X2]};end;end;end;A(De,A7);end;end;hy[2]=NC(A7,Ry,W7);vy=vy+0X1;e7=1;hy[e7](hy[e7+1]);Uy=e7-1;vy=vy+0x00001;do repeat local wl,kl=De,hy;do if#wl>0 then local kj={};for ZQ,IQ in D,wl do for im,Hm in D,IQ do do if Hm[1]==kl and Hm[0X002]>=0 then local Id=Hm[0x2];if not(not kj[Id])then else do kj[Id]={kl[Id]};end;end;Hm[0X1]=kj[Id];Hm[2]=0X01;end;end;end;end;end;end;until true;end;return;else if JB~=2 then hy[FB[7]]=FB[2];else end;end;end;end;else if not(JB<9)then if not(JB<0Xa)then if JB~=11 then do hy[FB[7]]=Ry[FB[2]];end;else local mY=(je[FB[0x0006]]);local rY=(mY[8]);local lY=(nil);local sY=#rY;if not(sY>0)then else lY={};for e0=1,sY do local B0=rY[e0];if B0[1]~=0X0 then lY[e0-1]=ve[B0[0X00002]];else(lY)[e0-1]={hy,B0[2]};end;end;(A)(De,lY);end;hy[FB[7]]=NC(lY,Ry,mY);end;else(hy)[FB[0X7]]={I({},1,FB[6])};end;else if JB>=0X00007 then if JB~=8 then do vy=FB[0X006];end;else(hy)[FB[7]]=hy[FB[0x6]]<=hy[FB[0x1]];end;else for Kn=FB[7],FB[6]do do(hy)[Kn]=nil;end;end;end;end;end;end;end;end);if Jy then do if Iy then if Ly~=1 then return hy[py](I(hy,py+1,Uy));else do return hy[py]();end;end;elseif not(py)then else return I(hy,py,Ly);end;end;else if f(Iy)=='\115\116ri\110\103'then if not(e(Iy,"a\116\116\e\mpt\ t\o\ \y\ie\l\100\032\097cro\115\s\032\109et\097\109\et\ho\100\/\C\037-\cal\l\032\098o\117\110\d\097ry"))then else return coroutine.yield();end;if e(Iy,'\094\.\-\058%\100+\058 ')then(b)("Luraph Script:"..(Ae[vy-0X1]or'(\int\101r\110a\l\041').."\:\ "..r(Iy),0x0000);else(b)(Iy,0);end;else b(Iy,0X0);end;end;end;else if me~=0X45 then fe=function(...)local BV=(0X0);local tV,oV=0X1,({});local uV=(m());local JV={[1]=ce,[0X2]=oV};local jV,nV=rC(...);do jV=jV-0x001;end;local dV=((uV==F and Le or uV));for UF=0,jV do if not(he>UF)then break;else(oV)[UF]=nV[UF+0X1];end;end;if not ge then do nV=nil;end;elseif xe then do oV[he]={n=jV>=he and jV-he+1 or 0,I(nV,he+0x1,jV+1)};end;end;do if dV==uV then else(i)(fe,dV);end;end;local QV,SV,NV,YV=j(function()while true do local JT=Re[tV];local wT=JT[4];do tV=tV+0X1;end;do if not(wT>=0Xb)then if wT>=5 then if wT<0X8 then if not(wT>=0x0006)then(oV)[0]=dV[JT[0X0002]];tV=tV+0X1;do tV=tV+0X001;end;JT=Re[tV];tV=tV+0X1;if oV[0x000]then tV=JT[0x00006];end;else do if wT==7 then tV=JT[6];else oV[JT[7]]=JT[2];end;end;end;else if wT>=9 then do if wT==10 then do oV[0X0]=dV[JT[0x2]];end;JT=Re[tV];tV=tV+1;(oV)[0X0]=oV[0X000][JT[0x00005]];tV=tV+0X1;tV=tV+1;do JT=Re[tV];end;tV=tV+0X1;if not oV[0X00000]then tV=JT[0x6];end;else oV[JT[0X0007]]={I({},1,JT[6])};end;end;else do repeat local tl,il=De,oV;if#tl>0 then local Cc={};do for ZR,DR in D,tl do for Tj,rj in D,DR do if rj[0x1]==il and rj[0x0002]>=0X00 then local mF=(rj[2]);if not Cc[mF]then Cc[mF]={il[mF]};end;(rj)[0X1]=Cc[mF];do(rj)[0x2]=0X01;end;end;end;end;end;end;until true;end;return;end;end;else do if not(wT<2)then if not(wT>=3)then do(oV)[0X01]=true;end;do JT=Re[tV];end;tV=tV+0X00001;dV[JT[0X2]]=oV[0X001];JT=Re[tV];tV=tV+0X1;do tV=JT[6];end;else if wT~=0x4 then do repeat local T1,j1,f1=De,oV,JT[0X0007];if#T1>0 then local Sl=({});for gV,wV in D,T1 do do for vU,hU in D,wV do do if hU[1]==j1 and hU[0X2]>=f1 then local z4=hU[0X00002];do if not Sl[z4]then Sl[z4]={j1[z4]};end;end;do(hU)[1]=Sl[z4];end;do(hU)[0X2]=0x1;end;end;end;end;end;end;end;until true;end;else end;end;else do if wT==0X1 then do(oV)[JT[0X7]]=dV[JT[0X2]];end;else if oV[JT[0x00006]]~=JT[5]then tV=JT[7];end;end;end;end;end;end;else do if wT<0X000010 then if wT>=13 then if not(wT>=0xe)then local Gh,gh=JT[7],oV[JT[6]];oV[Gh+0X00001]=gh;(oV)[Gh]=gh[JT[0X5]];else if wT==15 then do oV[JT[0X7]]=oV[JT[0X6]]==oV[JT[0X01]];end;else if not(oV[JT[7]])then else tV=JT[0x006];end;end;end;else if wT==12 then oV[JT[7]]=oV[JT[0X06]]>oV[JT[0X1]];else do if not(oV[JT[6]]<=oV[JT[1]])then else tV=JT[7];end;end;end;end;else if wT<19 then if not(wT>=0X11)then for h7=JT[0X7],JT[6]do(oV)[h7]=nil;end;else do if wT==0X12 then oV[0X0]=dV[JT[0x002]];tV=tV+1;tV=tV+0X1;JT=Re[tV];local db=(0X00);tV=tV+0x1;oV[0X0001]=JT[0X2];tV=tV+0X001;(oV)[db]=oV[db](oV[db+1]);BV=db;do tV=tV+0X1;end;tV=tV+0X1;JT=Re[tV];tV=tV+1;if not(not oV[0X00])then else tV=JT[6];end;else local Xc=(je[JT[6]]);local fc=nil;local Ec=Xc[0X8];local sc=#Ec;if not(sc>0)then else fc={};do for Vp=0x1,sc do local bp=Ec[Vp];do if bp[0X01]==0X00000 then fc[Vp-1]={oV,bp[0X2]};else fc[Vp-0X0001]=ve[bp[0X00002]];end;end;end;end;A(De,fc);end;do oV[JT[7]]=NC(fc,dV,Xc);end;end;end;end;else do if wT>=0X14 then if wT==0x15 then oV[JT[0X7]]=oV[JT[0X0006]]>=oV[JT[0X1]];else oV[0X0]=dV[JT[2]];do JT=Re[tV];end;tV=tV+1;local JM=(0);oV[1]=JT[0X2];JT=Re[tV];tV=tV+1;(oV)[0X2]=JT[2];JT=Re[tV];do tV=tV+0X1;end;do oV[0X3]=JT[2];end;do tV=tV+1;end;BV=JM+0X4-1;do(oV)[JM]=oV[JM](I(oV,JM+0X01,BV));end;BV=JM;JT=Re[tV];tV=tV+1;do if oV[0X000]==JT[0x5]then tV=JT[7];end;end;end;else oV[JT[0X7]]=oV[JT[0X00006]]-oV[JT[0X1]];end;end;end;end;end;end;end;end;end);if QV then do if SV then do if YV~=1 then return oV[NV](I(oV,NV+1,BV));else return oV[NV]();end;end;elseif NV then do return I(oV,NV,YV);end;end;end;else if f(SV)=="string"then if e(SV,"a\116t\e\109p\116 t\o \121\i\e\108\d\ \097\cro\s\s\032\m\e\116\097\109et\ho\100\047\C\037\-\099\097\l\l b\ou\110da\114\121")then return coroutine.yield();end;if e(SV,'\094\.\045\:\037\d\043: ')then(b)("Lu\114\097\p\104\ \083\cr\i\pt\058"..(Ae[tV-0X00001]or"(internal)")..'\:\032'..r(SV),0X0);else b(SV,0X0);end;else(b)(SV,0);end;end;end;else fe=function(...)local Y6,X6=0X1,({});local q6=(m());local R6=({[1]=ce,[0X2]=X6});local n6,S6=rC(...);local b6=(0);n6=n6-0X1;for Hc=0,n6 do if not(he>Hc)then break;else X6[Hc]=S6[Hc+0X00001];end;end;local g6=(q6==F and Le or q6);do if not ge then S6=nil;elseif not(xe)then else do(X6)[he]={n=n6>=he and n6-he+1 or 0,I(S6,he+1,n6+1)};end;end;end;if g6~=q6 then(i)(fe,g6);end;local D6,U6,o6,u6=j(function()do while true do local OJ=(Re[Y6]);local NJ=OJ[4];Y6=Y6+0X0001;if NJ<0Xc then if NJ<0X6 then if not(NJ<0x3)then if not(NJ<0x0004)then if NJ~=0X05 then do(X6)[0X000]=g6[OJ[2]];end;Y6=Y6+0X1;do Y6=Y6+1;end;OJ=Re[Y6];Y6=Y6+1;(X6)[0]=X6[0][OJ[0X5]];do Y6=Y6+0X1;end;Y6=Y6+1;Y6=Y6+0X1;X6[0]=not X6[0x0];OJ=Re[Y6];Y6=Y6+0X001;do Y6=OJ[6];end;else if not(X6[OJ[0X06]]<X6[OJ[1]])then else do Y6=OJ[0X7];end;end;end;else X6[OJ[0X007]]=X6[OJ[6]]/X6[OJ[1]];end;else if not(NJ<0X1)then if NJ==0X0002 then repeat local FP,ZP=De,X6;if#FP>0 then local Hb=({});do for He,Ve in D,FP do for XL,DL in D,Ve do do if DL[0X1]==ZP and DL[2]>=0 then local ze=DL[0X2];if not Hb[ze]then Hb[ze]={ZP[ze]};end;do(DL)[0X01]=Hb[ze];end;(DL)[2]=1;end;end;end;end;end;end;until true;return;else local C3=ve[0X0];X6[0]=C3[0x1][C3[0X02]];OJ=Re[Y6];Y6=Y6+0X00001;(X6)[0]=X6[0][OJ[0X5]];OJ=Re[Y6];Y6=Y6+1;X6[0x0]=X6[0]<OJ[5];OJ=Re[Y6];Y6=Y6+0x01;do Y6=OJ[6];end;end;else local nt=(OJ[0X7]);for hZ=nt,nt+(OJ[0x6]-1)do do(X6)[hZ]=S6[he+(hZ-nt)+1];end;end;end;end;else if not(NJ<9)then do if not(NJ>=0Xa)then(X6)[OJ[7]]=not X6[OJ[6]];else if NJ==0XB then repeat local ZC,SC=De,X6;do if#ZC>0X0 then local R8=({});for Ne,we in D,ZC do for C9,m9 in D,we do if m9[0x1]==SC and m9[2]>=0X0 then local aA=m9[0X2];if not R8[aA]then R8[aA]={SC[aA]};end;do(m9)[1]=R8[aA];end;(m9)[0x002]=1;end;end;end;end;end;until true;local Eo=(OJ[7]);do return false,Eo,Eo;end;else do X6[OJ[7]]=X6[OJ[6]]%X6[OJ[0x1]];end;end;end;end;else if NJ<7 then local fg=je[OJ[6]];local og,Xg=fg[8],(nil);local rg=(#og);if not(rg>0X0)then else do Xg={};end;for aE=1,rg do local NE=og[aE];if NE[0x1]~=0 then Xg[aE-1]=ve[NE[2]];else(Xg)[aE-0X1]={X6,NE[2]};end;end;A(De,Xg);end;X6[OJ[0X7]]=NC(Xg,g6,fg);else if NJ==0X8 then(X6)[OJ[7]]=X6[OJ[6]]-X6[OJ[1]];else X6[OJ[7]]=X6[OJ[0X00006]];end;end;end;end;else if not(NJ>=0X12)then if NJ>=15 then if NJ>=16 then if NJ==0X00011 then if not(not X6[OJ[7]])then else Y6=OJ[0X00006];end;else do if X6[OJ[6]]==X6[OJ[0x001]]then Y6=OJ[7];end;end;end;else end;else do if NJ<0X000d then local t5,G5=OJ[0X7],OJ[6];b6=t5+G5-0X0001;repeat local mj,Uj=De,X6;do if not(#mj>0X00)then else local dK=({});for eQ,NQ in D,mj do do for h2,O2 in D,NQ do if O2[1]==Uj and O2[2]>=0 then local ab=(O2[0X2]);if not(not dK[ab])then else dK[ab]={Uj[ab]};end;do O2[1]=dK[ab];end;O2[2]=1;end;end;end;end;end;end;until true;return true,t5,G5;else if NJ==14 then local ou=OJ[7];local Lu,Vu=X6[ou]();do if not(Lu)then else do Y6=OJ[0X0006];end;do X6[ou+0X00003]=Vu;end;end;end;else do(X6)[OJ[0x7]]=OJ[0X00002];end;end;end;end;end;else if not(NJ>=0X0015)then if not(NJ>=19)then do Y6=OJ[6];end;else do if NJ~=20 then X6[OJ[0X00007]]=X6[OJ[6]]>X6[OJ[1]];else X6[OJ[0X007]]={I({},1,OJ[6])};end;end;end;else if NJ<23 then if NJ==22 then local Ee=0X0;local ne=(ve[1]);X6[0x0]=ne[0X00001][ne[2]];do Y6=Y6+0X1;end;do Y6=Y6+1;end;do OJ=Re[Y6];end;do Y6=Y6+0X1;end;local Be=(X6[0]);X6[Ee+0X1]=Be;(X6)[Ee]=Be[OJ[0X05]];Y6=Y6+1;Ee=0;(X6)[Ee]=X6[Ee](X6[Ee+0x1]);b6=Ee;do OJ=Re[Y6];end;Y6=Y6+0x1;Y6=OJ[6];else local o3=(ve[0X00]);X6[0x0]=o3[1][o3[0X2]];Y6=Y6+0X1;Y6=Y6+0X0001;do Y6=Y6+0X001;end;(X6)[0X0]=not X6[0X0];do OJ=Re[Y6];end;Y6=Y6+0x1;if not(X6[0])then else Y6=OJ[6];end;end;else if NJ==24 then X6[OJ[0x7]]=g6[OJ[0X2]];else if X6[OJ[0X7]]then Y6=OJ[6];end;end;end;end;end;end;end;end;end);if not(D6)then do if f(U6)=="st\114in\g"then if not(e(U6,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;do if not(e(U6,'^.\-\058\%\100\+\:\ '))then b(U6,0);else(b)("Luraph Script:"..(Ae[Y6-0x1]or"(internal)")..": "..r(U6),0X00000);end;end;else b(U6,0);end;end;else if U6 then if u6==1 then return X6[o6]();else return X6[o6](I(X6,o6+1,b6));end;elseif o6 then return I(X6,o6,u6);end;end;end;end;end;end;else if me>=61 then if not(me<62)then if me~=0x3f then fe=function(...)local hQ={};local iQ=(0);local LQ=(1);local UQ=(m());local QQ=({[0X2]=hQ,[1]=ce});local fQ,uQ=rC(...);fQ=fQ-0X1;for QG=0,fQ do if he>QG then(hQ)[QG]=uQ[QG+0X01];else break;end;end;local bQ=((UQ==F and Le or UQ));do if not ge then uQ=nil;elseif not(xe)then else(hQ)[he]={n=fQ>=he and fQ-he+0X0001 or 0,I(uQ,he+0X1,fQ+0X1)};end;end;do if bQ~=UQ then(i)(fe,bQ);end;end;local AQ,KQ,HQ,DQ=j(function()while true do local VL=(Re[LQ]);local IL=(VL[4]);LQ=LQ+1;if IL>=8 then if IL>=0XC then do if not(IL>=14)then do if IL~=13 then repeat local O6,l6=De,hQ;do if not(#O6>0)then else local ca=({});do for s9,y9 in D,O6 do for P2,y2 in D,y9 do if not(y2[1]==l6 and y2[2]>=0X00000)then else local M2=y2[2];if not ca[M2]then ca[M2]={l6[M2]};end;(y2)[0X0001]=ca[M2];(y2)[0X00002]=1;end;end;end;end;end;end;until true;return;else(hQ)[VL[0X7]]=hQ[VL[0X06]]>=hQ[VL[1]];end;end;else do if IL>=0XF then if IL~=0X10 then hQ[VL[7]]={I({},0X1,VL[6])};else local n8=je[VL[6]];local H8=(n8[0X8]);local x8=(nil);local z8=(#H8);if not(z8>0X00000)then else x8={};do for kX=0X00001,z8 do local aX=(H8[kX]);if aX[0X001]==0 then(x8)[kX-1]={hQ,aX[0X002]};else(x8)[kX-0x1]=ve[aX[0X2]];end;end;end;(A)(De,x8);end;hQ[VL[7]]=NC(x8,bQ,n8);end;else do hQ[0X1]=bQ[VL[2]];end;do LQ=LQ+1;end;do LQ=LQ+1;end;VL=Re[LQ];LQ=LQ+0X01;(hQ)[0X1]=hQ[1][VL[5]];LQ=LQ+1;LQ=LQ+0x1;VL=Re[LQ];LQ=LQ+0X1;do if not hQ[0x1]then LQ=VL[6];end;end;end;end;end;end;else if IL<10 then do if IL~=9 then local Gl=(VL[0x07]);local el=hQ[Gl+2];local wl=(hQ[Gl]);local yl=hQ[Gl+1];do hQ[Gl]=g(function()for QT=wl,yl,el do d(true,QT);end;end);end;LQ=VL[6];else(hQ)[VL[7]]=VL[0X00002];end;end;else if IL==0XB then else for ur=VL[7],VL[0X6]do(hQ)[ur]=nil;end;end;end;end;else if not(IL>=4)then if not(IL<2)then do if IL~=3 then hQ[VL[7]]=QQ[VL[6]];else if not(hQ[VL[6]]<=hQ[VL[1]])then else LQ=VL[7];end;end;end;else do if IL==0X1 then hQ[VL[0X7]]=bQ[VL[0x2]];else(hQ)[0]=bQ[VL[0X00002]];do LQ=LQ+1;end;local q0=0X000;LQ=LQ+1;VL=Re[LQ];LQ=LQ+1;hQ[0X0001]=VL[0x00002];LQ=LQ+1;local V0=ve[0];(hQ)[q0]=hQ[q0](hQ[q0+0x00001]);iQ=q0;LQ=LQ+0X0001;LQ=LQ+0X001;LQ=LQ+0X1;do hQ[0X0001]=V0[1][V0[2]];end;LQ=LQ+0X1;LQ=LQ+0X00001;VL=Re[LQ];LQ=LQ+0x01;hQ[1]=hQ[1][VL[5]];LQ=LQ+1;do(hQ)[0x2]=hQ[0X0000];end;LQ=LQ+1;do q0=1;end;do(hQ)[q0]=hQ[q0](hQ[q0+1]);end;iQ=q0;VL=Re[LQ];LQ=LQ+0X0001;if not hQ[0X1]then LQ=VL[0X6];end;end;end;end;else if IL>=6 then do if IL~=0X7 then do LQ=VL[6];end;else do hQ[VL[7]]=hQ[VL[6]]^hQ[VL[1]];end;end;end;else if IL==5 then local xS=(ve[0]);do(hQ)[0X1]=xS[0X1][xS[2]];end;do LQ=LQ+1;end;do LQ=LQ+1;end;local OS=0X1;do VL=Re[LQ];end;LQ=LQ+0X1;hQ[1]=hQ[1][VL[5]];LQ=LQ+0x1;LQ=LQ+1;LQ=LQ+0X1;do(hQ)[0x2]=hQ[0x0];end;do LQ=LQ+0X00001;end;do xS=ve[1];end;(hQ)[0X3]=xS[1][xS[2]];LQ=LQ+0X0001;LQ=LQ+1;do LQ=LQ+0x0001;end;(hQ[OS])(hQ[OS+0X001],hQ[OS+0X2]);iQ=OS-0X1;do LQ=LQ+0X001;end;LQ=LQ+0x1;LQ=LQ+0X1;xS=ve[0X1];hQ[0X1]=xS[1][xS[0x2]];LQ=LQ+0X1;LQ=LQ+1;VL=Re[LQ];local FS=hQ[0x01];LQ=LQ+0X1;do OS=1;end;(hQ)[OS+0X01]=FS;hQ[OS]=FS[VL[5]];do LQ=LQ+1;end;OS=1;(hQ[OS])(hQ[OS+0X01]);iQ=OS-0X1;VL=Re[LQ];LQ=LQ+0x00001;do LQ=VL[0X6];end;else(QQ)[VL[0X6]]=hQ[VL[7]];end;end;end;end;end;end);do if not(AQ)then if f(KQ)=="string"then do if not(e(KQ,"\097t\116e\m\pt\ t\o \y\105\e\108d\ acr\o\s\s\ \me\116\097\m\e\116\h\o\d/\C\037\045\ca\108\l\ \098\111\117\110d\097\114\y"))then else return coroutine.yield();end;end;if e(KQ,"^.-:%d+: ")then b("Luraph Script:"..(Ae[LQ-0X0001]or'(int\ern\097\l\041')..": "..r(KQ),0);else b(KQ,0X0);end;else(b)(KQ,0);end;else if KQ then if DQ==0X01 then return hQ[HQ]();else do return hQ[HQ](I(hQ,HQ+0X00001,iQ));end;end;elseif HQ then return I(hQ,HQ,DQ);end;end;end;end;else fe=function(...)local C4,t4=1,({});local w4=(m());local X4={[0X2]=t4,[1]=ce};local Q4,d4=rC(...);Q4=Q4-0X1;do for Pi=0x0000,Q4 do if not(he>Pi)then do break;end;else t4[Pi]=d4[Pi+1];end;end;end;local R4=((w4==F and Le or w4));local z4=0x0;if not ge then d4=nil;elseif not(xe)then else(t4)[he]={n=Q4>=he and Q4-he+1 or 0,I(d4,he+0x1,Q4+0X01)};end;if R4~=w4 then i(fe,R4);end;while true do local p2=(Re[C4]);C4=C4+1;local M2=(p2[0X4]);do return(function(B,e,...)local U=B[0];if U==""then return"Fruitless";end;local Q=string.match(U,"%-(.+)");if Q then return Q;end;return U;end)(t4,ve,...);end;end;end;end;else fe=function(...)local Vn=(0X1);local pn={};local Fn=(0);local En={[1]=ce,[0X2]=pn};local Bn=(m());local wn,Pn=rC(...);local jn=((Bn==F and Le or Bn));wn=wn-0x001;do for P_=0,wn do if not(he>P_)then break;else do pn[P_]=Pn[P_+0X1];end;end;end;end;if not ge then Pn=nil;elseif not(xe)then else pn[he]={n=wn>=he and wn-he+1 or 0x0,I(Pn,he+1,wn+1)};end;if jn~=Bn then(i)(fe,jn);end;local Qn,Cn,fn,cn=j(function()while true do local xn=(Re[Vn]);local un=xn[0x4];Vn=Vn+0X1;if not(un>=0X07)then if un<3 then if not(un<0X1)then if un~=0X2 then(pn)[xn[7]]=xn[0X2];else local Aa=(xn[0X00007]);local ia,ha,la=pn[Aa],pn[Aa+1],pn[Aa+2];(pn)[Aa]=g(function()for kt=ia,ha,la do(d)(true,kt);end;end);Vn=xn[6];end;else do pn[xn[0X7]]=pn[xn[0X6]]>=pn[xn[1]];end;end;else if un<5 then do if un~=4 then do pn[xn[7]]=jn[xn[0X2]];end;else Vn=xn[0X00006];end;end;else if un==6 then else pn[xn[0X07]]=pn[xn[6]]~=pn[xn[1]];end;end;end;else do if not(un<0X0b)then if not(un>=0X000d)then if un~=12 then(pn)[xn[7]]={I({},1,xn[6])};else(pn)[0X0000]=jn[xn[0x00002]];do Vn=Vn+1;end;Vn=Vn+0X001;xn=Re[Vn];do Vn=Vn+0X1;end;do if not(pn[0])then else Vn=xn[0X6];end;end;end;else do if un~=0xE then pn[0]=jn[xn[0X0002]];local DO=nil;xn=Re[Vn];Vn=Vn+1;(pn)[0]=pn[0][xn[0X5]];local NO=0X00000;do Vn=Vn+1;end;do Vn=Vn+0X1;end;xn=Re[Vn];Vn=Vn+1;local IO=je[xn[0X0006]];local OO=(IO[8]);local UO=#OO;if UO>0X00 then DO={};do for Wv=0X1,UO do local zv=OO[Wv];do if zv[0x1]==0X0000 then(DO)[Wv-0X1]={pn,zv[0X00002]};else(DO)[Wv-0X00001]=ve[zv[2]];end;end;end;end;(A)(De,DO);end;pn[0x1]=NC(DO,jn,IO);do Vn=Vn+1;end;pn[NO](pn[NO+0x1]);Fn=NO-0X1;Vn=Vn+0X1;repeat local tl,nl=De,pn;if#tl>0x00000 then local zi=({});for xO,TO in D,tl do for B3,M3 in D,TO do if not(M3[0X1]==nl and M3[0X002]>=0x00000)then else local MW=(M3[0x2]);if not(not zi[MW])then else zi[MW]={nl[MW]};end;M3[1]=zi[MW];(M3)[2]=0X1;end;end;end;end;until true;return;else local rs,qs=xn[0x7],(xn[0x0001]-1)*0x32;local Ns=(pn[rs]);for W0=1,xn[6]do Ns[qs+W0]=pn[rs+W0];end;end;end;end;else do if not(un>=9)then if un~=8 then repeat local yV,qV=De,(pn);if#yV>0 then local Dr={};for mu,Du in D,yV do for uJ,qJ in D,Du do if qJ[0X1]==qV and qJ[0x0002]>=0X0 then local N3=(qJ[0X02]);if not(not Dr[N3])then else(Dr)[N3]={qV[N3]};end;qJ[0X0001]=Dr[N3];(qJ)[0X2]=1;end;end;end;end;until true;do return;end;else(pn)[xn[0X07]]=En[xn[0X6]];end;else if un==10 then do pn[xn[0X7]]=T(pn[xn[6]]);end;else local zp=(je[xn[0X6]]);local Ip,Mp=zp[8],nil;local Qp=#Ip;if not(Qp>0)then else do Mp={};end;do for Uq=0X1,Qp do local qq=Ip[Uq];do if qq[1]==0 then(Mp)[Uq-1]={pn,qq[2]};else do(Mp)[Uq-1]=ve[qq[2]];end;end;end;end;end;(A)(De,Mp);end;do(pn)[xn[0x00007]]=NC(Mp,jn,zp);end;end;end;end;end;end;end;end;end);if Qn then if Cn then if cn~=0X1 then return pn[fn](I(pn,fn+0X1,Fn));else return pn[fn]();end;elseif fn then do return I(pn,fn,cn);end;end;else do if f(Cn)=="string"then do if not(e(Cn,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;do if not(e(Cn,"\094\.\-\:%\100\+\:\ "))then b(Cn,0X0);else(b)("Luraph Script:"..(Ae[Vn-0X1]or"(internal)")..": "..r(Cn),0);end;end;else b(Cn,0);end;end;end;end;end;else if me>=59 then if me==0X0003c then fe=function(...)local Kd,Od=0x01,({});local Ad=(0X00);local rd=({[0X2]=Od,[1]=ce});local Vd=m();local cd,sd=rC(...);cd=cd-0x1;local Jd=(Vd==F and Le or Vd);for ps=0,cd do if not(he>ps)then break;else(Od)[ps]=sd[ps+1];end;end;if not ge then sd=nil;elseif xe then(Od)[he]={n=cd>=he and cd-he+1 or 0X0000,I(sd,he+0X1,cd+0X1)};end;if Jd~=Vd then(i)(fe,Jd);end;local Qd,zd,ud,xd=j(function()do while true do local zO=(Re[Kd]);local vO=zO[0X00004];Kd=Kd+1;if not(vO<0X000b)then do if vO>=17 then if vO>=20 then if not(vO<21)then if vO~=22 then local Ak=ve[0];(Od)[1]=Ak[1][Ak[0X2]];Kd=Kd+1;do Kd=Kd+0X1;end;zO=Re[Kd];do Kd=Kd+0X1;end;if not(Od[1])then else Kd=zO[0X6];end;else Od[zO[7]]=Od[zO[0x6]]>=Od[zO[1]];end;else local yc=ve[1];Od[0]=yc[1][yc[0X2]];zO=Re[Kd];Kd=Kd+1;(Od)[0X1]=Jd[zO[0X2]];do Kd=Kd+0X1;end;Kd=Kd+1;zO=Re[Kd];do Kd=Kd+1;end;Od[1]=Od[1][zO[0X5]];do Kd=Kd+1;end;Od[0]=Od[0]==Od[0X1];zO=Re[Kd];do Kd=Kd+0X1;end;Kd=zO[0X6];end;else if not(vO>=0X12)then local X4=ve[4];Od[0]=X4[1][X4[2]];Kd=Kd+1;Kd=Kd+1;Kd=Kd+0X1;Ad=0;Od[Ad]=Od[Ad]();Kd=Kd+0X1;Kd=Kd+1;zO=Re[Kd];Kd=Kd+1;do if not(not Od[0X0000])then else Kd=zO[6];end;end;else do if vO~=19 then for TC=zO[0X7],zO[0X006]do(Od)[TC]=nil;end;else local OY=ve[0];OY[0x1][OY[0X00002]]=Od[0X0];do zO=Re[Kd];end;Kd=Kd+1;Od[0]=Jd[zO[2]];Kd=Kd+0X1;Ad=0X00;(Od)[Ad]=Od[Ad]();Kd=Kd+0x001;Kd=Kd+0X1;zO=Re[Kd];Kd=Kd+0X1;(Od)[0X1]=Jd[zO[0X2]];Kd=Kd+0X1;(Od)[0X0]=Od[0X000]-Od[1];zO=Re[Kd];do Kd=Kd+1;end;if not(not(zO[2]<Od[0X0]))then else do Kd=zO[7];end;end;end;end;end;end;else do if not(vO<0X000e)then if vO>=0xF then do if vO==0X10 then(Od)[zO[7]]=Jd[zO[0X002]];else local dQ=(ve[0X0]);(Od)[0X0]=dQ[1][dQ[2]];Kd=Kd+0X1;(Od)[0]=not Od[0X0];zO=Re[Kd];do Kd=Kd+1;end;Kd=zO[6];end;end;else local Ig=ve[0X0];(Od)[0X000]=Ig[0X01][Ig[0X00002]];Kd=Kd+1;do Kd=Kd+1;end;zO=Re[Kd];Kd=Kd+1;if not(not Od[0])then else do Kd=zO[6];end;end;end;else if vO>=12 then if vO==0Xd then do repeat local wI,CI=De,Od;if#wI>0X0 then local PE=({});for G0,z0 in D,wI do for HR,wR in D,z0 do do if not(wR[1]==CI and wR[0X00002]>=0X0000)then else local fk=wR[0X00002];do if not(not PE[fk])then else(PE)[fk]={CI[fk]};end;end;(wR)[0X1]=PE[fk];(wR)[0x2]=0x0001;end;end;end;end;end;until true;end;return;else Od[zO[7]]={I({},0x001,zO[6])};end;else local S3,K3=zO[7],(zO[0X00006]);do Ad=S3+K3-1;end;repeat local TL,rL=De,Od;if not(#TL>0)then else local CU={};do for Pu,Vu in D,TL do for Mn,yn in D,Vu do if not(yn[0x1]==rL and yn[2]>=0)then else local SX=(yn[0X00002]);if not(not CU[SX])then else(CU)[SX]={rL[SX]};end;do yn[0x1]=CU[SX];end;yn[0X2]=0X1;end;end;end;end;end;until true;return true,S3,K3;end;end;end;end;end;else if vO<5 then if vO<2 then if vO~=1 then do(Od)[zO[0x7]]=not Od[zO[0X6]];end;else local Bl=(je[zO[0x6]]);local Yl=Bl[0x8];local Ql=nil;local Ol=(#Yl);if not(Ol>0X0)then else Ql={};do for jx=0X1,Ol do local Hx=Yl[jx];if Hx[1]==0X0 then(Ql)[jx-0X1]={Od,Hx[0x2]};else Ql[jx-1]=ve[Hx[2]];end;end;end;A(De,Ql);end;Od[zO[0X00007]]=NC(Ql,Jd,Bl);end;else if vO>=3 then if vO==4 then Od[0X0000]=Jd[zO[0X2]];Kd=Kd+1;Kd=Kd+1;Kd=Kd+0X0001;Ad=0X0;Od[Ad]=Od[Ad]();local Ws=ve[1];zO=Re[Kd];Kd=Kd+1;do(Jd)[zO[2]]=Od[0];end;zO=Re[Kd];Kd=Kd+1;(Od)[0X0]=Jd[zO[2]];do Kd=Kd+0x0001;end;Kd=Kd+1;zO=Re[Kd];Kd=Kd+0x1;(Od)[0X0]=Od[0x0][zO[5]];local Xs=(0);do Kd=Kd+1;end;Kd=Kd+1;zO=Re[Kd];Kd=Kd+0X1;(Od)[0]=Od[0][zO[5]];Kd=Kd+0X1;Kd=Kd+1;do zO=Re[Kd];end;Kd=Kd+0X001;do(Od)[0]=Od[0X0][zO[5]];end;zO=Re[Kd];Kd=Kd+1;local Is=(Od[0X0]);do Od[Xs+1]=Is;end;do(Od)[Xs]=Is[zO[5]];end;Kd=Kd+0X001;(Od)[2]=Ws[0x1][Ws[2]];Kd=Kd+0x01;Xs=0X00;Od[Xs](Od[Xs+1],Od[Xs+2]);Ad=Xs-0x1;zO=Re[Kd];Kd=Kd+1;Kd=zO[6];else end;else if not(not Od[zO[7]])then else do Kd=zO[0X06];end;end;end;end;else if vO>=8 then do if vO<9 then(Od)[zO[7]]=T(Od[zO[6]]);else if vO==0xa then(Od)[zO[7]]=zO[2];else do repeat local G3,i3=De,Od;do if#G3>0 then local h_={};for Of,jf in D,G3 do for pz,bz in D,jf do if not(bz[1]==i3 and bz[0X0002]>=0X0)then else local ML=bz[0x2];if not(not h_[ML])then else(h_)[ML]={i3[ML]};end;bz[1]=h_[ML];(bz)[2]=1;end;end;end;end;end;until true;end;local jG=(zO[7]);do return false,jG,jG;end;end;end;end;else if not(vO>=6)then Kd=zO[6];else do if vO==0X0007 then do(Od)[0]=Jd[zO[2]];end;local wy=(ve[0X2]);Kd=Kd+0X1;Kd=Kd+1;do Kd=Kd+1;end;do(Od)[1]=wy[0X1][wy[0X2]];end;Kd=Kd+0X01;Od[0X0]=Od[0][Od[0X1]];Kd=Kd+0X01;Kd=Kd+0X1;do Kd=Kd+1;end;wy=ve[0X003];(Od)[1]=wy[0x00001][wy[2]];do Kd=Kd+0x00001;end;wy=ve[1];(Od)[0x2]=wy[1][wy[2]];do Kd=Kd+0X00001;end;do(Od[0])[Od[0X0001]]=Od[0X002];end;zO=Re[Kd];do Kd=Kd+1;end;Kd=zO[0X6];else Jd[zO[0x2]]=Od[zO[0x7]];end;end;end;end;end;end;end;end;end);if Qd then if zd then do if xd~=0X1 then return Od[ud](I(Od,ud+1,Ad));else return Od[ud]();end;end;elseif ud then return I(Od,ud,xd);end;else if f(zd)=="string"then do if not(e(zd,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;if not(e(zd,"\^\.\-:\%\d\+:\ "))then(b)(zd,0X0000);else(b)('\076\117\114a\p\h\032\S\cr\i\p\116\:'..(Ae[Kd-1]or"\040\i\110t\erna\l)")..'\058\ '..r(zd),0);end;else(b)(zd,0X0);end;end;end;else fe=function(...)local oU,cU=1,({});local WU=m();local BU,ZU={[0X2]=cU,[1]=ce},(WU==F and Le or WU);local YU,vU=rC(...);do YU=YU-0X1;end;do for zL=0,YU do do if he>zL then cU[zL]=vU[zL+0X1];else break;end;end;end;end;if not ge then vU=nil;elseif xe then cU[he]={n=YU>=he and YU-he+0X001 or 0X0,I(vU,he+1,YU+0X0001)};end;local pU=0X0;do if ZU==WU then else i(fe,ZU);end;end;local rU,JU,nU,tU=j(function()while true do local rB=Re[oU];local mB=rB[4];oU=oU+0x1;do if not(mB>=0X5)then do if mB>=2 then if not(mB<3)then do if mB~=4 then(cU)[rB[7]]={I({},0X1,rB[6])};else cU[rB[7]]=rB[2];end;end;else end;else if mB~=1 then oU=rB[0X06];else local sY,YY=je[rB[6]],(nil);local IY=(sY[8]);local RY=#IY;if not(RY>0X00)then else YY={};for yy=0X01,RY do local Wy=(IY[yy]);if Wy[0X1]==0X00000 then(YY)[yy-1]={cU,Wy[0X2]};else(YY)[yy-1]=ve[Wy[2]];end;end;A(De,YY);end;do cU[rB[7]]=NC(YY,ZU,sY);end;end;end;end;else if not(mB<8)then if not(mB<9)then if mB~=0XA then(cU)[rB[7]]=ZU[rB[2]];else repeat local qh,sh=De,cU;do if#qh>0X0000 then local cO=({});for hU,HU in D,qh do for s1,e1 in D,HU do if not(e1[1]==sh and e1[2]>=0X0)then else local vP=e1[0X002];do if not(not cO[vP])then else(cO)[vP]={sh[vP]};end;end;e1[0X1]=cO[vP];(e1)[2]=1;end;end;end;end;end;until true;local OW=rB[7];do return false,OW,OW+rB[0X06]-0X02;end;end;else do cU[rB[0X7]]=-cU[rB[6]];end;end;else if mB>=0X06 then if mB~=7 then local zg,cg=rB[0X7],rB[6];pU=zg+cg-1;repeat local I3,Z3=De,cU;if#I3>0 then local lj=({});for xO,kO in D,I3 do for CT,zT in D,kO do if not(zT[0X1]==Z3 and zT[2]>=0)then else local M9=(zT[0X2]);if not lj[M9]then do(lj)[M9]={Z3[M9]};end;end;zT[1]=lj[M9];(zT)[0x02]=0x1;end;end;end;end;until true;return true,zg,cg;else for u6=rB[7],rB[0x6]do cU[u6]=nil;end;end;else(cU)[0x00000]=ZU[rB[2]];rB=Re[oU];do oU=oU+1;end;local Ul,Dl=0x0,cU[0];(cU)[Ul+0X00001]=Dl;do cU[Ul]=Dl[rB[5]];end;do oU=oU+0X1;end;Ul=0;(cU[Ul])(cU[Ul+0X1]);pU=Ul-0X1;oU=oU+1;repeat local jM,oM=De,cU;if not(#jM>0X0)then else local N8=({});for rY,lY in D,jM do for HB,lB in D,lY do if not(lB[0X1]==oM and lB[0X2]>=0)then else local Ky=lB[0X0002];do if not N8[Ky]then(N8)[Ky]={oM[Ky]};end;end;(lB)[1]=N8[Ky];(lB)[2]=0X1;end;end;end;end;until true;return;end;end;end;end;end;end);if rU then if JU then if tU~=0X1 then do return cU[nU](I(cU,nU+1,pU));end;else return cU[nU]();end;elseif nU then do return I(cU,nU,tU);end;end;else do if f(JU)~="string"then b(JU,0);else do if e(JU,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;do if not(e(JU,'^.-\058%\100\+:\032'))then(b)(JU,0X0);else b('\L\117\114a\p\h\ \S\cr\105pt\:'..(Ae[oU-0X01]or"(internal)").."\:\032"..r(JU),0X0);end;end;end;end;end;end;end;else fe=function(...)local YA,jA=0X00001,{};local tA={[1]=ce,[0X2]=jA};local wA=m();local eA=(0);local bA=((wA==F and Le or wA));local kA,fA=rC(...);do kA=kA-1;end;for sY=0x0,kA do if not(he>sY)then break;else(jA)[sY]=fA[sY+1];end;end;if not ge then do fA=nil;end;elseif xe then jA[he]={n=kA>=he and kA-he+0X1 or 0x0,I(fA,he+1,kA+0X1)};end;if bA~=wA then i(fe,bA);end;local uA,CA,iA,OA=j(function()while true do local jk=(Re[YA]);local Ek=(jk[4]);YA=YA+0X01;if not(Ek<33)then if Ek<49 then if not(Ek<41)then if Ek<45 then if Ek>=0x2b then if Ek==0X2c then else jA[0x5]=jA[0x4][jk[5]];YA=YA+0x1;YA=YA+1;do jk=Re[YA];end;YA=YA+1;if jA[0x5]~=jk[0X5]then do YA=jk[0X007];end;end;end;else if Ek==42 then(jA)[0X001]=jk[2];jk=Re[YA];YA=YA+1;do(jA)[0X2]=bA[jk[2]];end;YA=YA+0X1;YA=YA+0X0001;YA=YA+0x0001;eA=2;(jA)[eA]=jA[eA]();jk=Re[YA];YA=YA+1;do YA=jk[0X6];end;else local WW=ve[0X4];do(jA)[0X004]=WW[1][WW[0X00002]];end;YA=YA+1;YA=YA+1;jk=Re[YA];do YA=YA+1;end;(jA)[0X04]=jA[4][jk[0x5]];YA=YA+0X1;YA=YA+0X1;local IW=6;jk=Re[YA];YA=YA+1;do jA[4]=jA[4][jk[0X5]];end;do YA=YA+1;end;do YA=YA+0X001;end;do YA=YA+1;end;(jA)[0X4]=jA[4]+jA[0x3];jk=Re[YA];YA=YA+1;jA[5]=bA[jk[0X002]];YA=YA+0X1;YA=YA+1;jk=Re[YA];YA=YA+1;(jA)[0x005]=jA[5][jk[5]];YA=YA+1;YA=YA+0X1;do jk=Re[YA];end;YA=YA+0x1;(jA)[0X06]=bA[jk[2]];jk=Re[YA];YA=YA+0X1;jA[0X006]=jA[0x6][jk[0x5]];do YA=YA+1;end;YA=YA+1;jk=Re[YA];do YA=YA+0x0001;end;(jA)[0X07]=jk[0x2];jk=Re[YA];YA=YA+0X01;do(jA)[8]=jk[2];end;do YA=YA+0X00001;end;(jA)[IW]=jA[IW](jA[IW+0x1],jA[IW+0X2]);do eA=IW;end;YA=YA+0X01;YA=YA+1;do jk=Re[YA];end;YA=YA+0X00001;(jA)[6]=jA[0x6]/jk[0X00005];do jk=Re[YA];end;YA=YA+0X1;jA[7]=jk[2];jk=Re[YA];YA=YA+1;(jA)[0X8]=bA[jk[2]];do jk=Re[YA];end;YA=YA+0X01;(jA)[0X8]=jA[0X0008][jk[0X0005]];YA=YA+0X0001;YA=YA+1;jk=Re[YA];YA=YA+1;(jA)[9]=jk[2];jk=Re[YA];YA=YA+1;do jA[0x0A]=jk[2];end;YA=YA+0X1;IW=0x8;(jA)[IW]=jA[IW](jA[IW+1],jA[IW+2]);do eA=IW;end;jk=Re[YA];YA=YA+0X1;jA[0X8]=jA[8]/jk[0X5];YA=YA+0X001;do IW=0x5;end;do eA=IW+0x004-0X1;end;(jA)[IW]=jA[IW](I(jA,IW+1,eA));do eA=IW;end;YA=YA+0X1;YA=YA+1;YA=YA+0X1;(jA)[4]=jA[4]+jA[0X0005];YA=YA+0X1;WW=ve[4];do(jA)[0x5]=WW[0x1][WW[0X2]];end;YA=YA+1;YA=YA+1;do jk=Re[YA];end;YA=YA+0x001;jA[5]=jA[0x005][jk[5]];YA=YA+1;do YA=YA+0X1;end;jk=Re[YA];YA=YA+0x01;do(jA)[0X05]=jA[5][jk[5]];end;jk=Re[YA];YA=YA+0X1;do YA=jk[6];end;end;end;else if not(Ek<47)then do if Ek~=0x30 then do(jA)[0X5]=bA[jk[2]];end;local jW=ve[0X0001];do YA=YA+0X1;end;do YA=YA+1;end;YA=YA+1;do(jA)[0x6]=jW[1][jW[2]];end;YA=YA+0X1;do(jA)[7]=nil;end;jk=Re[YA];YA=YA+1;do jA[8]=jk[0x0002];end;local oW=0X05;YA=YA+1;eA=oW+4-0X1;(jA[oW])(I(jA,oW+1,eA));do eA=oW-0X1;end;jk=Re[YA];YA=YA+1;YA=jk[0X00006];else(jA)[5]=bA[jk[0X2]];jk=Re[YA];YA=YA+0x01;do jA[5]=jA[0X5][jk[5]];end;do jk=Re[YA];end;YA=YA+1;if not(not jA[5])then else YA=jk[6];end;end;end;else do if Ek==0X2E then jA[0X0006]=bA[jk[0X2]];do YA=YA+1;end;YA=YA+1;YA=YA+1;eA=6;jA[eA]=jA[eA]();do jk=Re[YA];end;YA=YA+1;do if jA[0X06]then do YA=jk[6];end;end;end;else jA[0X00006]=bA[jk[0X0002]];do YA=YA+0X001;end;YA=YA+0X01;YA=YA+1;local eP=(ve[0x3]);(jA)[7]=eP[0X1][eP[2]];do jk=Re[YA];end;do YA=YA+1;end;jA[7]=jA[7][jk[5]];YA=YA+0X1;jA[6]=jA[0X6][jA[0X00007]];do jk=Re[YA];end;YA=YA+1;if not(not jA[6])then else YA=jk[0X6];end;end;end;end;end;else if Ek>=37 then if Ek<39 then if Ek~=38 then repeat local Zk,rk=De,(jA);if#Zk>0X0 then local eK={};for oq,pq in D,Zk do for hz,qz in D,pq do if qz[1]==rk and qz[2]>=0X0 then local x9=(qz[0X02]);do if not(not eK[x9])then else(eK)[x9]={rk[x9]};end;end;qz[0X1]=eK[x9];(qz)[2]=1;end;end;end;end;until true;return;else(jA)[jk[7]]=jA[jk[0x006]];end;else if Ek~=0x000028 then local fW=(ve[jk[6]]);jA[jk[0x7]]=fW[1][fW[0X0002]];else local KZ,zZ=je[jk[6]],(nil);local NZ=(KZ[0X8]);local RZ=(#NZ);if RZ>0X0 then zZ={};for HR=1,RZ do local KR=NZ[HR];if KR[1]==0x0 then(zZ)[HR-1]={jA,KR[2]};else do(zZ)[HR-0x00001]=ve[KR[0x2]];end;end;end;(A)(De,zZ);end;do(jA)[jk[0X7]]=NC(zZ,bA,KZ);end;end;end;else do if not(Ek<0X00023)then if Ek==0X24 then local F5=(ve[0X3]);(jA)[6]=F5[1][F5[0X0002]];local s5=6;YA=YA+1;YA=YA+0X1;jk=Re[YA];YA=YA+1;local S5=(jA[0X6]);(jA)[s5+0x1]=S5;jA[s5]=S5[jk[0x5]];YA=YA+0X1;do s5=0X0006;end;jA[s5]=jA[s5](jA[s5+0X01]);eA=s5;jk=Re[YA];YA=YA+0X1;if not jA[6]then do YA=jk[0X6];end;end;else jA[0x003]=bA[jk[0X2]];jk=Re[YA];do YA=YA+1;end;do jA[0X3]=jA[3][jk[5]];end;do YA=YA+0x00001;end;eA=0x3;(jA)[eA]=jA[eA]();jk=Re[YA];YA=YA+1;do YA=jk[0X6];end;end;else do if Ek==34 then local Bl=ve[0X4];do(jA)[4]=Bl[1][Bl[2]];end;do YA=YA+0X1;end;YA=YA+0X001;jk=Re[YA];YA=YA+0X1;(jA)[4]=jA[0X4][jk[0X0005]];YA=YA+0X1;do YA=YA+1;end;do YA=YA+1;end;do Bl=ve[4];end;(jA)[5]=Bl[1][Bl[0X2]];YA=YA+0x0001;YA=YA+1;jk=Re[YA];YA=YA+1;do jA[0X05]=jA[0X05][jk[0x0005]];end;jk=Re[YA];YA=YA+1;do jA[5]=jA[5][jk[5]];end;YA=YA+0X1;YA=YA+0X001;jk=Re[YA];YA=YA+0X01;jA[0X00004][jk[2]]=jA[5];do jk=Re[YA];end;YA=YA+0x1;do YA=jk[6];end;else do(jA)[3]=bA[jk[0X2]];end;local MU=(0x3);YA=YA+0X1;YA=YA+1;jk=Re[YA];do YA=YA+0X1;end;jA[3]=jA[0X3][jk[5]];YA=YA+0x00001;YA=YA+0x1;jk=Re[YA];YA=YA+0x1;jA[0X4]=jk[2];YA=YA+0x1;jA[0X005]=jA[0X000];jk=Re[YA];YA=YA+0x1;do(jA)[6]=jk[0X002];end;YA=YA+1;eA=MU+4-0X1;(jA)[MU]=jA[MU](I(jA,MU+1,eA));eA=MU;jk=Re[YA];YA=YA+0X1;do YA=jk[6];end;end;end;end;end;end;end;else if not(Ek<57)then if not(Ek>=0X3D)then if not(Ek<0X00003b)then do if Ek~=60 then local XU=ve[0X00000];do(jA)[3]=XU[0X00001][XU[0X2]];end;YA=YA+1;YA=YA+0X1;jk=Re[YA];YA=YA+0X01;(jA)[3]=jA[0X3][jk[0X5]];do jk=Re[YA];end;do YA=YA+1;end;do if not(not jA[3])then else do YA=jk[0x6];end;end;end;else local iM=(ve[0X3]);(jA)[0X6]=iM[1][iM[2]];YA=YA+1;YA=YA+1;jk=Re[YA];do YA=YA+1;end;if not(not jA[0X6])then else do YA=jk[0x6];end;end;end;end;else if Ek==0x003A then do jA[jk[7]]=jk[0X2];end;else local w9=jk[6];local F9=jA[w9];for AJ=w9+0X1,jk[1]do F9=F9..jA[AJ];end;(jA)[jk[0X7]]=F9;end;end;else if Ek<63 then do if Ek~=0x0003E then jA[0X3]=bA[jk[0X2]];YA=YA+1;do jA[3]=jA[0x3][jA[1]];end;do YA=YA+1;end;YA=YA+0X1;jk=Re[YA];YA=YA+1;YA=jk[6];else(jA)[0X00007]=bA[jk[0x02]];do jk=Re[YA];end;do YA=YA+0X1;end;do jA[0X7]=jA[0X7][jk[5]];end;jk=Re[YA];YA=YA+1;YA=jk[0X006];end;end;else if not(Ek<64)then if Ek==65 then(jA)[0X6]=bA[jk[0x2]];YA=YA+1;do YA=YA+1;end;jk=Re[YA];YA=YA+0X1;do(jA)[0X6]=jA[0x6][jk[5]];end;YA=YA+0X1;YA=YA+0X1;jk=Re[YA];do YA=YA+0x0001;end;if jA[6]then YA=jk[0x6];end;else(jA)[5]=bA[jk[2]];local Qu=0X5;jk=Re[YA];YA=YA+0X01;jA[6]=jk[0X0002];do YA=YA+1;end;jA[Qu](jA[Qu+0X1]);eA=Qu-0X1;do YA=YA+1;end;YA=YA+1;jk=Re[YA];YA=YA+0X1;(jA)[0X5]=bA[jk[2]];jk=Re[YA];YA=YA+1;jA[6]=jk[2];do YA=YA+1;end;Qu=5;(jA[Qu])(jA[Qu+0x01]);eA=Qu-0X1;YA=YA+0X1;do YA=YA+1;end;jk=Re[YA];YA=YA+1;YA=jk[0X0006];end;else(jA)[jk[0X7]]=#jA[jk[0X6]];end;end;end;else if Ek>=53 then if not(Ek<0X0037)then if Ek~=0X38 then jA[jk[7]]=jA[jk[0X6]]*jA[jk[0X00001]];else local a5=(ve[0X0]);jA[3]=a5[1][a5[0X2]];do jk=Re[YA];end;do YA=YA+1;end;local N5=3;do(jA)[0X3]=jA[0X3][jk[0X005]];end;YA=YA+0X1;do a5=ve[1];end;(jA)[0X4]=a5[0X00001][a5[0X0002]];do YA=YA+1;end;(jA[N5])(jA[N5+0X0001]);eA=N5-0X1;do YA=YA+1;end;do YA=YA+0x0001;end;do jk=Re[YA];end;YA=YA+1;YA=jk[6];end;else if Ek==0x000036 then local VW=ve[0X4];do jA[0X5]=VW[0X0001][VW[2]];end;jk=Re[YA];YA=YA+0X0001;(jA)[5]=jA[0X00005][jk[0x5]];do jk=Re[YA];end;YA=YA+1;jA[0X5]=jA[0X0005][jk[5]];jk=Re[YA];YA=YA+1;bA[jk[0X002]]=jA[5];YA=YA+0X1;do VW=ve[0X4];end;jA[5]=VW[1][VW[0X02]];YA=YA+0X1;do YA=YA+1;end;jk=Re[YA];YA=YA+0x1;do(jA[0X00005])[jk[2]]=jk[5];end;YA=YA+0x1;VW=ve[4];(jA)[0X5]=VW[1][VW[0x02]];jk=Re[YA];YA=YA+1;jA[0X5][jk[0X2]]=jk[0x5];YA=YA+1;VW=ve[4];(jA)[5]=VW[0X1][VW[2]];YA=YA+0X01;YA=YA+0X01;do jk=Re[YA];end;YA=YA+0X001;(jA[5])[jk[0X2]]=jk[5];YA=YA+1;VW=ve[4];jA[0x5]=VW[0X0001][VW[2]];YA=YA+0X1;YA=YA+0X1;jk=Re[YA];YA=YA+1;(jA)[0X5]=jA[0x00005][jk[0X5]];do jk=Re[YA];end;do YA=YA+1;end;jA[0X5][jk[2]]=jk[5];YA=YA+1;local cW=0X00005;do VW=ve[4];end;jA[5]=VW[1][VW[0X2]];do jk=Re[YA];end;do YA=YA+0X1;end;local XW=jA[5];jA[cW+1]=XW;do(jA)[cW]=XW[jk[0x5]];end;jk=Re[YA];YA=YA+1;do(jA)[0X0007]=jk[2];end;YA=YA+1;cW=5;(jA[cW])(jA[cW+1],jA[cW+2]);eA=cW-0X001;jk=Re[YA];do YA=YA+1;end;(jA)[5]=bA[jk[0x2]];do jk=Re[YA];end;YA=YA+1;(jA)[5]=jA[0x5][jk[0X5]];YA=YA+1;YA=YA+0x1;jk=Re[YA];YA=YA+1;do cW=5;end;do XW=jA[0X005];end;do jA[cW+1]=XW;end;jA[cW]=XW[jk[5]];do jk=Re[YA];end;YA=YA+0X01;do(jA)[7]=jk[0x00002];end;YA=YA+1;cW=5;jA[cW](jA[cW+1],jA[cW+0X2]);eA=cW-1;do YA=YA+1;end;YA=YA+0X1;YA=YA+0x1;VW=ve[3];(jA)[5]=VW[0x1][VW[0X2]];YA=YA+1;YA=YA+0X1;jk=Re[YA];do YA=YA+0X00001;end;if not jA[5]then YA=jk[6];end;else do if not(jA[jk[7]])then else YA=jk[0x6];end;end;end;end;else if not(Ek>=0X33)then if Ek==50 then jA[0X4]=bA[jk[2]];local pz=0X4;jk=Re[YA];YA=YA+0X1;local kz=ve[4];jA[0X4]=jA[4][jk[0x005]];YA=YA+1;(jA)[5]=kz[0X1][kz[0x002]];jk=Re[YA];YA=YA+1;do(jA)[0X5]=jA[5][jk[0X5]];end;jk=Re[YA];YA=YA+1;do jA[5]=jA[5][jk[0x5]];end;do jk=Re[YA];end;do YA=YA+0X001;end;do(jA)[0x0005]=jA[0x005][jk[5]];end;jk=Re[YA];YA=YA+0x1;jA[0x5]=jA[5]-jk[5];YA=YA+0X1;jA[pz]=jA[pz](jA[pz+1]);eA=pz;jk=Re[YA];do YA=YA+0X1;end;if not(jA[0X00004]<jk[5])then do YA=jk[0X7];end;end;else jA[5]=bA[jk[2]];local Jp=5;local Hp=ve[1];YA=YA+0X1;YA=YA+1;YA=YA+1;jA[6]=Hp[1][Hp[0X2]];YA=YA+0X0001;(jA[Jp])(jA[Jp+0X0001]);eA=Jp-1;do YA=YA+1;end;do YA=YA+0X001;end;jk=Re[YA];do YA=YA+0X1;end;YA=jk[0X6];end;else if Ek~=52 then local pS=(ve[1]);(jA)[0x3]=pS[1][pS[2]];jk=Re[YA];do YA=YA+1;end;bA[jk[2]]=jA[3];do YA=YA+0X01;end;pS=ve[3];(jA)[3]=pS[1][pS[2]];YA=YA+1;do YA=YA+0x1;end;jk=Re[YA];YA=YA+0X1;if not(not jA[3])then else do YA=jk[6];end;end;else local mZ=(ve[4]);(jA)[0X0005]=mZ[1][mZ[0X2]];do jk=Re[YA];end;do YA=YA+1;end;do jA[5]=jA[0X5][jk[0X0005]];end;do jk=Re[YA];end;do YA=YA+0X1;end;if jA[0x5]<=jk[5]then YA=jk[0X007];end;end;end;end;end;end;else if Ek<0X10 then if Ek>=0X8 then if not(Ek<12)then do if Ek<14 then if Ek==0Xd then(jA)[5]=bA[jk[2]];jk=Re[YA];YA=YA+0X1;(jA)[0X0005]=jA[5][jk[5]];jk=Re[YA];YA=YA+0X1;(jA)[5]=jA[0X5][jk[5]];YA=YA+1;YA=YA+1;do jk=Re[YA];end;YA=YA+0X1;if not(jk[0X02]<jA[0X005])then YA=jk[7];end;else(jA)[jk[7]]={I({},0X1,jk[0X00006])};end;else if Ek~=0X0000F then(jA)[0X4]=bA[jk[0X00002]];YA=YA+1;do YA=YA+0X01;end;YA=YA+0X1;do eA=4;end;(jA)[eA]=jA[eA]();YA=YA+1;(jA)[0x04]=jA[4]-jA[0X00002];jk=Re[YA];do YA=YA+0X001;end;if not(not(jk[0x02]<jA[0X4]))then else do YA=jk[0X00007];end;end;else jA[0x6]=jA[4][jk[5]];do YA=YA+1;end;YA=YA+1;do jk=Re[YA];end;YA=YA+0X1;(jA)[0X6]=jA[6][jk[0X0005]];YA=YA+0x00001;YA=YA+1;do jk=Re[YA];end;YA=YA+0x01;if jk[0X0002]<=jA[6]then YA=jk[0X00007];end;end;end;end;else if Ek<10 then do if Ek~=0X9 then(jA)[4]=bA[jk[0X002]];YA=YA+1;do YA=YA+0X00001;end;YA=YA+0X001;eA=4;jA[eA]=jA[eA]();YA=YA+0X1;YA=YA+0X01;do YA=YA+1;end;(jA)[0x00002]=jA[4];do jk=Re[YA];end;YA=YA+0X001;jA[0x4]=jA[0X1]+jk[0X5];do YA=YA+1;end;do(jA)[0X1]=jA[4];end;jk=Re[YA];do YA=YA+0X0001;end;(jA)[0X4]=bA[jk[0X02]];YA=YA+1;do(jA)[0X4]=#jA[0x4];end;jk=Re[YA];YA=YA+1;if not(jA[4]<jA[1])then do YA=jk[7];end;end;else do if jA[jk[6]]~=jk[5]then do YA=jk[0x7];end;end;end;end;end;else if Ek==11 then local uI=(jk[7]);local YI=g(function(...)d();for GA,UA,zA,nA,RA,AA,sA,IA,mA,WA in...do d(true,{GA,UA,zA,nA,RA,AA,sA,IA,mA,WA});end;end);(YI)(jA[uI],jA[uI+1],jA[uI+2]);eA=uI;do(jA)[uI]=YI;end;YA=jk[6];else(jA)[0X4]=jA[3];do jk=Re[YA];end;do YA=YA+1;end;bA[jk[2]]=jA[4];do jk=Re[YA];end;YA=YA+1;local QT=(4);jA[0X00004]=bA[jk[2]];YA=YA+1;jA[5]=jA[3];jk=Re[YA];YA=YA+1;jA[0X6]=bA[jk[2]];YA=YA+0X1;YA=YA+0X1;YA=YA+0X1;(jA[QT])(jA[QT+0X001],jA[QT+0X02]);eA=QT-0X1;YA=YA+1;YA=YA+0x1;jk=Re[YA];do YA=YA+0X001;end;YA=jk[6];end;end;end;else if not(Ek<4)then if not(Ek>=0X06)then do if Ek==5 then(jA)[0X5]=bA[jk[2]];YA=YA+0X1;YA=YA+0X1;YA=YA+1;eA=5;jA[eA]();eA=eA-0x01;jk=Re[YA];YA=YA+0X01;do YA=jk[6];end;else local Tv=(ve[0X0]);(jA)[3]=Tv[1][Tv[0X02]];do jk=Re[YA];end;YA=YA+1;jA[0X3]=jA[3][jk[5]];jk=Re[YA];do YA=YA+1;end;if not jA[3]then YA=jk[0X006];end;end;end;else if Ek~=0X7 then(jA)[0X0005]=bA[jk[2]];local AO=(ve[0X00000]);do jk=Re[YA];end;YA=YA+1;jA[0x6]=bA[jk[0X2]];YA=YA+1;(jA)[7]=AO[1][AO[0X00002]];YA=YA+0X1;YA=YA+1;do jk=Re[YA];end;YA=YA+1;do jA[7]=jA[0x0007][jk[5]];end;do YA=YA+0X1;end;do YA=YA+0x1;end;do jk=Re[YA];end;YA=YA+0X1;if jA[7]then YA=jk[0X6];end;else jA[0X3]=bA[jk[0X02]];YA=YA+1;YA=YA+1;jk=Re[YA];YA=YA+1;jA[3]=jA[0X00003][jk[5]];jk=Re[YA];do YA=YA+1;end;if not jA[0x3]then YA=jk[6];end;end;end;else if not(Ek<2)then if Ek~=0x3 then(jA)[jk[0X07]]=bA[jk[0x0002]];else(jA)[0X3]=true;jk=Re[YA];YA=YA+1;do(bA)[jk[0X00002]]=jA[3];end;YA=YA+1;jA[3]=true;jk=Re[YA];YA=YA+0x01;(bA)[jk[0X2]]=jA[0x3];YA=YA+1;jA[3]=true;jk=Re[YA];do YA=YA+0X0001;end;bA[jk[0X2]]=jA[0X003];jk=Re[YA];do YA=YA+0x1;end;jA[0X3]=bA[jk[0x02]];YA=YA+0X01;do eA=0X3;end;(jA[eA])();eA=eA-0X1;YA=YA+1;YA=YA+1;do YA=YA+0X1;end;(jA)[0X00003]=jA[0X00000];jk=Re[YA];YA=YA+1;if not(not jA[0X3])then else YA=jk[6];end;end;else if Ek~=1 then local l1,V1=2,0X0006;if l1==0X0 then else eA=V1+l1-0X1;end;local i1,a1,S1=0,nil,(nil);if l1==1 then a1,S1=rC(jA[V1]());else a1,S1=rC(jA[V1](I(jA,V1+1,eA)));end;do if i1==0x1 then do eA=V1-1;end;else if i1~=0x0 then a1=V1+i1-0x00002;eA=a1+0X1;else do a1=a1+V1-1;end;do eA=a1;end;end;local IM=(0X0);do for sH=V1,a1 do IM=IM+0X001;jA[sH]=S1[IM];end;end;end;end;YA=YA+1;do YA=YA+0X00001;end;YA=YA+1;V1=5;(jA[V1])(I(jA,V1+0X001,eA));eA=V1-0x01;jk=Re[YA];YA=YA+1;(jA)[0X0005]=bA[jk[2]];jk=Re[YA];do YA=YA+1;end;jA[0X5]=jA[0X005][jk[0X5]];jk=Re[YA];do YA=YA+1;end;do(jA)[6]=jk[0X2];end;do YA=YA+0X1;end;V1=5;(jA[V1])(jA[V1+1]);local s1=ve[0X1];eA=V1-0X1;do YA=YA+1;end;YA=YA+0x1;YA=YA+0X1;do jA[5]=s1[1][s1[0X2]];end;jk=Re[YA];YA=YA+0X0001;jA[0x5]=jA[5][jk[0X5]];do jk=Re[YA];end;YA=YA+1;if not jA[0X00005]then YA=jk[6];end;else do(bA)[jk[2]]=jA[jk[7]];end;end;end;end;end;else if Ek<0X18 then do if not(Ek>=0X014)then if not(Ek<18)then if Ek==19 then jA[0X4]=bA[jk[2]];do jk=Re[YA];end;YA=YA+1;jA[5]=bA[jk[2]];do YA=YA+1;end;YA=YA+0X00001;jk=Re[YA];do YA=YA+1;end;(jA)[0X5]=jA[5][jk[0X5]];local Vi=ve[0x4];YA=YA+1;(jA)[0X06]=Vi[1][Vi[0x2]];YA=YA+0X0001;YA=YA+0X1;jk=Re[YA];YA=YA+0x001;(jA)[0X06]=jA[6][jk[0x0005]];YA=YA+1;YA=YA+1;jk=Re[YA];YA=YA+0x001;(jA)[0X6]=jA[0X0006][jk[0X5]];YA=YA+1;jA[6]=jA[6]+jA[0X3];jk=Re[YA];YA=YA+0X0001;do(jA)[0X00007]=bA[jk[2]];end;jk=Re[YA];do YA=YA+0x0001;end;local Wi=8;do jA[0X7]=jA[7][jk[0x5]];end;jk=Re[YA];YA=YA+1;(jA)[8]=bA[jk[0X002]];do YA=YA+0x001;end;YA=YA+0X1;do jk=Re[YA];end;YA=YA+1;jA[8]=jA[0x8][jk[5]];jk=Re[YA];do YA=YA+1;end;(jA)[0x00009]=jk[2];jk=Re[YA];YA=YA+1;jA[10]=jk[2];do YA=YA+1;end;do jA[Wi]=jA[Wi](jA[Wi+1],jA[Wi+2]);end;eA=Wi;jk=Re[YA];YA=YA+0x1;jA[0X08]=jA[8]/jk[0x5];jk=Re[YA];YA=YA+1;do jA[0X9]=jk[2];end;jk=Re[YA];YA=YA+0X1;do(jA)[10]=bA[jk[2]];end;jk=Re[YA];YA=YA+1;jA[0XA]=jA[0XA][jk[5]];local pi=nil;YA=YA+0X00001;YA=YA+0X1;jk=Re[YA];YA=YA+1;do(jA)[0xB]=jk[2];end;jk=Re[YA];do YA=YA+0X00001;end;jA[12]=jk[0X02];YA=YA+0X001;Wi=0xA;(jA)[Wi]=jA[Wi](jA[Wi+1],jA[Wi+0x2]);eA=Wi;YA=YA+0X1;YA=YA+0X1;jk=Re[YA];do YA=YA+0X00001;end;jA[0X00A]=jA[0Xa]/jk[5];do YA=YA+1;end;Wi=0X007;do eA=Wi+0X4-0X01;end;(jA)[Wi]=jA[Wi](I(jA,Wi+1,eA));eA=Wi;YA=YA+1;YA=YA+1;do YA=YA+0x01;end;jA[0X6]=jA[0x06]+jA[7];YA=YA+1;Vi=ve[0X4];jA[7]=Vi[1][Vi[0X2]];YA=YA+0x1;YA=YA+1;jk=Re[YA];YA=YA+0X1;do(jA)[7]=jA[7][jk[5]];end;YA=YA+1;YA=YA+0x1;do jk=Re[YA];end;YA=YA+1;(jA)[0X007]=jA[0X7][jk[5]];do YA=YA+1;end;Wi=5;(jA)[Wi]=jA[Wi](jA[Wi+1],jA[Wi+2]);eA=Wi;jk=Re[YA];YA=YA+1;local ti=je[jk[6]];local Ei=(ti[8]);local Qi=(#Ei);do if Qi>0 then pi={};for OK=1,Qi do local qK=Ei[OK];if qK[1]~=0X0 then(pi)[OK-0X1]=ve[qK[0X2]];else pi[OK-1]={jA,qK[2]};end;end;(A)(De,pi);end;end;(jA)[0X0006]=NC(pi,bA,ti);YA=YA+1;Vi=ve[0x0000];(jA)[7]=Vi[0x1][Vi[0X002]];jk=Re[YA];YA=YA+0X1;jA[7]=jA[7][jk[0x5]];YA=YA+0X1;do YA=YA+0X00001;end;YA=YA+1;do(jA)[0X00008]=false;end;YA=YA+0X00001;Vi=ve[3];jA[0x9]=Vi[0X1][Vi[0x2]];do YA=YA+1;end;do YA=YA+0X1;end;YA=YA+1;Wi=0x4;do eA=Wi+6-0X1;end;jA[Wi](I(jA,Wi+1,eA));do eA=Wi-1;end;do jk=Re[YA];end;YA=YA+1;do(jA)[4]=bA[jk[2]];end;YA=YA+1;Vi=ve[0x4];(jA)[5]=Vi[1][Vi[0X2]];jk=Re[YA];YA=YA+0x00001;jA[0X0005]=jA[0x05][jk[5]];YA=YA+0X001;YA=YA+1;do YA=YA+1;end;do Wi=0x4;end;do(jA)[Wi]=jA[Wi](jA[Wi+1]);end;eA=Wi;jk=Re[YA];do YA=YA+1;end;if not jA[0X004]then YA=jk[6];end;else do(jA)[4]=jk[0X0002];end;YA=YA+0X1;jA[1]=jA[4];do jk=Re[YA];end;YA=YA+0X1;YA=jk[0x006];end;else if Ek==17 then(jA)[0X4]=bA[jk[2]];YA=YA+0X1;YA=YA+0X0001;do jk=Re[YA];end;YA=YA+0x00001;if jA[0x4]~=jA[3]then else do YA=jk[0X7];end;end;else do if not(not jA[jk[0X00007]])then else do YA=jk[0x6];end;end;end;end;end;else if not(Ek<22)then if Ek~=0x017 then local jg=(ve[5]);(jA)[0X6]=jg[1][jg[0X2]];YA=YA+1;do YA=YA+1;end;YA=YA+1;eA=0x0006;do(jA)[eA]=jA[eA]();end;jk=Re[YA];YA=YA+0x0001;if not(not jA[0x0006])then else YA=jk[6];end;else(jA)[0X3]=bA[jk[0X00002]];do jk=Re[YA];end;YA=YA+0X00001;(jA)[0X003]=jA[3][jk[0X5]];local CN=(3);jk=Re[YA];YA=YA+0X1;jA[4]=jk[0X2];jk=Re[YA];YA=YA+0X1;(jA)[0X5]=jk[2];do jk=Re[YA];end;YA=YA+1;jA[6]=jk[2];do YA=YA+1;end;eA=CN+4-0X1;jA[CN]=jA[CN](I(jA,CN+1,eA));do eA=CN;end;jk=Re[YA];do YA=YA+0X1;end;do YA=jk[0x00006];end;end;else do if Ek==0X15 then for d6=jk[7],jk[6]do do(jA)[d6]=nil;end;end;else local E2=(ve[0]);do jA[0X6]=E2[1][E2[0X2]];end;do YA=YA+1;end;YA=YA+0x001;jk=Re[YA];YA=YA+1;(jA)[0x6]=jA[0X6][jk[0X5]];YA=YA+0X1;YA=YA+1;jk=Re[YA];do YA=YA+0X1;end;do if jA[0x6]then YA=jk[6];end;end;end;end;end;end;end;else if not(Ek>=0X1c)then if Ek>=0x1a then do if Ek==0x1B then jA[0x04]=bA[jk[2]];YA=YA+0X001;eA=0X004;jA[eA]=jA[eA]();YA=YA+1;do YA=YA+0X00001;end;jk=Re[YA];YA=YA+0X1;if not(not jA[4])then else YA=jk[0x00006];end;else jA[8]=jA[4][jk[5]];jk=Re[YA];YA=YA+0x1;do(jA)[0x00008]=jA[0X0008][jk[5]];end;do jk=Re[YA];end;YA=YA+0x1;do if not(not(jk[0X02]<=jA[0X8]))then else YA=jk[0X007];end;end;end;end;else do if Ek~=0X19 then do jA[jk[0X7]]=jA[jk[6]][jk[5]];end;else YA=jk[6];end;end;end;else if not(Ek<0x1E)then if Ek>=0X001F then if Ek~=32 then local A3=ve[0X003];(jA)[3]=A3[0X0001][A3[2]];local I3=0X3;YA=YA+1;YA=YA+1;jk=Re[YA];YA=YA+0X1;local g3=(jA[0X0003]);(jA)[I3+1]=g3;(jA)[I3]=g3[jk[0X5]];do YA=YA+0X0001;end;I3=0x0003;(jA[I3])(jA[I3+0X0001]);eA=I3-1;do jk=Re[YA];end;do YA=YA+1;end;YA=jk[6];else do(jA)[0X5]=bA[jk[0x02]];end;jk=Re[YA];YA=YA+1;(jA)[5]=jA[0X00005][jk[0x5]];do YA=YA+0X1;end;YA=YA+0X01;jk=Re[YA];YA=YA+1;if jA[0X5]==jk[5]then else YA=jk[7];end;end;else(jA)[jk[0X0007]]=T(jA[jk[6]]);end;else if Ek~=29 then local N2=ve[3];(jA)[0X06]=N2[0X1][N2[0x2]];YA=YA+0x001;YA=YA+1;jk=Re[YA];do YA=YA+0X1;end;do if not jA[0X006]then YA=jk[0x6];end;end;else do(jA)[0X0005]=bA[jk[0X002]];end;local dJ=ve[1];local CJ=(0X005);YA=YA+0X1;YA=YA+1;YA=YA+1;(jA)[0X6]=dJ[1][dJ[2]];do YA=YA+1;end;YA=YA+1;jk=Re[YA];YA=YA+1;jA[0X00007]=bA[jk[2]];do jk=Re[YA];end;do YA=YA+1;end;do jA[7]=jA[0X07]-jk[5];end;YA=YA+0x00001;(jA[CJ])(jA[CJ+0X01],jA[CJ+2]);do eA=CJ-0X01;end;YA=YA+0x001;YA=YA+1;jk=Re[YA];YA=YA+1;do YA=jk[6];end;end;end;end;end;end;end;end;end);if not(uA)then if f(CA)=="string"then do if e(CA,'\097\116\116\101\m\p\116 \116o\032\y\ie\l\d\ a\099ro\s\s\ \m\101t\097\109\101t\h\od\047C%\-\099\097\ll\ \098ou\110\100a\114\121')then return coroutine.yield();end;end;if not(e(CA,"\^.\-\058%\100\+\:\ "))then b(CA,0);else(b)('\Lura\112\h\ S\cri\pt\:'..(Ae[YA-0x1]or"(internal)").."\058 "..r(CA),0x0);end;else b(CA,0X0);end;else if CA then if OA==1 then return jA[iA]();else do return jA[iA](I(jA,iA+1,eA));end;end;elseif not(iA)then else do return I(jA,iA,OA);end;end;end;end;end;end;end;end;else if me>=0X34 then if not(me<55)then if me>=56 then if me==0X39 then do fe=function(...)local NK={};local KK=0X1;local SK=m();local uK={[0X2]=NK,[1]=ce};local cK=0x0;local sK,iK=rC(...);local rK=(SK==F and Le or SK);do sK=sK-0X1;end;for d0=0x0,sK do do if he>d0 then(NK)[d0]=iK[d0+1];else break;end;end;end;if not ge then iK=nil;elseif xe then(NK)[he]={n=sK>=he and sK-he+0X1 or 0x00,I(iK,he+1,sK+0X1)};end;if rK==SK then else(i)(fe,rK);end;local QK,CK,HK,aK=j(function()while true do local yH=(Re[KK]);local HH=(yH[4]);KK=KK+0X1;if HH<12 then if HH>=6 then if HH>=0X9 then if not(HH<10)then if HH==11 then NK[1]=rK[yH[0X2]];local hs=(0x1);do KK=KK+1;end;KK=KK+0X1;yH=Re[KK];KK=KK+0X1;NK[0X2]=rK[yH[2]];do yH=Re[KK];end;KK=KK+0x0001;(NK)[2]=NK[2][yH[5]];do KK=KK+0X01;end;do KK=KK+0X1;end;do KK=KK+0X1;end;do NK[hs]=NK[hs](NK[hs+0X001]);end;cK=hs;KK=KK+1;do KK=KK+0X1;end;yH=Re[KK];KK=KK+0X1;if NK[0X1]then KK=yH[6];end;else do(NK)[0X0]=true;end;yH=Re[KK];KK=KK+0X1;do(rK)[yH[2]]=NK[0X0];end;KK=KK+0X1;do repeat local Yc,ic=De,(NK);if not(#Yc>0X0)then else local am=({});for p3,m3 in D,Yc do for wI,OI in D,m3 do do if not(OI[1]==ic and OI[2]>=0)then else local bp=(OI[2]);if not(not am[bp])then else(am)[bp]={ic[bp]};end;OI[0X01]=am[bp];(OI)[2]=0x1;end;end;end;end;end;until true;end;return;end;else do NK[0x0000]=rK[yH[0X2]];end;KK=KK+1;KK=KK+0X00001;yH=Re[KK];KK=KK+1;NK[0X0]=NK[0][yH[0X5]];yH=Re[KK];do KK=KK+0X00001;end;if not(not NK[0])then else do KK=yH[0x006];end;end;end;else if not(HH>=7)then if NK[yH[0X7]]then KK=yH[0X6];end;else if HH~=0X0008 then do(NK)[yH[7]]=true;end;else(NK)[yH[7]]={I({},1,yH[6])};end;end;end;else if not(HH>=3)then if not(HH>=0X0001)then NK[0X2]=rK[yH[2]];KK=KK+1;KK=KK+1;yH=Re[KK];KK=KK+1;NK[0X002]=NK[2][yH[0X5]];do KK=KK+1;end;KK=KK+1;yH=Re[KK];KK=KK+0X1;do if not(not NK[0X2])then else KK=yH[6];end;end;else do if HH~=2 then do NK[0]=rK[yH[2]];end;do yH=Re[KK];end;do KK=KK+0X1;end;local Hk=(0X0);NK[0X0001]=yH[2];KK=KK+1;do NK[Hk]=NK[Hk](NK[Hk+1]);end;cK=Hk;yH=Re[KK];KK=KK+0x0001;if not NK[0]then KK=yH[0X6];end;else local TW=ve[0];(NK)[0]=TW[0x001][TW[0X00002]];local bW=0;KK=KK+0X01;do KK=KK+0X0001;end;do yH=Re[KK];end;KK=KK+1;local OW=(NK[0]);do(NK)[bW+0X1]=OW;end;NK[bW]=OW[yH[0x0005]];KK=KK+1;do bW=0X000;end;(NK[bW])(NK[bW+1]);do cK=bW-0X0001;end;do KK=KK+1;end;repeat local r7,Z7=De,(NK);if not(#r7>0X0)then else local dy=({});for Z2,K2 in D,r7 do for xL,KL in D,K2 do do if KL[1]==Z7 and KL[2]>=0X0 then local ZO=(KL[2]);if not(not dy[ZO])then else do dy[ZO]={Z7[ZO]};end;end;KL[0X01]=dy[ZO];(KL)[2]=1;end;end;end;end;end;until true;do return;end;end;end;end;else do if not(HH>=4)then NK[yH[0X7]]=rK[yH[2]];else if HH~=0x0005 then NK[0]=false;do yH=Re[KK];end;local UD=(0);KK=KK+1;do rK[yH[0X2]]=NK[0];end;yH=Re[KK];KK=KK+0X00001;NK[0X0]=rK[yH[0x00002]];do yH=Re[KK];end;local aD=(je[yH[0X006]]);local dD=(aD[0x8]);KK=KK+1;local sD=(#dD);local ZD=nil;if not(sD>0)then else do ZD={};end;do for s1=1,sD do local h1=(dD[s1]);if h1[0X00001]~=0x0 then do(ZD)[s1-0X1]=ve[h1[0X02]];end;else do(ZD)[s1-1]={NK,h1[2]};end;end;end;end;A(De,ZD);end;NK[0X1]=NC(ZD,rK,aD);do KK=KK+1;end;NK[UD](NK[UD+0x01]);do cK=UD-0X0001;end;yH=Re[KK];KK=KK+1;KK=yH[6];else KK=yH[0X6];end;end;end;end;end;else if not(HH<0X0012)then do if not(HH>=0X15)then if not(HH<0X13)then if HH~=20 then(NK)[0]=rK[yH[2]];yH=Re[KK];KK=KK+1;NK[0]=NK[0][yH[0X5]];do KK=KK+1;end;KK=KK+1;yH=Re[KK];KK=KK+1;(NK)[0X0]=NK[0][yH[5]];KK=KK+0X001;KK=KK+1;yH=Re[KK];KK=KK+0x0001;(NK)[0x1]=rK[yH[2]];KK=KK+1;KK=KK+1;yH=Re[KK];KK=KK+1;NK[1]=NK[1][yH[5]];yH=Re[KK];KK=KK+0X1;do if not(not(NK[0x0000]<NK[1]))then else KK=yH[7];end;end;else do if not(not(NK[yH[6]]<=NK[yH[1]]))then else KK=yH[7];end;end;end;else end;else do if not(HH>=0X17)then if HH~=22 then(NK)[yH[7]]=NK[yH[0x00006]]-NK[yH[1]];else do NK[yH[0X007]]=NK[yH[6]][NK[yH[1]]];end;end;else if HH~=0X18 then(NK)[yH[7]]=yH[2];else do for E0=yH[7],yH[0x06]do NK[E0]=nil;end;end;end;end;end;end;end;else if HH>=0Xf then if HH>=0X10 then if HH~=17 then if NK[yH[0X6]]==NK[yH[1]]then KK=yH[0X0007];end;else NK[yH[0x7]]=NK[yH[0X6]]~=NK[yH[0X1]];end;else do(NK)[0x0]=true;end;yH=Re[KK];KK=KK+0X1;(rK)[yH[2]]=NK[0];yH=Re[KK];KK=KK+0X01;(NK)[0X0]=rK[yH[2]];KK=KK+0X01;KK=KK+1;do yH=Re[KK];end;KK=KK+0x1;if NK[0X0000]then KK=yH[6];end;end;else if HH>=13 then do if HH~=0XE then local Gg=nil;local kg=je[yH[6]];local Jg=(kg[8]);local Og=(#Jg);if Og>0X0 then Gg={};for Mv=0X1,Og do local rv=(Jg[Mv]);if rv[1]==0X0 then Gg[Mv-1]={NK,rv[2]};else Gg[Mv-0X1]=ve[rv[0x2]];end;end;A(De,Gg);end;NK[yH[7]]=NC(Gg,rK,kg);else local Ur=yH[0X7];local fr=(g(function(...)(d)();for XW,aW,uW,qW,xW,hW,FW,WW,pW,EW in...do(d)(true,{XW,aW,uW,qW,xW,hW,FW,WW,pW,EW});end;end));(fr)(NK[Ur],NK[Ur+0x00001],NK[Ur+2]);do cK=Ur;end;do(NK)[Ur]=fr;end;do KK=yH[0X6];end;end;end;else local su=ve[0];NK[0X0]=su[0x00001][su[0X2]];KK=KK+1;KK=KK+1;yH=Re[KK];local Uu=0X00;KK=KK+1;local Du=NK[0];(NK)[Uu+1]=Du;NK[Uu]=Du[yH[0X05]];KK=KK+1;do Uu=0X0;end;(NK[Uu])(NK[Uu+0x1]);cK=Uu-0X1;yH=Re[KK];KK=KK+1;KK=yH[0x6];end;end;end;end;end;end);if QK then do if CK then if aK~=0X0001 then return NK[HK](I(NK,HK+1,cK));else return NK[HK]();end;elseif HK then return I(NK,HK,aK);end;end;else if f(CK)=="string"then do if not(e(CK,'\097tt\101\m\pt\ \116o \121\i\101\l\d\032\097\c\114\o\s\s\ \m\e\116a\m\101\116\hod\/C%\045\c\097\108\108\ \098ou\110\d\097r\y'))then else return coroutine.yield();end;end;do if e(CK,'^\.\-\:%\d+\058 ')then b("\Lur\097\112\h\ \083c\114i\112t\:"..(Ae[KK-1]or"(internal)")..'\058\032'..r(CK),0);else(b)(CK,0x00000);end;end;else b(CK,0X00);end;end;end;end;else do fe=function(...)local h6=(1);local G6={};local g6=(m());local e6,T6=rC(...);local u6,d6={[0X2]=G6,[1]=ce},0x0;e6=e6-0X1;for KW=0,e6 do if he>KW then G6[KW]=T6[KW+0X1];else break;end;end;local U6=((g6==F and Le or g6));do if not ge then T6=nil;elseif xe then G6[he]={n=e6>=he and e6-he+0X1 or 0X0,I(T6,he+1,e6+0X001)};end;end;if U6~=g6 then i(fe,U6);end;local D6,l6,V6,j6=j(function()do while true do local uC=Re[h6];local ZC=(uC[0X4]);do h6=h6+0X1;end;if ZC<0x8 then do if ZC>=4 then if ZC>=0X0006 then if ZC==0x7 then(G6)[uC[0X7]]=U6[uC[2]];else end;else do if ZC==0X005 then(G6)[uC[0x7]]=uC[0x2];else local li,Gi=uC[0x7],(G6[uC[6]]);G6[li+1]=Gi;(G6)[li]=Gi[uC[0X0005]];end;end;end;else do if not(ZC>=2)then if ZC==0X1 then do repeat local YP,GP=De,G6;do if not(#YP>0X0)then else local ao={};do for qa,ma in D,YP do for DP,QP in D,ma do if QP[1]==GP and QP[2]>=0x0 then local HR=QP[0X0002];if not(not ao[HR])then else ao[HR]={GP[HR]};end;(QP)[1]=ao[HR];QP[0X02]=0X0001;end;end;end;end;end;end;until true;end;return;else do for AT=uC[0X7],uC[6]do(G6)[AT]=nil;end;end;end;else if ZC==0x3 then local T1=uC[7];local A1,j1=G6[T1+1],(G6[T1+2]);local t1=G6[T1];(G6)[T1]=g(function()for qx=t1,A1,j1 do d(true,qx);end;end);do h6=uC[6];end;else(G6)[uC[0X7]]=G6[uC[6]]==G6[uC[1]];end;end;end;end;end;else do if ZC>=0x000C then do if not(ZC<14)then if ZC>=0Xf then do if ZC==0x10 then local hw=uC[0X6];local Ew=(G6[hw]);for df=hw+0X001,uC[1]do do Ew=Ew..G6[df];end;end;G6[uC[7]]=Ew;else repeat local gE,LE=De,(G6);if not(#gE>0)then else local VQ=({});for lw,Ew in D,gE do for I7,W7 in D,Ew do if not(W7[1]==LE and W7[2]>=0)then else local xH=W7[0X0002];if not(not VQ[xH])then else VQ[xH]={LE[xH]};end;W7[1]=VQ[xH];(W7)[0X0002]=1;end;end;end;end;until true;local Ta=uC[0x7];return false,Ta,Ta;end;end;else G6[0x0]=U6[uC[0x00002]];uC=Re[h6];h6=h6+1;(G6)[0X0]=G6[0x00000][uC[0X5]];uC=Re[h6];h6=h6+0x01;do if not G6[0X0]then do h6=uC[0X6];end;end;end;end;else if ZC~=13 then h6=uC[6];else repeat local TU,RU,yU=De,G6,(uC[7]);if not(#TU>0)then else local Eg={};do for Us,Qs in D,TU do for jE,YE in D,Qs do if not(YE[0X1]==RU and YE[2]>=yU)then else local J7=YE[2];do if not(not Eg[J7])then else Eg[J7]={RU[J7]};end;end;do YE[0x1]=Eg[J7];end;(YE)[0X00002]=1;end;end;end;end;end;until true;end;end;end;else do if not(ZC<0Xa)then if ZC==11 then G6[uC[7]][G6[uC[6]]]=G6[uC[1]];else do G6[0]=U6[uC[2]];end;h6=h6+0X01;local NN=0X0;h6=h6+0X1;uC=Re[h6];do h6=h6+1;end;do(G6)[0X01]=uC[2];end;h6=h6+1;G6[NN]=G6[NN](G6[NN+1]);d6=NN;do h6=h6+1;end;do(G6)[0X000]=not G6[0X0];end;uC=Re[h6];h6=h6+1;do h6=uC[6];end;end;else if ZC==9 then local vI=je[uC[6]];local XI,OI=vI[8],(nil);local FI=(#XI);if FI>0 then do OI={};end;for x3=1,FI do local k3=XI[x3];if k3[1]~=0x000 then OI[x3-1]=ve[k3[0X002]];else OI[x3-1]={G6,k3[0X0002]};end;end;A(De,OI);end;G6[uC[0X7]]=NC(OI,U6,vI);else(G6)[uC[7]]={I({},0X01,uC[6])};end;end;end;end;end;end;end;end;end);if not(D6)then do if f(l6)~="string"then(b)(l6,0);else do if e(l6,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(e(l6,"\^\.\-:\%\100\+\058\ "))then(b)(l6,0X0);else(b)("Luraph Script:"..(Ae[h6-0X1]or"(internal)")..':\ '..r(l6),0x0000);end;end;end;else if l6 then if j6==0X1 then return G6[V6]();else do return G6[V6](I(G6,V6+1,d6));end;end;elseif V6 then return I(G6,V6,j6);end;end;end;end;end;else fe=function(...)local Wf=(1);local cf={};local zf=(m());local ff=({[0X2]=cf,[1]=ce});local bf,Xf=rC(...);local nf=(0x0);bf=bf-0X1;local Qf=(zf==F and Le or zf);for cK=0x0,bf do if not(he>cK)then break;else cf[cK]=Xf[cK+0X01];end;end;if not ge then Xf=nil;elseif not(xe)then else(cf)[he]={n=bf>=he and bf-he+1 or 0X0,I(Xf,he+0x00001,bf+1)};end;if Qf==zf then else i(fe,Qf);end;local tf,vf,Af,Kf=j(function()while true do local Bd=Re[Wf];local dd=(Bd[4]);Wf=Wf+0X00001;do if not(dd<0X6)then do if dd>=0x09 then if dd>=0Xb then if dd~=12 then do cf[Bd[0X7]]=Bd[2];end;else do(cf)[Bd[0x7]]=cf[Bd[0X6]]+cf[Bd[1]];end;end;else do if dd~=0x0000A then else(cf)[Bd[7]]=cf[Bd[0X6]]-cf[Bd[1]];end;end;end;else do if not(dd>=0X0007)then(cf)[Bd[0X7]]=cf[Bd[0X0006]]==cf[Bd[1]];else if dd~=0X8 then do(cf)[Bd[0X7]]={I({},1,Bd[0X6])};end;else do Wf=Bd[6];end;end;end;end;end;end;else if dd<3 then if not(dd<0X1)then if dd==2 then Qf[Bd[2]]=cf[Bd[7]];else local B5=je[Bd[6]];local Q5=nil;local O5=B5[8];local A5=#O5;if A5>0X00 then do Q5={};end;for h0=1,A5 do local B0=O5[h0];do if B0[1]~=0x0 then(Q5)[h0-1]=ve[B0[2]];else do(Q5)[h0-0x1]={cf,B0[0X2]};end;end;end;end;A(De,Q5);end;cf[Bd[0X7]]=NC(Q5,Qf,B5);end;else cf[Bd[0X7]][cf[Bd[0X6]]]=cf[Bd[0X1]];end;else if dd<4 then if not(cf[Bd[6]]<cf[Bd[1]])then Wf=Bd[7];end;else if dd~=0X05 then(cf)[0X0]=Qf[Bd[0x2]];Wf=Wf+0X0001;nf=0;cf[nf]=cf[nf]();Bd=Re[Wf];do Wf=Wf+1;end;Qf[Bd[0X2]]=cf[0x00000];Wf=Wf+1;do repeat local Bx,Ox=De,cf;if#Bx>0 then local iX={};for oy,Oy in D,Bx do for aH,uH in D,Oy do if uH[0X1]==Ox and uH[2]>=0X000 then local pp=uH[0x02];do if not iX[pp]then(iX)[pp]={Ox[pp]};end;end;uH[1]=iX[pp];uH[0X02]=0X1;end;end;end;end;until true;end;return;else cf[Bd[0X07]]=Qf[Bd[0X2]];end;end;end;end;end;end;end);if tf then if vf then if Kf~=1 then return cf[Af](I(cf,Af+0x1,nf));else return cf[Af]();end;elseif Af then return I(cf,Af,Kf);end;else if f(vf)=="string"then if not(e(vf,"a\116t\101\mpt\032\116o\032y\i\e\l\d\ \097\c\114\111\115\s\ m\101\116ame\116\104\o\100\047\C\%\-\099a\108\108\ \098ounda\114\y"))then else return coroutine.yield();end;if not(e(vf,"^.-:%d+: "))then b(vf,0X000);else b("\Lura\p\104\ \083\099r\105\112t\:"..(Ae[Wf-1]or"\(\i\110\116e\114n\097\l\)")..": "..r(vf),0x0000);end;else b(vf,0X0000);end;end;end;end;else do if not(me<0X00035)then if me==0X000036 then fe=function(...)local ej,Gj=1,{};local Lj=m();local cj=0;local dj={[0X2]=Gj,[1]=ce};local tj,qj=rC(...);tj=tj-1;for bB=0X0,tj do if he>bB then(Gj)[bB]=qj[bB+0x1];else break;end;end;local Bj=((Lj==F and Le or Lj));if not ge then qj=nil;elseif xe then do(Gj)[he]={n=tj>=he and tj-he+1 or 0X0,I(qj,he+0X1,tj+0X1)};end;end;if Bj~=Lj then(i)(fe,Bj);end;local Wj,uj,gj,zj=j(function()while true do local vZ=(Re[ej]);local ZZ=(vZ[0X4]);ej=ej+0X00001;if not(ZZ>=0X09)then do if not(ZZ>=4)then do if ZZ>=0X2 then if ZZ==0X003 then else do repeat local K8,F8=De,Gj;if#K8>0 then local I7=({});for zH,wH in D,K8 do for p4,o4 in D,wH do if o4[1]==F8 and o4[2]>=0 then local Fx=o4[0X0002];if not(not I7[Fx])then else I7[Fx]={F8[Fx]};end;(o4)[0x1]=I7[Fx];(o4)[0x2]=0X1;end;end;end;end;until true;end;local Ew=vZ[7];return false,Ew,Ew+vZ[6]-0X2;end;else if ZZ~=1 then do repeat local C_,v_,p_=De,Gj,vZ[0X7];if not(#C_>0)then else local h6=({});do for nX,WX in D,C_ do for wa,Na in D,WX do do if not(Na[0X1]==v_ and Na[0X00002]>=p_)then else local yW=Na[0X2];do if not h6[yW]then(h6)[yW]={v_[yW]};end;end;(Na)[1]=h6[yW];(Na)[0x2]=0x1;end;end;end;end;end;end;until true;end;else(Gj)[vZ[0X00007]]=vZ[0X02];end;end;end;else if ZZ>=0X6 then if ZZ>=7 then do if ZZ~=8 then ej=vZ[0X6];else for SC=vZ[0X00007],vZ[0X6]do Gj[SC]=nil;end;end;end;else if not(Gj[vZ[0X6]]<Gj[vZ[0x1]])then else ej=vZ[0X07];end;end;else if ZZ~=0X5 then if not(Gj[vZ[0X06]]<=Gj[vZ[1]])then ej=vZ[7];end;else do(Gj)[vZ[7]]=Bj[vZ[0X2]];end;end;end;end;end;else do if ZZ>=13 then if not(ZZ<0Xf)then do if ZZ>=0x0010 then if ZZ~=17 then(Gj)[vZ[7]]=Gj[vZ[0x6]]~=Gj[vZ[1]];else local nc=(vZ[7]);local Sc,ac=Gj[nc]();if Sc then do for M6=0x01,vZ[0X1]do do(Gj)[nc+M6]=ac[M6];end;end;end;ej=vZ[0x006];end;end;else local vD=(je[vZ[0X6]]);local mD=(vD[0X0008]);local QD=nil;local OD=#mD;if not(OD>0X0)then else QD={};for dy=0x0001,OD do local Xy=mD[dy];if Xy[1]==0 then do QD[dy-1]={Gj,Xy[0X02]};end;else(QD)[dy-1]=ve[Xy[0X2]];end;end;(A)(De,QD);end;(Gj)[vZ[0x7]]=NC(QD,Bj,vD);end;end;else if ZZ~=0x000e then do Gj[0x1]=Bj[vZ[0x2]];end;ej=ej+0x001;cj=1;do Gj[cj]=Gj[cj]();end;local Sw=(ve[0X00000]);ej=ej+1;ej=ej+0X1;ej=ej+0X1;Gj[0X2]=Sw[0X1][Sw[2]];ej=ej+1;do ej=ej+0X1;end;do ej=ej+0x1;end;(Gj)[0x1]=Gj[1]-Gj[2];vZ=Re[ej];ej=ej+0X1;do if not(not(Gj[0x00001]<vZ[5]))then else ej=vZ[0X007];end;end;else do repeat local Ms,Ks=De,Gj;if not(#Ms>0)then else local Cb=({});do for Sl,yl in D,Ms do do for vF,JF in D,yl do if not(JF[1]==Ks and JF[0X2]>=0)then else local Mn=JF[0X2];do if not Cb[Mn]then Cb[Mn]={Ks[Mn]};end;end;do(JF)[0X1]=Cb[Mn];end;do(JF)[0x2]=0X01;end;end;end;end;end;end;end;until true;end;return;end;end;else if ZZ<11 then if ZZ~=0XA then(Gj)[0X1]=Bj[vZ[0X002]];do ej=ej+1;end;do ej=ej+1;end;local nS=(0x1);ej=ej+0X01;cj=1;local kS=(ve[0]);(Gj)[cj]=Gj[cj]();ej=ej+1;do(kS[0X1])[kS[0x2]]=Gj[0x1];end;do vZ=Re[ej];end;ej=ej+0X1;Gj[1]=Bj[vZ[2]];vZ=Re[ej];ej=ej+0X1;do Gj[1]=Gj[1][vZ[0X05]];end;do ej=ej+0X1;end;ej=ej+0x00001;do vZ=Re[ej];end;ej=ej+1;Gj[2]=vZ[0x2];do vZ=Re[ej];end;ej=ej+0x01;Gj[3]=vZ[2];ej=ej+0X1;(Gj)[nS]=Gj[nS](Gj[nS+1],Gj[nS+0X2]);do cj=nS;end;vZ=Re[ej];local TS=Gj[1];do ej=ej+0X1;end;nS=1;(Gj)[nS+1]=TS;do Gj[nS]=TS[vZ[5]];end;ej=ej+0X1;nS=0x1;(Gj[nS])(Gj[nS+1]);cj=nS-0x1;do vZ=Re[ej];end;ej=ej+0X001;(Gj)[1]=Bj[vZ[2]];ej=ej+0x0001;ej=ej+1;do vZ=Re[ej];end;ej=ej+1;(Gj)[1]=Gj[1][vZ[5]];do ej=ej+1;end;do ej=ej+0X1;end;vZ=Re[ej];do ej=ej+1;end;(Gj)[0X0002]=vZ[2];vZ=Re[ej];ej=ej+1;(Gj)[0X03]=vZ[0x002];do ej=ej+1;end;nS=0X1;(Gj)[nS]=Gj[nS](Gj[nS+0X00001],Gj[nS+0X2]);cj=nS;ej=ej+1;do ej=ej+1;end;vZ=Re[ej];ej=ej+1;nS=0x001;TS=Gj[1];Gj[nS+0X1]=TS;(Gj)[nS]=TS[vZ[0X5]];vZ=Re[ej];ej=ej+1;(Gj)[3]=vZ[2];ej=ej+0x1;nS=1;(Gj[nS])(Gj[nS+0X1],Gj[nS+0x02]);cj=nS-1;ej=ej+0X1;do ej=ej+0X001;end;do vZ=Re[ej];end;ej=ej+1;Gj[0X1]=Bj[vZ[0X2]];ej=ej+1;ej=ej+0x1;vZ=Re[ej];ej=ej+1;do(Gj)[0x1]=Gj[0X1][vZ[5]];end;vZ=Re[ej];ej=ej+1;local JS=(0X2);do Gj[0x2]=vZ[0X00002];end;ej=ej+1;Gj[3]=Gj[0X0];vZ=Re[ej];ej=ej+0x1;Gj[4]=vZ[2];ej=ej+0X001;local vS=Gj[JS];for tq=JS+0X01,0X4 do vS=vS..Gj[tq];end;Gj[2]=vS;do vZ=Re[ej];end;ej=ej+1;(Gj)[3]=vZ[0X00002];ej=ej+1;do nS=0X00001;end;Gj[nS]=Gj[nS](Gj[nS+1],Gj[nS+0X2]);cj=nS;ej=ej+0X1;do ej=ej+0X001;end;vZ=Re[ej];ej=ej+1;nS=1;TS=Gj[0x1];do Gj[nS+1]=TS;end;do(Gj)[nS]=TS[vZ[5]];end;do ej=ej+1;end;nS=1;(Gj[nS])(Gj[nS+1]);cj=nS-0X1;vZ=Re[ej];ej=ej+1;Gj[0x00001]=Bj[vZ[2]];vZ=Re[ej];do ej=ej+0x1;end;do(Gj)[1]=Gj[1][vZ[5]];end;do ej=ej+0x0001;end;ej=ej+0x1;vZ=Re[ej];ej=ej+0X0001;(Gj)[0X2]=vZ[2];vZ=Re[ej];ej=ej+0X1;(Gj)[0X003]=vZ[0X2];ej=ej+1;nS=0X1;Gj[nS]=Gj[nS](Gj[nS+1],Gj[nS+0X2]);cj=nS;do vZ=Re[ej];end;do ej=ej+1;end;do nS=0X0001;end;do TS=Gj[1];end;Gj[nS+1]=TS;do Gj[nS]=TS[vZ[0X5]];end;do ej=ej+1;end;nS=1;Gj[nS](Gj[nS+0X001]);cj=nS-1;ej=ej+1;repeat local d0,l0=De,(Gj);if not(#d0>0X0)then else local rO={};for Ow,Qw in D,d0 do for VB,SB in D,Qw do if not(SB[0X1]==l0 and SB[2]>=0)then else local Ij=SB[2];do if not(not rO[Ij])then else rO[Ij]={l0[Ij]};end;end;(SB)[0X1]=rO[Ij];SB[2]=1;end;end;end;end;until true;return;else Gj[vZ[7]]={I({},1,vZ[6])};end;else if ZZ~=12 then Gj[vZ[7]]=Gj[vZ[6]]>=Gj[vZ[1]];else local OW=(vZ[7]);local SW,QW=Gj[OW]();if not(SW)then else ej=vZ[6];(Gj)[OW+3]=QW;end;end;end;end;end;end;end;end);if not(Wj)then if f(uj)~="string"then b(uj,0);else if e(uj,"\097t\116\e\m\112\116 \116\o y\i\e\l\100\ a\c\114\o\115\115 \m\et\097\m\et\104\od/\C\037-\ca\108\l \098\o\117\110\da\114\121")then return coroutine.yield();end;if not(e(uj,"^.-:%d+: "))then b(uj,0X0);else b("\076\117ra\112\h\ \S\c\114\105\p\116\:"..(Ae[ej-0X001]or"(internal)")..": "..r(uj),0X0);end;end;else if uj then if zj~=1 then return Gj[gj](I(Gj,gj+0X001,cj));else return Gj[gj]();end;elseif not(gj)then else return I(Gj,gj,zj);end;end;end;else fe=function(...)local yT={};local NT=(0X00001);local RT=(m());local lT=(RT==F and Le or RT);local ZT=(0);local LT,QT=rC(...);local vT=({[0X2]=yT,[1]=ce});LT=LT-1;for Wu=0,LT do if he>Wu then(yT)[Wu]=QT[Wu+0X1];else do break;end;end;end;do if not ge then QT=nil;elseif xe then(yT)[he]={n=LT>=he and LT-he+0X1 or 0X0,I(QT,he+1,LT+1)};end;end;do if lT==RT then else(i)(fe,lT);end;end;while true do local OX=Re[NT];local CX=OX[0X4];do NT=NT+0x001;end;return(function(T,b,...)local l,L=T[0],T[1];if type(l)~="table"then l={l};end;for Q,j in pairs(L or Players:GetPlayers())do if j:FindFirstChild("LocationTag")then if table.find(l,j.LocationTag.Value)then return j;end;end;end;end)(yT,ve,...);end;end;end;else fe=function(...)local H4,B4=0X1,{};local A4=m();local C4,K4=rC(...);local U4,q4={[0X2]=B4,[1]=ce},(A4==F and Le or A4);C4=C4-0x1;for hx=0,C4 do if not(he>hx)then break;else(B4)[hx]=K4[hx+0X1];end;end;local d4=(0);if not ge then K4=nil;elseif xe then B4[he]={n=C4>=he and C4-he+0X001 or 0,I(K4,he+1,C4+1)};end;do if q4==A4 then else i(fe,q4);end;end;local M4,p4,n4,f4=j(function()while true do local aN=Re[H4];local dN=(aN[4]);H4=H4+1;if dN<0X7 then if not(dN<3)then if dN>=5 then if dN~=0X6 then if not B4[aN[0X7]]then do H4=aN[0X0006];end;end;else B4[aN[7]]=u(B4[aN[0X6]],B4[aN[0x01]]);end;else if dN==4 then B4[aN[0X7]]=q4[aN[2]];else(B4)[aN[0X0007]]=B4[aN[6]]>=B4[aN[0X1]];end;end;else if not(dN>=1)then H4=aN[6];else if dN~=0X2 then B4[aN[0X7]]=-B4[aN[6]];else repeat local Cy,uy=De,(B4);if not(#Cy>0)then else local dz={};for Ai,ii in D,Cy do for Eu,Pu in D,ii do do if Pu[1]==uy and Pu[2]>=0 then local DK=Pu[0X2];do if not dz[DK]then dz[DK]={uy[DK]};end;end;(Pu)[1]=dz[DK];(Pu)[0X00002]=0X1;end;end;end;end;end;until true;local yK=aN[7];do return false,yK,yK+aN[0X6]-2;end;end;end;end;else if not(dN>=11)then if not(dN>=0X009)then if dN==0X08 then(B4)[aN[7]]=aN[0X0002];else do B4[aN[7]]=aN[2];end;end;else if dN~=0x00A then(B4)[0x0]=q4[aN[0X02]];H4=H4+0x1;do H4=H4+0X1;end;local eO=(0x00);aN=Re[H4];H4=H4+1;local kO=(B4[0X0]);B4[eO+1]=kO;(B4)[eO]=kO[aN[5]];aN=Re[H4];H4=H4+1;B4[0x002]=aN[2];H4=H4+0X001;eO=0X000;B4[eO]=B4[eO](B4[eO+0X1],B4[eO+2]);d4=eO;H4=H4+0X1;H4=H4+1;aN=Re[H4];H4=H4+1;(B4)[1]=q4[aN[0x2]];do H4=H4+0X1;end;H4=H4+0X00001;aN=Re[H4];H4=H4+0X1;B4[0X0001]=B4[0X0001][aN[5]];aN=Re[H4];local rO=(je[aN[0X6]]);H4=H4+1;local PO=rO[0X08];local vO=(nil);local DO=(#PO);if not(DO>0)then else vO={};for tl=0X1,DO do local Al=PO[tl];do if Al[1]==0 then do vO[tl-1]={B4,Al[0X2]};end;else(vO)[tl-1]=ve[Al[0X00002]];end;end;end;A(De,vO);end;do B4[0X2]=NC(vO,q4,rO);end;H4=H4+1;eO=1;B4[eO](B4[eO+1]);d4=eO-0x001;H4=H4+0X00001;repeat local pa,Sa=De,(B4);if not(#pa>0X00000)then else local So=({});for tt,bt in D,pa do for P8,B8 in D,bt do if B8[1]==Sa and B8[2]>=0X0 then local aV=B8[0x002];if not So[aV]then So[aV]={Sa[aV]};end;B8[1]=So[aV];(B8)[2]=0X1;end;end;end;end;until true;do return;end;else end;end;else if dN<0X00d then if dN~=0XC then B4[aN[7]]={I({},0X00001,aN[0X6])};else for Jb=aN[0X07],aN[6]do do(B4)[Jb]=nil;end;end;end;else if dN==0XE then local o0=(je[aN[6]]);local B0=o0[8];local N0=nil;local d0=(#B0);if d0>0X0 then N0={};for c_=1,d0 do local e_=B0[c_];if e_[1]~=0 then N0[c_-0X1]=ve[e_[2]];else N0[c_-0X00001]={B4,e_[0X0002]};end;end;A(De,N0);end;(B4)[aN[0x7]]=NC(N0,q4,o0);else do B4[aN[7]]=B4[aN[0x0006]]-B4[aN[1]];end;end;end;end;end;end;end);if not(M4)then if f(p4)~="string"then b(p4,0X00);else do if not(e(p4,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if e(p4,"^.-:%d+: ")then(b)("Luraph Script:"..(Ae[H4-1]or"\(\i\110\116er\110al\041")..": "..r(p4),0X00000);else b(p4,0X0);end;end;else if p4 then if f4==0X001 then return B4[n4]();else return B4[n4](I(B4,n4+0X0001,d4));end;elseif n4 then return I(B4,n4,f4);end;end;end;end;end;end;else if me>=49 then if me>=0X32 then if me~=51 then do fe=function(...)local TC={};local KC=0X0001;local SC=(m());local LC=({[1]=ce,[0X2]=TC});local ZC,YC=rC(...);local OC=((SC==F and Le or SC));ZC=ZC-1;for vK=0,ZC do do if he>vK then TC[vK]=YC[vK+1];else break;end;end;end;do if not ge then do YC=nil;end;elseif xe then do(TC)[he]={n=ZC>=he and ZC-he+1 or 0X0,I(YC,he+1,ZC+0X1)};end;end;end;local uC=0;do if OC==SC then else(i)(fe,OC);end;end;while true do local sv=(Re[KC]);local zv=sv[4];do KC=KC+0X00001;end;return(function(K,d,...)return Client.PlayerGui.Main.Timer.Visible or JustStarted;end)(TC,ve,...);end;end;end;else fe=function(...)local Ck=(0);local Kk,ak=0X00001,{};local Lk=m();local xk,gk=rC(...);local lk={[0X2]=ak,[1]=ce};xk=xk-0X01;do for c6=0x0000,xk do if not(he>c6)then break;else ak[c6]=gk[c6+1];end;end;end;local Rk=(Lk==F and Le or Lk);do if not ge then gk=nil;elseif not(xe)then else ak[he]={n=xk>=he and xk-he+1 or 0,I(gk,he+1,xk+0X1)};end;end;if Rk==Lk then else(i)(fe,Rk);end;while true do local K7=Re[Kk];Kk=Kk+1;local u7=K7[4];return(function(A,E,...)local l=A[0];if not l then return;end;local r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";l=string.gsub(deCustomCrypt(l:split("!")),"[^"..r.."=]","");return(l:gsub(".",function(d)if d=="="then return"";end;local T,o="",(r:find(d)-1);for L=6,1,-1.0 do T=T..(o%2^L-o%2^(L-1)>0 and"1"or"0");end;return T;end):gsub("%d%d%d?%d?%d?%d?%d?%d?",function(T)if#T~=8 then return"";end;local f=0;for R=1,8 do f=f+(T:sub(R,R)=="1"and 2^(8-R)or 0);end;return string.char(f);end));end)(ak,ve,...);end;end;end;else fe=function(...)local Yg,gg=0X1,{};local Kg=({[0X2]=gg,[1]=ce});local Fg=(m());local cg,Gg=rC(...);cg=cg-0X0001;for xA=0X0,cg do if he>xA then do(gg)[xA]=Gg[xA+0X1];end;else break;end;end;local og=(Fg==F and Le or Fg);if not ge then Gg=nil;elseif xe then(gg)[he]={n=cg>=he and cg-he+1 or 0,I(Gg,he+1,cg+0X1)};end;local hg=(0);do if og~=Fg then i(fe,og);end;end;local ug,ag,Ng,Eg=j(function()while true do local d2=Re[Yg];local u2=(d2[0X4]);Yg=Yg+0X01;if not(u2>=0X000F)then if u2<7 then do if not(u2>=0X00003)then if not(u2>=1)then gg[0X2]=og[d2[0X002]];do d2=Re[Yg];end;Yg=Yg+1;(gg)[0X2]=gg[0X2][d2[0X5]];Yg=Yg+1;Yg=Yg+1;d2=Re[Yg];local lZ=gg[2];Yg=Yg+1;local LZ=(2);(gg)[LZ+1]=lZ;gg[LZ]=lZ[d2[5]];Yg=Yg+1;LZ=2;gg[LZ]=gg[LZ](gg[LZ+0X1]);do hg=LZ;end;d2=Re[Yg];Yg=Yg+1;do gg[0X3]=og[d2[0X2]];end;Yg=Yg+1;Yg=Yg+1;do d2=Re[Yg];end;do Yg=Yg+1;end;gg[3]=gg[3][d2[5]];Yg=Yg+1;Yg=Yg+0X1;d2=Re[Yg];Yg=Yg+1;local kZ=(0X00004);do LZ=3;end;do lZ=gg[3];end;(gg)[LZ+1]=lZ;gg[LZ]=lZ[d2[0X5]];do Yg=Yg+1;end;LZ=3;(gg)[LZ]=gg[LZ](gg[LZ+1]);hg=LZ;Yg=Yg+0X1;Yg=Yg+0x1;d2=Re[Yg];Yg=Yg+1;gg[0X00004]=d2[2];Yg=Yg+1;do(gg)[5]=#gg[0X2];end;d2=Re[Yg];Yg=Yg+1;gg[0X6]=d2[0X2];d2=Re[Yg];Yg=Yg+1;LZ=gg[kZ];local uZ=(gg[kZ+1]);local MZ=(gg[kZ+2]);gg[kZ]=g(function()for ES=LZ,uZ,MZ do d(true,ES);end;end);Yg=d2[6];else if u2~=0x2 then(gg)[d2[0X007]]=gg[d2[6]][d2[5]];else(gg)[d2[7]]={I({},1,d2[0x00006])};end;end;else if not(u2<5)then if u2==6 then(gg)[8]=gg[3][gg[7]];d2=Re[Yg];Yg=Yg+1;(gg)[9]=og[d2[2]];Yg=Yg+0x1;Yg=Yg+0x001;d2=Re[Yg];Yg=Yg+1;gg[9]=gg[0X9][d2[0X5]];do d2=Re[Yg];end;Yg=Yg+0X00001;if gg[8]==gg[0X9]then do Yg=d2[7];end;end;else do(gg)[d2[0X007]]=og[d2[0X2]];end;end;else if u2~=4 then do gg[d2[0X7]]=gg[d2[0x06]];end;else gg[d2[0X007]]=d2[2];end;end;end;end;else do if not(u2>=0X000b)then do if u2>=0X09 then if u2~=0X00A then gg[0Xa]=og[d2[2]];d2=Re[Yg];Yg=Yg+0X01;(gg)[0xa]=gg[0Xa][d2[0x5]];do Yg=Yg+0X1;end;Yg=Yg+1;Yg=Yg+0X1;(gg)[11]=gg[0X1];do d2=Re[Yg];end;do Yg=Yg+1;end;(gg)[12]=gg[0x9][d2[5]];Yg=Yg+0x00001;do Yg=Yg+1;end;local FA=0xA;Yg=Yg+0X00001;(gg[FA])(gg[FA+0x1],gg[FA+0X2]);hg=FA-1;d2=Re[Yg];Yg=Yg+0X1;do Yg=d2[0x6];end;else local kf=(d2[0x7]);local qf=(g(function(...)d();for Ig,yg,Qg,Ag,Cg,Jg,lg,Tg,mg,jg in...do(d)(true,{Ig,yg,Qg,Ag,Cg,Jg,lg,Tg,mg,jg});end;end));qf(gg[kf],gg[kf+1],gg[kf+2]);hg=kf;(gg)[kf]=qf;do Yg=d2[0X6];end;end;else do if u2==0X8 then do for JJ=d2[7],d2[6]do(gg)[JJ]=nil;end;end;else(gg)[0X0A]=gg[9][d2[5]];Yg=Yg+1;Yg=Yg+0X001;d2=Re[Yg];Yg=Yg+0X00001;if not gg[0XA]then Yg=d2[0X6];end;end;end;end;end;else if not(u2<0xd)then do if u2~=0Xe then(gg)[11]=og[d2[0x2]];local NK=11;Yg=Yg+1;Yg=Yg+1;d2=Re[Yg];Yg=Yg+1;(gg)[0X000C]=gg[9][d2[5]];d2=Re[Yg];Yg=Yg+0X1;gg[0Xc]=gg[12][d2[0X0005]];Yg=Yg+1;(gg)[NK]=gg[NK](gg[NK+1]);hg=NK;Yg=Yg+1;do Yg=Yg+0X0001;end;d2=Re[Yg];Yg=Yg+1;(gg)[0X00c]=gg[0x0]+d2[5];d2=Re[Yg];Yg=Yg+1;if not(not(gg[11]<gg[0xC]))then else do Yg=d2[7];end;end;else Yg=d2[6];end;end;else do if u2==12 then do gg[4]=d2[2];end;Yg=Yg+1;(gg)[5]=#gg[0x3];d2=Re[Yg];Yg=Yg+0X0001;gg[6]=d2[2];local OC=4;d2=Re[Yg];Yg=Yg+1;local SC=gg[OC+2];local ZC,TC=gg[OC],(gg[OC+1]);gg[OC]=g(function()for p0=ZC,TC,SC do(d)(true,p0);end;end);do Yg=d2[0X6];end;else do(gg)[d2[0X7]]=gg[d2[6]]>=gg[d2[0X1]];end;end;end;end;end;end;end;else if u2<23 then if u2>=19 then do if not(u2>=0X0015)then if u2~=20 then local St=(9);local Jt=(gg[0x08]);(gg)[St+1]=Jt;(gg)[St]=Jt[d2[0X5]];d2=Re[Yg];do Yg=Yg+1;end;(gg)[11]=d2[0X2];Yg=Yg+1;St=0x00009;do(gg)[St]=gg[St](gg[St+0X1],gg[St+2]);end;do hg=St;end;d2=Re[Yg];Yg=Yg+1;if not(not gg[9])then else Yg=d2[0x00006];end;else repeat local Ag,kg=De,gg;if#Ag>0 then local CR={};for aZ,kZ in D,Ag do for rG,zG in D,kZ do if not(zG[1]==kg and zG[2]>=0)then else local r1=zG[2];if not CR[r1]then do(CR)[r1]={kg[r1]};end;end;do zG[1]=CR[r1];end;zG[2]=1;end;end;end;end;until true;return;end;else if u2==22 then gg[d2[7]]=L(gg[d2[0X6]],gg[d2[1]]);else do repeat local JM,pM=De,gg;do if not(#JM>0)then else local yB={};for D8,o8 in D,JM do for VJ,bJ in D,o8 do if not(bJ[1]==pM and bJ[0x0002]>=0X0)then else local rL=(bJ[2]);if not(not yB[rL])then else yB[rL]={pM[rL]};end;(bJ)[1]=yB[rL];bJ[2]=0x1;end;end;end;end;end;until true;end;local pF=d2[0X07];return false,pF,pF;end;end;end;else if not(u2>=0x11)then if u2==0x10 then do(gg)[10]=gg[0X9][d2[0X5]];end;do Yg=Yg+0X01;end;Yg=Yg+1;d2=Re[Yg];do Yg=Yg+0x001;end;if not(d2[0X2]<gg[10])then Yg=d2[0x7];end;else end;else if u2==0x00012 then gg[10]=og[d2[2]];Yg=Yg+1;Yg=Yg+0x1;d2=Re[Yg];do Yg=Yg+1;end;(gg)[10]=gg[10][d2[0x5]];Yg=Yg+1;do gg[11]=gg[1];end;d2=Re[Yg];local aF=(10);Yg=Yg+1;gg[0X000C]=gg[9][d2[0x0005]];Yg=Yg+0X1;Yg=Yg+0X1;do Yg=Yg+1;end;gg[aF](gg[aF+0X001],gg[aF+0x00002]);do hg=aF-0X1;end;do d2=Re[Yg];end;do Yg=Yg+0X001;end;do Yg=d2[0X6];end;else do repeat local kk,Bk,Uk=De,gg,d2[7];if not(#kk>0X0000)then else local Vh=({});for Ob,db in D,kk do do for j2,G2 in D,db do do if not(G2[1]==Bk and G2[2]>=Uk)then else local A4=G2[0X0002];if not Vh[A4]then(Vh)[A4]={Bk[A4]};end;do G2[0X1]=Vh[A4];end;G2[2]=0x1;end;end;end;end;end;end;until true;end;end;end;end;else if u2>=0X1B then if u2<0X0001D then if u2~=0X1c then(gg)[1]={};d2=Re[Yg];Yg=Yg+1;gg[0X0002]=og[d2[0X2]];d2=Re[Yg];Yg=Yg+0X001;do if not(not gg[0X2])then else do Yg=d2[6];end;end;end;else local Kb=d2[0x07];local cb,Bb=gg[Kb]();if cb then Yg=d2[6];(gg)[Kb+0X0003]=Bb;end;end;else if u2==0X001e then if not gg[d2[0x7]]then Yg=d2[0X6];end;else(gg)[0XB]=og[d2[0x2]];do Yg=Yg+0X1;end;Yg=Yg+1;d2=Re[Yg];Yg=Yg+1;(gg)[12]=gg[0x9][d2[5]];Yg=Yg+0X1;Yg=Yg+1;d2=Re[Yg];Yg=Yg+0X01;(gg)[12]=gg[12][d2[0X5]];local eg=11;Yg=Yg+0X1;gg[eg]=gg[eg](gg[eg+0x00001]);do hg=eg;end;Yg=Yg+0x00001;Yg=Yg+0X1;d2=Re[Yg];Yg=Yg+0X1;(gg)[12]=gg[0]+d2[5];d2=Re[Yg];Yg=Yg+1;if not(gg[11]<gg[0X0000c])then do Yg=d2[7];end;end;end;end;else if not(u2>=25)then if u2==24 then if not(not(d2[2]<gg[d2[1]]))then else Yg=d2[7];end;else(gg)[0X08]=gg[0X02][gg[7]];local Qz=0X0009;d2=Re[Yg];do Yg=Yg+0x1;end;local Kz=(gg[0X8]);(gg)[Qz+0X1]=Kz;gg[Qz]=Kz[d2[5]];do d2=Re[Yg];end;Yg=Yg+0X0001;do(gg)[11]=d2[0x2];end;Yg=Yg+1;Qz=0X9;gg[Qz]=gg[Qz](gg[Qz+0X1],gg[Qz+0X2]);do hg=Qz;end;Yg=Yg+1;do Yg=Yg+0X1;end;do d2=Re[Yg];end;Yg=Yg+0X1;do if not(not gg[9])then else Yg=d2[0x00006];end;end;end;else if u2==0x00001a then local jh=(je[d2[0X6]]);local Yh,lh=jh[8],nil;local Fh=(#Yh);if not(Fh>0)then else lh={};for ga=0x00001,Fh do local Ca=(Yh[ga]);if Ca[1]==0 then(lh)[ga-0X1]={gg,Ca[0X2]};else lh[ga-0X01]=ve[Ca[2]];end;end;(A)(De,lh);end;gg[d2[7]]=NC(lh,og,jh);else gg[d2[7]]=gg[d2[6]]==gg[d2[0x1]];end;end;end;end;end;end;end);if ug then if ag then if Eg~=1 then return gg[Ng](I(gg,Ng+0X01,hg));else return gg[Ng]();end;elseif not(Ng)then else return I(gg,Ng,Eg);end;else if f(ag)~="string"then(b)(ag,0);else do if e(ag,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(e(ag,'\094\.\-\:\%\d\+\: '))then b(ag,0);else(b)("Luraph Script:"..(Ae[Yg-1]or'(\i\110t\e\114\110a\l)')..": "..r(ag),0X0000);end;end;end;end;end;else do if me==48 then fe=function(...)local rj,Sj=1,({});local Pj=m();local Lj=(Pj==F and Le or Pj);local Xj,yj=rC(...);local Zj={[0X2]=Sj,[1]=ce};Xj=Xj-0x0001;for hH=0X0,Xj do if he>hH then do Sj[hH]=yj[hH+1];end;else break;end;end;if not ge then yj=nil;elseif not(xe)then else(Sj)[he]={n=Xj>=he and Xj-he+1 or 0x00000,I(yj,he+1,Xj+0X1)};end;local Yj=(0);do if Lj~=Pj then i(fe,Lj);end;end;while true do local eB=Re[rj];rj=rj+1;local MB=eB[0X4];return(function(o,j,...)return Client.PlayerGui.Main.InCombat.Visible;end)(Sj,ve,...);end;end;else fe=function(...)local wM,XM=0X1,{};local fM=({[0X2]=XM,[1]=ce});local TM=(m());local rM=(TM==F and Le or TM);local xM,PM=rC(...);do xM=xM-0X00001;end;local lM=0x0;for hx=0X00000,xM do if not(he>hx)then do break;end;else do XM[hx]=PM[hx+0x1];end;end;end;do if not ge then PM=nil;elseif not(xe)then else(XM)[he]={n=xM>=he and xM-he+1 or 0,I(PM,he+1,xM+1)};end;end;if rM==TM then else i(fe,rM);end;local BM,UM,zM,nM=j(function()while true do local S3=(Re[wM]);local O3=(S3[0X0004]);wM=wM+0X1;do if not(O3<18)then if O3>=0x1B then if not(O3<0X00001f)then do if not(O3<33)then if O3<34 then do(XM)[0X02]=rM[S3[2]];end;wM=wM+1;local Cw=2;wM=wM+1;S3=Re[wM];do wM=wM+1;end;XM[0X3]=S3[2];S3=Re[wM];wM=wM+0x001;(XM)[0X0004]=S3[0x2];wM=wM+1;do(XM)[Cw]=XM[Cw](XM[Cw+0X0001],XM[Cw+2]);end;do lM=Cw;end;S3=Re[wM];wM=wM+1;if XM[2]then wM=S3[0X06];end;else if O3~=0X23 then wM=S3[0X006];else(XM)[2]=rM[S3[0X02]];wM=wM+0x1;wM=wM+0X1;S3=Re[wM];do wM=wM+0X1;end;(XM)[0x3]=S3[2];wM=wM+1;local ic=(0X02);(XM)[ic]=XM[ic](XM[ic+0X1]);lM=ic;S3=Re[wM];wM=wM+1;if not(not XM[2])then else do wM=S3[0X6];end;end;end;end;else if O3~=32 then if XM[S3[6]]==S3[0x05]then else wM=S3[7];end;else for hl=S3[0X0007],S3[6]do(XM)[hl]=nil;end;end;end;end;else if O3>=0X0001d then if O3~=0X1e then XM[2]=rM[S3[0x002]];S3=Re[wM];wM=wM+1;do XM[0X2]=XM[2][S3[5]];end;S3=Re[wM];do wM=wM+0X1;end;if not(not XM[2])then else do wM=S3[0X6];end;end;else(XM)[0X00002]=rM[S3[2]];do wM=wM+1;end;wM=wM+1;S3=Re[wM];do wM=wM+1;end;(XM)[0X00002]=XM[2][S3[0X5]];S3=Re[wM];do wM=wM+1;end;do(XM)[2]=XM[0X2][S3[0X5]];end;wM=wM+1;wM=wM+0X1;S3=Re[wM];do wM=wM+0X01;end;(XM)[2]=XM[2][S3[0x5]];wM=wM+0X001;wM=wM+1;S3=Re[wM];wM=wM+1;do if not(S3[0X2]<=XM[2])then wM=S3[0X7];end;end;end;else if O3==0x0001C then repeat local y6,G6=De,XM;do if#y6>0 then local Wd={};for mo,jo in D,y6 do for Ev,pv in D,jo do if pv[0X00001]==G6 and pv[0X2]>=0 then local tv=pv[2];if not Wd[tv]then(Wd)[tv]={G6[tv]};end;(pv)[1]=Wd[tv];do pv[2]=0X1;end;end;end;end;end;end;until true;return;else do(XM)[0x0002]=rM[S3[2]];end;wM=wM+0x1;wM=wM+1;S3=Re[wM];do wM=wM+1;end;XM[2][S3[2]]=S3[5];do wM=wM+1;end;do repeat local Pz,rz=De,(XM);if#Pz>0x0 then local P_=({});for at,tt in D,Pz do do for OQ,fQ in D,tt do if not(fQ[1]==rz and fQ[2]>=0)then else local OO=(fQ[0X02]);do if not P_[OO]then(P_)[OO]={rz[OO]};end;end;(fQ)[0X1]=P_[OO];do(fQ)[2]=0X00001;end;end;end;end;end;end;until true;end;return;end;end;end;else if O3<0X16 then do if O3<20 then if O3==19 then do(XM)[2]=rM[S3[2]];end;do wM=wM+1;end;wM=wM+0X1;S3=Re[wM];wM=wM+0X001;XM[2]=XM[2][S3[0X5]];S3=Re[wM];wM=wM+0X1;do if not XM[2]then wM=S3[0X6];end;end;else(XM)[0X2]=rM[S3[0X2]];wM=wM+0x1;do wM=wM+1;end;do S3=Re[wM];end;wM=wM+0X1;XM[3]=S3[2];local HD=(0x2);do S3=Re[wM];end;wM=wM+1;do(XM)[0X0004]=S3[2];end;wM=wM+1;XM[HD]=XM[HD](XM[HD+0X1],XM[HD+2]);lM=HD;wM=wM+0X01;wM=wM+1;S3=Re[wM];wM=wM+0X1;if XM[0X2]then do wM=S3[6];end;end;end;else if O3~=21 then XM[2]=rM[S3[2]];do wM=wM+1;end;wM=wM+0X1;S3=Re[wM];wM=wM+1;XM[0X2]=XM[2][S3[0X005]];wM=wM+1;wM=wM+0x1;S3=Re[wM];wM=wM+1;if not XM[0X2]then wM=S3[6];end;else(XM)[2]=rM[S3[2]];S3=Re[wM];local FE=(2);wM=wM+0X001;XM[0X0003]=S3[0X0002];do S3=Re[wM];end;wM=wM+0X1;XM[0x4]=S3[2];wM=wM+1;do XM[FE]=XM[FE](XM[FE+0X1],XM[FE+0X2]);end;lM=FE;wM=wM+0X01;wM=wM+1;S3=Re[wM];wM=wM+1;if not(XM[2])then else wM=S3[0X6];end;end;end;end;else if not(O3>=0X18)then do if O3==0X17 then(XM)[2]=rM[S3[0X2]];S3=Re[wM];do wM=wM+1;end;XM[0X00002]=XM[2][S3[0x00005]];do S3=Re[wM];end;do wM=wM+1;end;if not XM[2]then wM=S3[6];end;else XM[S3[7]]=rM[S3[0X002]];end;end;else do if not(O3<0x19)then do if O3==0X1a then XM[0X0002]=rM[S3[0X0002]];wM=wM+1;wM=wM+1;local Mm=2;S3=Re[wM];wM=wM+0X0001;XM[0x3]=S3[2];do S3=Re[wM];end;do wM=wM+1;end;do(XM)[0x4]=S3[2];end;wM=wM+1;XM[Mm]=XM[Mm](XM[Mm+1],XM[Mm+2]);do lM=Mm;end;do wM=wM+0x0001;end;wM=wM+0X1;S3=Re[wM];do wM=wM+0X1;end;if XM[2]then wM=S3[6];end;else(XM)[0X0]=rM[S3[2]];S3=Re[wM];wM=wM+1;XM[1]=rM[S3[2]];wM=wM+0X1;do wM=wM+1;end;S3=Re[wM];wM=wM+0X1;do(XM)[2]=S3[2];end;do S3=Re[wM];end;do wM=wM+0X001;end;XM[3]=rM[S3[2]];S3=Re[wM];wM=wM+0x1;(XM)[0X3]=XM[0X3][S3[0x5]];wM=wM+0x1;local ov=0X3;wM=wM+1;local cv=(0x0);wM=wM+0X1;local Wv=(0X004);if Wv==0 then else lM=cv+Wv-1;end;local Rv,Zv=nil,nil;if Wv==0X1 then Rv,Zv=rC(XM[cv]());else Rv,Zv=rC(XM[cv](I(XM,cv+0X1,lM)));end;if ov~=0x001 then if ov~=0 then Rv=cv+ov-2;lM=Rv+0X1;else Rv=Rv+cv-1;lM=Rv;end;local pI=0X0;for La=cv,Rv do pI=pI+0X1;(XM)[La]=Zv[pI];end;else lM=cv-0x1;end;do S3=Re[wM];end;wM=wM+0x1;do if XM[0X01]==S3[0x05]then wM=S3[7];end;end;end;end;else(fM)[S3[6]]=XM[S3[7]];end;end;end;end;end;else if O3<0x00009 then if not(O3>=4)then if not(O3<2)then if O3==3 then local aS=S3[0X7];local pS,yS=XM[aS]();if not(pS)then else wM=S3[0X06];XM[aS+3]=yS;end;else do(XM)[S3[7]]=XM[S3[0X6]]==XM[S3[1]];end;end;else if O3~=0X0001 then do(XM)[0X2]=rM[S3[2]];end;do wM=wM+0X0001;end;do wM=wM+1;end;do S3=Re[wM];end;wM=wM+1;(XM)[2]=XM[2][S3[0X5]];S3=Re[wM];wM=wM+0X001;if not XM[2]then wM=S3[6];end;else(XM)[2]=rM[S3[0X2]];wM=wM+0X1;local D4=(2);wM=wM+0X00001;S3=Re[wM];do wM=wM+0X1;end;XM[3]=S3[2];wM=wM+1;do(XM)[0X4]=true;end;do wM=wM+0X1;end;XM[D4]=XM[D4](XM[D4+0x1],XM[D4+0X00002]);lM=D4;do S3=Re[wM];end;wM=wM+1;if XM[2]~=S3[0X5]then wM=S3[0X7];end;end;end;else if not(O3>=6)then if O3==5 then XM[S3[7]]=S3[2];else(XM)[S3[7]]={I({},0X1,S3[0X6])};end;else if O3>=0X07 then if O3==8 then XM[3]=rM[S3[0X2]];wM=wM+0X1;wM=wM+1;do wM=wM+0X1;end;lM=0x03;XM[lM]=XM[lM]();S3=Re[wM];wM=wM+1;if not(XM[0X003])then else wM=S3[6];end;else local ZH=S3[7];local EH=(g(function(...)d();for rP,SP,bP,hP,iP,BP,vP,KP,gP,NP in...do(d)(true,{rP,SP,bP,hP,iP,BP,vP,KP,gP,NP});end;end));(EH)(XM[ZH],XM[ZH+0X001],XM[ZH+0X2]);do lM=ZH;end;do XM[ZH]=EH;end;wM=S3[6];end;else(XM)[0X2]=rM[S3[0X2]];wM=wM+0x1;wM=wM+0X1;S3=Re[wM];wM=wM+0x0001;do(XM)[2]=XM[2][S3[0X5]];end;S3=Re[wM];wM=wM+0X1;XM[2]=XM[2][S3[0x05]];do S3=Re[wM];end;wM=wM+1;if not(S3[2]<=XM[0X2])then wM=S3[7];end;end;end;end;else if O3<0XD then if not(O3<11)then if O3~=0Xc then(XM)[S3[0X00007]]=XM[S3[0X6]]>XM[S3[0X0001]];else do(XM)[2]=true;end;S3=Re[wM];do wM=wM+1;end;rM[S3[0X02]]=XM[2];S3=Re[wM];wM=wM+0x01;wM=S3[0x00006];end;else if O3~=10 then XM[2]=rM[S3[0X002]];wM=wM+0X1;do wM=wM+0X1;end;S3=Re[wM];do wM=wM+1;end;XM[3]=S3[2];S3=Re[wM];wM=wM+0X1;(XM)[4]=S3[2];local Pq=(0X2);wM=wM+0X1;(XM)[Pq]=XM[Pq](XM[Pq+1],XM[Pq+0X00002]);do lM=Pq;end;S3=Re[wM];wM=wM+0X1;if XM[0X00002]then do wM=S3[6];end;end;else do(XM)[0x2]=false;end;do S3=Re[wM];end;wM=wM+1;(rM)[S3[0X00002]]=XM[2];do S3=Re[wM];end;do wM=wM+1;end;local u1=0x2;do(XM)[0X2]=rM[S3[0X2]];end;do wM=wM+0X1;end;do wM=wM+1;end;S3=Re[wM];do wM=wM+1;end;do(XM)[3]=S3[2];end;do wM=wM+0X1;end;XM[u1]=XM[u1](XM[u1+0X01]);lM=u1;do S3=Re[wM];end;wM=wM+1;if not XM[2]then wM=S3[0x6];end;end;end;else if O3<0xF then do if O3~=0XE then else XM[0X02]=rM[S3[0X00002]];S3=Re[wM];wM=wM+1;XM[2]=XM[0X00002][S3[0X005]];wM=wM+0X1;wM=wM+1;S3=Re[wM];wM=wM+0X1;if not XM[2]then wM=S3[6];end;end;end;else if O3>=0X00010 then if O3==17 then XM[2]=rM[S3[0X2]];do wM=wM+1;end;do wM=wM+1;end;S3=Re[wM];wM=wM+0X01;(XM)[0x2]=XM[2][S3[0X5]];S3=Re[wM];wM=wM+0X00001;if not XM[2]then do wM=S3[6];end;end;else local P4,R4=je[S3[6]],(nil);local T4=P4[8];local r4=#T4;if r4>0X0 then R4={};for nX=0X1,r4 do local iX=(T4[nX]);do if iX[1]==0X0 then(R4)[nX-1]={XM,iX[0X00002]};else do(R4)[nX-1]=ve[iX[0x00002]];end;end;end;end;A(De,R4);end;do XM[S3[0X7]]=NC(R4,rM,P4);end;end;else(XM)[0X2]=rM[S3[2]];wM=wM+1;do wM=wM+0X1;end;wM=wM+0X1;do lM=0X002;end;(XM[lM])();lM=lM-0x1;do S3=Re[wM];end;wM=wM+1;(XM)[2]=rM[S3[0X2]];wM=wM+1;wM=wM+0X01;S3=Re[wM];wM=wM+1;do(XM[2])[S3[0X02]]=S3[5];end;wM=wM+0x1;repeat local a3,b3=De,(XM);if#a3>0X0 then local fZ={};for TL,mL in D,a3 do for hw,pw in D,mL do do if not(pw[0X01]==b3 and pw[0x2]>=0)then else local MV=pw[0X2];if not(not fZ[MV])then else fZ[MV]={b3[MV]};end;pw[1]=fZ[MV];do pw[0X2]=0X1;end;end;end;end;end;end;until true;return;end;end;end;end;end;end;end;end);if BM then if UM then do if nM==0X00001 then return XM[zM]();else return XM[zM](I(XM,zM+1,lM));end;end;elseif not(zM)then else do return I(XM,zM,nM);end;end;else if f(UM)=="string"then do if not(e(UM,'a\116\116emp\116 to\032\yie\l\d\032\097\cr\o\ss\ m\101t\097m\et\h\111\d/\C\%\-\099a\108\l \098\ou\110\d\097\114y'))then else return coroutine.yield();end;end;do if not(e(UM,"\^\.\-\:\037\d\+\: "))then(b)(UM,0);else(b)('\Lu\114a\ph\032\Scr\i\p\116\058'..(Ae[wM-1]or"(internal)").."\:\032"..r(UM),0X0);end;end;else(b)(UM,0X000);end;end;end;end;end;end;end;end;end;end;end;(i)(fe,Le);do return fe;end;end;GC=0X0;else if GC~=0X0006 then GC=5;else sC=QC();GC=9;end;end;end;else if GC<=0X1 then if GC~=0X0 then return NC(qC,F,sC)(...);else function QC()local Qq=(0x01);local lq=(nil);while Qq<=1 do if Qq==0 then lq={};Qq=0X002;else Qq=0;continue;end;end;local Sq=({});local rq={nil,qC,nil,{},qC,qC,{},nil,{}};Qq=0x0003;local gq,Hq,jq,zq,Nq,Oq=nil,nil,nil,nil,nil,(nil);repeat if Qq<=5 then if Qq<=0X2 then do if Qq<=0x0000 then(rq)[6]=c(Hq,0X1,1)~=lC;do Qq=8;end;else if Qq~=0x1 then(rq)[0Xf]=l();Qq=0X0006;else(rq)[17]=y();Qq=9;end;end;end;else if Qq<=0X3 then gq=0x0001;Qq=0X05;else if Qq~=0x4 then Hq=l();do Qq=0;end;else zq=y()-27323;Qq=11;end;end;end;else if not(Qq<=0x8)then do if Qq<=9 then(rq)[0x05]=PC();Qq=10;continue;else do if Qq~=0xA then for hp=lC,zq-mC do(jq)[hp]=QC();end;do Qq=0X2;end;continue;else Oq=y();do break;end;end;end;end;end;else if not(Qq<=0X6)then do if Qq==0X7 then jq=rq[0X00007];do Qq=0X4;end;do continue;end;else do rq[0X1]=c(Hq,2,0X0001)~=0X0;end;Qq=7;end;end;else Nq={};Qq=1;continue;end;end;end;until(false);for Fd=0X0,1 do if Fd==0X00000 then for aN=0x001,Oq do local IN=0;local WN,fN=nil,(nil);do while(true)do do if IN==0X0 then WN=y();IN=1;continue;else do fN=y();end;break;end;end;end;end;local JN=(y());for T3=WN,fN do do rq[9][T3]=JN;end;end;end;do continue;end;else rq[3]=PC();do continue;end;end;end;Qq=7;local Gq,Pq,fq,Vq,eq=nil,nil,nil,nil,nil;while(true)do if Qq<=4 then if not(Qq<=1)then if Qq<=0X0002 then for Wm=0x1,Gq do local gm,sm,qm,Bm=6,nil,nil,nil;while gm~=8 do if gm<=3 then do if not(gm<=1)then if gm==2 then Nq[gq]=Bm;do gm=0x03;end;else do gq=gq+0X00001;end;gm=0X7;end;else if gm~=0X00 then qm=nil;do gm=0X00;end;continue;else(lq)[Wm-0X001]=gq;gm=0X005;end;end;end;else if not(gm<=0X5)then if gm~=6 then if fq then bC[WC]=Bm;WC=WC+1;end;gm=0X8;else sm=l();gm=1;end;else if gm==4 then Bm={qm,{}};gm=0X2;continue;else if sm==47 then qm=y();elseif sm==0Xa then qm=W(fC(Pq),5);elseif sm==0X28 then qm=M()+y();elseif sm==0X000E1 then do qm=p();end;elseif sm==126 then qm=W(fC(Pq),0X2);elseif sm==0X0018 then do qm=HC;end;elseif sm==0XAb then do qm=y();end;elseif sm==230 then qm=W(fC(Pq),y());elseif sm==151 then do qm=M();end;elseif sm~=0X5D then else qm=true;end;gm=0x4;end;end;end;end;end;Qq=1;continue;else if Qq~=3 then Vq=y()-5022;Qq=0;else Pq=l();Qq=6;continue;end;end;else if Qq==0 then eq=rq[hC];Qq=8;continue;else do(rq)[2]=PC();end;do Qq=9;end;continue;end;end;else if not(Qq<=0X7)then do if not(Qq<=0X0008)then if Qq~=9 then rq[0x00D]=l();Qq=4;continue;else do rq[8]=Sq;end;do Qq=5;end;end;else for D3=1,Vq do eq[D3]={[0X2]=cC,[0x00003]="x\'\101",[0x4]=PC(),[5]=l(),[3]=HC,[0x6]=BC(),[0X3]=l(),[0X7]=BC(),[0X2]=0X0000441AB378,[0X1]=BC(),[0X2]=l()};end;break;end;end;else if Qq<=0x5 then do for pq=1,PC()do do Sq[pq]={l(),PC()};end;end;end;Qq=0X0A;continue;else do if Qq~=0X00006 then Gq=y()-0X07281;Qq=0x00003;else fq=l()~=0x0;do Qq=2;end;continue;end;end;end;end;end;end;for Gy=0X1,Vq do local Uy=rq[0X004][Gy];for YO,vO in pC(S)do local FO,MO=nil,(nil);local gO=1;while gO<3 do if gO<=0X0 then if MO==1 then local IY=(1);local iY,cY=nil,(nil);while IY~=0X3 do if not(IY<=0)then if IY~=0X1 then do if not(cY)then else local zh,Mh=1,nil;do while(true)do if not(zh<=0X00)then if zh~=1 then Mh=cY[0X0002];zh=0x0000;else(Uy)[FO]=cY[mC];zh=2;end;else(Mh)[#Mh+1]={Uy,FO};break;end;end;end;end;end;do IY=0x3;end;else do iY=lq[Uy[vO]];end;IY=0;continue;end;else do cY=Nq[iY];end;do IY=2;end;continue;end;end;elseif MO~=MC then else Uy[vO]=Gy+Uy[vO]+1;end;gO=3;continue;else do if gO==0X01 then do FO=K[vO];end;gO=2;do continue;end;else do MO=Uy[FO];end;gO=0X0000;end;end;end;end;end;end;do return rq;end;end;GC=0X6;end;else do if not(GC<=0X2)then if GC==3 then K={[hC]=3,[6]=1457006162,[4]=oC,[0X04]=HC,[1]=0.12184978951620484,[9]=0X3,[0X001]='\O\{W\g\E\w',[0x0006]=0X2,[0X4]=7,[0]=-131549438,[1]=5,[0X04]=9,[0]="",[0x7]=0x3,[0x4]=6,[0]=0X8,[4]=7};GC=0X4;else wC={};GC=0X00007;end;else bC={};GC=0X8;end;end;end;end;end;end;end)(string.char,false,string,error,'',4,string.match,string.rep,12,nil,313002046,rawget,next,0X1,table,bit32,bit32.rshift,coroutine.yield,0X000,select,string.gsub,ipairs,getfenv,bit32.lshift,tonumber,0X00001f3d,true,0X1000000,bit32.bnot,{55859,0XA3b9f00a,197597699,1939077386,0X005291e09c,0XE865971E,1998973890,2384354245,2428346060},...);
